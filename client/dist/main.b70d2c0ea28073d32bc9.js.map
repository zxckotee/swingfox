{"version":3,"file":"main.b70d2c0ea28073d32bc9.js","mappings":"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","sources":["webpack://swingfox-client/./src/services/api.js","webpack://swingfox-client/./src/components/AuthGuard.js","webpack://swingfox-client/./src/components/UI/index.js","webpack://swingfox-client/./src/styles/breakpoints.js","webpack://swingfox-client/./src/styles/headerSizes.js","webpack://swingfox-client/./src/components/Navigation.js","webpack://swingfox-client/./src/components/MatchPopup.js","webpack://swingfox-client/./src/contexts/NotificationContext.js","webpack://swingfox-client/./src/pages/Login.js","webpack://swingfox-client/./src/components/Geography/CountrySelector.js","webpack://swingfox-client/./src/components/Geography/CitySelector.js","webpack://swingfox-client/./src/components/Geography/LocationSelector.js","webpack://swingfox-client/./src/pages/Register.js","webpack://swingfox-client/./src/pages/Home.js","webpack://swingfox-client/./src/pages/Catalog.js","webpack://swingfox-client/./src/components/RatingDisplay.js","webpack://swingfox-client/./src/components/PhotoComments.js","webpack://swingfox-client/./src/components/ProfileComments.js","webpack://swingfox-client/./src/components/Reactions.js","webpack://swingfox-client/./src/pages/Profile.js","webpack://swingfox-client/./src/pages/Chat.js","webpack://swingfox-client/./src/pages/Ads.js","webpack://swingfox-client/./src/pages/Admin.js","webpack://swingfox-client/./src/components/MatchNotification.js","webpack://swingfox-client/./src/pages/Notifications.js","webpack://swingfox-client/./src/pages/Clubs.js","webpack://swingfox-client/./src/pages/Subscriptions.js","webpack://swingfox-client/./src/pages/Ratings.js","webpack://swingfox-client/./src/App.js","webpack://swingfox-client/./src/index.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Базовая конфигурация API\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// URL для загрузок\nconst UPLOADS_URL = process.env.REACT_APP_UPLOADS_URL || '/uploads';\n\n// Ключи для localStorage\nconst TOKEN_KEY = 'swingfox_token';\nconst USER_CACHE_KEY = 'swingfox_user_cache';\n\n// Получение токена из localStorage\nconst getToken = () => localStorage.getItem(TOKEN_KEY);\n\n// Сохранение токена\nconst setToken = (token) => {\n  if (token) {\n    localStorage.setItem(TOKEN_KEY, token);\n  } else {\n    localStorage.removeItem(TOKEN_KEY);\n    // При удалении токена также очищаем кэш пользователя\n    clearUserCache();\n  }\n};\n\n// Работа с кэшем данных пользователя\nconst getUserCache = () => {\n  try {\n    const cached = localStorage.getItem(USER_CACHE_KEY);\n    return cached ? JSON.parse(cached) : null;\n  } catch (error) {\n    console.warn('Ошибка парсинга кэша пользователя:', error);\n    return null;\n  }\n};\n\nconst setUserCache = (userData) => {\n  try {\n    localStorage.setItem(USER_CACHE_KEY, JSON.stringify({\n      ...userData,\n      cachedAt: Date.now()\n    }));\n  } catch (error) {\n    console.warn('Ошибка сохранения кэша пользователя:', error);\n  }\n};\n\nconst clearUserCache = () => {\n  localStorage.removeItem(USER_CACHE_KEY);\n};\n\n// Проверка актуальности кэша (15 минут)\nconst isCacheValid = (cachedData) => {\n  if (!cachedData || !cachedData.cachedAt) return false;\n  const CACHE_LIFETIME = 15 * 60 * 1000; // 15 минут\n  return (Date.now() - cachedData.cachedAt) < CACHE_LIFETIME;\n};\n\n// Флаг для предотвращения повторных редиректов\nlet isRedirecting = false;\n\n// Интерцептор для добавления токена к запросам\napiClient.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Интерцептор для обработки ответов\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401 && !isRedirecting) {\n      // Токен истек или недействителен\n      isRedirecting = true;\n      setToken(null);\n      \n      // Вместо window.location.href используем событие\n      window.dispatchEvent(new CustomEvent('auth-logout'));\n      \n      // Сбрасываем флаг через некоторое время\n      setTimeout(() => {\n        isRedirecting = false;\n      }, 1000);\n    } else if (error.response?.status >= 500) {\n      toast.error('Ошибка сервера. Попробуйте позже.');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API методы для авторизации\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await apiClient.post('/auth/login', credentials);\n    if (response.data.token) {\n      setToken(response.data.token);\n      // Кэшируем данные пользователя при логине\n      if (response.data.user) {\n        setUserCache(response.data.user);\n      }\n    }\n    return response.data;\n  },\n\n  register: async (userData) => {\n    const response = await apiClient.post('/auth/register', userData);\n    if (response.data.token) {\n      setToken(response.data.token);\n      // Кэшируем данные пользователя при регистрации\n      if (response.data.user) {\n        setUserCache(response.data.user);\n      }\n    }\n    return response.data;\n  },\n\n  sendCode: async (email) => {\n    const response = await apiClient.post('/auth/send-code', { email });\n    return response.data;\n  },\n\n  resetPassword: async (data) => {\n    const response = await apiClient.post('/auth/reset-password', data);\n    return response.data;\n  },\n\n  logout: async () => {\n    try {\n      await apiClient.post('/auth/logout');\n    } finally {\n      setToken(null);\n    }\n  },\n\n  getCurrentUser: () => {\n    const token = getToken();\n    if (!token) return null;\n    \n    try {\n      // Сначала получаем базовые данные из токена\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const baseUser = {\n        userId: payload.userId,\n        login: payload.login,\n        vipType: payload.vipType\n      };\n\n      // Пытаемся дополнить данные из кэша\n      const cachedUser = getUserCache();\n      if (cachedUser && isCacheValid(cachedUser) && cachedUser.login === baseUser.login) {\n        return {\n          ...baseUser,\n          ava: cachedUser.ava,\n          email: cachedUser.email,\n          status: cachedUser.status,\n          city: cachedUser.city,\n          country: cachedUser.country,\n          is_admin: cachedUser.is_admin || false\n        };\n      }\n\n      // Если кэш недоступен или устарел, возвращаем базовые данные\n      return baseUser;\n    } catch {\n      return null;\n    }\n  },\n\n  // Новый метод для получения актуальных данных пользователя\n  fetchCurrentUserData: async () => {\n    const baseUser = authAPI.getCurrentUser();\n    if (!baseUser || !baseUser.login) return null;\n\n    try {\n      const response = await apiClient.get(`/users/profile/${baseUser.login}`);\n      const userData = response.data;\n      \n      // Обновляем кэш с актуальными данными\n      setUserCache({\n        id: userData.id,\n        login: userData.login,\n        ava: userData.ava,\n        email: baseUser.email, // email не возвращается в профиле\n        status: userData.status,\n        city: userData.city,\n        country: userData.country,\n        viptype: userData.viptype,\n        is_admin: baseUser.is_admin\n      });\n\n      return authAPI.getCurrentUser(); // Возвращаем обновленные данные\n    } catch (error) {\n      console.warn('Ошибка получения актуальных данных пользователя:', error);\n      return baseUser; // Возвращаем данные из токена при ошибке\n    }\n  },\n\n  // Метод для обновления данных пользователя в кэше\n  updateUserCache: (updates) => {\n    const currentUser = getUserCache();\n    if (currentUser) {\n      setUserCache({\n        ...currentUser,\n        ...updates\n      });\n    }\n  }\n};\n\n// API методы для пользователей\nexport const usersAPI = {\n  getProfile: async (login) => {\n    const response = await apiClient.get(`/profiles/${login}`);\n    \n    // Обновляем кэш, если это профиль текущего пользователя\n    const currentUser = authAPI.getCurrentUser();\n    if (currentUser && currentUser.login === login) {\n      authAPI.updateUserCache({\n        ava: response.data.profile.ava,\n        status: response.data.profile.status,\n        city: response.data.profile.city,\n        country: response.data.profile.country,\n        viptype: response.data.profile.viptype\n      });\n    }\n    \n    return response.data.profile;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await apiClient.put('/users/profile', profileData);\n    \n    // Обновляем кэш после успешного обновления профиля\n    if (response.data.success && response.data.user) {\n      authAPI.updateUserCache({\n        status: response.data.user.status,\n        city: response.data.user.city,\n        country: response.data.user.country\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadAvatar: async (formData) => {\n    const response = await apiClient.post('/users/upload-avatar', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки аватарки\n    if (response.data.success && response.data.filename) {\n      authAPI.updateUserCache({\n        ava: response.data.filename\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadImages: async (formData) => {\n    const response = await apiClient.post('/users/upload-images', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки изображений\n    if (response.data.success) {\n      // Получаем актуальные данные пользователя для обновления кэша\n      try {\n        const currentUser = authAPI.getCurrentUser();\n        if (currentUser && currentUser.login) {\n          const userResponse = await apiClient.get(`/users/profile/${currentUser.login}`);\n          if (userResponse.data.success) {\n            authAPI.updateUserCache({\n              ava: userResponse.data.user.ava,\n              status: userResponse.data.user.status,\n              city: userResponse.data.user.city,\n              country: userResponse.data.user.country,\n              viptype: userResponse.data.user.viptype\n            });\n          }\n        }\n      } catch (error) {\n        console.warn('Ошибка обновления кэша после загрузки изображений:', error);\n      }\n    }\n    \n    return response.data;\n  },\n\n  deleteImage: async (filename, type = 'images') => {\n    const response = await apiClient.delete(`/users/images/${filename}?type=${type}`);\n    return response.data;\n  },\n\n  setLockedPassword: async (password) => {\n    const response = await apiClient.post('/users/set-locked-password', { password });\n    return response.data;\n  },\n\n  unlockImages: async (targetUser, password) => {\n    const response = await apiClient.post('/users/unlock-images', {\n      target_user: targetUser,\n      password\n    });\n    return response.data;\n  },\n\n  // Лайки фото\n  likePhoto: async (targetUser, photoIndex) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/like-photo`, {\n      photo_index: photoIndex\n    });\n    return response.data;\n  },\n\n  getPhotoLikes: async (targetUser) => {\n    const response = await apiClient.get(`/profiles/${targetUser}/photo-likes`);\n    return response.data;\n  },\n\n  // Комментарии к фотографиям\n  getPhotoComments: async (filename, page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/photo-comments/${filename}?${params.toString()}`);\n    return response.data;\n  },\n\n  createPhotoComment: async (filename, commentText) => {\n    console.log('API createPhotoComment called with:', { filename, commentText });\n    console.log('Filename type:', typeof filename, 'Value:', filename);\n    \n    if (typeof filename !== 'string') {\n      console.error('Filename is not a string:', filename);\n      throw new Error('Filename must be a string');\n    }\n    \n    const response = await apiClient.post(`/photo-comments/${filename}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  updatePhotoComment: async (commentId, commentText) => {\n    const response = await apiClient.put(`/photo-comments/${commentId}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  deletePhotoComment: async (commentId) => {\n    const response = await apiClient.delete(`/photo-comments/${commentId}`);\n    return response.data;\n  },\n\n  // Комментарии к профилям\n  getProfileComments: async (username, page = 1, limit = 20, includePrivate = false) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (includePrivate) {\n      params.append('include_private', 'true');\n    }\n    const response = await apiClient.get(`/profile-comments/${username}?${params.toString()}`);\n    return response.data;\n  },\n\n  createProfileComment: async (username, commentText, isPublic = true) => {\n    console.log('API createProfileComment called with:', { username, commentText, isPublic });\n    console.log('Username type:', typeof username, 'Value:', username);\n    \n    if (typeof username !== 'string') {\n      console.error('Username is not a string:', username);\n      throw new Error('Username must be a string');\n    }\n    \n    const response = await apiClient.post(`/profile-comments/${username}`, {\n      comment_text: commentText,\n      is_public: isPublic\n    });\n    return response.data;\n  },\n\n  updateProfileComment: async (commentId, commentText) => {\n    const response = await apiClient.put(`/profile-comments/${commentId}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  deleteProfileComment: async (commentId) => {\n    const response = await apiClient.delete(`/profile-comments/${commentId}`);\n    return response.data;\n  },\n\n  // Отправка подарков\n  sendGift: async (targetUser, giftType, message = '') => {\n    const response = await apiClient.post(`/profiles/${targetUser}/send-gift`, {\n      gift_type: giftType,\n      message\n    });\n    return response.data;\n  },\n\n  // Система рейтинга\n  rateUser: async (targetUser, value) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/rate`, {\n      value\n    });\n    return response.data;\n  },\n\n  getUserRating: async (targetUser) => {\n    const response = await apiClient.get(`/profiles/${targetUser}/rating`);\n    return response.data;\n  },\n\n  // Суперлайки\n  sendSuperlike: async (targetUser, message = '') => {\n    const response = await apiClient.post(`/profiles/${targetUser}/superlike`, {\n      message\n    });\n    return response.data;\n  },\n\n  // Регистрация посещений\n  registerVisit: async (targetUser) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/visit`);\n    return response.data;\n  }\n};\n\n// API методы для свайпинга\nexport const swipeAPI = {\n  getProfiles: async (direction = 'forward') => {\n    const response = await apiClient.get(`/swipe/profiles?direction=${direction}`);\n    return response.data;\n  },\n\n  getProfilesBatch: async (count = 10, exclude = []) => {\n    const params = new URLSearchParams();\n    params.append('count', count);\n    if (exclude.length > 0) {\n      params.append('exclude', exclude.join(','));\n    }\n    const response = await apiClient.get(`/swipe/profiles/batch?${params.toString()}`);\n    return response.data;\n  },\n\n  like: async (targetUser, source = 'gesture') => {\n    const response = await apiClient.post('/swipe/like', {\n      target_user: targetUser,\n      source\n    });\n    return response.data;\n  },\n\n  dislike: async (targetUser, source = 'gesture') => {\n    const response = await apiClient.post('/swipe/dislike', {\n      target_user: targetUser,\n      source\n    });\n    return response.data;\n  },\n\n  superlike: async ({ targetUser, message }) => {\n    const response = await apiClient.post('/swipe/superlike', {\n      target_user: targetUser, \n      message: message || ''\n    });\n    return response.data;\n  },\n\n  getSuperlikes: async () => {\n    const response = await apiClient.get('/swipe/superlike-count');\n    return response.data;\n  },\n\n  // Проверка существующего мэтча с пользователем\n  checkExistingMatch: async (targetUser) => {\n    try {\n      const response = await apiClient.get(`/chat/match-status/${targetUser}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error checking existing match:', error);\n      return { hasMatch: false };\n    }\n  }\n};\n\n// API методы для каталога анкет\nexport const catalogAPI = {\n  getProfiles: async (filters = {}) => {\n    const params = new URLSearchParams();\n    \n    // Добавляем фильтры как параметры запроса\n    if (filters.status && filters.status.length > 0) {\n      filters.status.forEach(s => params.append('status', s));\n    }\n    if (filters.country) params.append('country', filters.country);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    const response = await apiClient.get(`/catalog?${params.toString()}`);\n    return response.data;\n  },\n\n  getFilters: async () => {\n    const response = await apiClient.get('/catalog/filters');\n    return response.data;\n  }\n};\n\n// API методы для чатов\nexport const chatAPI = {\n  getConversations: async (limit = 20, offset = 0) => {\n    const response = await apiClient.get(`/chat/conversations?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  getMessages: async (username, limit = 50, offset = 0) => {\n    const response = await apiClient.get(`/chat/${username}?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  sendMessage: async (formData) => {\n    const response = await apiClient.post('/chat/send', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  getUserStatus: async (username) => {\n    const response = await apiClient.get(`/chat/status/${username}`);\n    return response.data;\n  },\n\n  setTyping: async (toUser, isTyping) => {\n    const response = await apiClient.post('/chat/typing', {\n      to_user: toUser,\n      is_typing: isTyping\n    });\n    return response.data;\n  },\n\n  getUnreadCount: async () => {\n    const response = await apiClient.get('/chat/unread-count');\n    return response.data;\n  },\n\n  deleteConversation: async (username) => {\n    const response = await apiClient.delete(`/chat/${username}`);\n    return response.data;\n  },\n\n  // Новые методы для работы с мэтчами\n  getMatchStatus: async (targetUser) => {\n    const response = await apiClient.get(`/chat/match-status/${targetUser}`);\n    return response.data;\n  },\n\n  checkMatchPermission: async (targetUser) => {\n    const response = await apiClient.get(`/chat/can-message/${targetUser}`);\n    return response.data;\n  }\n};\n\n// API методы для объявлений\nexport const adsAPI = {\n  getAds: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/ads?${params}`);\n    return response.data;\n  },\n\n  getMyAds: async (limit = 10, offset = 0) => {\n    const response = await apiClient.get(`/ads/my?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  createAd: async (adData) => {\n    // Создаем FormData для загрузки изображения\n    const formData = new FormData();\n    \n    // Добавляем текстовые поля\n    formData.append('title', adData.title);\n    formData.append('type', adData.type);\n    formData.append('description', adData.description);\n    formData.append('country', adData.country);\n    formData.append('city', adData.city);\n    \n    if (adData.price) {\n      formData.append('price', adData.price);\n    }\n    \n    if (adData.contact_info) {\n      formData.append('contact_info', adData.contact_info);\n    }\n    \n    // Добавляем изображение если оно есть\n    if (adData.image && adData.image instanceof File) {\n      formData.append('image', adData.image);\n    }\n    \n    // Отправляем как multipart/form-data\n    const response = await apiClient.post('/ads/create', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  updateAd: async (id, adData) => {\n    // Создаем FormData для загрузки изображения\n    const formData = new FormData();\n    \n    // Добавляем текстовые поля\n    formData.append('title', adData.title);\n    formData.append('type', adData.type);\n    formData.append('description', adData.description);\n    formData.append('country', adData.country);\n    formData.append('city', adData.city);\n    \n    if (adData.price) {\n      formData.append('price', adData.price);\n    }\n    \n    if (adData.contact_info) {\n      formData.append('contact_info', adData.contact_info);\n    }\n    \n    // Добавляем изображение если оно есть\n    if (adData.image && adData.image instanceof File) {\n      formData.append('image', adData.image);\n    }\n    \n    // Отправляем как multipart/form-data\n    const response = await apiClient.put(`/ads/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  deleteAd: async (id) => {\n    const response = await apiClient.delete(`/ads/${id}`);\n    return response.data;\n  },\n\n  respondToAd: async (id, message) => {\n    const response = await apiClient.post(`/ads/${id}/respond`, { message });\n    return response.data;\n  },\n\n  getAdTypes: async () => {\n    const response = await apiClient.get('/ads/types');\n    return response.data;\n  }\n};\n\n// API методы для администрирования\nexport const adminAPI = {\n  getDashboard: async () => {\n    const response = await apiClient.get('/admin/dashboard');\n    return response.data;\n  },\n\n  getUsers: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/admin/users?${params}`);\n    return response.data;\n  },\n\n  updateUser: async (login, userData) => {\n    const response = await apiClient.put(`/admin/users/${login}`, userData);\n    return response.data;\n  },\n\n  deleteUser: async (login) => {\n    const response = await apiClient.delete(`/admin/users/${login}`);\n    return response.data;\n  },\n\n  getMessages: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/admin/messages?${params}`);\n    return response.data;\n  },\n\n  deleteMessage: async (id) => {\n    const response = await apiClient.delete(`/admin/messages/${id}`);\n    return response.data;\n  },\n\n  broadcast: async (message, targetVipType = 'ALL') => {\n    const response = await apiClient.post('/admin/broadcast', {\n      message,\n      target_viptype: targetVipType\n    });\n    return response.data;\n  },\n\n  getAnalytics: async (period = '30') => {\n    const response = await apiClient.get(`/admin/analytics?period=${period}`);\n    return response.data;\n  }\n};\n\n// API методы для уведомлений\nexport const notificationsAPI = {\n  getNotifications: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.priority) params.append('priority', filters.priority);\n    if (filters.unread !== undefined) params.append('unread', filters.unread);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n    \n    const response = await apiClient.get(`/notifications?${params.toString()}`);\n    return response.data;\n  },\n\n  markAsRead: async (id) => {\n    const response = await apiClient.put(`/notifications/${id}/read`);\n    return response.data;\n  },\n\n  markAllAsRead: async () => {\n    const response = await apiClient.post('/notifications/mark-read');\n    return response.data;\n  },\n\n  deleteNotification: async (id) => {\n    const response = await apiClient.delete(`/notifications/${id}`);\n    return response.data;\n  },\n\n  deleteReadNotifications: async () => {\n    const response = await apiClient.post('/notifications/delete-read');\n    return response.data;\n  },\n\n  getNotificationTypes: async () => {\n    const response = await apiClient.get('/notifications/types');\n    return response.data;\n  },\n\n  getUnreadCount: async () => {\n    const response = await apiClient.get('/notifications/count');\n    return response.data;\n  }\n};\n\n// API методы для подарков\nexport const giftsAPI = {\n  getGiftTypes: async () => {\n    const response = await apiClient.get('/gifts/types');\n    return response.data;\n  },\n\n  sendGift: async (giftData) => {\n    // Преобразуем параметры в формат, ожидаемый сервером\n    const { to_user, gift_type, message } = giftData;\n    const response = await apiClient.post('/gifts/send', {\n      target_user: to_user,\n      gift_type,\n      message: message || ''\n    });\n    return response.data;\n  },\n\n  getGiftHistory: async (type = 'all', limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      type,\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/gifts/history?${params.toString()}`);\n    return response.data;\n  },\n\n  getGiftStats: async (period = '30') => {\n    const response = await apiClient.get(`/gifts/stats?period=${period}`);\n    return response.data;\n  },\n\n  getReceivedGifts: async (limit = 20, offset = 0, targetUser = null) => {\n    console.log('getReceivedGifts called with:', { limit, offset, targetUser });\n    \n    if (targetUser) {\n      // Используем новый роут для получения подарков конкретного пользователя\n      const url = `/gifts/received/${targetUser}?limit=${limit}&offset=${offset}`;\n      console.log('Calling API:', url);\n      const response = await apiClient.get(url);\n      console.log('API response:', response.data);\n      return response.data;\n    } else {\n      // Для текущего пользователя используем старый роут\n      const params = new URLSearchParams({\n        limit: limit.toString(),\n        offset: offset.toString()\n      });\n      const url = `/gifts?${params.toString()}`;\n      console.log('Calling API:', url);\n      const response = await apiClient.get(url);\n      console.log('API response:', response.data);\n      return response.data;\n    }\n  },\n\n  getSentGifts: async (limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/gifts/sent?${params.toString()}`);\n    return response.data;\n  }\n};\n\n// API методы для клубов\nexport const clubsAPI = {\n  getClubs: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.search) params.append('search', filters.search);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n    \n    const response = await apiClient.get(`/clubs?${params.toString()}`);\n    return response.data;\n  },\n\n  createClub: async (clubData) => {\n    const response = await apiClient.post('/clubs', clubData);\n    return response.data;\n  },\n\n  getClub: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}`);\n    return response.data;\n  },\n\n  updateClub: async (clubId, clubData) => {\n    const response = await apiClient.put(`/clubs/${clubId}`, clubData);\n    return response.data;\n  },\n\n  deleteClub: async (clubId) => {\n    const response = await apiClient.delete(`/clubs/${clubId}`);\n    return response.data;\n  },\n\n  joinClub: async (clubId, message = '') => {\n    const response = await apiClient.post(`/clubs/${clubId}/apply`, { message });\n    return response.data;\n  },\n\n  leaveClub: async (clubId) => {\n    const response = await apiClient.delete(`/clubs/${clubId}/leave`);\n    return response.data;\n  },\n\n  getMyClubs: async () => {\n    const response = await apiClient.get('/clubs/my');\n    return response.data;\n  },\n\n  getClubMembers: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}/members`);\n    return response.data;\n  },\n\n  getClubApplications: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}/applications`);\n    return response.data;\n  },\n\n  manageApplication: async (clubId, applicationId, action, reason = '') => {\n    const response = await apiClient.put(`/clubs/${clubId}/applications/${applicationId}`, {\n      action,\n      reason\n    });\n    return response.data;\n  },\n\n  checkClubOwnership: async () => {\n    const response = await apiClient.get('/clubs/my/ownership');\n    return response.data;\n  }\n};\n\n// API методы для подписок\nexport const subscriptionsAPI = {\n  getPlans: async () => {\n    const response = await apiClient.get('/subscriptions/plans');\n    return response.data;\n  },\n\n  subscribe: async (planData) => {\n    const response = await apiClient.post('/subscriptions/subscribe', planData);\n    return response.data;\n  },\n\n  getStatus: async () => {\n    const response = await apiClient.get('/subscriptions/status');\n    return response.data;\n  },\n\n  getHistory: async (limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/subscriptions/history?${params.toString()}`);\n    return response.data;\n  },\n\n  cancel: async (reason = '') => {\n    const response = await apiClient.post('/subscriptions/cancel', { reason });\n    return response.data;\n  },\n\n  usePromoCode: async (code) => {\n    const response = await apiClient.post('/subscriptions/promo', { code });\n    return response.data;\n  },\n\n  getFeatures: async () => {\n    const response = await apiClient.get('/subscriptions/features');\n    return response.data;\n  }\n};\n\n// API методы для рейтинга\nexport const ratingAPI = {\n  getUserRating: async (username) => {\n    const response = await apiClient.get(`/rating/${username}`);\n    return response.data;\n  },\n\n  rateUser: async (username, value) => {\n    const response = await apiClient.post(`/rating/${username}`, { value });\n    return response.data;\n  },\n\n  deleteRating: async (username) => {\n    const response = await apiClient.delete(`/rating/${username}`);\n    return response.data;\n  },\n\n  getTopUsers: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.period) params.append('period', filters.period);\n    if (filters.limit) params.append('limit', filters.limit.toString());\n    \n    const response = await apiClient.get(`/rating/top/users?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyGivenRatings: async (page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/rating/my/given?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyReceivedRatings: async (page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/rating/my/received?${params.toString()}`);\n    return response.data;\n  },\n\n  // Новые методы для интеграции с frontend\n  getLeaderboard: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.period) params.append('period', filters.period);\n    if (filters.category) params.append('category', filters.category);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.limit) params.append('limit', filters.limit.toString());\n    \n    const response = await apiClient.get(`/rating/leaderboard?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyStats: async () => {\n    const response = await apiClient.get('/rating/my/stats');\n    return response.data;\n  }\n};\n\n// API методы для реакций\nexport const reactionsAPI = {\n  getObjectReactions: async (objectType, objectId) => {\n    const response = await apiClient.get(`/reactions/${objectType}/${objectId}`);\n    return response.data;\n  },\n\n  setReaction: async (objectType, objectId, reactionType, value = 1) => {\n    const response = await apiClient.post(`/reactions/${objectType}/${objectId}`, {\n      reaction_type: reactionType,\n      value\n    });\n    return response.data;\n  },\n\n  removeReaction: async (objectType, objectId) => {\n    const response = await apiClient.delete(`/reactions/${objectType}/${objectId}`);\n    return response.data;\n  },\n\n  getUserReactions: async (username, page = 1, limit = 20, objectType = null) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (objectType) {\n      params.append('object_type', objectType);\n    }\n    const response = await apiClient.get(`/reactions/user/${username}?${params.toString()}`);\n    return response.data;\n  },\n\n  getReactionStats: async (objectType, objectId) => {\n    const response = await apiClient.get(`/reactions/stats/${objectType}/${objectId}`);\n    return response.data;\n  }\n};\n\n// Расширенные API методы для загрузок\nexport const uploadsAPI = {\n  uploadAvatar: async (formData) => {\n    const response = await apiClient.post('/uploads/avatar', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки аватарки\n    if (response.data.success && response.data.filename) {\n      authAPI.updateUserCache({\n        ava: response.data.filename\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadPhotos: async (formData) => {\n    const response = await apiClient.post('/uploads/photos', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  uploadPrivatePhotos: async (formData) => {\n    const response = await apiClient.post('/uploads/private-photos', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  deletePhoto: async (filename, type = 'photos') => {\n    const response = await apiClient.delete(`/uploads/${type}/${filename}`);\n    return response.data;\n  },\n\n  getUploadProgress: (onProgress) => {\n    // Для отслеживания прогресса загрузки\n    return {\n      onUploadProgress: (progressEvent) => {\n        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n        if (onProgress) onProgress(progress);\n      }\n    };\n  }\n};\n\n// Утилиты\nexport const apiUtils = {\n  isAuthenticated: () => !!getToken(),\n  \n  getCurrentUser: authAPI.getCurrentUser,\n  \n  logout: authAPI.logout,\n\n  // Принудительное обновление данных пользователя\n  refreshCurrentUser: async () => {\n    return await authAPI.fetchCurrentUserData();\n  },\n\n  // Обновление кэша пользователя\n  updateUserCache: authAPI.updateUserCache,\n\n  // Очистка кэша пользователя\n  clearUserCache,\n\n  // Создание FormData для загрузки файлов\n  createFormData: (data) => {\n    const formData = new FormData();\n    Object.keys(data).forEach(key => {\n      if (data[key] !== null && data[key] !== undefined) {\n        if (Array.isArray(data[key])) {\n          data[key].forEach(item => formData.append(key, item));\n        } else {\n          formData.append(key, data[key]);\n        }\n      }\n    });\n    return formData;\n  },\n\n  // Обработка ошибок API\n  handleError: (error) => {\n    if (error.response?.data?.message) {\n      return error.response.data.message;\n    }\n    if (error.message) {\n      return error.message;\n    }\n    return 'Произошла неизвестная ошибка';\n  },\n\n  // Форматирование даты\n  formatDate: (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  },\n\n  // Форматирование времени \"назад\"\n  formatTimeAgo: (dateString) => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInSeconds = Math.floor((now - date) / 1000);\n\n    if (diffInSeconds < 60) return 'только что';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} мин назад`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} ч назад`;\n    if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} дн назад`;\n    \n    return apiUtils.formatDate(dateString);\n  },\n\n  // Проверка VIP статуса\n  isVip: (user) => {\n    return user?.vipType && user.vipType !== 'BASE';\n  },\n\n  // Проверка PREMIUM статуса\n  isPremium: (user) => {\n    return user?.vipType === 'PREMIUM';\n  },\n\n  // Получение цвета VIP бейджа\n  getVipBadgeColor: (vipType) => {\n    switch (vipType) {\n      case 'VIP': return '#ffd700';\n      case 'PREMIUM': return '#9b59b6';\n      default: return null;\n    }\n  },\n\n  // Получение иконки VIP бейджа\n  getVipBadgeIcon: (vipType) => {\n    switch (vipType) {\n      case 'VIP': return '👑';\n      case 'PREMIUM': return '💎';\n      default: return null;\n    }\n  },\n\n  // Получение информации о пользователе\n  getUserInfo: async (login) => {\n    try {\n      const response = await apiClient.get(`/users/profile/${login}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      return null;\n    }\n  }\n};\n\n// Экспорт всех API групп для удобства\nexport const api = {\n  auth: authAPI,\n  users: usersAPI,\n  swipe: swipeAPI,\n  catalog: catalogAPI,\n  chat: chatAPI,\n  ads: adsAPI,\n  admin: adminAPI,\n  notifications: notificationsAPI,\n  gifts: giftsAPI,\n  clubs: clubsAPI,\n  subscriptions: subscriptionsAPI,\n  rating: ratingAPI,\n  reactions: reactionsAPI,\n  uploads: uploadsAPI,\n  utils: apiUtils\n};\n\nexport default apiClient;","import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { apiUtils } from '../services/api';\n\nconst AuthGuard = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isValidating, setIsValidating] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      setIsValidating(true);\n      \n      try {\n        const authenticated = apiUtils.isAuthenticated();\n        \n        if (!authenticated) {\n          setIsAuthenticated(false);\n          setIsValidating(false);\n          return;\n        }\n\n        // Дополнительная проверка валидности токена\n        try {\n          await apiUtils.refreshCurrentUser();\n          setIsAuthenticated(true);\n        } catch (error) {\n          // Токен невалиден\n          console.warn('Токен невалиден, очищаем авторизацию');\n          apiUtils.logout();\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Ошибка проверки авторизации:', error);\n        setIsAuthenticated(false);\n      } finally {\n        setIsValidating(false);\n      }\n    };\n\n    checkAuth();\n\n    // Слушаем события разлогина\n    const handleAuthLogout = () => {\n      setIsAuthenticated(false);\n    };\n\n    // Проверяем авторизацию при изменении localStorage\n    const handleStorageChange = () => {\n      checkAuth();\n    };\n\n    window.addEventListener('auth-logout', handleAuthLogout);\n    window.addEventListener('storage', handleStorageChange);\n    \n    return () => {\n      window.removeEventListener('auth-logout', handleAuthLogout);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [location.pathname]);\n\n  // Показываем загрузку пока проверяем авторизацию\n  if (isValidating) {\n    return (\n      <div className=\"loading\">\n        Проверка авторизации...\n      </div>\n    );\n  }\n\n  // Если не авторизован, перенаправляем на логин\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace state={{ from: location }} />;\n  }\n\n  // Если авторизован, показываем защищенный контент\n  return children;\n};\n\nexport default AuthGuard;","import styled from 'styled-components';\n\n// Иконки\nexport const EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nexport const EyeOffIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n  </svg>\n);\n\nexport const SearchIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"m21 21-4.35-4.35\"/>\n  </svg>\n);\n\nexport const SendIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"/>\n    <polygon points=\"22,2 15,22 11,13 2,9 22,2\"/>\n  </svg>\n);\n\nexport const HeartIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"/>\n  </svg>\n);\n\nexport const MessageIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n  </svg>\n);\n\nexport const CloseIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n  </svg>\n);\n\nexport const PlusIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n  </svg>\n);\n\nexport const EditIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n  </svg>\n);\n\nexport const BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nexport const CheckIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,6 9,17 4,12\"/>\n  </svg>\n);\n\nexport const TrashIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\nexport const FilterIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nexport const GiftIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,12 20,22 4,22 4,12\"/>\n    <rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"/>\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"/>\n    <path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"/>\n    <path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"/>\n  </svg>\n);\n\nexport const StarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"12,2 15.09,8.26 22,9 17,14.74 18.18,21.02 12,17.77 5.82,21.02 7,14.74 2,9 8.91,8.26 12,2\"/>\n  </svg>\n);\n\nexport const UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nexport const CrownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M6 6l6-4 6 4\"/>\n    <path d=\"M6 6v14h12V6\"/>\n    <circle cx=\"12\" cy=\"13\" r=\"2\"/>\n  </svg>\n);\n\nexport const ChevronUpIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"18,15 12,9 6,15\"/>\n  </svg>\n);\n\nexport const ChevronDownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"6,9 12,15 18,9\"/>\n  </svg>\n);\n\nexport const TrophyIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n    <path d=\"M5.7 8H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h3.7\"/>\n    <path d=\"M18.3 8H22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-3.7\"/>\n    <path d=\"M5.7 8v5.7C5.7 17 8.3 19 12 19s6.3-2 6.3-5.3V8\"/>\n  </svg>\n);\n\n// Контейнеры\nexport const PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${props => props.$gradient ? \n    'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : \n    props.theme.colors.background\n  };\n  padding: ${props => props.$noPadding ? '0' : '20px'};\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$noPadding ? '0' : '10px'};\n  }\n`;\n\nexport const ContentCard = styled.div`\n  width: 100%;\n  max-width: ${props => props.$maxWidth || '900px'};\n  margin: 0 auto;\n  background: white;\n  border-radius: 20px;\n  padding: ${props => props.$padding || '40px'};\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s ease-out;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$mobilePadding || '20px'};\n    max-width: 100%;\n    border-radius: 15px;\n  }\n`;\n\n// Секции и заголовки\nexport const LogoSection = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const Logo = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => props.$size || '80px'};\n  height: ${props => props.$size || '80px'};\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 20px;\n  color: white;\n  font-size: ${props => props.$fontSize || '32px'};\n  font-weight: bold;\n  margin-bottom: 15px;\n  box-shadow: 0 10px 30px rgba(220, 53, 34, 0.3);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$mobileSize || '60px'};\n    height: ${props => props.$mobileSize || '60px'};\n    font-size: ${props => props.$mobileFontSize || '24px'};\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0 0 10px 0;\n  color: #2d3748;\n  font-size: ${props => props.$size === 'large' ? '32px' : '28px'};\n  font-weight: 700;\n  \n  @media (max-width: 768px) {\n    font-size: ${props => props.$size === 'large' ? '28px' : '24px'};\n  }\n`;\n\nexport const Subtitle = styled.p`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  margin-bottom: 30px;\n`;\n\nexport const SectionTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #dc3522;\n  display: inline-block;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n// Формы\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const FormSection = styled.div`\n  background: #f7fafc;\n  padding: 25px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n`;\n\nexport const FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(${props => props.$minWidth || '240px'}, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  color: #4a5568;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  .required {\n    color: #dc3522;\n    font-weight: bold;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\n// Поля ввода\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n  \n  &[type=\"password\"] {\n    padding-right: 45px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L6 6L11 1' stroke='%234A5568' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 16px center;\n  padding-right: 40px;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background-color: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  min-height: ${props => props.$minHeight || '100px'};\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    min-height: 80px;\n  }\n`;\n\n// Кнопки\nexport const Button = styled.button`\n  padding: ${props => props.$size === 'small' ? '8px 16px' : '14px 28px'};\n  background: ${props => {\n    if (props.$variant === 'secondary') return 'white';\n    if (props.$variant === 'danger') return '#f56565';\n    return 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)';\n  }};\n  color: ${props => props.$variant === 'secondary' ? '#dc3522' : 'white'};\n  border: ${props => props.$variant === 'secondary' ? '2px solid #dc3522' : 'none'};\n  border-radius: 10px;\n  font-size: ${props => props.$size === 'small' ? '14px' : '16px'};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: ${props => props.$variant === 'secondary' ? 'none' : '0 4px 15px rgba(220, 53, 34, 0.3)'};\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    transform: ${props => props.$variant === 'secondary' ? 'none' : 'translateY(-2px)'};\n    box-shadow: ${props => {\n      if (props.$variant === 'secondary') return '0 2px 10px rgba(220, 53, 34, 0.2)';\n      if (props.$variant === 'danger') return '0 6px 20px rgba(245, 101, 101, 0.4)';\n      return '0 6px 20px rgba(220, 53, 34, 0.4)';\n    }};\n    background: ${props => {\n      if (props.$variant === 'secondary') return '#fff5f5';\n      if (props.$variant === 'danger') return '#e53e3e';\n      return 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)';\n    }};\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    background: linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%);\n    cursor: not-allowed;\n    box-shadow: none;\n    transform: none;\n    border-color: ${props => props.$variant === 'secondary' ? '#cbd5e0' : 'transparent'};\n    color: ${props => props.$variant === 'secondary' ? '#a0aec0' : 'white'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$size === 'small' ? '6px 12px' : '12px 24px'};\n    font-size: ${props => props.$size === 'small' ? '13px' : '15px'};\n  }\n`;\n\nexport const IconButton = styled.button`\n  width: ${props => props.$size || '40px'};\n  height: ${props => props.$size || '40px'};\n  border-radius: 50%;\n  border: none;\n  background: ${props => props.$variant === 'secondary' ? '#f7fafc' : '#dc3522'};\n  color: ${props => props.$variant === 'secondary' ? '#4a5568' : 'white'};\n  cursor: pointer;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$variant === 'secondary' ? '#e2e8f0' : '#ff6b58'};\n    transform: scale(1.1);\n  }\n  \n  &:focus {\n    outline: none;\n  }\n  \n  &:disabled {\n    background: #e2e8f0;\n    color: #a0aec0;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\n// Элементы ошибок\nexport const ErrorText = styled.span`\n  color: #f56565;\n  font-size: 13px;\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⚠';\n    font-size: 12px;\n  }\n`;\n\n// Карточки и контейнеры\nexport const Card = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: ${props => props.$padding || '20px'};\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: all 0.3s ease;\n  border: 1px solid #e2e8f0;\n  \n  &:hover {\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    transform: translateY(-2px);\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: ${props => props.$size || '40px'};\n  height: ${props => props.$size || '40px'};\n  border-radius: 50%;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center;\n  background-color: ${props => props.$bgColor || '#dc3522'};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: ${props => props.$fontSize || '16px'};\n  border: ${props => props.$border || '2px solid #e2e8f0'};\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover {\n    ${props => props.$clickable && `\n      border-color: #dc3522;\n      transform: scale(1.05);\n    `}\n  }\n  \n  ${props => props.$online && `\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 2px;\n      right: 2px;\n      width: 12px;\n      height: 12px;\n      background: #4caf50;\n      border-radius: 50%;\n      border: 2px solid white;\n    }\n  `}\n  \n  /* Адаптивные размеры для разных экранов */\n  /* Большие экраны - аватарка 50px */\n  @media (min-width: 1440px) {\n    ${props => props.$size === '45px' && `\n      width: 50px;\n      height: 50px;\n      font-size: 20px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Средне-большие экраны - аватарка 47px */\n  @media (min-width: 1240px) and (max-width: 1439px) {\n    ${props => props.$size === '45px' && `\n      width: 47px;\n      height: 47px;\n      font-size: 19px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Средние экраны - аватарка 45px */\n  @media (max-width: 1200px) {\n    ${props => props.$size === '45px' && `\n      width: 45px;\n      height: 45px;\n      font-size: 18px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Планшеты в альбомной ориентации - аватарка 42px */\n  @media (max-width: 1024px) {\n    ${props => props.$size === '45px' && `\n      width: 42px;\n      height: 42px;\n      font-size: 17px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Планшеты в портретной ориентации - аватарка 40px */\n  @media (max-width: 768px) {\n    ${props => props.$size === '45px' && `\n      width: 40px;\n      height: 40px;\n      font-size: 16px;\n      border-width: 1.5px;\n    `}\n  }\n  \n  /* Большие мобильные - аватарка 38px */\n  @media (max-width: 576px) {\n    ${props => props.$size === '45px' && `\n      width: 38px;\n      height: 38px;\n      font-size: 15px;\n      border-width: 1.5px;\n    `}\n  }\n  \n  /* Мобильные - аватарка 36px */\n  @media (max-width: 480px) {\n    ${props => props.$size === '45px' && `\n      width: 36px;\n      height: 36px;\n      font-size: 14px;\n      border-width: 1.5px;\n    `}\n  }\n  \n  /* Маленькие мобильные - аватарка 34px */\n  @media (max-width: 360px) {\n    ${props => props.$size === '45px' && `\n      width: 34px;\n      height: 34px;\n      font-size: 13px;\n      border-width: 1px;\n    `}\n  }\n`;\n\n// Модальные окна\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 20px;\n  backdrop-filter: blur(5px);\n`;\n\nexport const ModalContent = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  max-width: ${props => props.$maxWidth || '500px'};\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: modalSlideUp 0.3s ease-out;\n  \n  @keyframes modalSlideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px) scale(0.95);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0) scale(1);\n    }\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  \n  h2 {\n    margin: 0;\n    color: #2d3748;\n    font-size: 24px;\n    font-weight: 700;\n  }\n`;\n\n// Утилиты\nexport const FlexContainer = styled.div`\n  display: flex;\n  align-items: ${props => props.$align || 'center'};\n  justify-content: ${props => props.$justify || 'flex-start'};\n  gap: ${props => props.$gap || '10px'};\n  flex-direction: ${props => props.$direction || 'row'};\n  flex-wrap: ${props => props.$wrap ? 'wrap' : 'nowrap'};\n  \n  @media (max-width: 768px) {\n    flex-direction: ${props => props.$mobileDirection || props.$direction || 'row'};\n    gap: ${props => props.$mobileGap || props.$gap || '10px'};\n  }\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.$columns || 'repeat(auto-fit, minmax(250px, 1fr))'};\n  gap: ${props => props.$gap || '20px'};\n  \n  @media (max-width: 768px) {\n    grid-template-columns: ${props => props.$mobileColumns || '1fr'};\n    gap: ${props => props.$mobileGap || '15px'};\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  \n  &::after {\n    content: '';\n    width: 40px;\n    height: 40px;\n    border: 4px solid #e2e8f0;\n    border-top: 4px solid #dc3522;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nexport const ProgressBar = styled.div`\n  height: 4px;\n  background: #e2e8f0;\n  border-radius: 2px;\n  margin: 20px 0;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: ${props => props.$progress || 0}%;\n    background: linear-gradient(90deg, #dc3522 0%, #ff6b58 100%);\n    transition: width 0.3s ease;\n  }\n`;\n\nexport const ThumbsUpIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n  </svg>\n);\n\nexport const ThumbsDownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" transform=\"rotate(180)\">\n    <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n  </svg>\n);\n\nexport const LockIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"/>\n    <circle cx=\"12\" cy=\"16\" r=\"1\"/>\n    <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/>\n  </svg>\n);","// Единая система брейкпоинтов для SwingFox\nexport const BREAKPOINTS = {\n  // Мобильные устройства\n  TINY: '320px',        // Самые маленькие устройства\n  MOBILE: '480px',      // Стандартные мобильные\n  MOBILE_LARGE: '576px', // Большие мобильные\n  \n  // Планшеты\n  TABLET: '768px',      // Планшеты портретные\n  TABLET_LARGE: '992px', // Планшеты альбомные\n  \n  // Десктопы (мобильное меню до 1170px)\n  DESKTOP_MOBILE: '1170px', // Граница мобильного меню\n  DESKTOP: '1200px',    // Стандартные десктопы\n  DESKTOP_LARGE: '1440px', // Большие мониторы\n  DESKTOP_XL: '1920px'  // Ultra wide/4K мониторы\n};\n\n// Медиа-запросы для styled-components\nexport const MEDIA = {\n  // Mobile first подход\n  mobile: `@media (min-width: ${BREAKPOINTS.MOBILE})`,\n  mobileLarge: `@media (min-width: ${BREAKPOINTS.MOBILE_LARGE})`,\n  tablet: `@media (min-width: ${BREAKPOINTS.TABLET})`,\n  tabletLarge: `@media (min-width: ${BREAKPOINTS.TABLET_LARGE})`,\n  desktopMobile: `@media (min-width: ${BREAKPOINTS.DESKTOP_MOBILE})`,\n  desktop: `@media (min-width: ${BREAKPOINTS.DESKTOP})`,\n  desktopLarge: `@media (min-width: ${BREAKPOINTS.DESKTOP_LARGE})`,\n  desktopXL: `@media (min-width: ${BREAKPOINTS.DESKTOP_XL})`,\n  \n  // Max-width медиа-запросы для edge cases\n  maxMobile: `@media (max-width: ${parseInt(BREAKPOINTS.MOBILE) - 1}px)`,\n  maxMobileLarge: `@media (max-width: ${parseInt(BREAKPOINTS.MOBILE_LARGE) - 1}px)`,\n  maxTablet: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET) - 1}px)`,\n  maxTabletLarge: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET_LARGE) - 1}px)`,\n  maxDesktopMobile: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP_MOBILE) - 1}px)`,\n  maxDesktop: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP) - 1}px)`,\n  maxDesktopLarge: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP_LARGE) - 1}px)`,\n  \n  // Комбинированные диапазоны\n  mobileOnly: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET) - 1}px)`,\n  tabletOnly: `@media (min-width: ${BREAKPOINTS.TABLET}) and (max-width: ${parseInt(BREAKPOINTS.DESKTOP_MOBILE) - 1}px)`,\n  desktopOnly: `@media (min-width: ${BREAKPOINTS.DESKTOP_MOBILE})`,\n  \n  // Ориентация\n  landscape: '@media (orientation: landscape)',\n  portrait: '@media (orientation: portrait)',\n  \n  // Высокое разрешение\n  retina: '@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n};\n\n// Функция для получения значения брейкпоинта без 'px'\nexport const getBreakpointValue = (breakpoint) => {\n  return parseInt(BREAKPOINTS[breakpoint]) || parseInt(breakpoint);\n};\n\n// Вспомогательная функция для создания кастомных медиа-запросов\nexport const createMediaQuery = (minWidth, maxWidth = null) => {\n  if (maxWidth) {\n    return `@media (min-width: ${minWidth}) and (max-width: ${maxWidth})`;\n  }\n  return `@media (min-width: ${minWidth})`;\n};","import { BREAKPOINTS } from './breakpoints';\n\n// Адаптивные размеры для элементов шапки\nexport const HEADER_SIZES = {\n  // Высота шапки\n  height: {\n    tiny: '50px',\n    mobile: '55px',\n    mobileLarge: '58px',\n    tablet: '62px',\n    tabletLarge: '66px',\n    desktop: '70px',\n    desktopLarge: '75px',\n    desktopXL: '80px'\n  },\n  \n  // Отступы контейнера\n  padding: {\n    tiny: '0 8px',\n    mobile: '0 12px',\n    mobileLarge: '0 15px',\n    tablet: '0 18px',\n    tabletLarge: '0 22px',\n    desktop: '0 25px',\n    desktopLarge: '0 30px',\n    desktopXL: '0 35px'\n  },\n  \n  // Логотип иконка\n  logoIcon: {\n    tiny: '32px',\n    mobile: '36px',\n    mobileLarge: '38px',\n    tablet: '40px',\n    tabletLarge: '42px',\n    desktop: '45px',\n    desktopLarge: '48px',\n    desktopXL: '52px'\n  },\n  \n  // Размер шрифта иконки логотипа\n  logoIconFont: {\n    tiny: '13px',\n    mobile: '14px',\n    mobileLarge: '15px',\n    tablet: '16px',\n    tabletLarge: '17px',\n    desktop: '18px',\n    desktopLarge: '19px',\n    desktopXL: '21px'\n  },\n  \n  // Текст логотипа\n  logoText: {\n    tiny: '16px',\n    mobile: '18px',\n    mobileLarge: '19px',\n    tablet: '20px',\n    tabletLarge: '22px',\n    desktop: '24px',\n    desktopLarge: '26px',\n    desktopXL: '28px'\n  },\n  \n  // Навигационные ссылки\n  navLink: {\n    padding: {\n      tiny: '6px 8px',\n      mobile: '8px 10px',\n      mobileLarge: '8px 12px',\n      tablet: '10px 14px',\n      tabletLarge: '10px 16px',\n      desktop: '12px 16px',\n      desktopLarge: '12px 18px',\n      desktopXL: '14px 20px'\n    },\n    fontSize: {\n      tiny: '12px',\n      mobile: '13px',\n      mobileLarge: '13px',\n      tablet: '14px',\n      tabletLarge: '14px',\n      desktop: '15px',\n      desktopLarge: '15px',\n      desktopXL: '16px'\n    },\n    gap: {\n      tiny: '4px',\n      mobile: '5px',\n      mobileLarge: '6px',\n      tablet: '6px',\n      tabletLarge: '7px',\n      desktop: '8px',\n      desktopLarge: '8px',\n      desktopXL: '10px'\n    }\n  },\n  \n  // Контейнер навигационных ссылок\n  navLinks: {\n    gap: {\n      tiny: '2px',\n      mobile: '4px',\n      mobileLarge: '6px',\n      tablet: '6px',\n      tabletLarge: '8px',\n      desktop: '8px',\n      desktopLarge: '10px',\n      desktopXL: '12px'\n    }\n  },\n  \n  // Аватар пользователя\n  userAvatar: {\n    tiny: '34px',\n    mobile: '36px',\n    mobileLarge: '38px',\n    tablet: '40px',\n    tabletLarge: '42px',\n    desktop: '45px',\n    desktopLarge: '48px',\n    desktopXL: '52px'\n  },\n  \n  // VIP индикатор\n  vipIndicator: {\n    tiny: '14px',\n    mobile: '16px',\n    mobileLarge: '17px',\n    tablet: '18px',\n    tabletLarge: '19px',\n    desktop: '20px',\n    desktopLarge: '22px',\n    desktopXL: '24px'\n  },\n  \n  // Бейдж уведомлений\n  notificationBadge: {\n    tiny: '14px',\n    mobile: '16px',\n    mobileLarge: '17px',\n    tablet: '17px',\n    tabletLarge: '18px',\n    desktop: '18px',\n    desktopLarge: '20px',\n    desktopXL: '22px'\n  },\n  \n  // Мобильное меню\n  mobileMenu: {\n    padding: {\n      tiny: '12px',\n      mobile: '15px',\n      mobileLarge: '18px',\n      tablet: '20px',\n      tabletLarge: '22px'\n    },\n    linkPadding: {\n      tiny: '12px',\n      mobile: '14px',\n      mobileLarge: '16px',\n      tablet: '16px',\n      tabletLarge: '18px'\n    },\n    fontSize: {\n      tiny: '14px',\n      mobile: '15px',\n      mobileLarge: '15px',\n      tablet: '16px',\n      tabletLarge: '16px'\n    }\n  },\n  \n  // Dropdown меню\n  dropdown: {\n    minWidth: {\n      tiny: '200px',\n      mobile: '220px',\n      mobileLarge: '240px',\n      tablet: '250px',\n      tabletLarge: '260px',\n      desktop: '280px',\n      desktopLarge: '300px',\n      desktopXL: '320px'\n    },\n    padding: {\n      tiny: '6px',\n      mobile: '8px',\n      mobileLarge: '8px',\n      tablet: '10px',\n      tabletLarge: '10px',\n      desktop: '12px',\n      desktopLarge: '12px',\n      desktopXL: '14px'\n    }\n  }\n};\n\n// Функция для получения размера по брейкпоинту\nexport const getSize = (sizePath, currentBreakpoint = 'desktop') => {\n  const pathArray = sizePath.split('.');\n  let value = HEADER_SIZES;\n  \n  for (const path of pathArray) {\n    value = value[path];\n    if (!value) return null;\n  }\n  \n  // Проверяем доступные размеры и возвращаем подходящий\n  const availableSizes = Object.keys(value);\n  \n  // Приоритет по убыванию размера экрана\n  const priorities = ['desktopXL', 'desktopLarge', 'desktop', 'tabletLarge', 'tablet', 'mobileLarge', 'mobile', 'tiny'];\n  \n  // Находим индекс текущего брейкпоинта\n  const currentIndex = priorities.indexOf(currentBreakpoint);\n  \n  // Ищем подходящий размер, начиная с текущего и идя вниз по приоритету\n  for (let i = currentIndex; i < priorities.length; i++) {\n    const priority = priorities[i];\n    if (availableSizes.includes(priority)) {\n      return value[priority];\n    }\n  }\n  \n  // Если ничего не найдено, возвращаем первый доступный\n  return value[availableSizes[0]] || null;\n};\n\n// Функция для создания адаптивного CSS с размерами\nexport const createResponsiveCSS = (sizePath, cssProp = 'font-size') => {\n  const pathArray = sizePath.split('.');\n  let sizeObj = HEADER_SIZES;\n  \n  for (const path of pathArray) {\n    sizeObj = sizeObj[path];\n    if (!sizeObj) return '';\n  }\n  \n  let css = '';\n  \n  // Базовый размер (mobile first)\n  if (sizeObj.tiny) {\n    css += `${cssProp}: ${sizeObj.tiny};\\n`;\n  }\n  \n  // Медиа-запросы по возрастанию\n  const breakpointOrder = [\n    { key: 'mobile', bp: BREAKPOINTS.MOBILE },\n    { key: 'mobileLarge', bp: BREAKPOINTS.MOBILE_LARGE },\n    { key: 'tablet', bp: BREAKPOINTS.TABLET },\n    { key: 'tabletLarge', bp: BREAKPOINTS.TABLET_LARGE },\n    { key: 'desktop', bp: BREAKPOINTS.DESKTOP },\n    { key: 'desktopLarge', bp: BREAKPOINTS.DESKTOP_LARGE },\n    { key: 'desktopXL', bp: BREAKPOINTS.DESKTOP_XL }\n  ];\n  \n  for (const { key, bp } of breakpointOrder) {\n    if (sizeObj[key]) {\n      css += `\\n@media (min-width: ${bp}) {\\n  ${cssProp}: ${sizeObj[key]};\\n}`;\n    }\n  }\n  \n  return css;\n};\n\n// Экспорт утилит для быстрого доступа\nexport const UTILS = {\n  getSize,\n  createResponsiveCSS,\n  BREAKPOINTS,\n  HEADER_SIZES\n};","import React, { useState, useRef, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useQueryClient, useQuery } from 'react-query';\nimport toast from 'react-hot-toast';\nimport { apiUtils, notificationsAPI } from '../services/api';\nimport { Avatar, FlexContainer, IconButton } from './UI';\nimport { MEDIA } from '../styles/breakpoints';\nimport { HEADER_SIZES } from '../styles/headerSizes';\n\n// Иконки\nconst HomeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\n    <polyline points=\"9,22 9,12 15,12 15,22\"/>\n  </svg>\n);\n\nconst ChatIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n  </svg>\n);\n\nconst AdsIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n  </svg>\n);\n\nconst AdminIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M12 1l3 6 6 3-6 3-3 6-3-6-6-3 6-3z\"/>\n  </svg>\n);\n\nconst BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nconst GiftIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,12 20,22 4,22 4,12\"/>\n    <rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"/>\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"/>\n    <path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"/>\n    <path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst CrownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M6 3h12l4 6-10 13L2 9z\"/>\n    <path d=\"M11 3L8 9l4 13 4-13-3-6\"/>\n    <path d=\"M2 9l4.5 13L11 9\"/>\n    <path d=\"M13 9l4.5 13L22 9\"/>\n  </svg>\n);\n\nconst TrophyIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n    <path d=\"M5.7 8H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h3.7\"/>\n    <path d=\"M18.3 8H22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-3.7\"/>\n    <path d=\"M5.7 8v5.7C5.7 17 8.3 19 12 19s6.3-2 6.3-5.3V8\"/>\n  </svg>\n);\n\nconst SearchIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"M21 21l-4.35-4.35\"/>\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"/>\n    <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"/>\n  </svg>\n);\n\nconst ProfileIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n  </svg>\n);\n\nconst SettingsIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n    <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\"/>\n  </svg>\n);\n\nconst LogoutIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/>\n    <polyline points=\"16,17 21,12 16,7\"/>\n    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"/>\n  </svg>\n);\n\nconst NavContainer = styled.nav`\n  background: white;\n  border-bottom: 1px solid #e2e8f0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n  \n  /* Классы для устранения конфликтов с старым CSS */\n  &.react-navigation-container {\n    position: sticky !important;\n    top: 0 !important;\n    z-index: 1000 !important;\n    width: 100% !important;\n    background: white !important;\n    border-bottom: 1px solid #e2e8f0 !important;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08) !important;\n    backdrop-filter: blur(10px) !important;\n  }\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  /* Высота и отступы по новой системе */\n  height: ${HEADER_SIZES.height.tiny};\n  padding: ${HEADER_SIZES.padding.tiny};\n  \n  ${MEDIA.mobile} {\n    height: ${HEADER_SIZES.height.mobile};\n    padding: ${HEADER_SIZES.padding.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    height: ${HEADER_SIZES.height.mobileLarge};\n    padding: ${HEADER_SIZES.padding.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    height: ${HEADER_SIZES.height.tablet};\n    padding: ${HEADER_SIZES.padding.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    height: ${HEADER_SIZES.height.tabletLarge};\n    padding: ${HEADER_SIZES.padding.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    height: ${HEADER_SIZES.height.desktop};\n    padding: ${HEADER_SIZES.padding.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    height: ${HEADER_SIZES.height.desktopLarge};\n    padding: ${HEADER_SIZES.padding.desktopLarge};\n    max-width: 1400px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    height: ${HEADER_SIZES.height.desktopXL};\n    padding: ${HEADER_SIZES.padding.desktopXL};\n    max-width: 1600px;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst LogoIcon = styled.div`\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 12px;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.logoIcon.tiny};\n  height: ${HEADER_SIZES.logoIcon.tiny};\n  font-size: ${HEADER_SIZES.logoIconFont.tiny};\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.logoIcon.mobile};\n    height: ${HEADER_SIZES.logoIcon.mobile};\n    font-size: ${HEADER_SIZES.logoIconFont.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.logoIcon.mobileLarge};\n    height: ${HEADER_SIZES.logoIcon.mobileLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.logoIcon.tablet};\n    height: ${HEADER_SIZES.logoIcon.tablet};\n    font-size: ${HEADER_SIZES.logoIconFont.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.logoIcon.tabletLarge};\n    height: ${HEADER_SIZES.logoIcon.tabletLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.logoIcon.desktop};\n    height: ${HEADER_SIZES.logoIcon.desktop};\n    font-size: ${HEADER_SIZES.logoIconFont.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.logoIcon.desktopLarge};\n    height: ${HEADER_SIZES.logoIcon.desktopLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.logoIcon.desktopXL};\n    height: ${HEADER_SIZES.logoIcon.desktopXL};\n    font-size: ${HEADER_SIZES.logoIconFont.desktopXL};\n  }\n  \n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 20px rgba(220, 53, 34, 0.4);\n  }\n`;\n\nconst LogoText = styled.div`\n  font-weight: bold;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  transition: all 0.3s ease;\n  user-select: none;\n  \n  /* Адаптивные размеры шрифта */\n  font-size: ${HEADER_SIZES.logoText.tiny};\n  \n  ${MEDIA.mobile} {\n    font-size: ${HEADER_SIZES.logoText.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    font-size: ${HEADER_SIZES.logoText.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    font-size: ${HEADER_SIZES.logoText.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    font-size: ${HEADER_SIZES.logoText.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    font-size: ${HEADER_SIZES.logoText.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    font-size: ${HEADER_SIZES.logoText.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    font-size: ${HEADER_SIZES.logoText.desktopXL};\n  }\n  \n  /* Скрываем на самых маленьких экранах */\n  ${MEDIA.maxMobile} {\n    display: none;\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  align-items: center;\n  \n  /* Адаптивный gap */\n  gap: ${HEADER_SIZES.navLinks.gap.tiny};\n  \n  ${MEDIA.mobile} {\n    gap: ${HEADER_SIZES.navLinks.gap.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    gap: ${HEADER_SIZES.navLinks.gap.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktopXL};\n  }\n  \n  /* Скрываем при ширине меньше 1170px */\n  ${MEDIA.maxDesktopMobile} {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  border-radius: 12px;\n  color: #4a5568;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  position: relative;\n  white-space: nowrap;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.navLink.padding.tiny};\n  font-size: ${HEADER_SIZES.navLink.fontSize.tiny};\n  gap: ${HEADER_SIZES.navLink.gap.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.navLink.padding.mobile};\n    font-size: ${HEADER_SIZES.navLink.fontSize.mobile};\n    gap: ${HEADER_SIZES.navLink.gap.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.mobileLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.mobileLarge};\n    gap: ${HEADER_SIZES.navLink.gap.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.navLink.padding.tablet};\n    font-size: ${HEADER_SIZES.navLink.fontSize.tablet};\n    gap: ${HEADER_SIZES.navLink.gap.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.tabletLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.tabletLarge};\n    gap: ${HEADER_SIZES.navLink.gap.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    padding: ${HEADER_SIZES.navLink.padding.desktop};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktop};\n    gap: ${HEADER_SIZES.navLink.gap.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.desktopLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktopLarge};\n    gap: ${HEADER_SIZES.navLink.gap.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    padding: ${HEADER_SIZES.navLink.padding.desktopXL};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktopXL};\n    gap: ${HEADER_SIZES.navLink.gap.desktopXL};\n  }\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    color: #dc3522;\n    text-decoration: none;\n    transform: translateY(-1px);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  /* Иконки в ссылках */\n  svg {\n    width: 18px;\n    height: 18px;\n    flex-shrink: 0;\n    \n    ${MEDIA.desktopLarge} {\n      width: 20px;\n      height: 20px;\n    }\n    \n    ${MEDIA.desktopXL} {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst UserSection = styled.div`\n  position: relative;\n`;\n\nconst UserMenuButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst VipIndicator = styled.div`\n  position: absolute;\n  bottom: -2px;\n  right: -2px;\n  border-radius: 50%;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.vipIndicator.tiny};\n  height: ${HEADER_SIZES.vipIndicator.tiny};\n  font-size: 8px;\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.vipIndicator.mobile};\n    height: ${HEADER_SIZES.vipIndicator.mobile};\n    font-size: 9px;\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.vipIndicator.mobileLarge};\n    height: ${HEADER_SIZES.vipIndicator.mobileLarge};\n    font-size: 9px;\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.vipIndicator.tablet};\n    height: ${HEADER_SIZES.vipIndicator.tablet};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.vipIndicator.tabletLarge};\n    height: ${HEADER_SIZES.vipIndicator.tabletLarge};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.vipIndicator.desktop};\n    height: ${HEADER_SIZES.vipIndicator.desktop};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.vipIndicator.desktopLarge};\n    height: ${HEADER_SIZES.vipIndicator.desktopLarge};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.vipIndicator.desktopXL};\n    height: ${HEADER_SIZES.vipIndicator.desktopXL};\n    font-size: 12px;\n  }\n`;\n\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: calc(100% + 10px);\n  right: 0;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 15px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.dropdown.padding.tiny};\n  min-width: ${HEADER_SIZES.dropdown.minWidth.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.dropdown.padding.mobile};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.mobileLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.dropdown.padding.tablet};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.tabletLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktop};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktopLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktopXL};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktopXL};\n  }\n  \n  ${props => !props.$show && 'display: none;'}\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -8px;\n    right: 20px;\n    width: 16px;\n    height: 16px;\n    background: white;\n    border-left: 1px solid #e2e8f0;\n    border-top: 1px solid #e2e8f0;\n    transform: rotate(45deg);\n  }\n`;\n\nconst DropdownItem = styled.button`\n  width: 100%;\n  padding: 12px 16px;\n  text-align: left;\n  background: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 10px;\n  transition: all 0.2s ease;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: #4a5568;\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    color: #dc3522;\n  }\n  \n  &.danger {\n    color: #f56565;\n    \n    &:hover {\n      background: rgba(245, 101, 101, 0.1);\n    }\n  }\n`;\n\nconst MobileMenuButton = styled(IconButton)`\n  display: none;\n  transition: all 0.3s ease;\n  \n  /* Показываем при ширине меньше 1170px */\n  ${MEDIA.maxDesktopMobile} {\n    display: flex;\n  }\n  \n  /* Адаптивные размеры для иконки меню */\n  svg {\n    width: 22px;\n    height: 22px;\n    \n    ${MEDIA.mobile} {\n      width: 24px;\n      height: 24px;\n    }\n    \n    ${MEDIA.tablet} {\n      width: 26px;\n      height: 26px;\n    }\n  }\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst MobileMenu = styled.div.attrs({\n  className: 'react-mobile-menu'\n})`\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border-top: 1px solid #e2e8f0;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  z-index: 999;\n  \n  /* Адаптивные отступы */\n  padding: ${HEADER_SIZES.mobileMenu.padding.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.tabletLarge};\n  }\n  \n  ${MEDIA.maxDesktopMobile} {\n    display: ${props => props.$show ? 'block' : 'none'};\n  }\n`;\n\nconst MobileNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: #4a5568;\n  text-decoration: none;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  transition: all 0.2s ease;\n  font-weight: 500;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.mobileMenu.linkPadding.tiny};\n  gap: 10px;\n  font-size: ${HEADER_SIZES.mobileMenu.fontSize.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.mobile};\n    gap: 12px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.mobileLarge};\n    gap: 12px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.tablet};\n    gap: 14px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.tabletLarge};\n    gap: 14px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.tabletLarge};\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  &:hover:not(.active) {\n    background: #f7fafc;\n    text-decoration: none;\n    transform: translateX(4px);\n  }\n  \n  /* Иконки в мобильном меню */\n  svg {\n    width: 20px;\n    height: 20px;\n    flex-shrink: 0;\n    \n    ${MEDIA.tablet} {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst NotificationBadge = styled.span`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #f56565;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 2px 8px rgba(245, 101, 101, 0.4);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.notificationBadge.tiny};\n  height: ${HEADER_SIZES.notificationBadge.tiny};\n  font-size: 10px;\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.notificationBadge.mobile};\n    height: ${HEADER_SIZES.notificationBadge.mobile};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.notificationBadge.mobileLarge};\n    height: ${HEADER_SIZES.notificationBadge.mobileLarge};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.notificationBadge.tablet};\n    height: ${HEADER_SIZES.notificationBadge.tablet};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.notificationBadge.tabletLarge};\n    height: ${HEADER_SIZES.notificationBadge.tabletLarge};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.notificationBadge.desktop};\n    height: ${HEADER_SIZES.notificationBadge.desktop};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.notificationBadge.desktopLarge};\n    height: ${HEADER_SIZES.notificationBadge.desktopLarge};\n    font-size: 13px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.notificationBadge.desktopXL};\n    height: ${HEADER_SIZES.notificationBadge.desktopXL};\n    font-size: 14px;\n  }\n`;\n\n// Компонент счетчика уведомлений\nconst NotificationCounter = () => {\n  const { data: unreadCountData } = useQuery(\n    'unread-notifications-count',\n    () => notificationsAPI.getUnreadCount(),\n    {\n      refetchInterval: 30000, // Обновляем каждые 30 секунд\n      retry: 1,\n      enabled: apiUtils.isAuthenticated(), // Проверяем авторизацию\n      onError: (error) => {\n        // Тихо игнорируем ошибки для счетчика, но логируем 401\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in Navigation notification counter');\n        }\n      }\n    }\n  );\n\n  const unreadCount = unreadCountData?.total_unread || 0;\n\n  if (!unreadCount || unreadCount === 0) return null;\n\n  return (\n    <NotificationBadge>\n      {unreadCount > 99 ? '99+' : unreadCount}\n    </NotificationBadge>\n  );\n};\n\nconst Navigation = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const userMenuRef = useRef(null);\n  \n  // Получаем актуальные данные пользователя при монтировании\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = apiUtils.getCurrentUser();\n        if (user) {\n          setCurrentUser(user);\n          \n          // Если нет аватарки в кэше, пытаемся обновить данные\n          if (!user.ava) {\n            const updatedUser = await apiUtils.refreshCurrentUser();\n            if (updatedUser) {\n              setCurrentUser(updatedUser);\n            }\n          }\n        }\n      } catch (error) {\n        console.warn('Ошибка получения данных пользователя:', error);\n        setCurrentUser(apiUtils.getCurrentUser());\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  // Подписываемся на изменения в localStorage для синхронизации между табами\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      if (event.key === 'swingfox_user_cache' || event.key === 'swingfox_token') {\n        const user = apiUtils.getCurrentUser();\n        setCurrentUser(user);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Функция для принудительного обновления данных пользователя\n  const refreshUserData = async () => {\n    try {\n      const updatedUser = await apiUtils.refreshCurrentUser();\n      if (updatedUser) {\n        setCurrentUser(updatedUser);\n      }\n    } catch (error) {\n      console.warn('Ошибка обновления данных пользователя:', error);\n    }\n  };\n\n  // Добавляем глобальный обработчик для обновления навигации\n  useEffect(() => {\n    window.refreshNavigation = refreshUserData;\n    return () => {\n      delete window.refreshNavigation;\n    };\n  }, []);\n\n  const handleLogout = () => {\n    if (window.confirm('Выйти из аккаунта?')) {\n      apiUtils.logout();\n      queryClient.clear();\n      toast.success('Вы вышли из аккаунта');\n      navigate('/login');\n    }\n  };\n\n  const handleProfileClick = () => {\n    navigate('/profile');\n    setShowUserMenu(false);\n  };\n\n  const isActiveRoute = (path) => {\n    return location.pathname === path;\n  };\n\n  // Закрытие меню при клике вне\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Закрытие пользовательского меню\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setShowUserMenu(false);\n      }\n      \n      // Закрытие мобильного меню только если клик не по кнопке меню и не внутри самого меню\n      const mobileMenuButton = event.target.closest('[data-mobile-menu-button]');\n      const mobileMenuContent = event.target.closest('.react-mobile-menu');\n      \n      if (!mobileMenuButton && !mobileMenuContent && showMobileMenu) {\n        setShowMobileMenu(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [showMobileMenu]);\n\n  if (!currentUser) return null;\n\n  return (\n    <NavContainer className=\"react-navigation-container\">\n      <NavContent>\n        <LogoContainer>\n          <Link to=\"/\" style={{ textDecoration: 'none', display: 'flex', alignItems: 'center', gap: '12px' }}>\n            <LogoIcon>SF</LogoIcon>\n            <LogoText>SwingFox</LogoText>\n          </Link>\n        </LogoContainer>\n\n        <NavLinks>\n          <NavLink\n            to=\"/\"\n            className={isActiveRoute('/') ? 'active' : ''}\n          >\n            <HomeIcon />\n            Свайп\n          </NavLink>\n          \n          <NavLink\n            to=\"/catalog\"\n            className={isActiveRoute('/catalog') ? 'active' : ''}\n          >\n            <SearchIcon />\n            Каталог\n          </NavLink>\n          \n          <NavLink\n            to=\"/chat\"\n            className={location.pathname.startsWith('/chat') ? 'active' : ''}\n          >\n            <ChatIcon />\n            Чат\n            {/* Здесь можно добавить бейдж с количеством непрочитанных сообщений */}\n          </NavLink>\n          \n          <NavLink\n            to=\"/notifications\"\n            className={isActiveRoute('/notifications') ? 'active' : ''}\n            style={{ position: 'relative' }}\n          >\n            <BellIcon />\n            Уведомления\n            <NotificationCounter />\n          </NavLink>\n          \n\n          \n          <NavLink\n            to=\"/clubs\"\n            className={isActiveRoute('/clubs') ? 'active' : ''}\n          >\n            <UsersIcon />\n            Клубы\n          </NavLink>\n          \n          <NavLink\n            to=\"/subscriptions\"\n            className={isActiveRoute('/subscriptions') ? 'active' : ''}\n          >\n            <CrownIcon />\n            VIP\n          </NavLink>\n          \n          <NavLink\n            to=\"/ratings\"\n            className={isActiveRoute('/ratings') ? 'active' : ''}\n          >\n            <TrophyIcon />\n            Рейтинг\n          </NavLink>\n          \n          <NavLink\n            to=\"/ads\"\n            className={isActiveRoute('/ads') ? 'active' : ''}\n          >\n            <AdsIcon />\n            Объявления\n          </NavLink>\n          \n          {currentUser.is_admin && (\n            <NavLink \n              to=\"/admin\" \n              className={location.pathname.startsWith('/admin') ? 'active' : ''}\n            >\n              <AdminIcon />\n              Админ\n            </NavLink>\n          )}\n        </NavLinks>\n\n        <FlexContainer $gap=\"12px\">\n          <UserSection ref={userMenuRef}>\n            <UserMenuButton onClick={() => setShowUserMenu(!showUserMenu)}>\n              <Avatar\n                $src={currentUser.ava ? `/uploads/${currentUser.ava}` : ''}\n                $size={HEADER_SIZES.userAvatar.desktop}\n                $fontSize=\"18px\"\n                $clickable\n                css={`\n                  width: ${HEADER_SIZES.userAvatar.tiny};\n                  height: ${HEADER_SIZES.userAvatar.tiny};\n                  \n                  ${MEDIA.mobile} {\n                    width: ${HEADER_SIZES.userAvatar.mobile};\n                    height: ${HEADER_SIZES.userAvatar.mobile};\n                  }\n                  \n                  ${MEDIA.mobileLarge} {\n                    width: ${HEADER_SIZES.userAvatar.mobileLarge};\n                    height: ${HEADER_SIZES.userAvatar.mobileLarge};\n                  }\n                  \n                  ${MEDIA.tablet} {\n                    width: ${HEADER_SIZES.userAvatar.tablet};\n                    height: ${HEADER_SIZES.userAvatar.tablet};\n                  }\n                  \n                  ${MEDIA.tabletLarge} {\n                    width: ${HEADER_SIZES.userAvatar.tabletLarge};\n                    height: ${HEADER_SIZES.userAvatar.tabletLarge};\n                  }\n                  \n                  ${MEDIA.desktop} {\n                    width: ${HEADER_SIZES.userAvatar.desktop};\n                    height: ${HEADER_SIZES.userAvatar.desktop};\n                  }\n                  \n                  ${MEDIA.desktopLarge} {\n                    width: ${HEADER_SIZES.userAvatar.desktopLarge};\n                    height: ${HEADER_SIZES.userAvatar.desktopLarge};\n                  }\n                  \n                  ${MEDIA.desktopXL} {\n                    width: ${HEADER_SIZES.userAvatar.desktopXL};\n                    height: ${HEADER_SIZES.userAvatar.desktopXL};\n                  }\n                `}\n              >\n                {!currentUser.ava && currentUser.login.charAt(0).toUpperCase()}\n              </Avatar>\n              {apiUtils.isVip(currentUser) && (\n                <VipIndicator $color={apiUtils.getVipBadgeColor(currentUser.vipType)}>\n                  {apiUtils.getVipBadgeIcon(currentUser.vipType)}\n                </VipIndicator>\n              )}\n            </UserMenuButton>\n            \n            <DropdownMenu $show={showUserMenu}>\n              <DropdownItem onClick={handleProfileClick}>\n                <ProfileIcon />\n                Мой профиль\n              </DropdownItem>\n              <DropdownItem onClick={() => navigate('/profile')}>\n                <SettingsIcon />\n                Настройки\n              </DropdownItem>\n              <DropdownItem className=\"danger\" onClick={handleLogout}>\n                <LogoutIcon />\n                Выйти\n              </DropdownItem>\n            </DropdownMenu>\n          </UserSection>\n\n          <MobileMenuButton\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowMobileMenu(!showMobileMenu);\n            }}\n            data-mobile-menu-button=\"true\"\n            $variant=\"secondary\"\n          >\n            <MenuIcon />\n          </MobileMenuButton>\n        </FlexContainer>\n      </NavContent>\n\n      <MobileMenu $show={showMobileMenu}>\n        <MobileNavLink\n          to=\"/\"\n          className={isActiveRoute('/') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <HomeIcon />\n          Свайп\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/catalog\"\n          className={isActiveRoute('/catalog') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <SearchIcon />\n          Каталог\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/chat\"\n          className={location.pathname.startsWith('/chat') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <ChatIcon />\n          Чат\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/notifications\"\n          className={isActiveRoute('/notifications') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n          style={{ position: 'relative' }}\n        >\n          <BellIcon />\n          Уведомления\n          <NotificationCounter />\n        </MobileNavLink>\n        \n\n        \n        <MobileNavLink\n          to=\"/clubs\"\n          className={isActiveRoute('/clubs') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <UsersIcon />\n          Клубы\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/subscriptions\"\n          className={isActiveRoute('/subscriptions') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <CrownIcon />\n          VIP\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/ratings\"\n          className={isActiveRoute('/ratings') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <TrophyIcon />\n          Рейтинг\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/ads\"\n          className={isActiveRoute('/ads') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <AdsIcon />\n          Объявления\n        </MobileNavLink>\n        \n        {currentUser.is_admin && (\n          <MobileNavLink \n            to=\"/admin\" \n            className={location.pathname.startsWith('/admin') ? 'active' : ''}\n            onClick={() => setShowMobileMenu(false)}\n          >\n            <AdminIcon />\n            Админ\n          </MobileNavLink>\n        )}\n        \n        <MobileNavLink \n          to=\"/profile\" \n          onClick={() => setShowMobileMenu(false)}\n        >\n          <ProfileIcon />\n          Профиль\n        </MobileNavLink>\n        \n        <DropdownItem className=\"danger\" onClick={handleLogout}>\n          <LogoutIcon />\n          Выйти\n        </DropdownItem>\n      </MobileMenu>\n    </NavContainer>\n  );\n};\n\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Avatar, Button } from './UI';\n\nconst slideIn = keyframes`\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst slideOut = keyframes`\n  from {\n    transform: translateX(0);\n    opacity: 1;\n  }\n  to {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n`;\n\nconst heartFloat = keyframes`\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  25% { transform: translateY(-10px) rotate(2deg); }\n  75% { transform: translateY(-5px) rotate(-2deg); }\n`;\n\nconst sparkleAnimation = keyframes`\n  0% { transform: scale(0) rotate(0deg); opacity: 0; }\n  50% { transform: scale(1) rotate(180deg); opacity: 1; }\n  100% { transform: scale(0) rotate(360deg); opacity: 0; }\n`;\n\nconst PopupOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 9999;\n  pointer-events: none;\n`;\n\nconst PopupContainer = styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  width: 350px;\n  max-width: calc(100vw - 40px);\n  background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 50%, #ffa8a8 100%);\n  border-radius: 20px;\n  padding: 20px;\n  color: white;\n  box-shadow: 0 15px 35px rgba(255, 107, 107, 0.4);\n  pointer-events: all;\n  overflow: hidden;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    width: 60px;\n    height: 60px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 50%;\n    animation: ${sparkleAnimation} 2s infinite;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    left: -10px;\n    width: 40px;\n    height: 40px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 50%;\n    animation: ${sparkleAnimation} 3s infinite 0.5s;\n  }\n  \n  @media (max-width: 768px) {\n    width: calc(100vw - 20px);\n    right: 10px;\n    top: 10px;\n    padding: 15px;\n  }\n`;\n\nconst PopupHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 15px;\n  position: relative;\n  z-index: 2;\n`;\n\nconst HeartIcon = styled.div`\n  font-size: 32px;\n  animation: ${heartFloat} 3s infinite;\n  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.6));\n`;\n\nconst PopupTitle = styled.h4`\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst PopupContent = styled.div`\n  position: relative;\n  z-index: 2;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 15px;\n`;\n\nconst UserDetails = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 2px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst UserSubtext = styled.div`\n  font-size: 13px;\n  opacity: 0.9;\n  \n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nconst PopupActions = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 15px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ChatButton = styled(Button)`\n  flex: 1;\n  background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);\n  border: none;\n  padding: 10px 16px;\n  font-size: 14px;\n  font-weight: 600;\n  box-shadow: 0 4px 12px rgba(68, 160, 141, 0.3);\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45b7b8 0%, #3d8b7a 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 6px 16px rgba(68, 160, 141, 0.4);\n  }\n`;\n\nconst DismissButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 10px 16px;\n  font-size: 14px;\n  \n  &:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  transition: all 0.2s ease;\n  z-index: 3;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(1.1);\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 3px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 0 0 20px 20px;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.8);\n    border-radius: inherit;\n    animation: progress ${props => props.$duration}ms linear;\n  }\n  \n  @keyframes progress {\n    from { width: 100%; }\n    to { width: 0%; }\n  }\n`;\n\nconst MatchPopup = ({ \n  notification, \n  onClose, \n  onStartChat,\n  onViewProfile,\n  autoCloseDelay = 8000 \n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const matchUser = notification?.data?.match_user || notification?.from_user;\n  const userData = notification?.from_user_data;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleClose();\n    }, autoCloseDelay);\n\n    return () => clearTimeout(timer);\n  }, [autoCloseDelay]);\n\n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(() => {\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  const handleStartChat = () => {\n    if (onStartChat) {\n      onStartChat(matchUser);\n    }\n    handleClose();\n  };\n\n  const handleViewProfile = () => {\n    if (onViewProfile) {\n      onViewProfile(matchUser);\n    }\n    handleClose();\n  };\n\n  if (!notification) return null;\n\n  return createPortal(\n    <PopupOverlay>\n      <AnimatePresence>\n        {isVisible && (\n          <PopupContainer\n            initial={{ x: '100%', opacity: 0, scale: 0.8 }}\n            animate={{ x: 0, opacity: 1, scale: 1 }}\n            exit={{ x: '100%', opacity: 0, scale: 0.8 }}\n            transition={{ \n              type: \"spring\", \n              duration: 0.6,\n              bounce: 0.3 \n            }}\n          >\n            <CloseButton onClick={handleClose}>\n              ✕\n            </CloseButton>\n\n            <PopupHeader>\n              <HeartIcon>💕</HeartIcon>\n              <PopupTitle>Новый мэтч!</PopupTitle>\n            </PopupHeader>\n\n            <PopupContent>\n              <UserInfo>\n                <Avatar\n                  $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n                  $size=\"50px\"\n                  $fontSize=\"20px\"\n                  $online={true}\n                >\n                  {!userData?.avatar && (matchUser ? matchUser.charAt(0).toUpperCase() : '?')}\n                </Avatar>\n                \n                <UserDetails>\n                  <UserName>@{matchUser || 'Пользователь'}</UserName>\n                  <UserSubtext>У вас взаимная симпатия!</UserSubtext>\n                </UserDetails>\n              </UserInfo>\n\n              <PopupActions>\n                <ChatButton onClick={handleStartChat}>\n                  💬 Чат\n                </ChatButton>\n                \n                <DismissButton onClick={handleViewProfile}>\n                  👀 Профиль\n                </DismissButton>\n              </PopupActions>\n            </PopupContent>\n\n            <ProgressBar $duration={autoCloseDelay} />\n          </PopupContainer>\n        )}\n      </AnimatePresence>\n    </PopupOverlay>,\n    document.body\n  );\n};\n\nexport default MatchPopup;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { notificationsAPI, apiUtils } from '../services/api';\nimport MatchPopup from '../components/MatchPopup';\n\nconst NotificationContext = createContext();\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [activePopups, setActivePopups] = useState([]);\n  const [lastChecked, setLastChecked] = useState(Date.now());\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isMounted, setIsMounted] = useState(false);\n  const [isRouterReady, setIsRouterReady] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Проверяем авторизацию\n  useEffect(() => {\n    const checkAuth = () => {\n      const authenticated = apiUtils.isAuthenticated();\n      setIsAuthenticated(authenticated);\n      \n      // Сбрасываем счетчик уведомлений при разлогине\n      if (!authenticated) {\n        setUnreadCount(0);\n        setActivePopups([]);\n      }\n    };\n\n    checkAuth();\n\n    // Слушаем события изменения авторизации\n    const handleAuthChange = () => {\n      checkAuth();\n    };\n\n    window.addEventListener('auth-logout', handleAuthChange);\n    window.addEventListener('storage', handleAuthChange);\n    \n    return () => {\n      window.removeEventListener('auth-logout', handleAuthChange);\n      window.removeEventListener('storage', handleAuthChange);\n    };\n  }, []);\n\n  // Проверяем, что Router контекст доступен\n  useEffect(() => {\n    if (navigate && typeof navigate === 'function') {\n      setIsRouterReady(true);\n      console.log('Router context is ready in NotificationProvider');\n    } else {\n      console.log('Router context not ready yet in NotificationProvider');\n    }\n  }, [navigate]);\n\n  // Проверяем, что navigate доступен\n  useEffect(() => {\n    if (!navigate) {\n      console.warn('Navigation not available in NotificationProvider');\n    } else {\n      console.log('Navigation is available in NotificationProvider');\n    }\n  }, [navigate]);\n\n  // Проверяем новые уведомления каждые 15 секунд\n  const { data: notificationsCount } = useQuery(\n    'unread-notifications-count',\n    () => notificationsAPI.getUnreadCount(),\n    {\n      refetchInterval: 15000,\n      enabled: isRouterReady && isAuthenticated, // Не запускаем запросы пока роутер не готов И пользователь авторизован\n      onSuccess: (data) => {\n        setUnreadCount(data?.total_unread || 0);\n      },\n      onError: (error) => {\n        // Если получаем 401, сбрасываем авторизацию\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in notifications query, resetting auth state');\n          setIsAuthenticated(false);\n          setUnreadCount(0);\n        }\n      }\n    }\n  );\n\n  // Проверяем новые уведомления для попапов\n  const { data: latestNotifications } = useQuery(\n    ['latest-notifications', lastChecked],\n    () => notificationsAPI.getNotifications({\n      unread: true,\n      limit: 10\n    }),\n    {\n      refetchInterval: 10000,\n      enabled: isRouterReady && isAuthenticated, // Не запускаем запросы пока роутер не готов И пользователь авторизован\n      onSuccess: async (data) => {\n        if (data?.notifications) {\n          await checkForNewMatchNotifications(data.notifications);\n        }\n      },\n      onError: (error) => {\n        // Если получаем 401, сбрасываем авторизацию\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in latest notifications query, resetting auth state');\n          setIsAuthenticated(false);\n        }\n      }\n    }\n  );\n\n  const checkForNewMatchNotifications = async (notifications) => {\n    const now = Date.now();\n    const recentTime = now - (2 * 60 * 1000); // Последние 2 минуты\n    \n    const newMatchNotifications = notifications.filter(notification => {\n      const notificationTime = new Date(notification.created_at).getTime();\n      return (\n        notification.type === 'match' &&\n        notificationTime > recentTime &&\n        notificationTime > lastChecked &&\n        !activePopups.find(popup => popup.id === notification.id)\n      );\n    });\n\n    if (newMatchNotifications.length > 0) {\n      // Проверяем каждый мэтч на существование\n      for (const notification of newMatchNotifications) {\n        try {\n          const { chatAPI } = await import('../services/api');\n          const matchStatus = await chatAPI.getMatchStatus(notification.from_user);\n          \n          // Показываем попап только если мэтча еще не было\n          if (!matchStatus.hasMatch) {\n            await showMatchPopup(notification);\n          } else {\n            console.log('Match already exists with', notification.from_user, 'skipping notification popup');\n          }\n        } catch (error) {\n          console.error('Error checking existing match for notification:', error);\n          // В случае ошибки показываем попап для безопасности\n          await showMatchPopup(notification);\n        }\n      }\n      setLastChecked(now);\n    }\n  };\n\n  const showMatchPopup = async (notification) => {\n    // Не показываем попапы пока роутер не готов или пользователь не авторизован\n    if (!isRouterReady || !isAuthenticated) {\n      console.log('Router not ready or user not authenticated, skipping popup:', notification.id);\n      return;\n    }\n\n    // Проверяем, не было ли уже мэтча с этим пользователем\n    if (notification.type === 'match' && notification.from_user) {\n      try {\n        const { chatAPI } = await import('../services/api');\n        const matchStatus = await chatAPI.getMatchStatus(notification.from_user);\n        \n        // Если мэтч уже существует, не показываем попап\n        if (matchStatus.hasMatch) {\n          console.log('Match already exists with', notification.from_user, 'skipping popup:', notification.id);\n          return;\n        }\n      } catch (error) {\n        console.error('Error checking existing match in showMatchPopup:', error);\n        // В случае ошибки продолжаем показ попапа для безопасности\n      }\n    }\n\n    const popup = {\n      id: notification.id,\n      notification,\n      timestamp: Date.now()\n    };\n\n    setActivePopups(prev => [...prev, popup]);\n\n    // Автоматически убираем попап через 8 секунд\n    setTimeout(() => {\n      removePopup(notification.id);\n    }, 8000);\n  };\n\n  const removePopup = (notificationId) => {\n    setActivePopups(prev => prev.filter(popup => popup.id !== notificationId));\n  };\n\n  const markNotificationAsRead = async (notificationId) => {\n    try {\n      await notificationsAPI.markAsRead(notificationId);\n      removePopup(notificationId);\n      // Обновляем счетчик\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  const showCustomMatchPopup = async (matchData) => {\n    // Не показываем попапы пока роутер не готов или пользователь не авторизован\n    if (!isRouterReady || !isAuthenticated) {\n      console.log('Router not ready or user not authenticated, skipping custom popup');\n      return;\n    }\n\n    // Проверяем, не было ли уже мэтча с этим пользователем\n    try {\n      const { chatAPI } = await import('../services/api');\n      const matchStatus = await chatAPI.getMatchStatus(matchData.username);\n      \n      // Если мэтч уже существует, не показываем попап\n      if (matchStatus.hasMatch) {\n        console.log('Match already exists with', matchData.username, 'skipping popup');\n        return;\n      }\n    } catch (error) {\n      console.error('Error checking existing match in popup:', error);\n      // В случае ошибки продолжаем показ попапа для безопасности\n    }\n\n    const notification = {\n      id: `custom-${Date.now()}`,\n      type: 'match',\n      title: 'Взаимная симпатия!',\n      message: `У вас взаимная симпатия с ${matchData.username}!`,\n      from_user: matchData.username,\n      from_user_data: matchData.userData,\n      data: { match_user: matchData.username },\n      created_at: new Date().toISOString(),\n      priority: 'high'\n    };\n\n    await showMatchPopup(notification);\n  };\n\n  const contextValue = {\n    unreadCount,\n    activePopups,\n    showMatchPopup: showCustomMatchPopup,\n    removePopup,\n    markNotificationAsRead\n  };\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n      \n      {/* Рендерим активные попапы только после монтирования, готовности роутера и авторизации */}\n      {isMounted && isRouterReady && isAuthenticated && activePopups.map(popup => (\n        <MatchPopup\n          key={popup.id}\n          notification={popup.notification}\n          onClose={() => removePopup(popup.id)}\n          onStartChat={(username) => {\n            markNotificationAsRead(popup.id);\n            if (navigate && typeof navigate === 'function') {\n              try {\n                navigate(`/chat/${username}`);\n              } catch (error) {\n                console.error('Navigation error:', error);\n                // Fallback: could redirect to a different page or show an error\n                window.location.href = `/chat/${username}`;\n              }\n            } else {\n              // Fallback if navigate is not available\n              window.location.href = `/chat/${username}`;\n            }\n          }}\n          onViewProfile={(username) => {\n            markNotificationAsRead(popup.id);\n            if (navigate && typeof navigate === 'function') {\n              try {\n                navigate(`/profile/${username}`);\n              } catch (error) {\n                console.error('Navigation error:', error);\n                // Fallback: could redirect to a different page or show an error\n                window.location.href = `/profile/${username}`;\n              }\n            } else {\n              // Fallback if navigate is not available\n              window.location.href = `/profile/${username}`;\n            }\n          }}\n          autoCloseDelay={8000}\n        />\n      ))}\n    </NotificationContext.Provider>\n  );\n};\n\nexport default NotificationProvider;","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { authAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  LogoSection,\n  Logo,\n  Title,\n  Subtitle,\n  Form,\n  FormGroup,\n  Label,\n  InputWrapper,\n  Input,\n  Button,\n  ErrorText,\n  FlexContainer,\n  EyeIcon,\n  EyeOffIcon,\n  IconButton\n} from '../components/UI';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n\n  // Проверяем, не авторизован ли уже пользователь\n  React.useEffect(() => {\n    const checkExistingAuth = async () => {\n      if (apiUtils.isAuthenticated()) {\n        try {\n          // Проверяем валидность токена\n          await apiUtils.refreshCurrentUser();\n          navigate('/', { replace: true });\n        } catch (error) {\n          // Токен невалиден, очищаем\n          console.warn('Токен невалиден при входе в Login');\n          apiUtils.logout();\n        }\n      }\n    };\n\n    checkExistingAuth();\n  }, [navigate]);\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    \n    try {\n      const response = await authAPI.login({\n        login: data.login,\n        password: data.password\n      });\n      \n      if (response.success) {\n        toast.success('Успешная авторизация!');\n        navigate('/', { replace: true });\n      }\n    } catch (error) {\n      const errorMessage = apiUtils.handleError(error);\n      toast.error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <PageContainer $gradient>\n      <ContentCard $maxWidth=\"450px\">\n        <LogoSection>\n          <Logo>SF</Logo>\n          <Title>SwingFox</Title>\n          <Subtitle>Добро пожаловать! Войдите в свой аккаунт</Subtitle>\n        </LogoSection>\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label htmlFor=\"login\">Логин или Email</Label>\n            <Input\n              type=\"text\"\n              id=\"login\"\n              placeholder=\"Введите логин или email\"\n              autoComplete=\"username\"\n              {...register('login', {\n                required: 'Логин или email обязателен',\n                minLength: {\n                  value: 3,\n                  message: 'Минимум 3 символа'\n                }\n              })}\n              className={errors.login ? 'error' : ''}\n            />\n            {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Пароль</Label>\n            <InputWrapper>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                placeholder=\"Введите пароль\"\n                autoComplete=\"current-password\"\n                {...register('password', {\n                  required: 'Пароль обязателен',\n                  minLength: {\n                    value: 6,\n                    message: 'Минимум 6 символов'\n                  }\n                })}\n                className={errors.password ? 'error' : ''}\n              />\n              <IconButton\n                type=\"button\"\n                $variant=\"secondary\"\n                onClick={() => setShowPassword(!showPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  background: 'none',\n                  color: '#718096'\n                }}\n              >\n                {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </IconButton>\n            </InputWrapper>\n            {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n          </FormGroup>\n\n          <Button type=\"submit\" disabled={isLoading} style={{ width: '100%' }}>\n            {isLoading ? 'Вход...' : 'Войти'}\n          </Button>\n        </Form>\n\n        <FlexContainer $justify=\"center\" $gap=\"20px\" style={{ marginTop: '25px' }}>\n          <Link \n            to=\"/register\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Регистрация\n          </Link>\n          <span style={{ color: '#cbd5e0' }}>|</span>\n          <Link \n            to=\"/forgot-password\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Забыли пароль?\n          </Link>\n        </FlexContainer>\n      </ContentCard>\n    </PageContainer>\n  );\n};\n\nexport default Login;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Input, Label, ErrorText, LoadingSpinner } from '../UI';\n\nconst SelectorContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  background: white;\n  border: 2px solid #e2e8f0;\n  border-top: none;\n  border-radius: 0 0 10px 10px;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  display: ${props => props.$show ? 'block' : 'none'};\n`;\n\nconst DropdownItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 15px;\n  border-bottom: 1px solid #f7fafc;\n  \n  &:hover {\n    background: #f7fafc;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &.selected {\n    background: #dc3522;\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #718096;\n  font-size: 14px;\n  gap: 8px;\n`;\n\nconst NoResultsText = styled.div`\n  padding: 20px 16px;\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  font-style: italic;\n`;\n\nconst CountrySelector = ({\n  value = '',\n  onChange,\n  onSelect,\n  error,\n  placeholder = 'Выберите страну...',\n  label,\n  required = false,\n  disabled = false,\n  className\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(value);\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  \n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n  // Загрузка списка стран при монтировании\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  // Обновление поискового значения при изменении value извне\n  useEffect(() => {\n    setSearchValue(value);\n  }, [value]);\n\n  // Фильтрация стран при изменении поискового значения\n  useEffect(() => {\n    if (countries.length > 0) {\n      const filtered = countries.filter(country =>\n        country.country.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredCountries(filtered);\n      setSelectedIndex(-1);\n    }\n  }, [searchValue, countries]);\n\n  // Закрытие выпадающего списка при клике вне компонента\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        setIsOpen(false);\n        setSelectedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const fetchCountries = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/geo/countries');\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки стран');\n      }\n      const data = await response.json();\n      setCountries(data.data || []);\n      setFilteredCountries(data.data || []);\n    } catch (error) {\n      console.error('Ошибка загрузки стран:', error);\n      setCountries([]);\n      setFilteredCountries([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const newValue = e.target.value;\n    setSearchValue(newValue);\n    setIsOpen(true);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const handleInputFocus = () => {\n    setIsOpen(true);\n    if (countries.length === 0) {\n      fetchCountries();\n    }\n  };\n\n  const handleCountrySelect = (country) => {\n    setSearchValue(country.country);\n    setIsOpen(false);\n    setSelectedIndex(-1);\n    \n    if (onChange) {\n      onChange(country.country);\n    }\n    \n    if (onSelect) {\n      onSelect(country);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < filteredCountries.length - 1 ? prev + 1 : prev\n        );\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && filteredCountries[selectedIndex]) {\n          handleCountrySelect(filteredCountries[selectedIndex]);\n        }\n        break;\n      \n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        inputRef.current?.blur();\n        break;\n      \n      default:\n        break;\n    }\n  };\n\n  // Прокрутка к выбранному элементу\n  useEffect(() => {\n    if (selectedIndex >= 0 && dropdownRef.current) {\n      const selectedElement = dropdownRef.current.children[selectedIndex];\n      if (selectedElement) {\n        selectedElement.scrollIntoView({\n          block: 'nearest',\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [selectedIndex]);\n\n  return (\n    <SelectorContainer ref={containerRef} className={className}>\n      {label && (\n        <Label>\n          {label} {required && <span className=\"required\">*</span>}\n        </Label>\n      )}\n      \n      <Input\n        ref={inputRef}\n        type=\"text\"\n        value={searchValue}\n        onChange={handleInputChange}\n        onFocus={handleInputFocus}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        disabled={disabled}\n        className={error ? 'error' : ''}\n        autoComplete=\"off\"\n      />\n      \n      <DropdownContainer $show={isOpen && !disabled} ref={dropdownRef}>\n        {isLoading ? (\n          <LoadingContainer>\n            <LoadingSpinner />\n            Загрузка стран...\n          </LoadingContainer>\n        ) : filteredCountries.length > 0 ? (\n          filteredCountries.map((country, index) => (\n            <DropdownItem\n              key={country.country}\n              onClick={() => handleCountrySelect(country)}\n              className={index === selectedIndex ? 'selected' : ''}\n            >\n              {country.country}\n            </DropdownItem>\n          ))\n        ) : (\n          <NoResultsText>\n            {searchValue ? 'Страны не найдены' : 'Загрузка...'}\n          </NoResultsText>\n        )}\n      </DropdownContainer>\n      \n      {error && <ErrorText>{error}</ErrorText>}\n    </SelectorContainer>\n  );\n};\n\nexport default CountrySelector;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Input, Label, ErrorText, LoadingSpinner } from '../UI';\n\nconst SelectorContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  background: white;\n  border: 2px solid #e2e8f0;\n  border-top: none;\n  border-radius: 0 0 10px 10px;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  display: ${props => props.$show ? 'block' : 'none'};\n`;\n\nconst DropdownItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 15px;\n  border-bottom: 1px solid #f7fafc;\n  \n  &:hover {\n    background: #f7fafc;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &.selected {\n    background: #dc3522;\n    color: white;\n  }\n  \n  .city-name {\n    font-weight: 500;\n  }\n  \n  .region-name {\n    font-size: 13px;\n    color: #718096;\n    margin-top: 2px;\n  }\n  \n  &.selected .region-name {\n    color: rgba(255, 255, 255, 0.8);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    \n    .region-name {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #718096;\n  font-size: 14px;\n  gap: 8px;\n`;\n\nconst NoResultsText = styled.div`\n  padding: 20px 16px;\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  font-style: italic;\n`;\n\nconst DisabledText = styled.div`\n  padding: 12px 16px;\n  color: #a0aec0;\n  font-size: 14px;\n  font-style: italic;\n  background: #f7fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n`;\n\nconst CitySelector = ({\n  country = '',\n  value = '',\n  onChange,\n  onSelect,\n  error,\n  placeholder = 'Выберите город...',\n  label,\n  required = false,\n  disabled = false,\n  className\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(value);\n  const [cities, setCities] = useState([]);\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  \n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n  // Обновление поискового значения при изменении value извне\n  useEffect(() => {\n    setSearchValue(value);\n  }, [value]);\n\n  // Загрузка городов при изменении страны\n  useEffect(() => {\n    if (country) {\n      fetchCities(country);\n    } else {\n      setCities([]);\n      setFilteredCities([]);\n      setSearchValue('');\n      if (onChange) {\n        onChange('');\n      }\n    }\n  }, [country]);\n\n  // Фильтрация городов при изменении поискового значения\n  useEffect(() => {\n    if (cities.length > 0) {\n      const filtered = cities.filter(city =>\n        city.city.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredCities(filtered);\n      setSelectedIndex(-1);\n    }\n  }, [searchValue, cities]);\n\n  // Закрытие выпадающего списка при клике вне компонента\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        setIsOpen(false);\n        setSelectedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const fetchCities = async (selectedCountry) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`/api/geo/cities/${encodeURIComponent(selectedCountry)}?limit=500`);\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки городов');\n      }\n      const data = await response.json();\n      setCities(data.data || []);\n      setFilteredCities(data.data || []);\n    } catch (error) {\n      console.error('Ошибка загрузки городов:', error);\n      setCities([]);\n      setFilteredCities([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const newValue = e.target.value;\n    setSearchValue(newValue);\n    setIsOpen(true);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const handleInputFocus = () => {\n    if (country) {\n      setIsOpen(true);\n    }\n  };\n\n  const handleCitySelect = (city) => {\n    setSearchValue(city.city);\n    setIsOpen(false);\n    setSelectedIndex(-1);\n    \n    if (onChange) {\n      onChange(city.city);\n    }\n    \n    if (onSelect) {\n      onSelect(city);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (!isOpen || !country) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < filteredCities.length - 1 ? prev + 1 : prev\n        );\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && filteredCities[selectedIndex]) {\n          handleCitySelect(filteredCities[selectedIndex]);\n        }\n        break;\n      \n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        inputRef.current?.blur();\n        break;\n      \n      default:\n        break;\n    }\n  };\n\n  // Прокрутка к выбранному элементу\n  useEffect(() => {\n    if (selectedIndex >= 0 && dropdownRef.current) {\n      const selectedElement = dropdownRef.current.children[selectedIndex];\n      if (selectedElement) {\n        selectedElement.scrollIntoView({\n          block: 'nearest',\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [selectedIndex]);\n\n  const isDisabledByCountry = !country;\n  const isFullyDisabled = disabled || isDisabledByCountry;\n\n  return (\n    <SelectorContainer ref={containerRef} className={className}>\n      {label && (\n        <Label>\n          {label} {required && <span className=\"required\">*</span>}\n        </Label>\n      )}\n      \n      {isDisabledByCountry ? (\n        <DisabledText>\n          Сначала выберите страну\n        </DisabledText>\n      ) : (\n        <>\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            value={searchValue}\n            onChange={handleInputChange}\n            onFocus={handleInputFocus}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            disabled={isFullyDisabled}\n            className={error ? 'error' : ''}\n            autoComplete=\"off\"\n          />\n          \n          <DropdownContainer $show={isOpen && !isFullyDisabled} ref={dropdownRef}>\n            {isLoading ? (\n              <LoadingContainer>\n                <LoadingSpinner />\n                Загрузка городов...\n              </LoadingContainer>\n            ) : filteredCities.length > 0 ? (\n              filteredCities.map((city, index) => (\n                <DropdownItem\n                  key={`${city.city}-${city.region || 'no-region'}`}\n                  onClick={() => handleCitySelect(city)}\n                  className={index === selectedIndex ? 'selected' : ''}\n                >\n                  <div className=\"city-name\">{city.city}</div>\n                  {city.region && (\n                    <div className=\"region-name\">{city.region}</div>\n                  )}\n                </DropdownItem>\n              ))\n            ) : (\n              <NoResultsText>\n                {searchValue ? 'Города не найдены' : country ? 'Загрузка...' : 'Выберите страну'}\n              </NoResultsText>\n            )}\n          </DropdownContainer>\n        </>\n      )}\n      \n      {error && <ErrorText>{error}</ErrorText>}\n    </SelectorContainer>\n  );\n};\n\nexport default CitySelector;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FormGroup, FormRow } from '../UI';\nimport CountrySelector from './CountrySelector';\nimport CitySelector from './CitySelector';\n\nconst LocationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`;\n\nconst LocationRow = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.$layout === 'stacked' ? '1fr' : '1fr 1fr'};\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n`;\n\nconst ValidationInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 13px;\n  color: ${props => props.$valid ? '#38a169' : '#718096'};\n  margin-top: 5px;\n  \n  &::before {\n    content: '${props => props.$valid ? '✓' : 'ⓘ'}';\n    font-size: 12px;\n    color: ${props => props.$valid ? '#38a169' : '#a0aec0'};\n  }\n`;\n\nconst LocationSelector = ({\n  // Значения\n  countryValue = '',\n  cityValue = '',\n  \n  // Обработчики\n  onCountryChange,\n  onCityChange,\n  onCountrySelect,\n  onCitySelect,\n  onLocationChange, // Callback когда изменяется полное местоположение\n  \n  // Ошибки валидации\n  countryError,\n  cityError,\n  \n  // Настройки отображения\n  layout = 'side-by-side', // 'side-by-side' | 'stacked'\n  countryLabel = 'Страна',\n  cityLabel = 'Город',\n  countryPlaceholder = 'Выберите страну...',\n  cityPlaceholder = 'Выберите город...',\n  \n  // Флаги\n  required = false,\n  disabled = false,\n  showValidation = false,\n  \n  // Стили\n  className\n}) => {\n  const [isValidLocation, setIsValidLocation] = useState(false);\n\n  const handleCountryChange = (country) => {\n    // Сбрасываем город при смене страны\n    if (onCityChange && cityValue) {\n      onCityChange('');\n    }\n    \n    if (onCountryChange) {\n      onCountryChange(country);\n    }\n    \n    // Вызываем общий callback изменения местоположения\n    if (onLocationChange) {\n      onLocationChange({\n        country,\n        city: '', // Сбрасываем город\n        isComplete: false\n      });\n    }\n    \n    setIsValidLocation(false);\n  };\n\n  const handleCityChange = (city) => {\n    if (onCityChange) {\n      onCityChange(city);\n    }\n    \n    // Проверяем полноту местоположения\n    const isComplete = !!(countryValue && city);\n    setIsValidLocation(isComplete);\n    \n    // Вызываем общий callback изменения местоположения\n    if (onLocationChange) {\n      onLocationChange({\n        country: countryValue,\n        city,\n        isComplete\n      });\n    }\n  };\n\n  const handleCountrySelect = (countryData) => {\n    if (onCountrySelect) {\n      onCountrySelect(countryData);\n    }\n  };\n\n  const handleCitySelect = (cityData) => {\n    // Проверяем полноту местоположения\n    const isComplete = !!(countryValue && cityData.city);\n    setIsValidLocation(isComplete);\n    \n    if (onCitySelect) {\n      onCitySelect(cityData);\n    }\n    \n    // Вызываем общий callback с полными данными\n    if (onLocationChange) {\n      onLocationChange({\n        country: countryValue,\n        city: cityData.city,\n        region: cityData.region,\n        isComplete,\n        fullData: {\n          country: countryValue,\n          city: cityData.city,\n          region: cityData.region\n        }\n      });\n    }\n  };\n\n  const renderValidationInfo = () => {\n    if (!showValidation) return null;\n    \n    if (isValidLocation) {\n      return (\n        <ValidationInfo $valid={true}>\n          Местоположение подтверждено\n        </ValidationInfo>\n      );\n    }\n    \n    if (countryValue && !cityValue) {\n      return (\n        <ValidationInfo $valid={false}>\n          Выберите город для завершения\n        </ValidationInfo>\n      );\n    }\n    \n    if (!countryValue) {\n      return (\n        <ValidationInfo $valid={false}>\n          Начните с выбора страны\n        </ValidationInfo>\n      );\n    }\n    \n    return null;\n  };\n\n  return (\n    <LocationContainer className={className}>\n      <LocationRow $layout={layout}>\n        <CountrySelector\n          value={countryValue}\n          onChange={handleCountryChange}\n          onSelect={handleCountrySelect}\n          error={countryError}\n          label={countryLabel}\n          placeholder={countryPlaceholder}\n          required={required}\n          disabled={disabled}\n        />\n        \n        <CitySelector\n          country={countryValue}\n          value={cityValue}\n          onChange={handleCityChange}\n          onSelect={handleCitySelect}\n          error={cityError}\n          label={cityLabel}\n          placeholder={cityPlaceholder}\n          required={required}\n          disabled={disabled}\n        />\n      </LocationRow>\n      \n      {renderValidationInfo()}\n    </LocationContainer>\n  );\n};\n\n// Хук для удобного использования LocationSelector в формах\nexport const useLocationSelector = (initialCountry = '', initialCity = '') => {\n  const [country, setCountry] = useState(initialCountry);\n  const [city, setCity] = useState(initialCity);\n  const [isComplete, setIsComplete] = useState(!!(initialCountry && initialCity));\n\n  const handleLocationChange = ({ country: newCountry, city: newCity, isComplete: complete }) => {\n    setCountry(newCountry);\n    setCity(newCity);\n    setIsComplete(complete);\n  };\n\n  const reset = () => {\n    setCountry('');\n    setCity('');\n    setIsComplete(false);\n  };\n\n  const setLocation = (newCountry, newCity) => {\n    setCountry(newCountry);\n    setCity(newCity);\n    setIsComplete(!!(newCountry && newCity));\n  };\n\n  return {\n    country,\n    city,\n    isComplete,\n    handleLocationChange,\n    reset,\n    setLocation,\n    // Для удобного использования в react-hook-form\n    setValue: (field, value) => {\n      if (field === 'country') {\n        setCountry(value);\n        if (value !== country) {\n          setCity(''); // Сброс города при смене страны\n          setIsComplete(false);\n        }\n      } else if (field === 'city') {\n        setCity(value);\n        setIsComplete(!!(country && value));\n      }\n    }\n  };\n};\n\nexport default LocationSelector;","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { authAPI, apiUtils } from '../services/api';\nimport { LocationSelector } from '../components/Geography';\n\n// Иконки для глаза (показать/скрыть пароль)\nconst EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nconst EyeOffIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n  </svg>\n);\n\nconst RegisterContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n  \n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\n\nconst RegisterCard = styled.div`\n  width: 100%;\n  max-width: 900px;\n  background: white;\n  border-radius: 20px;\n  padding: 40px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s ease-out;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    max-width: 100%;\n    border-radius: 15px;\n  }\n`;\n\nconst LogoSection = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst Logo = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 20px;\n  color: white;\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 15px;\n  box-shadow: 0 10px 30px rgba(220, 53, 34, 0.3);\n  \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n    font-size: 24px;\n  }\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin: 0 0 10px 0;\n  color: #2d3748;\n  font-size: 28px;\n  font-weight: 700;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst Subtitle = styled.p`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  margin-bottom: 30px;\n`;\n\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    right: 25%;\n    height: 2px;\n    background: #e2e8f0;\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n`;\n\nconst Step = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : '#e2e8f0'};\n  color: ${props => props.$active ? 'white' : '#a0aec0'};\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  position: relative;\n  z-index: 1;\n  margin: 0 40px;\n  box-shadow: ${props => props.$active ? '0 4px 15px rgba(220, 53, 34, 0.3)' : 'none'};\n  \n  @media (max-width: 480px) {\n    width: 30px;\n    height: 30px;\n    font-size: 12px;\n    margin: 0 25px;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst FormSection = styled.div`\n  background: #f7fafc;\n  padding: 25px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #dc3522;\n  display: inline-block;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: #4a5568;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  .required {\n    color: #dc3522;\n    font-weight: bold;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n  \n  &[type=\"password\"] {\n    padding-right: 45px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst PasswordToggle = styled.button`\n  position: absolute;\n  right: 12px;\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.2s ease;\n  \n  &:hover {\n    color: #dc3522;\n  }\n  \n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L6 6L11 1' stroke='%234A5568' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 16px center;\n  padding-right: 40px;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background-color: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    min-height: 80px;\n  }\n`;\n\nconst ErrorText = styled.span`\n  color: #f56565;\n  font-size: 13px;\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⚠';\n    font-size: 12px;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 14px 28px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(220, 53, 34, 0.4);\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    background: linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%);\n    cursor: not-allowed;\n    box-shadow: none;\n    transform: none;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 24px;\n    font-size: 15px;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #dc3522;\n  border: 2px solid #dc3522;\n  box-shadow: none;\n  padding: 10px 20px;\n  font-size: 14px;\n  \n  &:hover:not(:disabled) {\n    background: #fff5f5;\n    transform: none;\n    box-shadow: 0 2px 10px rgba(220, 53, 34, 0.2);\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    border-color: #cbd5e0;\n    color: #a0aec0;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px;\n    font-size: 13px;\n  }\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst LoginLink = styled.div`\n  text-align: center;\n  margin-top: 25px;\n  color: #718096;\n  font-size: 14px;\n  \n  a {\n    color: #dc3522;\n    text-decoration: none;\n    font-weight: 600;\n    transition: all 0.2s ease;\n    \n    &:hover {\n      text-decoration: underline;\n      color: #ff6b58;\n    }\n  }\n`;\n\nconst StatusOptions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  gap: 12px;\n  margin-top: 12px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StatusOption = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: white;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    border-color: #dc3522;\n    background: #fff5f5;\n  }\n  \n  &.selected {\n    border-color: #dc3522;\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n    \n    &::after {\n      content: '✓';\n      position: absolute;\n      top: 8px;\n      right: 12px;\n      color: #dc3522;\n      font-weight: bold;\n      font-size: 16px;\n    }\n  }\n  \n  input[type=\"radio\"] {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n  }\n  \n  span {\n    font-size: 14px;\n    color: #4a5568;\n    font-weight: 500;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    \n    span {\n      font-size: 13px;\n    }\n  }\n`;\n\nconst EmailCodeSection = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: flex-start;\n  \n  .email-input-wrapper {\n    flex: 1;\n  }\n  \n  .code-button-wrapper {\n    padding-top: 0;\n  }\n  \n  @media (max-width: 576px) {\n    flex-direction: column;\n    \n    .code-button-wrapper {\n      width: 100%;\n      \n      button {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst CodeInputSection = styled.div`\n  max-width: 250px;\n  \n  @media (max-width: 576px) {\n    max-width: 100%;\n  }\n`;\n\nconst CodeTimer = styled.div`\n  color: #718096;\n  font-size: 13px;\n  margin-top: 6px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⏱';\n    font-size: 14px;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  height: 4px;\n  background: #e2e8f0;\n  border-radius: 2px;\n  margin: 20px 0;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: ${props => props.$progress}%;\n    background: linear-gradient(90deg, #dc3522 0%, #ff6b58 100%);\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [emailCode, setEmailCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [codeTimer, setCodeTimer] = useState(0);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formProgress, setFormProgress] = useState(0);\n  \n  const {\n    register,\n    handleSubmit,\n    watch,\n    getValues,\n    setValue,\n    clearErrors,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      country: 'Россия',\n      city: ''\n    }\n  });\n\n  const password = watch('password');\n  const email = watch('email');\n  const allFields = watch();\n\n  // Вычисление прогресса заполнения формы\n  useEffect(() => {\n    let requiredFields = ['login', 'email', 'password', 'confirmPassword', 'searchStatus', 'searchAge', 'city'];\n    \n    // Добавляем поля в зависимости от статуса\n    if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n      requiredFields.push('manBirthday', 'womanBirthday');\n    } else if (selectedStatus === 'Мужчина') {\n      requiredFields.push('manBirthday');\n    } else if (selectedStatus === 'Женщина') {\n      requiredFields.push('womanBirthday');\n    }\n    \n    // Проверяем, что выбрано хотя бы одно место для встреч\n    if (allFields.location && Array.isArray(allFields.location) && allFields.location.length > 0) {\n      requiredFields.push('location');\n    }\n    \n    const filledFields = requiredFields.filter(field => {\n      if (field === 'location') {\n        return allFields.location && Array.isArray(allFields.location) && allFields.location.length > 0;\n      }\n      return allFields[field];\n    });\n    \n    const progress = (filledFields.length / requiredFields.length) * 100;\n    setFormProgress(progress);\n  }, [allFields, selectedStatus]);\n\n  // Таймер для повторной отправки кода\n  useEffect(() => {\n    let interval;\n    if (codeTimer > 0) {\n      interval = setInterval(() => {\n        setCodeTimer(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [codeTimer]);\n\n  // Мутация для отправки кода\n  const sendCodeMutation = useMutation(authAPI.sendCode, {\n    onSuccess: () => {\n      toast.success('Код отправлен на ваш email');\n      setIsCodeSent(true);\n      setCodeTimer(120); // 2 минуты\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Мутация для регистрации\n  const registerMutation = useMutation(authAPI.register, {\n    onSuccess: (data) => {\n      toast.success('Регистрация успешна! Добро пожаловать в SwingFox!');\n      navigate('/');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const handleSendCode = () => {\n    if (!email) {\n      toast.error('Введите email адрес');\n      return;\n    }\n    sendCodeMutation.mutate(email);\n  };\n\n  const onSubmit = (data) => {\n    if (!emailCode) {\n      toast.error('Введите код подтверждения из email');\n      return;\n    }\n\n    if (!selectedStatus) {\n      toast.error('Выберите ваш статус');\n      return;\n    }\n\n    // Формируем данные в зависимости от статуса\n    let individualData = {};\n    \n    if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n      // Для пар - объединяем данные через подчеркивание\n      individualData = {\n        date: `${data.manBirthday}_${data.womanBirthday}`,\n        height: `${data.manHeight || ''}_${data.womanHeight || ''}`,\n        weight: `${data.manWeight || ''}_${data.womanWeight || ''}`,\n        smoking: `${data.manSmoking || 'no_matter'}_${data.womanSmoking || 'no_matter'}`,\n        alko: `${data.manAlko || 'no_matter'}_${data.womanAlko || 'no_matter'}`\n      };\n    } else {\n      // Для одиночек - только мужские или женские данные\n      if (selectedStatus === 'Мужчина') {\n        individualData = {\n          date: data.manBirthday,\n          height: data.manHeight || '',\n          weight: data.manWeight || '',\n          smoking: data.manSmoking || 'no_matter',\n          alko: data.manAlko || 'no_matter'\n        };\n      } else if (selectedStatus === 'Женщина') {\n        individualData = {\n          date: data.womanBirthday,\n          height: data.womanHeight || '',\n          weight: data.womanWeight || '',\n          smoking: data.womanSmoking || 'no_matter',\n          alko: data.womanAlko || 'no_matter'\n        };\n      }\n    }\n\n    // Обработка поля location (массив чекбоксов)\n    const locationArray = Array.isArray(data.location) ? data.location : [];\n    const locationString = locationArray.join('&&');\n\n    const submitData = {\n      email: data.email,\n      mail_code: emailCode,\n      login: data.login,\n      password: data.password,\n      about: {\n        status: selectedStatus,\n        country: data.country || 'Россия',\n        city: data.city,\n        search_status: data.searchStatus,\n        search_age: data.searchAge,\n        location: locationString,\n        mobile: data.mobile || '',\n        info: data.info || ''\n      },\n      individual: individualData\n    };\n\n    registerMutation.mutate(submitData);\n  };\n\n  const statusTypes = [\n    { value: 'Семейная пара(М+Ж)', label: 'Семейная пара(М+Ж)' },\n    { value: 'Несемейная пара(М+Ж)', label: 'Несемейная пара(М+Ж)' },\n    { value: 'Мужчина', label: 'Мужчина' },\n    { value: 'Женщина', label: 'Женщина' }\n  ];\n\n  const searchStatusTypes = [\n    { value: 'Семейная пара(М+Ж)', label: 'Семейную пару(М+Ж)' },\n    { value: 'Несемейная пара(М+Ж)', label: 'Несемейную пару(М+Ж)' },\n    { value: 'Мужчина', label: 'Мужчину' },\n    { value: 'Женщина', label: 'Женщину' }\n  ];\n\n  const ageRanges = [\n    { value: 'Возраст значения не имеет', label: 'Возраст значения не имеет' },\n    { value: 'С ровестниками', label: 'С ровестниками' },\n    { value: 'С ровестниками или с разницей +/- 5 лет', label: 'С ровестниками или с разницей +/- 5 лет' },\n    { value: 'С ровестниками или с разницей +/- 10 лет', label: 'С ровестниками или с разницей +/- 10 лет' }\n  ];\n\n  const smokingOptions = [\n    { value: 'Не курю и не переношу табачного дыма', label: 'Не курю и не переношу табачного дыма' },\n    { value: 'Не курю, но терпимо отношусь к табачному дыму', label: 'Не курю, но терпимо отношусь к табачному дыму' },\n    { value: 'Курю, но могу обойтись какое-то время без сигарет', label: 'Курю, но могу обойтись какое-то время без сигарет' },\n    { value: 'Не могу отказаться от курения ни при каких обстоятельствах', label: 'Не могу отказаться от курения ни при каких обстоятельствах' }\n  ];\n\n  const alkoOptions = [\n    { value: 'Не употребляю вообще', label: 'Не употребляю вообще' },\n    { value: 'В незначительных дозах, количество выпитого не отражается на моем поведении', label: 'В незначительных дозах, количество выпитого не отражается на моем поведении' },\n    { value: 'Умеренно, до легкого опьянения, контролирую свое поведение', label: 'Умеренно, до легкого опьянения, контролирую свое поведение' },\n    { value: 'Могу напиться, потерять контроль над своим поведением', label: 'Могу напиться, потерять контроль над своим поведением' }\n  ];\n\n  // Определение текущего шага на основе заполненных полей\n  useEffect(() => {\n    if (allFields.searchStatus && allFields.searchAge && selectedStatus) {\n      // Проверяем, что заполнены все необходимые поля для выбранного статуса\n      let canProceed = true;\n      \n      if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n        canProceed = allFields.manBirthday && allFields.womanBirthday;\n      } else if (selectedStatus === 'Мужчина') {\n        canProceed = allFields.manBirthday;\n      } else if (selectedStatus === 'Женщина') {\n        canProceed = allFields.womanBirthday;\n      }\n      \n      if (canProceed) {\n        setCurrentStep(3);\n      } else {\n        setCurrentStep(2);\n      }\n    } else if (allFields.login && allFields.email && allFields.password) {\n      setCurrentStep(2);\n    } else {\n      setCurrentStep(1);\n    }\n  }, [allFields, selectedStatus]);\n\n  return (\n    <RegisterContainer>\n      <RegisterCard>\n        <LogoSection>\n          <Logo>SF</Logo>\n          <Title>Присоединиться к SwingFox</Title>\n          <Subtitle>Создайте аккаунт и найдите единомышленников</Subtitle>\n        </LogoSection>\n        \n        <StepIndicator>\n          <Step $active={currentStep >= 1}>1</Step>\n          <Step $active={currentStep >= 2}>2</Step>\n          <Step $active={currentStep >= 3}>3</Step>\n        </StepIndicator>\n\n        <ProgressBar $progress={formProgress} />\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          {/* Основная информация */}\n          <FormSection>\n            <SectionTitle>Основная информация</SectionTitle>\n            \n            <FormRow>\n              <FormGroup>\n                <Label>Логин <span className=\"required\">*</span></Label>\n                <Input\n                  {...register('login', {\n                    required: 'Логин обязателен',\n                    minLength: {\n                      value: 3,\n                      message: 'Минимум 3 символа'\n                    },\n                    pattern: {\n                      value: /^[a-zA-Z0-9_-]+$/,\n                      message: 'Только латинские буквы, цифры, _ и -'\n                    }\n                  })}\n                  className={errors.login ? 'error' : ''}\n                  placeholder=\"Ваш логин\"\n                  autoComplete=\"username\"\n                />\n                {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Email <span className=\"required\">*</span></Label>\n                <EmailCodeSection>\n                  <div className=\"email-input-wrapper\">\n                    <Input\n                      type=\"email\"\n                      {...register('email', {\n                        required: 'Email обязателен',\n                        pattern: {\n                          value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                          message: 'Неверный формат email'\n                        }\n                      })}\n                      className={errors.email ? 'error' : ''}\n                      placeholder=\"your@email.com\"\n                      autoComplete=\"email\"\n                    />\n                    {errors.email && <ErrorText>{errors.email.message}</ErrorText>}\n                  </div>\n                  <div className=\"code-button-wrapper\">\n                    <SecondaryButton\n                      type=\"button\"\n                      onClick={handleSendCode}\n                      disabled={!email || sendCodeMutation.isLoading || codeTimer > 0}\n                    >\n                      {sendCodeMutation.isLoading ? 'Отправка...' : \n                       codeTimer > 0 ? `${codeTimer}с` : 'Код'}\n                    </SecondaryButton>\n                  </div>\n                </EmailCodeSection>\n                {codeTimer > 0 && (\n                  <CodeTimer>\n                    Повторная отправка через {codeTimer} секунд\n                  </CodeTimer>\n                )}\n              </FormGroup>\n            </FormRow>\n\n            <FormRow>\n              <CodeInputSection>\n                <FormGroup>\n                  <Label>Код из email <span className=\"required\">*</span></Label>\n                  <Input\n                    type=\"text\"\n                    inputMode=\"numeric\"\n                    pattern=\"[0-9]*\"\n                    value={emailCode}\n                    onChange={(e) => {\n                      // Разрешаем только цифры и максимум 6 символов\n                      const value = e.target.value.replace(/\\D/g, '').slice(0, 6);\n                      setEmailCode(value);\n                    }}\n                    placeholder=\"123456\"\n                    disabled={!isCodeSent}\n                    maxLength=\"6\"\n                    style={{\n                      textAlign: 'center',\n                      letterSpacing: '8px',\n                      fontWeight: 'bold',\n                      fontSize: '18px',\n                      fontFamily: 'monospace'\n                    }}\n                  />\n                  {!isCodeSent && (\n                    <ErrorText>Сначала отправьте код на email</ErrorText>\n                  )}\n                  {emailCode.length > 0 && emailCode.length < 6 && isCodeSent && (\n                    <ErrorText>Код должен содержать 6 цифр</ErrorText>\n                  )}\n                </FormGroup>\n              </CodeInputSection>\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Пароль <span className=\"required\">*</span></Label>\n                <InputWrapper>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    {...register('password', {\n                      required: 'Пароль обязателен',\n                      minLength: {\n                        value: 6,\n                        message: 'Минимум 6 символов'\n                      }\n                    })}\n                    className={errors.password ? 'error' : ''}\n                    placeholder=\"Пароль\"\n                    autoComplete=\"new-password\"\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n                  </PasswordToggle>\n                </InputWrapper>\n                {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Подтверждение пароля <span className=\"required\">*</span></Label>\n                <InputWrapper>\n                  <Input\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    {...register('confirmPassword', {\n                      required: 'Подтвердите пароль',\n                      validate: value =>\n                        value === password || 'Пароли не совпадают'\n                    })}\n                    className={errors.confirmPassword ? 'error' : ''}\n                    placeholder=\"Повторите пароль\"\n                    autoComplete=\"new-password\"\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? <EyeOffIcon /> : <EyeIcon />}\n                  </PasswordToggle>\n                </InputWrapper>\n                {errors.confirmPassword && <ErrorText>{errors.confirmPassword.message}</ErrorText>}\n              </FormGroup>\n            </FormRow>\n          </FormSection>\n\n          {/* Статус и поиск */}\n          <FormSection>\n            <SectionTitle>Ваш статус и предпочтения</SectionTitle>\n            \n            <FormGroup>\n              <Label>Ваш статус <span className=\"required\">*</span></Label>\n              <StatusOptions>\n                {statusTypes.map(status => (\n                  <StatusOption\n                    key={status.value}\n                    className={selectedStatus === status.value ? 'selected' : ''}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"status\"\n                      value={status.value}\n                      checked={selectedStatus === status.value}\n                      onChange={(e) => setSelectedStatus(e.target.value)}\n                      required\n                    />\n                    <span>{status.label}</span>\n                  </StatusOption>\n                ))}\n              </StatusOptions>\n            </FormGroup>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Кого ищете <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('searchStatus', {\n                    required: 'Выберите кого ищете'\n                  })}\n                  className={errors.searchStatus ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите...</option>\n                  {searchStatusTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.searchStatus && <ErrorText>{errors.searchStatus.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Возрастной диапазон <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('searchAge', {\n                    required: 'Выберите возрастной диапазон'\n                  })}\n                  className={errors.searchAge ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите...</option>\n                  {ageRanges.map(range => (\n                    <option key={range.value} value={range.value}>\n                      {range.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.searchAge && <ErrorText>{errors.searchAge.message}</ErrorText>}\n              </FormGroup>\n            </FormRow>\n          </FormSection>\n\n          {/* Личная информация */}\n          <FormSection>\n            <SectionTitle>Личная информация</SectionTitle>\n            \n            <FormRow>\n              <FormGroup>\n                <Label>Дата рождения {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''} <span className=\"required\">*</span></Label>\n                <Input\n                  type=\"date\"\n                  {...register('manBirthday', {\n                    required: 'Дата рождения обязательна',\n                    validate: value => {\n                      const today = new Date();\n                      const birthDate = new Date(value);\n                      const age = today.getFullYear() - birthDate.getFullYear();\n                      return age >= 18 || 'Вам должно быть больше 18 лет';\n                    }\n                  })}\n                  className={errors.manBirthday ? 'error' : ''}\n                />\n                {errors.manBirthday && <ErrorText>{errors.manBirthday.message}</ErrorText>}\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Дата рождения (Женщина) <span className=\"required\">*</span></Label>\n                  <Input\n                    type=\"date\"\n                    {...register('womanBirthday', {\n                      required: 'Дата рождения партнера обязательна',\n                      validate: value => {\n                        const today = new Date();\n                        const birthDate = new Date(value);\n                        const age = today.getFullYear() - birthDate.getFullYear();\n                        return age >= 18 || 'Партнеру должно быть больше 18 лет';\n                      }\n                    })}\n                    className={errors.womanBirthday ? 'error' : ''}\n                  />\n                  {errors.womanBirthday && <ErrorText>{errors.womanBirthday.message}</ErrorText>}\n                </FormGroup>\n              )}\n\n              <LocationSelector\n                countryValue={watch('country')}\n                cityValue={watch('city')}\n                onCountryChange={(value) => {\n                  setValue('country', value);\n                  clearErrors('country');\n                  // Сброс города при смене страны\n                  if (watch('city')) {\n                    setValue('city', '');\n                    clearErrors('city');\n                  }\n                }}\n                onCityChange={(value) => {\n                  setValue('city', value);\n                  clearErrors('city');\n                }}\n                countryError={errors.country?.message}\n                cityError={errors.city?.message}\n                required={true}\n                showValidation={true}\n                layout=\"stacked\"\n              />\n              \n              {/* Скрытые поля для react-hook-form валидации */}\n              <input\n                type=\"hidden\"\n                {...register('country', { required: 'Страна обязательна' })}\n              />\n              <input\n                type=\"hidden\"\n                {...register('city', { required: 'Город обязателен' })}\n              />\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Мобильный телефон</Label>\n                <Input\n                  type=\"tel\"\n                  {...register('mobile')}\n                  placeholder=\"+7 (999) 123-45-67\"\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Предпочитаемые места для встреч</Label>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n                  {[\n                    { id: 'У себя дома (пригласим к себе)', label: 'У себя дома (пригласим к себе)' },\n                    { id: 'У вас дома (примем приглашение)', label: 'У вас дома (примем приглашение)' },\n                    { id: 'В свинг-клубе или на закрытой вечеринке', label: 'В свинг-клубе или на закрытой вечеринке' },\n                    { id: 'В сауне', label: 'В сауне' },\n                    { id: 'В гостинице или на съемной квартире', label: 'В гостинице или на съемной квартире' }\n                  ].map(option => (\n                    <label key={option.id} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <input\n                        type=\"checkbox\"\n                        value={option.id}\n                        {...register('location')}\n                      />\n                      <span style={{ fontSize: '14px' }}>{option.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </FormGroup>\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Рост (см) {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Input\n                  type=\"number\"\n                  {...register('manHeight')}\n                  placeholder=\"175\"\n                  min=\"140\"\n                  max=\"220\"\n                />\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Рост (см) (Женщина)</Label>\n                  <Input\n                    type=\"number\"\n                    {...register('womanHeight')}\n                    placeholder=\"165\"\n                    min=\"140\"\n                    max=\"200\"\n                  />\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Вес (кг) {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Input\n                  type=\"number\"\n                  {...register('manWeight')}\n                  placeholder=\"70\"\n                  min=\"40\"\n                  max=\"200\"\n                />\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Вес (кг) (Женщина)</Label>\n                  <Input\n                    type=\"number\"\n                    {...register('womanWeight')}\n                    placeholder=\"55\"\n                    min=\"40\"\n                    max=\"150\"\n                  />\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Отношение к курению {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Select {...register('manSmoking')}>\n                  {smokingOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Отношение к курению (Женщина)</Label>\n                  <Select {...register('womanSmoking')}>\n                    {smokingOptions.map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Отношение к алкоголю {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Select {...register('manAlko')}>\n                  {alkoOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Отношение к алкоголю (Женщина)</Label>\n                  <Select {...register('womanAlko')}>\n                    {alkoOptions.map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormGroup>\n              <Label>О себе</Label>\n              <TextArea\n                {...register('info')}\n                placeholder=\"Расскажите о себе, ваших интересах и предпочтениях...\"\n              />\n            </FormGroup>\n          </FormSection>\n\n          <Button\n            type=\"submit\"\n            disabled={registerMutation.isLoading || !emailCode}\n          >\n            {registerMutation.isLoading ? 'Регистрация...' : 'Зарегистрироваться'}\n          </Button>\n        </Form>\n\n        <LoginLink>\n          Уже есть аккаунт? <Link to=\"/login\">Войти</Link>\n        </LoginLink>\n      </RegisterCard>\n    </RegisterContainer>\n  );\n};\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Link } from 'react-router-dom'; // Добавляем импорт Link\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { swipeAPI, apiUtils } from '../services/api';\nimport { useNotifications } from '../contexts/NotificationContext';\n// Убираем импорт getStatusDisplayName, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  Avatar,\n  Button,\n  IconButton,\n  LoadingSpinner,\n  FlexContainer,\n  Card,\n  HeartIcon,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  CloseIcon,\n  TextArea\n} from '../components/UI';\n\n// Иконки для действий\nconst DislikeIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n  </svg>\n);\n\nconst SuperlikeIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"12,2 15.09,8.26 22,9 17,14.74 18.18,21.02 12,17.77 5.82,21.02 7,14.74 2,9 8.91,8.26 12,2\"/>\n  </svg>\n);\n\nconst BackIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M19 12H6m6-7l-7 7 7 7\"/>\n  </svg>\n);\n\nconst LocationIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"/>\n    <circle cx=\"12\" cy=\"10\" r=\"3\"/>\n  </svg>\n);\n\nconst InfoIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"/>\n    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"/>\n  </svg>\n);\n\nconst HomeContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  background: white;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(10px);\n  border-bottom: 1px solid #e2e8f0;\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    padding: 25px;\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    padding: 18px;\n    box-shadow: 0 3px 16px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    padding: 15px;\n    box-shadow: 0 3px 15px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    padding: 12px;\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    padding: 10px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Маленькие мобильные */\n  @media (max-width: 360px) {\n    padding: 8px;\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    max-width: 1400px;\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    max-width: 100%;\n  }\n  \n  /* Планшеты */\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n    align-items: flex-start;\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    gap: 12px;\n  }\n`;\n\nconst WelcomeText = styled.div`\n  h1 {\n    margin: 0 0 5px 0;\n    font-size: 28px;\n    font-weight: 700;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  p {\n    margin: 0;\n    color: #718096;\n    font-size: 14px;\n  }\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    h1 {\n      font-size: 32px;\n    }\n    \n    p {\n      font-size: 16px;\n    }\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    h1 {\n      font-size: 28px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    h1 {\n      font-size: 26px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    h1 {\n      font-size: 24px;\n    }\n    \n    p {\n      font-size: 13px;\n    }\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    h1 {\n      font-size: 22px;\n    }\n    \n    p {\n      font-size: 13px;\n    }\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    h1 {\n      font-size: 20px;\n    }\n    \n    p {\n      font-size: 12px;\n    }\n  }\n  \n  /* Маленькие мобильные */\n  @media (max-width: 360px) {\n    h1 {\n      font-size: 18px;\n    }\n    \n    p {\n      font-size: 11px;\n    }\n  }\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  \n  .user-details {\n    text-align: right;\n    \n    .username {\n      font-weight: 600;\n      color: #2d3748;\n      margin: 0;\n    }\n    \n    .status {\n      font-size: 12px;\n      color: #718096;\n      margin: 0;\n    }\n  }\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    gap: 15px;\n    \n    .user-details .username {\n      font-size: 16px;\n    }\n    \n    .user-details .status {\n      font-size: 13px;\n    }\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    gap: 12px;\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    gap: 10px;\n    \n    .user-details .username {\n      font-size: 15px;\n    }\n    \n    .user-details .status {\n      font-size: 12px;\n    }\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    gap: 8px;\n    \n    .user-details .username {\n      font-size: 14px;\n    }\n    \n    .user-details .status {\n      font-size: 11px;\n    }\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    gap: 6px;\n    \n    .user-details .username {\n      font-size: 13px;\n    }\n    \n    .user-details .status {\n      font-size: 10px;\n    }\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    .user-details {\n      display: none;\n    }\n  }\n`;\n\nconst SwipeContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 20px;\n  position: relative;\n  max-width: 500px;\n  margin: 0 auto;\n  width: 100%;\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    max-width: 900px;\n    padding: 40px;\n  }\n`;\n\nconst ProfileCard = styled(motion.div)`\n  width: 100%;\n  max-width: 400px;\n  height: 650px;\n  background: white;\n  border-radius: 25px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  position: relative;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n  \n  @media (max-width: 768px) {\n    height: 650px; /* Увеличиваем высоту для мобильной версии */\n    max-width: 100%;\n  }\n  \n  @media (max-width: 480px) {\n    height: 600px; /* Оптимальная высота для маленьких экранов */\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    max-width: 800px;\n    height: 500px;\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nconst ProfileImage = styled.div`\n  width: 100%;\n  height: 65%;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center;\n  background-color: #f7fafc;\n  position: relative;\n  transition: all 0.3s ease;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      transparent 0%,\n      transparent 40%,\n      rgba(0,0,0,0.2) 70%,\n      rgba(0,0,0,0.8) 100%\n    );\n    transition: all 0.3s ease;\n  }\n  \n  ${props => !props.$src && `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%);\n    color: #a0aec0;\n    font-size: 48px;\n    font-weight: bold;\n    \n    &::before {\n      display: none;\n    }\n  `}\n  \n  @media (max-width: 768px) {\n    height: 60%; /* Уменьшаем высоту изображения в мобильной версии */\n  }\n  \n  @media (max-width: 480px) {\n    height: 55%; /* Еще больше уменьшаем для маленьких экранов */\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 50%;\n    height: 100%;\n    \n    &::before {\n      background: linear-gradient(\n        to right,\n        transparent 0%,\n        transparent 60%,\n        rgba(0,0,0,0.2) 80%,\n        rgba(0,0,0,0.8) 100%\n      );\n    }\n  }\n`;\n\nconst ProfileOverlay = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 20px;\n  color: white;\n  z-index: 2;\n  transition: all 0.3s ease;\n  \n  .username {\n    font-size: 24px;\n    font-weight: 700;\n    margin: 0 0 6px 0;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n    transition: all 0.3s ease;\n  }\n  \n  .location {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 14px;\n    opacity: 0.9;\n    margin-bottom: 3px;\n    transition: all 0.3s ease;\n  }\n  \n  .age {\n    font-size: 14px;\n    opacity: 0.9;\n    transition: all 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n    \n    .username {\n      font-size: 20px;\n    }\n    \n    .location, .age {\n      font-size: 12px;\n    }\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    padding: 30px;\n    \n    .username {\n      font-size: 28px;\n    }\n    \n    .location, .age {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst ProfileDetails = styled.div`\n  padding: 20px;\n  height: 35%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow-y: auto; /* Добавляем вертикальный скролл */\n  overflow-x: hidden; /* Предотвращаем горизонтальный скролл */\n  transition: all 0.3s ease;\n  \n  /* Стили для скроллбара */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n  \n  .status-badge {\n    display: inline-flex;\n    align-items: center;\n    gap: 6px;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 16px;\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 10px;\n    align-self: flex-start;\n    box-shadow: 0 4px 12px rgba(220, 53, 34, 0.3);\n    transition: all 0.3s ease;\n  }\n  \n  .compatibility-badge {\n    background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);\n    border-radius: 16px;\n    padding: 12px 16px;\n    color: white;\n    font-size: 12px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);\n    margin: 8px 0;\n    transition: all 0.3s ease;\n    \n    .percentage {\n      font-weight: bold;\n      font-size: 13px;\n    }\n    \n    .progress-bar {\n      flex: 1;\n      height: 6px;\n      background: rgba(255, 255, 255, 0.3);\n      border-radius: 3px;\n      overflow: hidden;\n      \n      .progress-fill {\n        height: 100%;\n        background: linear-gradient(90deg, #ffffff 0%, #e6fffa 100%);\n        border-radius: 3px;\n        transition: width 0.3s ease;\n      }\n    }\n  }\n  \n  .partner-info {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    border-radius: 16px;\n    padding: 8px 12px;\n    color: white;\n    font-size: 12px;\n    margin: 8px 0;\n    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n    transition: all 0.3s ease;\n    \n    .title {\n      font-weight: bold;\n      margin-bottom: 4px;\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    }\n    \n    .details {\n      opacity: 0.9;\n      font-size: 11px;\n    }\n  }\n  \n  .additional-info {\n    display: grid;\n    grid-template-columns: 1fr; /* В мобильной версии всегда одна колонка */\n    gap: 6px;\n    margin: 8px 0;\n    \n    .info-item {\n      display: flex;\n      align-items: flex-start; /* Выравниваем по верху для многострочного текста */\n      gap: 8px;\n      font-size: 11px;\n      color: #4a5568;\n      padding: 8px 10px;\n      background: #f7fafc;\n      border-radius: 8px;\n      border: 1px solid #e2e8f0;\n      transition: all 0.3s ease;\n      \n      .emoji {\n        font-size: 14px;\n        flex-shrink: 0; /* Эмодзи не сжимается */\n        margin-top: 1px; /* Небольшое выравнивание по верху */\n      }\n      \n      .text {\n        font-weight: 500;\n        flex: 1; /* Текст занимает все доступное место */\n        line-height: 1.4;\n        \n        /* Стили для вложенных элементов (для пар) */\n        div {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n          \n          span {\n            font-size: 11px;\n            line-height: 1.3;\n            color: #4a5568;\n          }\n        }\n      }\n      \n      &:hover {\n        background: #edf2f7;\n        border-color: #cbd5e0;\n        transform: translateY(-1px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      }\n    }\n  }\n  \n  .info {\n    color: #4a5568;\n    font-size: 13px;\n    line-height: 1.4;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    margin-top: 12px;\n    transition: all 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n    height: 40%; /* Увеличиваем высоту в мобильной версии */\n    \n    .status-badge {\n      font-size: 11px;\n      padding: 5px 10px;\n    }\n    \n    .compatibility-badge, .partner-info {\n      font-size: 11px;\n      padding: 6px 10px;\n    }\n    \n    .additional-info {\n      gap: 4px;\n      \n      .info-item {\n        font-size: 10px;\n        padding: 6px 8px;\n        \n        .emoji {\n          font-size: 12px;\n        }\n        \n        .text {\n          font-size: 10px;\n          \n          div {\n            span {\n              font-size: 10px;\n            }\n          }\n        }\n      }\n    }\n    \n    .info {\n      font-size: 12px;\n      -webkit-line-clamp: 2;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    padding: 12px;\n    height: 45%; /* Еще больше увеличиваем высоту для маленьких экранов */\n    \n    .additional-info {\n      gap: 3px;\n      \n      .info-item {\n        padding: 5px 6px;\n        \n        .emoji {\n          font-size: 11px;\n        }\n        \n        .text {\n          font-size: 9px;\n          \n          div {\n            span {\n              font-size: 9px;\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 50%;\n    height: 100%;\n    padding: 30px;\n    overflow-y: auto; /* Сохраняем скролл для десктопа */\n    \n    .status-badge {\n      font-size: 14px;\n      padding: 8px 16px;\n    }\n    \n    .compatibility-badge {\n      font-size: 14px;\n      padding: 16px 20px;\n      \n      .percentage {\n        font-size: 15px;\n      }\n    }\n    \n    .partner-info {\n      font-size: 14px;\n      padding: 12px 16px;\n      \n      .details {\n        font-size: 13px;\n      }\n    }\n    \n    .additional-info {\n      grid-template-columns: 1fr 1fr; /* В десктопной версии делаем две колонки */\n      gap: 8px;\n      \n      .info-item {\n        font-size: 13px;\n        padding: 8px 12px;\n        \n        .text {\n          font-size: 11px;\n          line-height: 1.4;\n          \n          /* Стили для вложенных элементов */\n          div {\n            span {\n              font-size: 11px;\n              line-height: 1.3;\n            }\n          }\n        }\n      }\n    }\n    \n    .info {\n      font-size: 15px;\n      -webkit-line-clamp: 4;\n    }\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 25px;\n  padding: 30px 20px 40px;\n  transition: all 0.3s ease;\n  \n  @media (max-width: 768px) {\n    gap: 20px;\n    padding: 25px 15px 35px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    gap: 30px;\n    padding: 40px;\n  }\n`;\n\nconst ActionButton = styled(IconButton)`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%);\n    transform: translateX(-100%);\n    transition: transform 0.6s ease;\n  }\n  \n  &:hover::before {\n    transform: translateX(100%);\n  }\n  \n  &.dislike {\n    background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(245, 101, 101, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.like {\n    background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #38a169 0%, #2f855a 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(72, 187, 120, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.superlike {\n    background: linear-gradient(135deg, #f6ad55 0%, #ed8936 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #ed8936 0%, #dd6b20 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(246, 173, 85, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.back {\n    background: linear-gradient(135deg, #a0aec0 0%, #718096 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #718096 0%, #4a5568 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(160, 174, 192, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n    \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n  }\n  \n  @media (max-width: 480px) {\n    width: 55px;\n    height: 55px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst NoMoreProfiles = styled.div`\n  text-align: center;\n  color: #718096;\n  padding: 60px 20px;\n  animation: fadeInUp 0.6s ease-out;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n    animation: bounce 2s ease-in-out infinite;\n  }\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 24px;\n    color: #2d3748;\n    animation: slideInUp 0.8s ease-out 0.2s both;\n  }\n  \n  p {\n    margin: 0 0 30px 0;\n    font-size: 16px;\n    line-height: 1.5;\n    max-width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n    animation: slideInUp 0.8s ease-out 0.4s both;\n  }\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes slideInUp {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n      transform: translateY(0);\n    }\n    40% {\n      transform: translateY(-10px);\n    }\n    60% {\n      transform: translateY(-5px);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px;\n    \n    .icon {\n      font-size: 48px;\n    }\n    \n    h3 {\n      font-size: 20px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst SwipeHint = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 15px 25px;\n  border-radius: 15px;\n  font-size: 14px;\n  text-align: center;\n  pointer-events: none;\n  opacity: ${props => props.$show ? 1 : 0};\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  /* Красивая анимация появления */\n  ${props => props.$show && `\n    animation: hintPulse 2s ease-in-out infinite;\n  `}\n  \n  @keyframes hintPulse {\n    0%, 100% {\n      transform: translate(-50%, -50%) scale(1);\n    }\n    50% {\n      transform: translate(-50%, -50%) scale(1.05);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 20px;\n    font-size: 13px;\n  }\n`;\n\n// Добавляем стилизованный компонент для кликабельного никнейма\nconst ClickableUsername = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 6px 0;\n  text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: block;\n  \n  &:hover {\n    color: #ffd700;\n    text-shadow: 0 2px 8px rgba(255, 215, 0, 0.5);\n    transform: scale(1.02);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Home = () => {\n  const [currentProfile, setCurrentProfile] = useState(null);\n  const [showHint, setShowHint] = useState(false);\n  const [showSuperlikeModal, setShowSuperlikeModal] = useState(false);\n  const [superlikeMessage, setSuperlikeMessage] = useState('');\n  const [swipeDirection, setSwipeDirection] = useState(null); // 'left' для дизлайка, 'right' для лайка\n  const [profileQueue, setProfileQueue] = useState([]); // Очередь предзагруженных профилей\n  const [isPreloading, setIsPreloading] = useState(false); // Флаг предзагрузки\n  \n  // Добавляем состояние для истории профилей\n  const [profileHistory, setProfileHistory] = useState([]); // История предыдущих профилей (максимум 3)\n  const [historyIndex, setHistoryIndex] = useState(-1); // Индекс в истории (-1 = нет истории)\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n  const { showMatchPopup } = useNotifications();\n\n  // Функция для форматирования возраста партнеров\n  const formatPartnerAge = (dateString) => {\n    if (!dateString) return 'Возраст не указан';\n    \n    try {\n      const birthDate = new Date(dateString);\n      const today = new Date();\n      const age = today.getFullYear() - birthDate.getFullYear();\n      const monthDiff = today.getMonth() - birthDate.getMonth();\n      \n      if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n        return age - 1;\n      }\n      \n      return age;\n    } catch (error) {\n      return 'Возраст не указан';\n    }\n  };\n\n  // Функция для парсинга дат из поля date (формат: \"2000-02-12_2000-01-02\")\n  const parseDateField = (dateField) => {\n    console.log('parseDateField вызвана с:', dateField);\n    \n    if (!dateField) {\n      console.log('dateField пустой');\n      return null;\n    }\n    \n    if (!dateField.includes('_')) {\n      console.log('dateField не содержит \"_\"');\n      return null;\n    }\n    \n    const [manDate, womanDate] = dateField.split('_');\n    console.log('Разделено на:', { manDate, womanDate });\n    \n    return {\n      manDate: manDate.trim(),\n      womanDate: womanDate.trim()\n    };\n  };\n\n  // Функция для получения возраста из поля date\n  const getAgeFromDate = (dateField) => {\n    console.log('getAgeFromDate вызвана с:', dateField);\n    \n    const dates = parseDateField(dateField);\n    console.log('parseDateField результат:', dates);\n    \n    if (!dates) {\n      console.log('parseDateField вернул null');\n      return null;\n    }\n    \n    // Отладочная информация\n    console.log('Парсинг дат:', { dateField, parsed: dates });\n    \n    const manAge = formatPartnerAge(dates.manDate);\n    const womanAge = formatPartnerAge(dates.womanDate);\n    \n    console.log('Возраст рассчитан:', { manAge, womanAge });\n    \n    return {\n      manAge,\n      womanAge\n    };\n  };\n\n  // Функция для добавления профиля в историю\n  const addToHistory = (profile) => {\n    if (!profile) return;\n    \n    setProfileHistory(prev => {\n      const newHistory = [...prev, profile];\n      // Ограничиваем историю 3 профилями\n      if (newHistory.length > 3) {\n        return newHistory.slice(-3);\n      }\n      return newHistory;\n    });\n    setHistoryIndex(prev => Math.min(prev + 1, 2)); // Максимум индекс 2 (3 профиля)\n    \n    // Отладочная информация\n    console.log('Добавлен в историю:', profile.login, 'История:', profileHistory.length + 1);\n  };\n\n  // Функция предзагрузки профилей\n  const preloadProfiles = async (count = 10) => {\n    if (isPreloading) return;\n    \n    setIsPreloading(true);\n    \n    try {\n      // Не исключаем уже просмотренные анкеты, разрешаем дублирование\n      \n      // Загружаем профили одним batch запросом\n      const newProfiles = await swipeAPI.getProfilesBatch(count, []);\n      \n      if (newProfiles && newProfiles.length > 0) {\n        if (profileQueue.length === 0 && !currentProfile) {\n          // Если нет текущего профиля, первый становится текущим\n          setCurrentProfile(newProfiles[0]);\n          setProfileQueue(newProfiles.slice(1));\n        } else {\n          // Иначе добавляем в очередь\n          setProfileQueue(prev => [...prev, ...newProfiles]);\n        }\n      }\n    } catch (error) {\n      // Игнорируем ошибки предзагрузки, но логируем для отладки\n      console.warn('Ошибка предзагрузки профилей:', error);\n    } finally {\n      setIsPreloading(false);\n    }\n  };\n\n  // Функция получения следующего профиля\n  const getNextProfile = () => {\n    if (profileQueue.length > 0) {\n      // Сохраняем текущий профиль в историю\n      if (currentProfile) {\n        addToHistory(currentProfile);\n      }\n      \n      // Берем профиль из очереди\n      const nextProfile = profileQueue[0];\n      \n      // Мгновенно обновляем состояние\n      setProfileQueue(prev => prev.slice(1));\n      setCurrentProfile(nextProfile);\n      \n      // Если в очереди осталось 3 профиля, подгружаем еще 10\n      if (profileQueue.length <= 3) {\n        preloadProfiles(10);\n      }\n      \n      return nextProfile;\n    } else {\n      // Если очередь пуста, загружаем новую партию и возвращаем текущий профиль\n      // чтобы анимация не сломалась\n      preloadProfiles(10);\n      return currentProfile; // Возвращаем текущий профиль вместо null\n    }\n  };\n\n  // Получение профилей - теперь загружаем batch сразу\n  const { data: initialProfiles, isLoading, refetch } = useQuery(\n    'initial-profiles',\n    () => swipeAPI.getProfilesBatch(10, []), // Не исключаем анкеты\n    {\n      onSuccess: (data) => {\n        if (data && data.length > 0) {\n          // Первый профиль становится текущим\n          setCurrentProfile(data[0]);\n          // Остальные идут в очередь\n          setProfileQueue(data.slice(1));\n          // Запускаем предзагрузку следующей партии\n          preloadProfiles(10);\n        } else {\n          setCurrentProfile(null);\n        }\n        setSwipeDirection(null);\n      },\n      onError: (error) => {\n        console.error('Error loading initial profiles:', error);\n        if (error.response?.data?.error === 'no_profiles') {\n          setCurrentProfile(null);\n        } else {\n          toast.error(apiUtils.handleError(error));\n        }\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  // Мутации для лайков\n  const likeMutation = useMutation(\n    ({ targetUser, source }) => swipeAPI.like(targetUser, source),\n    {\n      onSuccess: async (data) => {\n        if (data.result === 'reciprocal_like' || data.match_created) {\n          // Проверяем, не было ли уже мэтча с этим пользователем\n          if (currentProfile) {\n            try {\n              const matchStatus = await swipeAPI.checkExistingMatch(currentProfile.login);\n              \n              // Показываем попап только если мэтча еще не было\n              if (!matchStatus.hasMatch) {\n                showMatchPopup({\n                  username: currentProfile.login,\n                  userData: {\n                    avatar: currentProfile.ava,\n                    login: currentProfile.login\n                  }\n                });\n                toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n              } else {\n                toast.success('Лайк отправлен! 💖');\n              }\n            } catch (error) {\n              console.error('Error checking existing match:', error);\n              // В случае ошибки показываем попап для безопасности\n              showMatchPopup({\n                username: currentProfile.login,\n                userData: {\n                  avatar: currentProfile.ava,\n                  login: currentProfile.login\n                }\n              });\n              toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n            }\n          }\n        } else {\n          toast.success('Лайк отправлен! 💖');\n        }\n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        const nextProfile = getNextProfile();\n        if (!nextProfile) {\n          // Если нет следующего профиля, сбрасываем направление\n          setSwipeDirection(null);\n        }\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  const dislikeMutation = useMutation(\n    ({ targetUser, source }) => swipeAPI.dislike(targetUser, source),\n    {\n      onSuccess: () => {\n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        getNextProfile();\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  const superlikeMutation = useMutation(\n    ({ targetUser, message }) => swipeAPI.superlike({ targetUser, message }),\n    {\n      onSuccess: async (data) => {\n        setShowSuperlikeModal(false);\n        setSuperlikeMessage('');\n        \n        // Суперлайки часто создают мэтчи - показываем попап если есть\n        if (currentProfile && (data.result === 'reciprocal_like' || data.match_created)) {\n          try {\n            const matchStatus = await swipeAPI.checkExistingMatch(currentProfile.login);\n            \n            // Показываем попап только если мэтча еще не было\n            if (!matchStatus.hasMatch) {\n              showMatchPopup({\n                username: currentProfile.login,\n                userData: {\n                  avatar: currentProfile.ava,\n                  login: currentProfile.login\n                }\n              });\n              toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n            } else {\n              toast.success('Суперлайк отправлен! ⭐');\n            }\n          } catch (error) {\n            console.error('Error checking existing match:', error);\n            // В случае ошибки показываем попап для безопасности\n            showMatchPopup({\n              username: currentProfile.login,\n              userData: {\n                avatar: currentProfile.ava,\n                login: currentProfile.login\n              }\n            });\n            toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n          }\n        } else {\n          toast.success('Суперлайк отправлен! ⭐');\n        }\n        \n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        getNextProfile();\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Показать подсказку для новых пользователей\n  useEffect(() => {\n    const hasSeenHint = localStorage.getItem('swipe-hint-seen');\n    if (!hasSeenHint && currentProfile) {\n      setShowHint(true);\n      setTimeout(() => {\n        setShowHint(false);\n        localStorage.setItem('swipe-hint-seen', 'true');\n      }, 3000);\n    }\n  }, [currentProfile]);\n\n  // Автоматическая предзагрузка при инициализации\n  useEffect(() => {\n    if (currentProfile && profileQueue.length === 0) {\n      preloadProfiles(5);\n    }\n  }, [currentProfile]);\n\n  // Обработчики действий\n  const handleLike = () => {\n    if (currentProfile) {\n      setSwipeDirection('right');\n      // Мгновенно отправляем лайк\n      likeMutation.mutate({\n        targetUser: currentProfile.login,\n        source: 'button'\n      });\n    }\n  };\n\n  const handleDislike = () => {\n    if (currentProfile) {\n      setSwipeDirection('left');\n      // Мгновенно отправляем дизлайк\n      dislikeMutation.mutate({\n        targetUser: currentProfile.login,\n        source: 'button'\n      });\n    }\n  };\n\n  const handleSuperlike = () => {\n    if (currentProfile) {\n      setShowSuperlikeModal(true);\n    }\n  };\n\n  const handleSendSuperlike = () => {\n    if (currentProfile && superlikeMessage.trim()) {\n      superlikeMutation.mutate({\n        targetUser: currentProfile.login,\n        message: superlikeMessage.trim()\n      });\n    }\n  };\n\n  const handleCloseSuperlikeModal = () => {\n    setShowSuperlikeModal(false);\n    setSuperlikeMessage('');\n  };\n\n  const handleBack = () => {\n    if (historyIndex >= 0 && profileHistory.length > 0) {\n      // Сохраняем текущий профиль в начало очереди\n      if (currentProfile) {\n        setProfileQueue(prev => [currentProfile, ...prev]);\n      }\n      \n      // Берем предыдущий профиль из истории\n      const previousProfile = profileHistory[historyIndex];\n      setCurrentProfile(previousProfile);\n      \n      // Уменьшаем индекс истории\n      setHistoryIndex(prev => prev - 1);\n      \n      // Удаляем профиль из истории (так как он теперь текущий)\n      setProfileHistory(prev => prev.slice(0, historyIndex));\n      \n      // Отладочная информация\n      console.log('Возврат к профилю:', previousProfile.login, 'Индекс истории:', historyIndex - 1);\n    } else {\n      toast.error('Нет предыдущих профилей');\n      console.log('Попытка вернуться назад, но история пуста. Индекс:', historyIndex, 'История:', profileHistory.length);\n    }\n  };\n\n  // Обработка свайпов\n  const handleDragEnd = (event, info) => {\n    const threshold = 100;\n    \n    if (info.offset.x > threshold) {\n      // Свайп вправо - лайк\n      if (currentProfile) {\n        setSwipeDirection('right');\n        // Мгновенно отправляем лайк\n        likeMutation.mutate({\n          targetUser: currentProfile.login,\n          source: 'gesture'\n        });\n      }\n    } else if (info.offset.x < -threshold) {\n      // Свайп влево - дизлайк\n      if (currentProfile) {\n        setSwipeDirection('left');\n        // Мгновенно отправляем дизлайк\n        dislikeMutation.mutate({\n          targetUser: currentProfile.login,\n          source: 'gesture'\n        });\n      }\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <HomeContainer>\n        <Header>\n          <HeaderContent>\n            <WelcomeText>\n              <h1>SwingFox</h1>\n              <p>Загружаем профили...</p>\n            </WelcomeText>\n          </HeaderContent>\n        </Header>\n        <LoadingSpinner />\n      </HomeContainer>\n    );\n  }\n\n  return (\n    <HomeContainer>\n      <Header>\n        <HeaderContent>\n          <WelcomeText>\n            <h1>Найдите свою пару</h1>\n            <p>Свайпайте и знакомьтесь с интересными людьми</p>\n          </WelcomeText>\n          <UserInfo>\n            <div className=\"user-details\">\n              <p className=\"username\">@{currentUser?.login}</p>\n              <p className=\"status\">Онлайн</p>\n            </div>\n            <Avatar\n              $src={currentUser?.ava ? `/uploads/${currentUser.ava}` : ''}\n              $size=\"50px\"\n              $fontSize=\"20px\"\n            >\n              {!currentUser?.ava && currentUser?.login?.charAt(0).toUpperCase()}\n            </Avatar>\n          </UserInfo>\n        </HeaderContent>\n      </Header>\n\n      <SwipeContainer>\n        <SwipeHint $show={showHint}>\n          Свайпайте влево/вправо или используйте кнопки ниже\n        </SwipeHint>\n        \n        <AnimatePresence mode=\"wait\">\n          {currentProfile ? (\n            <ProfileCard\n              key={currentProfile.login}\n              drag=\"x\"\n              dragConstraints={{ left: 0, right: 0 }}\n              onDragEnd={handleDragEnd}\n              initial={{ scale: 0, opacity: 0, rotateY: 90 }}\n              animate={{ \n                scale: 1, \n                opacity: 1, \n                rotateY: 0,\n                x: swipeDirection === 'left' ? -400 : swipeDirection === 'right' ? 400 : 0,\n                rotate: swipeDirection === 'left' ? -20 : swipeDirection === 'right' ? 20 : 0\n              }}\n              exit={{ \n                scale: 0, \n                opacity: 0, \n                rotateY: swipeDirection === 'left' ? -90 : 90,\n                x: swipeDirection === 'left' ? -400 : 400,\n                rotate: swipeDirection === 'left' ? -20 : 20\n              }}\n              transition={{ \n                duration: swipeDirection ? 0.1 : 0.2, // Ускоряем анимации\n                type: swipeDirection ? \"tween\" : \"spring\",\n                stiffness: swipeDirection ? undefined : 200 // Увеличиваем жесткость\n              }}\n              whileDrag={{ scale: 1.02, rotate: 2 }} // Уменьшаем эффект при перетаскивании\n              onLoad={() => {\n                console.log('=== ПРОФИЛЬ ЗАГРУЖЕН ===');\n                console.log('Основные данные:', {\n                  login: currentProfile.login,\n                  date: currentProfile.date,\n                  age: currentProfile.age,\n                  height: currentProfile.height,\n                  weight: currentProfile.weight,\n                  smoking: currentProfile.smoking,\n                  alko: currentProfile.alko,\n                  isCouple: currentProfile.isCouple,\n                  partnerData: currentProfile.partnerData\n                });\n                \n                // Проверяем наличие разделителей\n                console.log('Проверка разделителей:', {\n                  dateHasUnderscore: currentProfile.date && currentProfile.date.includes('_'),\n                  heightHasUnderscore: currentProfile.height && currentProfile.height.includes('_'),\n                  weightHasUnderscore: currentProfile.weight && currentProfile.weight.includes('_'),\n                  smokingHasUnderscore: currentProfile.smoking && currentProfile.smoking.includes('_'),\n                  alkoHasUnderscore: currentProfile.alko && currentProfile.alko.includes('_')\n                });\n                \n                // Парсим даты если есть\n                if (currentProfile.date && currentProfile.date.includes('_')) {\n                  const ages = getAgeFromDate(currentProfile.date);\n                  console.log('Возраст из date:', ages);\n                }\n                \n                console.log('=== КОНЕЦ ПРОФИЛЯ ===');\n              }}\n            >\n              <ProfileImage $src={currentProfile.ava ? `/uploads/${currentProfile.ava}` : ''}>\n                {!currentProfile.ava && '👤'}\n                <ProfileOverlay>\n                  <ClickableUsername to={`/profile/${currentProfile.login}`}>\n                    @{currentProfile.login}\n                  </ClickableUsername>\n                  <div className=\"location\">\n                    <LocationIcon />\n                    {currentProfile.city}, {currentProfile.distance}км\n                  </div>\n                  <div className=\"age\">\n                    {(() => {\n                      console.log('Возраст для парсинга:', { \n                        date: currentProfile.date, \n                        age: currentProfile.age,\n                        hasUnderscore: currentProfile.date && currentProfile.date.includes('_')\n                      });\n                      \n                      if (currentProfile.date && currentProfile.date.includes('_')) {\n                        const ages = getAgeFromDate(currentProfile.date);\n                        console.log('Возраст разделен:', ages);\n                        if (ages) {\n                          return (\n                            <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                              <span style={{ fontSize: '12px', color: 'white' }}>Мужчина: {ages.manAge} лет</span>\n                              <span style={{ fontSize: '12px', color: 'white' }}>Женщина: {ages.womanAge} лет</span>\n                            </div>\n                          );\n                        }\n                        return 'Возраст не указан';\n                      }\n                      return `${currentProfile.age || '?'} лет`;\n                    })()}\n                  </div>\n                </ProfileOverlay>\n              </ProfileImage>\n              \n              <ProfileDetails>\n                <div>\n                  <div className=\"status-badge\">\n                    <InfoIcon />\n                    {currentProfile.status}\n                  </div>\n                  \n                  {/* Отображение совместимости */}\n                  {currentProfile.compatibility && (\n                    <div className=\"compatibility-badge\">\n                      <span style={{ fontSize: '14px' }}>💚</span>\n                      <span>Совместимость:</span>\n                      <span className=\"percentage\">\n                        {Math.round(currentProfile.compatibility.totalScore * 100)}%\n                      </span>\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill\" \n                          style={{ \n                            width: `${Math.round(currentProfile.compatibility.totalScore * 100)}%` \n                          }}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Информация о паре */}\n                  {(() => {\n                    const isCouple = currentProfile.date && currentProfile.date.includes('_');\n                    console.log('Проверка на пару:', { \n                      date: currentProfile.date, \n                      isCouple,\n                      hasUnderscore: currentProfile.date && currentProfile.date.includes('_')\n                    });\n                    \n                    if (isCouple) {\n                      const ages = getAgeFromDate(currentProfile.date);\n                      console.log('Возраст пары:', ages);\n                      if (ages) {\n                        return (\n                          <div className=\"partner-info\">\n                            <div className=\"title\">👫 Семейная пара (М+Ж)</div>\n                            <div className=\"details\">\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                                <span style={{ fontSize: '11px', color: 'white' }}>Мужчина: {ages.manAge} лет</span>\n                                <span style={{ fontSize: '11px', color: 'white' }}>Женщина: {ages.womanAge} лет</span>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      }\n                      return (\n                        <div className=\"partner-info\">\n                          <div className=\"title\">👫 Семейная пара (М+Ж)</div>\n                          <div className=\"details\">Возраст не указан</div>\n                        </div>\n                      );\n                    }\n                    return null;\n                  })()}\n                  \n                  {/* Дополнительная информация */}\n                  <div className=\"additional-info\">\n                    {currentProfile.height && (\n                      <div className=\"info-item\">\n                        <span className=\"emoji\">📏</span>\n                        <span className=\"text\">\n                          {(() => {\n                            console.log('Рост для парсинга:', { height: currentProfile.height, hasUnderscore: currentProfile.height.includes('_') });\n                            if (currentProfile.height.includes('_')) {\n                              const [manHeight, womanHeight] = currentProfile.height.split('_');\n                              console.log('Рост разделен:', { manHeight, womanHeight });\n                              return (\n                                <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>Мужчина: {manHeight}см</span>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>Женщина: {womanHeight}см</span>\n                                </div>\n                              );\n                            }\n                            return `${currentProfile.height}см`;\n                          })()}\n                        </span>\n                      </div>\n                    )}\n                    {currentProfile.weight && (\n                      <div className=\"info-item\">\n                        <span className=\"emoji\">⚖️</span>\n                        <span className=\"text\">\n                          {(() => {\n                            console.log('Вес для парсинга:', { weight: currentProfile.weight, hasUnderscore: currentProfile.weight.includes('_') });\n                            if (currentProfile.weight.includes('_')) {\n                              const [manWeight, womanWeight] = currentProfile.weight.split('_');\n                              console.log('Вес разделен:', { manWeight, womanWeight });\n                              return (\n                                <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>Мужчина: {manWeight}кг</span>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>Женщина: {womanWeight}кг</span>\n                                </div>\n                              );\n                            }\n                            return `${currentProfile.weight}кг`;\n                          })()}\n                        </span>\n                      </div>\n                    )}\n                    {currentProfile.smoking && (\n                      <div className=\"info-item\">\n                        <span className=\"emoji\">🚬</span>\n                        <span className=\"text\">\n                          {(() => {\n                            console.log('Курение для парсинга:', { smoking: currentProfile.smoking, hasUnderscore: currentProfile.smoking.includes('_') });\n                            if (currentProfile.smoking.includes('_')) {\n                              const [manSmoking, womanSmoking] = currentProfile.smoking.split('_');\n                              console.log('Курение разделено:', { manSmoking, womanSmoking });\n                              return (\n                                <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>\n                                    <strong>М:</strong> {manSmoking.length > 25 ? manSmoking.substring(0, 25) + '...' : manSmoking}\n                                  </span>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>\n                                    <strong>Ж:</strong> {womanSmoking.length > 25 ? womanSmoking.substring(0, 25) + '...' : womanSmoking}\n                                  </span>\n                                </div>\n                              );\n                            }\n                            return currentProfile.smoking.length > 20 \n                              ? currentProfile.smoking.substring(0, 20) + '...' \n                              : currentProfile.smoking;\n                          })()}\n                        </span>\n                      </div>\n                    )}\n                    {currentProfile.alko && (\n                      <div className=\"info-item\">\n                        <span className=\"emoji\">🍷</span>\n                        <span className=\"text\">\n                          {(() => {\n                            console.log('Алкоголь для парсинга:', { alko: currentProfile.alko, hasUnderscore: currentProfile.alko.includes('_') });\n                            if (currentProfile.alko.includes('_')) {\n                              const [manAlko, womanAlko] = currentProfile.alko.split('_');\n                              console.log('Алкоголь разделен:', { manAlko, womanAlko });\n                              return (\n                                <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>\n                                    <strong>М:</strong> {manAlko.length > 25 ? manAlko.substring(0, 25) + '...' : manAlko}\n                                  </span>\n                                  <span style={{ fontSize: '11px', color: '#4a5568' }}>\n                                    <strong>Ж:</strong> {womanAlko.length > 25 ? womanAlko.substring(0, 25) + '...' : womanAlko}\n                                  </span>\n                                </div>\n                              );\n                            }\n                            return currentProfile.alko.length > 20 \n                              ? currentProfile.alko.substring(0, 20) + '...' \n                              : currentProfile.alko;\n                          })()}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Основная информация */}\n                  <div className=\"info\">\n                    {currentProfile.info ? \n                      (currentProfile.info.length > 120 ? currentProfile.info.substring(0, 120) + '...' : currentProfile.info) \n                      : 'Информация не указана'\n                    }\n                  </div>\n                </div>\n              </ProfileDetails>\n            </ProfileCard>\n          ) : (\n            <NoMoreProfiles>\n              <div className=\"icon\">🎯</div>\n              <h3>Профили закончились!</h3>\n              <p>Попробуйте позже или расширьте критерии поиска в настройках</p>\n              <Button onClick={() => refetch()}>\n                Обновить\n              </Button>\n            </NoMoreProfiles>\n          )}\n        </AnimatePresence>\n      </SwipeContainer>\n\n      {currentProfile && (\n        <ActionButtons>\n          <ActionButton \n            className=\"back\" \n            onClick={handleBack} \n            title=\"Вернуться к предыдущему профилю\"\n            disabled={historyIndex < 0} // Отключаем, если нет истории\n          >\n            <BackIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"dislike\" \n            onClick={handleDislike} \n            title=\"Не нравится\"\n            disabled={dislikeMutation.isLoading}\n          >\n            <DislikeIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"superlike\" \n            onClick={handleSuperlike} \n            title=\"Суперлайк с сообщением\"\n            disabled={superlikeMutation.isLoading}\n          >\n            <SuperlikeIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"like\" \n            onClick={handleLike} \n            title=\"Нравится\"\n            disabled={likeMutation.isLoading}\n          >\n            <HeartIcon />\n          </ActionButton>\n        </ActionButtons>\n      )}\n\n      {/* Модальное окно для суперлайка */}\n      {showSuperlikeModal && (\n        <Modal onClick={handleCloseSuperlikeModal}>\n          <ModalContent $maxWidth=\"500px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить суперлайк</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={handleCloseSuperlikeModal}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            \n            <div style={{ padding: '20px' }}>\n              <p style={{\n                marginBottom: '20px',\n                color: '#4a5568',\n                lineHeight: '1.5'\n              }}>\n                Суперлайк поможет выделиться среди других пользователей.\n                Напишите сообщение для <strong>@{currentProfile?.login}</strong>:\n              </p>\n              \n              <TextArea\n                value={superlikeMessage}\n                onChange={(e) => setSuperlikeMessage(e.target.value)}\n                placeholder=\"Привет! Ты мне очень понравился(лась)...\"\n                $minHeight=\"120px\"\n                style={{ marginBottom: '20px' }}\n                maxLength={500}\n              />\n              \n              <div style={{\n                display: 'flex',\n                gap: '15px',\n                justifyContent: 'flex-end'\n              }}>\n                <Button\n                  $variant=\"secondary\"\n                  onClick={handleCloseSuperlikeModal}\n                >\n                  Отмена\n                </Button>\n                <Button\n                  onClick={handleSendSuperlike}\n                  disabled={!superlikeMessage.trim() || superlikeMutation.isLoading}\n                >\n                  {superlikeMutation.isLoading ? 'Отправляем...' : 'Отправить суперлайк'}\n                </Button>\n              </div>\n              \n              <p style={{\n                marginTop: '15px',\n                fontSize: '12px',\n                color: '#718096',\n                textAlign: 'center'\n              }}>\n                У вас осталось суперлайков: ∞\n              </p>\n            </div>\n          </ModalContent>\n        </Modal>\n      )}\n    </HomeContainer>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\nimport { catalogAPI, apiUtils } from '../services/api';\n// Убираем импорт функций маппинга, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  Avatar,\n  Button,\n  LoadingSpinner,\n  FlexContainer,\n  Card\n} from '../components/UI';\n\nconst CatalogContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  background: white;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-bottom: 1px solid #e2e8f0;\n  margin-bottom: 30px;\n`;\n\nconst HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  h1 {\n    margin: 0;\n    font-size: 28px;\n    font-weight: 700;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    text-align: center;\n  }\n  \n  p {\n    margin: 10px 0 0 0;\n    color: #718096;\n    text-align: center;\n    font-size: 16px;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 25px;\n  margin: 0 auto 30px auto;\n  max-width: 800px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n`;\n\nconst FilterSection = styled.div`\n  margin-bottom: 20px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst FilterLabel = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #2d3748;\n`;\n\nconst CheckboxGroup = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nconst CheckboxItem = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #f7fafc;\n  }\n  \n  input[type=\"checkbox\"] {\n    accent-color: #dc3522;\n  }\n  \n  span {\n    font-size: 14px;\n    color: #4a5568;\n  }\n`;\n\nconst InputGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  \n  label {\n    font-size: 14px;\n    font-weight: 500;\n    color: #4a5568;\n  }\n  \n  select, input {\n    padding: 12px;\n    border: 1px solid #e2e8f0;\n    border-radius: 8px;\n    font-size: 14px;\n    transition: border-color 0.2s;\n    \n    &:focus {\n      outline: none;\n      border-color: #dc3522;\n      box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n    }\n  }\n`;\n\nconst FilterActions = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst ProfilesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n`;\n\nconst ProfileCard = styled(Card)`\n  padding: 20px;\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ProfileAvatar = styled(Avatar)`\n  margin: 0 auto 15px auto;\n`;\n\nconst ProfileInfo = styled.div`\n  .status {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 10px;\n    display: inline-block;\n  }\n  \n  .age {\n    color: #718096;\n    font-size: 14px;\n    margin-bottom: 8px;\n  }\n  \n  .location {\n    color: #4a5568;\n    font-size: 14px;\n    margin-bottom: 15px;\n  }\n  \n  .username {\n    font-weight: 600;\n    color: #dc3522;\n    text-decoration: none;\n    font-size: 16px;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst NoResults = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 24px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n    max-width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  margin: 30px 0;\n  \n  .page-info {\n    color: #718096;\n    font-size: 14px;\n  }\n`;\n\nconst Catalog = () => {\n  const [filters, setFilters] = useState({\n    status: [],\n    country: '',\n    city: '',\n    limit: 14,\n    offset: 0\n  });\n\n  const [availableFilters, setAvailableFilters] = useState({\n    statuses: [],\n    countries: [],\n    cities: {}\n  });\n\n  // Получение доступных фильтров\n  const { data: filtersData } = useQuery(\n    'catalog-filters',\n    catalogAPI.getFilters,\n    {\n      onSuccess: (data) => {\n        setAvailableFilters(data);\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Обработчики фильтров\n  const handleStatusChange = (status, checked) => {\n    setFilters(prev => ({\n      ...prev,\n      status: checked \n        ? [...prev.status, status]\n        : prev.status.filter(s => s !== status),\n      offset: 0 // Сбрасываем пагинацию при изменении фильтров\n    }));\n  };\n\n\n\n  // Функция для преобразования фильтров перед отправкой на сервер\n  const getServerFilters = () => {\n    const serverFilters = { ...filters };\n    \n    // Статусы уже на русском языке, преобразование не нужно\n    return serverFilters;\n  };\n\n  // Получение профилей с преобразованными фильтрами\n  const { data: profilesData, isLoading, refetch } = useQuery(\n    ['catalog-profiles', filters],\n    () => catalogAPI.getProfiles(getServerFilters()),\n    {\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const handleCountryChange = (country) => {\n    setFilters(prev => ({\n      ...prev,\n      country,\n      city: '', // Сбрасываем город при смене страны\n      offset: 0\n    }));\n  };\n\n  const handleCityChange = (city) => {\n    setFilters(prev => ({\n      ...prev,\n      city,\n      offset: 0\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      status: [],\n      country: '',\n      city: '',\n      limit: 14,\n      offset: 0\n    });\n  };\n\n  const handlePageChange = (newOffset) => {\n    setFilters(prev => ({\n      ...prev,\n      offset: newOffset\n    }));\n    // Скролл вверх при смене страницы\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Получение городов для выбранной страны\n  const availableCities = filters.country && availableFilters.cities[filters.country] \n    ? availableFilters.cities[filters.country] \n    : [];\n\n  return (\n    <CatalogContainer>\n      <Header>\n        <HeaderContent>\n          <h1>Каталог анкет</h1>\n          <p>Умная система рекомендаций на основе совместимости</p>\n          <p style={{ fontSize: '14px', marginTop: '5px', opacity: 0.8 }}>\n            Показываем всех, но сортируем по вероятности совместимости\n          </p>\n        </HeaderContent>\n      </Header>\n\n      <FiltersContainer>\n        <FilterSection>\n          <FilterLabel>С кем хотите познакомиться?</FilterLabel>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px', fontStyle: 'italic' }}>\n            Фильтры помогают сузить поиск, но система покажет всех подходящих\n          </p>\n          <p style={{ fontSize: '12px', color: '#888', marginBottom: '15px', fontStyle: 'italic' }}>\n            Сортировка по совместимости: статус, возраст, география, образ жизни\n          </p>\n          <CheckboxGroup>\n            {availableFilters.statuses.map(status => (\n              <CheckboxItem key={status}>\n                <input\n                  type=\"checkbox\"\n                  checked={filters.status.includes(status)}\n                  onChange={(e) => handleStatusChange(status, e.target.checked)}\n                />\n                <span>{status}</span>\n              </CheckboxItem>\n            ))}\n          </CheckboxGroup>\n        </FilterSection>\n\n\n\n        <FilterSection>\n          <FilterLabel>Местоположение</FilterLabel>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px', fontStyle: 'italic' }}>\n            Варианты загружаются из базы географических данных\n          </p>\n          <InputGroup>\n            <InputField>\n              <label>Страна</label>\n              <select\n                value={filters.country}\n                onChange={(e) => handleCountryChange(e.target.value)}\n              >\n                <option value=\"\">Все страны</option>\n                {availableFilters.countries.map(country => (\n                  <option key={country} value={country}>\n                    {country}\n                  </option>\n                ))}\n              </select>\n            </InputField>\n\n            <InputField>\n              <label>Город</label>\n              <select\n                value={filters.city}\n                onChange={(e) => handleCityChange(e.target.value)}\n                disabled={!filters.country}\n              >\n                <option value=\"\">Все города</option>\n                {availableCities.map(city => (\n                  <option key={city} value={city}>\n                    {city}\n                  </option>\n                ))}\n              </select>\n            </InputField>\n          </InputGroup>\n        </FilterSection>\n\n        <FilterActions>\n          <Button onClick={() => refetch()}>\n            Обновить результаты\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClearFilters}>\n            Очистить фильтры\n          </Button>\n        </FilterActions>\n      </FiltersContainer>\n\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          {profilesData?.users && profilesData.users.length > 0 ? (\n            <>\n              <ProfilesGrid>\n                {profilesData.users.map(user => (\n                  <ProfileCard key={user.login}>\n                    <ProfileAvatar\n                      $src={user.ava ? `/uploads/${user.ava}` : ''}\n                      $size=\"80px\"\n                      $fontSize=\"32px\"\n                    >\n                      {!user.ava && user.login?.charAt(0).toUpperCase()}\n                    </ProfileAvatar>\n                    \n                    <ProfileInfo>\n                                    <div className=\"status\">{user.status}</div>\n              <div className=\"age\">{user.age}</div>\n              {user.compatibility && (\n                <div className=\"compatibility\" style={{ \n                  background: `linear-gradient(90deg, #4CAF50 ${user.compatibility.percentage}%, #e0e0e0 ${user.compatibility.percentage}%)`,\n                  color: 'white',\n                  padding: '4px 8px',\n                  borderRadius: '12px',\n                  fontSize: '12px',\n                  fontWeight: 'bold',\n                  textAlign: 'center',\n                  marginTop: '5px'\n                }}>\n                  Совместимость: {user.compatibility.percentage}%\n                </div>\n              )}\n                      \n                      {/* Показываем данные партнера для пар */}\n                      {user.isCouple && user.partnerData && (\n                        <div className=\"partner-data\" style={{ \n                          fontSize: '12px', \n                          margin: '5px 0', \n                          padding: '5px', \n                          background: 'rgba(220, 53, 34, 0.1)', \n                          borderRadius: '5px',\n                          border: '1px solid rgba(220, 53, 34, 0.2)'\n                        }}>\n                          <div style={{ fontWeight: 'bold', marginBottom: '3px' }}>👫 Пара:</div>\n                          <div>👨 {user.partnerData.manHeight || '?'}см, {user.partnerData.manWeight || '?'}кг</div>\n                          <div>👩 {user.partnerData.womanHeight || '?'}см, {user.partnerData.womanWeight || '?'}кг</div>\n                        </div>\n                      )}\n                      \n                      <div className=\"location\">\n                        {user.city}, {user.distance}км\n                      </div>\n                      \n                      {/* Дополнительная информация */}\n                      <div className=\"additional-info\" style={{ fontSize: '11px', marginTop: '5px', color: '#666' }}>\n                        {user.height && <span>📏 {user.height}см </span>}\n                        {user.smoking && <span>🚬 {user.smoking.length > 20 ? user.smoking.substring(0, 20) + '...' : user.smoking} </span>}\n                      </div>\n                      \n                      {/* Показываем кого ищет пользователь */}\n                      {user.searchStatus && (\n                        <div className=\"search-info\" style={{ \n                          fontSize: '11px', \n                          marginTop: '5px', \n                          padding: '5px', \n                          background: 'rgba(34, 197, 94, 0.1)', \n                          borderRadius: '5px',\n                          border: '1px solid rgba(34, 197, 94, 0.2)',\n                          color: '#166534'\n                        }}>\n                          <div style={{ fontWeight: 'bold', marginBottom: '3px' }}>🔍 Ищет:</div>\n                          <div>{user.searchStatus}</div>\n                          {user.searchAge && (\n                            <div style={{ fontSize: '10px', marginTop: '3px', opacity: 0.8 }}>\n                              Возраст: {user.searchAge}\n                            </div>\n                          )}\n                          <div style={{ fontSize: '10px', marginTop: '3px', opacity: 0.7, fontStyle: 'italic' }}>\n                            ✅ Взаимно совместимы\n                          </div>\n                        </div>\n                      )}\n                      \n                      <Link\n                        to={`/profile/${user.login}`}\n                        className=\"username\"\n                      >\n                        @{user.login}\n                      </Link>\n                    </ProfileInfo>\n                  </ProfileCard>\n                ))}\n              </ProfilesGrid>\n\n              {profilesData.pagination && (\n                <Pagination>\n                  <Button\n                    variant=\"secondary\"\n                    disabled={profilesData.pagination.offset === 0}\n                    onClick={() => handlePageChange(Math.max(0, profilesData.pagination.offset - profilesData.pagination.limit))}\n                  >\n                    ← Назад\n                  </Button>\n                  \n                  <div className=\"page-info\">\n                    {profilesData.pagination.offset + 1} - {Math.min(profilesData.pagination.offset + profilesData.pagination.limit, profilesData.pagination.total)} из {profilesData.pagination.total}\n                  </div>\n                  \n                  <Button\n                    variant=\"secondary\"\n                    disabled={!profilesData.pagination.hasMore}\n                    onClick={() => handlePageChange(profilesData.pagination.offset + profilesData.pagination.limit)}\n                  >\n                    Вперед →\n                  </Button>\n                </Pagination>\n              )}\n            </>\n          ) : (\n            <NoResults>\n              <div className=\"icon\">🔍</div>\n              <h3>Нет результатов</h3>\n              <p>Попробуйте изменить критерии поиска или очистить фильтры</p>\n            </NoResults>\n          )}\n        </>\n      )}\n    </CatalogContainer>\n  );\n};\n\nexport default Catalog;","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { ratingAPI } from '../services/api';\nimport { StarIcon, ThumbsUpIcon, ThumbsDownIcon } from './UI';\n\nconst RatingContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst RatingHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  \n  .title {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .total-rating {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 24px;\n    font-weight: 700;\n    color: #dc3522;\n  }\n`;\n\nconst RatingStats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n  \n  .stat {\n    text-align: center;\n    padding: 10px;\n    background: #f7fafc;\n    border-radius: 10px;\n    \n    .value {\n      font-size: 20px;\n      font-weight: 700;\n      color: #2d3748;\n      margin-bottom: 5px;\n    }\n    \n    .label {\n      font-size: 12px;\n      color: #718096;\n      text-transform: uppercase;\n      font-weight: 600;\n    }\n  }\n`;\n\nconst VotingButtons = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  \n  .vote-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 25px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    \n    &.positive {\n      background: ${props => props.$userVote === 1 ? '#4caf50' : 'linear-gradient(135deg, #e8f5e8 0%, #f0f9f0 100%)'};\n      color: ${props => props.$userVote === 1 ? 'white' : '#4caf50'};\n      border: 2px solid #4caf50;\n      \n      &:hover:not(:disabled) {\n        background: #4caf50;\n        color: white;\n        transform: translateY(-2px);\n      }\n    }\n    \n    &.negative {\n      background: ${props => props.$userVote === -1 ? '#f44336' : 'linear-gradient(135deg, #fdeaea 0%, #fef2f2 100%)'};\n      color: ${props => props.$userVote === -1 ? 'white' : '#f44336'};\n      border: 2px solid #f44336;\n      \n      &:hover:not(:disabled) {\n        background: #f44336;\n        color: white;\n        transform: translateY(-2px);\n      }\n    }\n    \n    &:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      transform: none;\n    }\n  }\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: #e2e8f0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin: 10px 0;\n  \n  .fill {\n    height: 100%;\n    background: linear-gradient(90deg, #f44336 0%, #ff9800 50%, #4caf50 100%);\n    border-radius: 4px;\n    transition: width 0.3s ease;\n    width: ${props => props.$percentage}%;\n  }\n`;\n\nconst DisabledMessage = styled.div`\n  text-align: center;\n  padding: 15px;\n  background: #f7fafc;\n  border-radius: 10px;\n  color: #718096;\n  font-style: italic;\n`;\n\nconst RatingDisplay = ({ targetUser, rating, userVote, canVote }) => {\n  const [isVoting, setIsVoting] = useState(false);\n  const queryClient = useQueryClient();\n\n  const voteMutation = useMutation(\n    (value) => ratingAPI.rateUser(targetUser, value),\n    {\n      onMutate: () => {\n        setIsVoting(true);\n      },\n      onSuccess: (data) => {\n        toast.success(data.message || 'Оценка отправлена');\n        // Инвалидируем связанные запросы\n        queryClient.invalidateQueries(['profile', targetUser]);\n        queryClient.invalidateQueries(['leaderboard']);\n        queryClient.invalidateQueries(['my-rating-stats']);\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при оценке');\n      },\n      onSettled: () => {\n        setIsVoting(false);\n      }\n    }\n  );\n\n  const deleteVoteMutation = useMutation(\n    () => ratingAPI.deleteRating(targetUser),\n    {\n      onSuccess: () => {\n        toast.success('Оценка удалена');\n        queryClient.invalidateQueries(['profile', targetUser]);\n        queryClient.invalidateQueries(['leaderboard']);\n        queryClient.invalidateQueries(['my-rating-stats']);\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при удалении оценки');\n      }\n    }\n  );\n\n  const handleVote = (value) => {\n    if (userVote === value) {\n      // Если голосуем повторно тем же значением - удаляем оценку\n      deleteVoteMutation.mutate();\n    } else {\n      // Иначе ставим новую оценку\n      voteMutation.mutate(value);\n    }\n  };\n\n  if (!rating) {\n    return null;\n  }\n\n  const {\n    total_rating = 0,\n    total_votes = 0,\n    positive_votes = 0,\n    negative_votes = 0,\n    percentage_positive = 0\n  } = rating;\n\n  return (\n    <RatingContainer>\n      <RatingHeader>\n        <div className=\"title\">\n          <StarIcon />\n          Рейтинг пользователя\n        </div>\n        <div className=\"total-rating\">\n          <StarIcon />\n          {total_rating}\n        </div>\n      </RatingHeader>\n\n      <RatingStats>\n        <div className=\"stat\">\n          <div className=\"value\">{total_votes}</div>\n          <div className=\"label\">Всего оценок</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{positive_votes}</div>\n          <div className=\"label\">Положительных</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{negative_votes}</div>\n          <div className=\"label\">Отрицательных</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{percentage_positive}%</div>\n          <div className=\"label\">Позитивность</div>\n        </div>\n      </RatingStats>\n\n      {total_votes > 0 && (\n        <ProgressBar $percentage={percentage_positive}>\n          <div className=\"fill\" />\n        </ProgressBar>\n      )}\n\n      {canVote ? (\n        <VotingButtons $userVote={userVote}>\n          <motion.button\n            className=\"vote-btn positive\"\n            onClick={() => handleVote(1)}\n            disabled={isVoting}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <ThumbsUpIcon />\n            {userVote === 1 ? 'Убрать лайк' : 'Нравится'}\n          </motion.button>\n          \n          <motion.button\n            className=\"vote-btn negative\"\n            onClick={() => handleVote(-1)}\n            disabled={isVoting}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <ThumbsDownIcon />\n            {userVote === -1 ? 'Убрать дизлайк' : 'Не нравится'}\n          </motion.button>\n        </VotingButtons>\n      ) : (\n        <DisabledMessage>\n          {targetUser === 'self' \n            ? 'Нельзя оценивать собственный профиль' \n            : 'Войдите в систему, чтобы оценить пользователя'\n          }\n        </DisabledMessage>\n      )}\n    </RatingContainer>\n  );\n};\n\nexport default RatingDisplay;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI } from '../services/api';\nimport {\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  TextArea,\n  Avatar,\n  LoadingSpinner,\n  CloseIcon,\n  EditIcon,\n  TrashIcon,\n  SendIcon\n} from './UI';\n\nconst CommentsContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n`;\n\nconst CommentsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  \n  .title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .count {\n    background: #dc3522;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 20px;\n    font-size: 12px;\n    font-weight: 600;\n  }\n`;\n\nconst CommentForm = styled(Form)`\n  margin-bottom: 20px;\n  \n  .form-row {\n    display: flex;\n    gap: 10px;\n    align-items: flex-end;\n  }\n  \n  .comment-input {\n    flex: 1;\n  }\n`;\n\nconst CommentsList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst CommentItem = styled(motion.div)`\n  display: flex;\n  gap: 12px;\n  padding: 15px;\n  border-radius: 12px;\n  background: #f7fafc;\n  margin-bottom: 10px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #edf2f7;\n  }\n  \n  .comment-avatar {\n    flex-shrink: 0;\n  }\n  \n  .comment-content {\n    flex: 1;\n    min-width: 0;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 5px;\n  }\n  \n  .comment-author {\n    font-weight: 600;\n    color: #2d3748;\n    font-size: 14px;\n  }\n  \n  .comment-time {\n    font-size: 12px;\n    color: #718096;\n  }\n  \n  .comment-text {\n    color: #4a5568;\n    font-size: 14px;\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n  \n  .comment-actions {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  \n  .edit-indicator {\n    font-size: 11px;\n    color: #718096;\n    font-style: italic;\n  }\n`;\n\nconst EditForm = styled.div`\n  margin-top: 10px;\n  \n  .edit-row {\n    display: flex;\n    gap: 8px;\n    align-items: flex-end;\n  }\n  \n  .edit-input {\n    flex: 1;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 15px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\nconst LoadMoreButton = styled(Button)`\n  width: 100%;\n  margin-top: 15px;\n`;\n\nconst PhotoComments = ({ filename, currentUser }) => {\n  // Проверяем, что filename передан\n  if (!filename) {\n    return (\n      <CommentsContainer>\n        <div style={{ textAlign: 'center', padding: '20px', color: '#718096' }}>\n          Ошибка: не указано имя файла для комментариев\n        </div>\n      </CommentsContainer>\n    );\n  }\n  const [commentText, setCommentText] = useState('');\n  const [editingComment, setEditingComment] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [page, setPage] = useState(1);\n  const queryClient = useQueryClient();\n\n  // Получение комментариев\n  const { data: commentsData, isLoading, error } = useQuery(\n    ['photo-comments', filename, page],\n    () => usersAPI.getPhotoComments(filename, page, 10),\n    {\n      keepPreviousData: true,\n      enabled: !!filename, // Запрос выполняется только если есть filename\n      onError: (error) => {\n        toast.error('Ошибка при загрузке комментариев');\n      }\n    }\n  );\n\n  // Мутации\n  const createCommentMutation = useMutation(\n    async (data) => {\n      console.log('Mutation function called with data:', data);\n      console.log('Data types:', {\n        filename: typeof data.filename,\n        commentText: typeof data.commentText\n      });\n      \n      if (typeof data.filename !== 'string') {\n        throw new Error(`Filename must be string, got ${typeof data.filename}: ${data.filename}`);\n      }\n      \n      return await usersAPI.createPhotoComment(data.filename, data.commentText);\n    },\n    {\n    onSuccess: () => {\n      toast.success('Комментарий добавлен');\n      setCommentText('');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n      setPage(1); // Сбрасываем на первую страницу\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при добавлении комментария');\n    }\n  });\n\n  const updateCommentMutation = useMutation(\n    (data) => usersAPI.updatePhotoComment(data.commentId, data.commentText),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий обновлен');\n      setEditingComment(null);\n      setEditText('');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при обновлении комментария');\n    }\n  });\n\n  const deleteCommentMutation = useMutation(\n    (data) => usersAPI.deletePhotoComment(data.commentId),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий удален');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при удалении комментария');\n    }\n  });\n\n  // Обработчики\n  const handleSubmitComment = (e) => {\n    e.preventDefault();\n    \n    // Добавляем отладочную информацию\n    console.log('Submitting comment:', {\n      commentText,\n      trimmed: commentText.trim(),\n      length: commentText.length,\n      trimmedLength: commentText.trim().length\n    });\n    \n    if (!commentText || commentText.trim().length === 0) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    \n    const commentData = {\n      filename, \n      commentText: commentText.trim() \n    };\n    \n    console.log('Calling createCommentMutation with:', commentData);\n    console.log('CommentData types:', {\n      filename: typeof commentData.filename,\n      commentText: typeof commentData.commentText\n    });\n    console.log('Filename value:', commentData.filename);\n    \n    // Дополнительная проверка\n    if (typeof commentData.filename !== 'string') {\n      console.error('Filename is not a string in commentData:', commentData.filename);\n      toast.error('Ошибка: неправильный формат имени файла');\n      return;\n    }\n    \n    createCommentMutation.mutate(commentData);\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingComment(comment.id);\n    setEditText(comment.text);\n  };\n\n  const handleUpdateComment = () => {\n    if (!editText.trim()) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    updateCommentMutation.mutate({ commentId: editingComment, commentText: editText.trim() });\n  };\n\n  const handleDeleteComment = (commentId) => {\n    if (window.confirm('Вы уверены, что хотите удалить этот комментарий?')) {\n      deleteCommentMutation.mutate(commentId);\n    }\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const canEditComment = (comment) => {\n    return currentUser && comment.user?.login === currentUser;\n  };\n\n  const canDeleteComment = (comment) => {\n    return currentUser && comment.user?.login === currentUser;\n  };\n\n  if (isLoading && page === 1) {\n    return (\n      <CommentsContainer>\n        <LoadingSpinner />\n      </CommentsContainer>\n    );\n  }\n\n  const comments = commentsData?.comments || [];\n  const totalComments = commentsData?.pagination?.total || commentsData?.total || 0;\n  const hasMore = comments.length < totalComments;\n\n  return (\n    <CommentsContainer>\n      <CommentsHeader>\n        <div className=\"title\">Комментарии</div>\n        <div className=\"count\">{totalComments}</div>\n      </CommentsHeader>\n\n      {/* Форма добавления комментария */}\n      {currentUser && (\n        <CommentForm onSubmit={handleSubmitComment}>\n          <FormGroup className=\"comment-input\">\n            <Label>Добавить комментарий</Label>\n            <TextArea\n              placeholder=\"Напишите ваш комментарий...\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              $minHeight=\"80px\"\n              maxLength={1000}\n            />\n          </FormGroup>\n          <div className=\"form-row\">\n            <div style={{ fontSize: '12px', color: '#718096' }}>\n              {commentText.length}/1000 символов\n            </div>\n            <Button \n              type=\"submit\" \n              disabled={createCommentMutation.isLoading || !commentText.trim()}\n              $size=\"small\"\n            >\n              <SendIcon />\n              {createCommentMutation.isLoading ? 'Отправка...' : 'Отправить'}\n            </Button>\n          </div>\n        </CommentForm>\n      )}\n\n      {/* Список комментариев */}\n      <CommentsList>\n        {comments.length > 0 ? (\n          <AnimatePresence>\n            {comments.map((comment) => (\n              <CommentItem\n                key={comment.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div className=\"comment-avatar\">\n                  <Avatar \n                    src={comment.user?.avatar ? `/uploads/${comment.user.avatar}` : null}\n                    alt={comment.user?.name || comment.user?.login}\n                    size=\"40px\"\n                  />\n                </div>\n                \n                <div className=\"comment-content\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">\n                      {comment.user?.name || comment.user?.login}\n                    </span>\n                    <span className=\"comment-time\">\n                      {usersAPI.utils?.formatTimeAgo?.(comment.created_at) || \n                       new Date(comment.created_at).toLocaleDateString()}\n                    </span>\n                    {comment.is_edited && (\n                      <span className=\"edit-indicator\">(отредактировано)</span>\n                    )}\n                  </div>\n                  \n                  {editingComment === comment.id ? (\n                    <EditForm>\n                      <TextArea\n                        value={editText}\n                        onChange={(e) => setEditText(e.target.value)}\n                        $minHeight=\"60px\"\n                        maxLength={1000}\n                      />\n                      <div className=\"edit-row\">\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {editText.length}/1000 символов\n                        </div>\n                        <Button \n                          onClick={handleUpdateComment}\n                          disabled={updateCommentMutation.isLoading || !editText.trim()}\n                          $size=\"small\"\n                        >\n                          Сохранить\n                        </Button>\n                        <Button \n                          onClick={() => setEditingComment(null)}\n                          $variant=\"secondary\"\n                          $size=\"small\"\n                        >\n                          Отмена\n                        </Button>\n                      </div>\n                    </EditForm>\n                  ) : (\n                    <div className=\"comment-text\">{comment.text}</div>\n                  )}\n                  \n                  <div className=\"comment-actions\">\n                    {canEditComment(comment) && editingComment !== comment.id && (\n                      <IconButton\n                        onClick={() => handleEditComment(comment)}\n                        $size=\"small\"\n                        $variant=\"secondary\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    )}\n                    \n                    {canDeleteComment(comment) && (\n                      <IconButton\n                        onClick={() => handleDeleteComment(comment.id)}\n                        $size=\"small\"\n                        $variant=\"danger\"\n                      >\n                        <TrashIcon />\n                      </IconButton>\n                    )}\n                  </div>\n                </div>\n              </CommentItem>\n            ))}\n          </AnimatePresence>\n        ) : (\n          <EmptyState>\n            <div className=\"icon\">💬</div>\n            <h3>Нет комментариев</h3>\n            <p>Будьте первым, кто оставит комментарий к этой фотографии</p>\n          </EmptyState>\n        )}\n      </CommentsList>\n\n      {/* Кнопка \"Загрузить еще\" */}\n      {hasMore && (\n        <LoadMoreButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          $variant=\"secondary\"\n        >\n          {isLoading ? 'Загрузка...' : 'Загрузить еще'}\n        </LoadMoreButton>\n      )}\n    </CommentsContainer>\n  );\n};\n\nexport default PhotoComments;\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI } from '../services/api';\nimport {\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  TextArea,\n  Avatar,\n  LoadingSpinner,\n  CloseIcon,\n  EditIcon,\n  TrashIcon,\n  SendIcon,\n  LockIcon,\n  EyeIcon\n} from './UI';\n\nconst CommentsContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n`;\n\nconst CommentsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  \n  .title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .count {\n    background: #dc3522;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 20px;\n    font-size: 12px;\n    font-weight: 600;\n  }\n`;\n\nconst CommentForm = styled(Form)`\n  margin-bottom: 20px;\n  \n  .form-row {\n    display: flex;\n    gap: 10px;\n    align-items: flex-end;\n  }\n  \n  .comment-input {\n    flex: 1;\n  }\n  \n  .form-options {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    margin-top: 10px;\n  }\n  \n  .privacy-toggle {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    cursor: pointer;\n    \n    input[type=\"checkbox\"] {\n      margin: 0;\n    }\n    \n    .toggle-label {\n      font-size: 14px;\n      color: #4a5568;\n    }\n  }\n`;\n\nconst CommentsList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst CommentItem = styled(motion.div)`\n  display: flex;\n  gap: 12px;\n  padding: 15px;\n  border-radius: 12px;\n  background: #f7fafc;\n  margin-bottom: 10px;\n  transition: all 0.2s ease;\n  border-left: 4px solid ${props => props.$isPublic ? '#38a169' : '#805ad5'};\n  \n  &:hover {\n    background: #edf2f7;\n  }\n  \n  .comment-avatar {\n    flex-shrink: 0;\n  }\n  \n  .comment-content {\n    flex: 1;\n    min-width: 0;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 5px;\n  }\n  \n  .comment-author {\n    font-weight: 600;\n    color: #2d3748;\n    font-size: 14px;\n  }\n  \n  .comment-time {\n    font-size: 12px;\n    color: #718096;\n  }\n  \n  .comment-text {\n    color: #4a5568;\n    font-size: 14px;\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n  \n  .comment-actions {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  \n  .edit-indicator {\n    font-size: 11px;\n    color: #718096;\n    font-style: italic;\n  }\n  \n  .privacy-badge {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 11px;\n    padding: 2px 6px;\n    border-radius: 10px;\n    background: ${props => props.$isPublic ? '#c6f6d5' : '#e9d8fd'};\n    color: ${props => props.$isPublic ? '#22543d' : '#553c9a'};\n  }\n`;\n\nconst EditForm = styled.div`\n  margin-top: 10px;\n  \n  .edit-row {\n    display: flex;\n    gap: 8px;\n    align-items: flex-end;\n  }\n  \n  .edit-input {\n    flex: 1;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 15px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\nconst LoadMoreButton = styled(Button)`\n  width: 100%;\n  margin-top: 15px;\n`;\n\nconst ProfileComments = ({ username, currentUser, isOwnProfile = false }) => {\n  // Проверяем, что username передан\n  if (!username) {\n    return (\n      <CommentsContainer>\n        <div style={{ textAlign: 'center', padding: '20px', color: '#718096' }}>\n          Ошибка: не указан пользователь для комментариев\n        </div>\n      </CommentsContainer>\n    );\n  }\n  const [commentText, setCommentText] = useState('');\n  const [isPublic, setIsPublic] = useState(true);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [page, setPage] = useState(1);\n  const [includePrivate, setIncludePrivate] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Получение комментариев\n  const { data: commentsData, isLoading, error } = useQuery(\n    ['profile-comments', username, page, includePrivate],\n    () => usersAPI.getProfileComments(username, page, 10, includePrivate),\n    {\n      keepPreviousData: true,\n      enabled: !!username, // Запрос выполняется только если есть username\n      onError: (error) => {\n        toast.error('Ошибка при загрузке комментариев');\n      }\n    }\n  );\n\n  // Мутации\n  const createCommentMutation = useMutation(\n    async (data) => {\n      console.log('Mutation function called with data:', data);\n      console.log('Data types:', {\n        username: typeof data.username,\n        commentText: typeof data.commentText,\n        isPublic: typeof data.isPublic\n      });\n      \n      if (typeof data.username !== 'string') {\n        throw new Error(`Username must be string, got ${typeof data.username}: ${data.username}`);\n      }\n      \n      return await usersAPI.createProfileComment(data.username, data.commentText, data.isPublic);\n    },\n    {\n    onSuccess: () => {\n      toast.success('Комментарий добавлен');\n      setCommentText('');\n      queryClient.invalidateQueries(['profile-comments', username]);\n      setPage(1); // Сбрасываем на первую страницу\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при добавлении комментария');\n    }\n  });\n\n  const updateCommentMutation = useMutation(\n    (data) => usersAPI.updateProfileComment(data.commentId, data.commentText),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий обновлен');\n      setEditingComment(null);\n      setEditText('');\n      queryClient.invalidateQueries(['profile-comments', username]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при обновлении комментария');\n    }\n  });\n\n  const deleteCommentMutation = useMutation(\n    (data) => usersAPI.deleteProfileComment(data.commentId),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий удален');\n      queryClient.invalidateQueries(['profile-comments', username]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при удалении комментария');\n    }\n  });\n\n  // Обработчики\n  const handleSubmitComment = (e) => {\n    e.preventDefault();\n    \n    // Добавляем отладочную информацию\n    console.log('Submitting profile comment:', {\n      commentText,\n      trimmed: commentText.trim(),\n      length: commentText.length,\n      trimmedLength: commentText.trim().length,\n      username,\n      isPublic\n    });\n    \n    if (!commentText || commentText.trim().length === 0) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    \n    const commentData = {\n      username, \n      commentText: commentText.trim(),\n      isPublic \n    };\n    \n    console.log('Calling createProfileCommentMutation with:', commentData);\n    console.log('CommentData types:', {\n      username: typeof commentData.username,\n      commentText: typeof commentData.commentText,\n      isPublic: typeof commentData.isPublic\n    });\n    console.log('Username value:', commentData.username);\n    \n    // Дополнительная проверка\n    if (typeof commentData.username !== 'string') {\n      console.error('Username is not a string in commentData:', commentData.username);\n      toast.error('Ошибка: неправильный формат имени пользователя');\n      return;\n    }\n    \n    createCommentMutation.mutate(commentData);\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingComment(comment.id);\n    setEditText(comment.text);\n  };\n\n  const handleUpdateComment = () => {\n    if (!editText.trim()) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    updateCommentMutation.mutate({ \n      commentId: editingComment, \n      commentText: editText.trim() \n    });\n  };\n\n  const handleDeleteComment = (commentId) => {\n    if (window.confirm('Вы уверены, что хотите удалить этот комментарий?')) {\n      deleteCommentMutation.mutate(commentId);\n    }\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const canEditComment = (comment) => {\n    return currentUser && comment.author?.login === currentUser;\n  };\n\n  const canDeleteComment = (comment) => {\n    return currentUser && (comment.author?.login === currentUser || username === currentUser);\n  };\n\n  if (isLoading && page === 1) {\n    return (\n      <CommentsContainer>\n        <LoadingSpinner />\n      </CommentsContainer>\n    );\n  }\n\n  const comments = commentsData?.comments || [];\n  const totalComments = commentsData?.pagination?.total || commentsData?.total || 0;\n  const hasMore = comments.length < totalComments;\n\n  return (\n    <CommentsContainer>\n      <CommentsHeader>\n        <div className=\"title\">Комментарии к профилю</div>\n        <div className=\"count\">{totalComments}</div>\n      </CommentsHeader>\n\n      {/* Форма добавления комментария */}\n      {currentUser && !isOwnProfile && (\n        <CommentForm onSubmit={handleSubmitComment}>\n          <FormGroup className=\"comment-input\">\n            <Label>Добавить комментарий</Label>\n            <TextArea\n              placeholder=\"Напишите ваш комментарий к профилю...\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              $minHeight=\"80px\"\n              maxLength={1000}\n            />\n          </FormGroup>\n          \n          <div className=\"form-options\">\n            <div className=\"privacy-toggle\">\n              <input\n                type=\"checkbox\"\n                id=\"comment-privacy\"\n                checked={isPublic}\n                onChange={(e) => setIsPublic(e.target.checked)}\n              />\n              <label htmlFor=\"comment-privacy\" className=\"toggle-label\">\n                {isPublic ? 'Публичный комментарий' : 'Приватный комментарий'}\n              </label>\n            </div>\n            \n            <div style={{ fontSize: '12px', color: '#718096' }}>\n              {commentText.length}/1000 символов\n            </div>\n          </div>\n          \n          <div className=\"form-row\">\n            <Button \n              type=\"submit\" \n              disabled={createCommentMutation.isLoading || !commentText.trim()}\n              $size=\"small\"\n            >\n              <SendIcon />\n              {createCommentMutation.isLoading ? 'Отправка...' : 'Отправить'}\n            </Button>\n          </div>\n        </CommentForm>\n      )}\n\n      {/* Переключатель приватных комментариев (только для владельца профиля) */}\n      {isOwnProfile && (\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>\n            <input\n              type=\"checkbox\"\n              checked={includePrivate}\n              onChange={(e) => setIncludePrivate(e.target.checked)}\n            />\n            <span style={{ fontSize: '14px', color: '#4a5568' }}>\n              Показать приватные комментарии\n            </span>\n          </label>\n        </div>\n      )}\n\n      {/* Список комментариев */}\n      <CommentsList>\n        {comments.length > 0 ? (\n          <AnimatePresence>\n            {comments.map((comment) => (\n              <CommentItem\n                key={comment.id}\n                $isPublic={comment.is_public}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div className=\"comment-avatar\">\n                  <Avatar \n                    src={comment.author?.avatar ? `/uploads/${comment.author.avatar}` : null}\n                    alt={comment.author?.name || comment.author?.login}\n                    size=\"40px\"\n                  />\n                </div>\n                \n                <div className=\"comment-content\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">\n                      {comment.author?.name || comment.author?.login}\n                    </span>\n                    <span className=\"comment-time\">\n                      {usersAPI.utils?.formatTimeAgo?.(comment.created_at) || \n                       new Date(comment.created_at).toLocaleDateString()}\n                    </span>\n                    {comment.is_edited && (\n                      <span className=\"edit-indicator\">(отредактировано)</span>\n                    )}\n                    <div className=\"privacy-badge\">\n                      {comment.is_public ? (\n                        <>\n                          <EyeIcon />\n                          Публичный\n                        </>\n                      ) : (\n                        <>\n                          <LockIcon />\n                          Приватный\n                        </>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {editingComment === comment.id ? (\n                    <EditForm>\n                      <TextArea\n                        value={editText}\n                        onChange={(e) => setEditText(e.target.value)}\n                        $minHeight=\"60px\"\n                        maxLength={1000}\n                      />\n                      <div className=\"edit-row\">\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {editText.length}/1000 символов\n                        </div>\n                        <Button \n                          onClick={handleUpdateComment}\n                          disabled={updateCommentMutation.isLoading || !editText.trim()}\n                          $size=\"small\"\n                        >\n                          Сохранить\n                        </Button>\n                        <Button \n                          onClick={() => setEditingComment(null)}\n                          $variant=\"secondary\"\n                          $size=\"small\"\n                        >\n                          Отмена\n                        </Button>\n                      </div>\n                    </EditForm>\n                  ) : (\n                    <div className=\"comment-text\">{comment.text}</div>\n                  )}\n                  \n                  <div className=\"comment-actions\">\n                    {canEditComment(comment) && editingComment !== comment.id && (\n                      <IconButton\n                        onClick={() => handleEditComment(comment)}\n                        $size=\"small\"\n                        $variant=\"secondary\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    )}\n                    \n                    {canDeleteComment(comment) && (\n                      <IconButton\n                        onClick={() => handleDeleteComment(comment.id)}\n                        $size=\"small\"\n                        $variant=\"danger\"\n                      >\n                        <TrashIcon />\n                      </IconButton>\n                    )}\n                  </div>\n                </div>\n              </CommentItem>\n            ))}\n          </AnimatePresence>\n        ) : (\n          <EmptyState>\n            <div className=\"icon\">💬</div>\n            <h3>Нет комментариев</h3>\n            <p>Будьте первым, кто оставит комментарий к этому профилю</p>\n          </EmptyState>\n        )}\n      </CommentsList>\n\n      {/* Кнопка \"Загрузить еще\" */}\n      {hasMore && (\n        <LoadMoreButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          $variant=\"secondary\"\n        >\n          {isLoading ? 'Загрузка...' : 'Загрузить еще'}\n        </LoadMoreButton>\n      )}\n    </CommentsContainer>\n  );\n};\n\nexport default ProfileComments;\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { reactionsAPI } from '../services/api';\n\nconst ReactionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst ReactionsBar = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst ReactionButton = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  border: 2px solid ${props => props.$isActive ? props.$activeColor : '#e2e8f0'};\n  border-radius: 20px;\n  background: ${props => props.$isActive ? props.$activeColor : 'white'};\n  color: ${props => props.$isActive ? 'white' : props.$textColor};\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  .emoji {\n    font-size: 16px;\n  }\n  \n  .count {\n    font-size: 12px;\n    opacity: 0.9;\n  }\n`;\n\nconst ReactionsStats = styled.div`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  align-items: center;\n  \n  .stat-item {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 12px;\n    color: #718096;\n    padding: 4px 8px;\n    background: #f7fafc;\n    border-radius: 12px;\n    \n    .emoji {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst ReactionsModal = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ReactionsModalContent = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  max-width: 400px;\n  width: 90%;\n  text-align: center;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n`;\n\nconst ReactionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n  margin: 20px 0;\n`;\n\nconst ReactionOption = styled(motion.button)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 20px 15px;\n  border: 2px solid #e2e8f0;\n  border-radius: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: ${props => props.$color};\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  .emoji {\n    font-size: 32px;\n  }\n  \n  .label {\n    font-size: 12px;\n    font-weight: 600;\n    color: #4a5568;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 20px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #718096;\n  \n  &:hover {\n    color: #2d3748;\n  }\n`;\n\n// Конфигурация реакций\nconst REACTION_CONFIG = {\n  like: {\n    emoji: '👍',\n    label: 'Нравится',\n    color: '#4caf50',\n    textColor: '#4caf50'\n  },\n  love: {\n    emoji: '❤️',\n    label: 'Любовь',\n    color: '#e91e63',\n    textColor: '#e91e63'\n  },\n  laugh: {\n    emoji: '😂',\n    label: 'Смех',\n    color: '#ff9800',\n    textColor: '#ff9800'\n  },\n  wow: {\n    emoji: '😮',\n    label: 'Удивление',\n    color: '#9c27b0',\n    textColor: '#9c27b0'\n  },\n  sad: {\n    emoji: '😢',\n    label: 'Грусть',\n    color: '#2196f3',\n    textColor: '#2196f3'\n  },\n  angry: {\n    emoji: '😠',\n    label: 'Гнев',\n    color: '#f44336',\n    textColor: '#f44336'\n  }\n};\n\nconst Reactions = ({ objectType, objectId, currentUser, showStats = true }) => {\n  // Проверяем, что все необходимые параметры переданы\n  if (!objectType || !objectId) {\n    return (\n      <ReactionsContainer>\n        <div style={{ textAlign: 'center', padding: '10px', color: '#718096', fontSize: '14px' }}>\n          Ошибка: не указаны параметры для реакций\n        </div>\n      </ReactionsContainer>\n    );\n  }\n  const [showModal, setShowModal] = useState(false);\n  const [selectedReaction, setSelectedReaction] = useState(null);\n  const queryClient = useQueryClient();\n\n  // Получение реакций\n  const { data: reactionsData, isLoading } = useQuery(\n    ['reactions', objectType, objectId],\n    () => reactionsAPI.getObjectReactions(objectType, objectId),\n    {\n      enabled: !!(objectType && objectId), // Запрос выполняется только если есть objectType и objectId\n      onError: (error) => {\n        console.error('Error fetching reactions:', error);\n      }\n    }\n  );\n\n  // Мутации\n  const setReactionMutation = useMutation(\n    (data) => reactionsAPI.setReaction(objectType, objectId, data.reactionType, data.value),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['reactions', objectType, objectId]);\n        toast.success('Реакция добавлена');\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при установке реакции');\n      }\n    }\n  );\n\n  const removeReactionMutation = useMutation(\n    () => reactionsAPI.removeReaction(objectType, objectId),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['reactions', objectType, objectId]);\n        toast.success('Реакция удалена');\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при удалении реакции');\n      }\n    }\n  );\n\n  // Обработчики\n  const handleReactionClick = (reactionType) => {\n    if (!currentUser) {\n      toast.error('Войдите в систему, чтобы оставить реакцию');\n      return;\n    }\n\n    const userReaction = reactionsData?.user_reaction;\n    \n    if (userReaction && userReaction.type === reactionType) {\n      // Если нажимаем на ту же реакцию - удаляем её\n      removeReactionMutation.mutate();\n    } else {\n      // Иначе устанавливаем новую реакцию\n      setReactionMutation.mutate({\n        reactionType,\n        value: 1\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  const openReactionsModal = () => {\n    if (!currentUser) {\n      toast.error('Войдите в систему, чтобы оставить реакцию');\n      return;\n    }\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  if (isLoading) {\n    return <ReactionsContainer>Загрузка реакций...</ReactionsContainer>;\n  }\n\n  const reactions = reactionsData?.reactions || {};\n  const userReaction = reactionsData?.user_reaction;\n  const totalReactions = reactions.total || 0;\n\n  // Получаем топ-3 реакции для отображения\n  const topReactions = Object.entries(reactions)\n    .filter(([key, value]) => key !== 'total' && key !== 'users' && value > 0)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, 3);\n\n  return (\n    <ReactionsContainer>\n      {/* Основная панель реакций */}\n      <ReactionsBar>\n        {/* Кнопка для открытия модала с реакциями */}\n        <ReactionButton\n          onClick={openReactionsModal}\n          $isActive={!!userReaction}\n          $activeColor={userReaction ? REACTION_CONFIG[userReaction.type]?.color : '#e2e8f0'}\n          $textColor={userReaction ? 'white' : '#4a5568'}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <span className=\"emoji\">\n            {userReaction ? REACTION_CONFIG[userReaction.type]?.emoji : '😊'}\n          </span>\n          <span className=\"label\">\n            {userReaction ? REACTION_CONFIG[userReaction.type]?.label : 'Реагировать'}\n          </span>\n          {totalReactions > 0 && (\n            <span className=\"count\">{totalReactions}</span>\n          )}\n        </ReactionButton>\n\n        {/* Быстрые реакции (топ-3) */}\n        {topReactions.map(([reactionType, count]) => (\n          <ReactionButton\n            key={reactionType}\n            onClick={() => handleReactionClick(reactionType)}\n            $isActive={userReaction?.type === reactionType}\n            $activeColor={REACTION_CONFIG[reactionType]?.color}\n            $textColor={REACTION_CONFIG[reactionType]?.textColor}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <span className=\"emoji\">{REACTION_CONFIG[reactionType]?.emoji}</span>\n            <span className=\"count\">{count}</span>\n          </ReactionButton>\n        ))}\n      </ReactionsBar>\n\n      {/* Статистика реакций */}\n      {showStats && totalReactions > 0 && (\n        <ReactionsStats>\n          {Object.entries(reactions).map(([reactionType, count]) => {\n            if (reactionType === 'total' || reactionType === 'users' || count === 0) return null;\n            \n            return (\n              <div key={reactionType} className=\"stat-item\">\n                <span className=\"emoji\">{REACTION_CONFIG[reactionType]?.emoji}</span>\n                <span>{count}</span>\n              </div>\n            );\n          })}\n        </ReactionsStats>\n      )}\n\n      {/* Модал выбора реакции */}\n      <AnimatePresence>\n        {showModal && (\n          <ReactionsModal\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={closeModal}\n          >\n            <ReactionsModalContent onClick={(e) => e.stopPropagation()}>\n              <CloseButton onClick={closeModal}>&times;</CloseButton>\n              \n              <h3 style={{ margin: '0 0 20px 0', color: '#2d3748' }}>\n                Выберите реакцию\n              </h3>\n              \n              <ReactionsGrid>\n                {Object.entries(REACTION_CONFIG).map(([type, config]) => (\n                  <ReactionOption\n                    key={type}\n                    onClick={() => handleReactionClick(type)}\n                    $color={config.color}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <div className=\"emoji\">{config.emoji}</div>\n                    <div className=\"label\">{config.label}</div>\n                  </ReactionOption>\n                ))}\n              </ReactionsGrid>\n              \n              <p style={{ margin: '20px 0 0 0', fontSize: '14px', color: '#718096' }}>\n                Нажмите на реакцию, чтобы поставить её\n              </p>\n            </ReactionsModalContent>\n          </ReactionsModal>\n        )}\n      </AnimatePresence>\n    </ReactionsContainer>\n  );\n};\n\nexport default Reactions;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useParams, Navigate, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI, swipeAPI, chatAPI, giftsAPI, ratingAPI, apiUtils } from '../services/api';\nimport { LocationSelector } from '../components/Geography';\nimport RatingDisplay from '../components/RatingDisplay';\nimport PhotoComments from '../components/PhotoComments';\nimport ProfileComments from '../components/ProfileComments';\nimport Reactions from '../components/Reactions';\n// Убираем импорт getStatusDisplayName, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  ContentCard,\n  Avatar,\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  TextArea,\n  LoadingSpinner,\n  Grid,\n  Card,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  CloseIcon,\n  EditIcon,\n  HeartIcon,\n  GiftIcon,\n  StarIcon,\n  MessageIcon,\n  SendIcon,\n  CrownIcon\n} from '../components/UI';\n\n// Дополнительные иконки\nconst CameraIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"/>\n    <circle cx=\"12\" cy=\"13\" r=\"4\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2 2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\n// Конфигурация подарков\nconst GIFT_CONFIG = {\n  '1': { emoji: '🌹', name: 'Роза', cost: 50 },\n  '2': { emoji: '💐', name: 'Букет цветов', cost: 100 },\n  '3': { emoji: '🍾', name: 'Шампанское', cost: 200 },\n  '4': { emoji: '🎁', name: 'Подарок', cost: 150 },\n  '5': { emoji: '🍽️', name: 'Романтический ужин', cost: 500 },\n  '6': { emoji: '✈️', name: 'Путешествие', cost: 1000 },\n  '7': { emoji: '💎', name: 'Украшение', cost: 800 },\n  '8': { emoji: '👑', name: 'VIP статус на месяц', cost: 1500 },\n  '9': { emoji: '⭐', name: 'Premium статус на месяц', cost: 2000 },\n  '10': { emoji: '🏆', name: 'Эксклюзивный подарок', cost: 3000 }\n};\n\n// Стили\nconst ProfileContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst ProfileHeader = styled.div`\n  position: relative;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  padding: 60px 40px 40px;\n  border-radius: 25px 25px 0 0;\n  color: white;\n  text-align: center;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\") repeat;\n    opacity: 0.3;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px 30px;\n  }\n`;\n\nconst AvatarSection = styled.div`\n  position: relative;\n  display: inline-block;\n  margin-bottom: 20px;\n  z-index: 1;\n`;\n\nconst AvatarOverlay = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 50%;\n  padding: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: white;\n    transform: scale(1.1);\n  }\n`;\n\nconst UserInfo = styled.div`\n  position: relative;\n  z-index: 1;\n  \n  h2 {\n    margin: 0 0 8px 0;\n    font-size: 32px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  }\n  \n  p {\n    margin: 0;\n    opacity: 0.9;\n    font-size: 16px;\n  }\n  \n  @media (max-width: 768px) {\n    h2 {\n      font-size: 28px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  padding: 30px 40px;\n  background: white;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    gap: 10px;\n    flex-wrap: wrap;\n  }\n`;\n\nconst ActionButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  border-radius: 12px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  border: none;\n  \n  &.like {\n    background: linear-gradient(135deg, #e91e63 0%, #f06292 100%);\n    color: white;\n  }\n  \n  &.gift {\n    background: linear-gradient(135deg, #ff9800 0%, #ffb74d 100%);\n    color: white;\n  }\n  \n  &.chat {\n    background: linear-gradient(135deg, #4caf50 0%, #66bb6a 100%);\n    color: white;\n  }\n  \n  &.superlike {\n    background: linear-gradient(135deg, #2196f3 0%, #42a5f5 100%);\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'white'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 16px;\n  transition: all 0.3s ease;\n  border-bottom: ${props => props.$active ? 'none' : '1px solid #e2e8f0'};\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n    font-size: 14px;\n  }\n`;\n\nconst TabContent = styled.div`\n  padding: 40px;\n  background: white;\n  border-radius: 0 0 25px 25px;\n  min-height: 400px;\n  \n  @media (max-width: 768px) {\n    padding: 25px 20px;\n  }\n`;\n\nconst RatingSection = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 15px;\n  padding: 20px;\n  margin: 20px 40px;\n  border: 1px solid #dee2e6;\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n  }\n`;\n\nconst InfoSection = styled.div`\n  margin-bottom: 30px;\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 20px;\n    font-weight: 600;\n    color: #2d3748;\n    border-bottom: 2px solid #e2e8f0;\n    padding-bottom: 8px;\n  }\n`;\n\nconst InfoItem = styled.p`\n  margin: 0 0 8px 0;\n  color: #4a5568;\n  font-size: 15px;\n  \n  strong {\n    color: #2d3748;\n    font-weight: 600;\n  }\n`;\n\nconst ImageGallery = styled(Grid)`\n  margin-top: 30px;\n`;\n\nconst ImageCard = styled(Card)`\n  position: relative;\n  aspect-ratio: 1;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n  \n  ${ImageCard}:hover & {\n    transform: scale(1.1);\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(220, 53, 34, 0.8) 0%, rgba(255, 107, 88, 0.8) 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  \n  ${ImageCard}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst UploadArea = styled.div`\n  border: 3px dashed #cbd5e0;\n  border-radius: 15px;\n  padding: 60px 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  \n  &:hover {\n    border-color: #dc3522;\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst GiftGrid = styled(Grid)`\n  margin-bottom: 20px;\n`;\n\nconst GiftOption = styled(motion.div)`\n  background: white;\n  border: 2px solid ${props => props.$selected ? '#dc3522' : '#e2e8f0'};\n  border-radius: 15px;\n  padding: 15px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    border-color: #dc3522;\n    transform: translateY(-2px);\n  }\n  \n  .emoji {\n    font-size: 32px;\n    margin-bottom: 8px;\n    display: block;\n  }\n  \n  .name {\n    font-size: 14px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 4px;\n  }\n  \n  .cost {\n    font-size: 12px;\n    color: #dc3522;\n    font-weight: 600;\n  }\n`;\n\nconst GiftCard = styled(Card)`\n  background: linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%);\n  border: 2px solid #fed7d7;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(220, 53, 34, 0.15);\n    border-color: #dc3522;\n  }\n`;\n\nconst BalanceSection = styled.div`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 15px;\n  padding: 25px;\n  margin: 20px 40px;\n  color: white;\n  text-align: center;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n    padding: 20px;\n  }\n`;\n\nconst BalanceTitle = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: white;\n`;\n\nconst BalanceAmount = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nconst BalanceButton = styled(Button)`\n  background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);\n  color: #2d3748;\n  font-weight: 600;\n  padding: 12px 24px;\n  border-radius: 25px;\n  box-shadow: 0 4px 15px rgba(255, 215, 0, 0.4);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(255, 215, 0, 0.6);\n  }\n`;\n\nconst VipAdSection = styled.div`\n  background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);\n  border-radius: 15px;\n  padding: 25px;\n  margin: 20px 40px;\n  text-align: center;\n  box-shadow: 0 8px 25px rgba(255, 215, 0, 0.3);\n  border: 2px solid #ffd700;\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n    padding: 20px;\n  }\n`;\n\nconst VipAdTitle = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 22px;\n  font-weight: 700;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nconst VipAdText = styled.p`\n  margin: 0 0 20px 0;\n  font-size: 16px;\n  color: #4a5568;\n  line-height: 1.6;\n`;\n\nconst VipAdButton = styled(Button)`\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n  color: white;\n  font-weight: 600;\n  padding: 12px 30px;\n  border-radius: 25px;\n  box-shadow: 0 4px 15px rgba(45, 55, 72, 0.4);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(45, 55, 72, 0.6);\n  }\n`;\n\nconst GiftEmoji = styled.div`\n  font-size: 48px;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nconst GiftSender = styled.div`\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 600;\n  margin: 10px 0;\n  display: inline-block;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n`;\n\nconst GiftMessage = styled.div`\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 10px;\n  padding: 12px;\n  margin: 10px 0;\n  font-style: italic;\n  color: #4a5568;\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Profile = () => {\n  const { login } = useParams();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n  \n  // Определяем, чей это профиль\n  const isOwnProfile = !login || (currentUser && currentUser.login === login);\n  const targetLogin = isOwnProfile ? currentUser?.login : login;\n  \n  // Состояния\n  const [activeTab, setActiveTab] = useState('profile');\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showGiftModal, setShowGiftModal] = useState(false);\n  const [showSuperlikeModal, setShowSuperlikeModal] = useState(false);\n  const [selectedGift, setSelectedGift] = useState(null);\n  const [giftMessage, setGiftMessage] = useState('');\n  const [superlikeMessage, setSuperlikeMessage] = useState('');\n\n  // Получение полученных подарков\n  const { data: receivedGiftsData } = useQuery(\n    ['received-gifts', targetLogin],\n    () => giftsAPI.getReceivedGifts(50, 0, targetLogin),\n    {\n      enabled: !!targetLogin,\n      onError: (error) => {\n        console.warn('Failed to fetch received gifts:', error);\n      }\n    }\n  );\n\n  const receivedGifts = receivedGiftsData?.gifts || [];\n  \n  // Отладочная информация\n  useEffect(() => {\n    if (receivedGiftsData) {\n      console.log('Received gifts data:', receivedGiftsData);\n      console.log('Received gifts:', receivedGifts);\n    }\n  }, [receivedGiftsData, receivedGifts]);\n\n  const avatarInputRef = useRef();\n  const imagesInputRef = useRef();\n\n  // Функция для перехода в профиль отправителя подарка\n  const handleGiftSenderClick = (senderLogin) => {\n    if (senderLogin && senderLogin !== currentUser?.login) {\n      navigate(`/profile/${senderLogin}`);\n    }\n  };\n\n  // Проверка авторизации\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Дополнительная проверка targetLogin\n  if (!targetLogin) {\n    return (\n      <ProfileContainer>\n        <ContentCard $maxWidth=\"600px\">\n          <div style={{ textAlign: 'center', padding: '60px 20px' }}>\n            <h2>Ошибка</h2>\n            <p>Не удалось определить профиль для просмотра</p>\n            <Button onClick={() => navigate('/catalog')}>\n              Вернуться к каталогу\n            </Button>\n          </div>\n        </ContentCard>\n      </ProfileContainer>\n    );\n  }\n\n  // Получение профиля\n  const { data: profile, isLoading, error } = useQuery(\n    ['profile', targetLogin],\n    () => usersAPI.getProfile(targetLogin),\n    {\n      enabled: !!targetLogin,\n      onError: (error) => {\n        if (error.response?.status === 404) {\n          toast.error('Пользователь не найден');\n          navigate('/catalog');\n        }\n      }\n    }\n  );\n\n  // Получение статуса мэтча (только для чужих профилей)\n  const { data: matchStatus } = useQuery(\n    ['match-status', targetLogin],\n    () => chatAPI.getMatchStatus(targetLogin),\n    {\n      enabled: !isOwnProfile && !!targetLogin,\n      retry: false\n    }\n  );\n\n  // Form для редактирования профиля\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors }\n  } = useForm({\n    values: profile\n  });\n\n  // Мутации\n  const updateProfileMutation = useMutation(usersAPI.updateProfile, {\n    onSuccess: () => {\n      toast.success('Профиль обновлен!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      \n      if (window.refreshNavigation) {\n        window.refreshNavigation();\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const uploadAvatarMutation = useMutation(usersAPI.uploadAvatar, {\n    onSuccess: () => {\n      toast.success('Аватар обновлен!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      \n      if (window.refreshNavigation) {\n        window.refreshNavigation();\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const uploadImageMutation = useMutation(usersAPI.uploadImages, {\n    onSuccess: (data) => {\n      console.log('Upload success:', data);\n      toast.success('Фото добавлено!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      // Принудительно обновляем профиль\n      if (isOwnProfile) {\n        queryClient.invalidateQueries(['profile', currentUser?.login]);\n      }\n    },\n    onError: (error) => {\n      console.error('Upload error:', error);\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteImageMutation = useMutation(usersAPI.deleteImage, {\n    onSuccess: () => {\n      toast.success('Фото удалено!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const likeMutation = useMutation(swipeAPI.like, {\n    onSuccess: (data) => {\n      if (data.result === 'reciprocal_like') {\n        toast.success('🎉 Взаимная симпатия! Теперь можете общаться');\n        if (targetLogin) {\n          queryClient.invalidateQueries(['match-status', targetLogin]);\n        }\n      } else {\n        toast.success('Лайк отправлен!');\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const superlikeMutation = useMutation(swipeAPI.superlike, {\n    onSuccess: () => {\n      toast.success('Суперлайк отправлен!');\n      setShowSuperlikeModal(false);\n      setSuperlikeMessage('');\n      if (targetLogin) {\n        queryClient.invalidateQueries(['match-status', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const sendGiftMutation = useMutation(giftsAPI.sendGift, {\n    onSuccess: () => {\n      toast.success('Подарок отправлен!');\n      setShowGiftModal(false);\n      setSelectedGift(null);\n      setGiftMessage('');\n      if (targetLogin) {\n        queryClient.invalidateQueries(['match-status', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Регистрация посещения\n  const visitMutation = useMutation(usersAPI.registerVisit, {\n    onSuccess: () => {\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      console.warn('Visit registration failed:', error);\n    }\n  });\n\n  // Эффекты\n  useEffect(() => {\n    if (!isOwnProfile && targetLogin && profile) {\n      visitMutation.mutate(targetLogin);\n    }\n  }, [targetLogin, profile, isOwnProfile]);\n\n  // Обработчики\n  const onSubmit = (data) => {\n    updateProfileMutation.mutate(data);\n  };\n\n  const handleAvatarUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('avatar', file);\n      uploadAvatarMutation.mutate(formData);\n    }\n  };\n\n  const handleImageUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length > 0) {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('images', file);\n      });\n      uploadImageMutation.mutate(formData);\n      \n      // Очищаем input после загрузки\n      event.target.value = '';\n    }\n  };\n\n  const handleDeleteImage = (imageId) => {\n    if (window.confirm('Удалить это фото?')) {\n      deleteImageMutation.mutate(imageId);\n    }\n  };\n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    setShowImageModal(true);\n  };\n\n  const handleLike = () => {\n    if (likeMutation.isLoading) return;\n    \n    if (!targetLogin) {\n      toast.error('Ошибка: не указан получатель лайка');\n      return;\n    }\n    \n    likeMutation.mutate(targetLogin);\n  };\n\n  const handleSuperlike = () => {\n    if (!superlikeMessage.trim()) {\n      toast.error('Введите сообщение для суперлайка');\n      return;\n    }\n    \n    if (!targetLogin) {\n      toast.error('Ошибка: не указан получатель суперлайка');\n      return;\n    }\n    \n    superlikeMutation.mutate({\n      targetUser: targetLogin,\n      message: superlikeMessage ? superlikeMessage.trim() : ''\n    });\n  };\n\n  const handleSendGift = () => {\n    if (!selectedGift) {\n      toast.error('Выберите подарок');\n      return;\n    }\n    \n    if (!targetLogin) {\n      toast.error('Ошибка: не указан получатель подарка');\n      return;\n    }\n    \n    sendGiftMutation.mutate({\n      to_user: targetLogin,\n      gift_type: selectedGift,\n      message: giftMessage ? giftMessage.trim() : ''\n    });\n  };\n\n  const handleGoToChat = () => {\n    if (!targetLogin) {\n      toast.error('Ошибка: не указан пользователь для чата');\n      return;\n    }\n    \n    navigate(`/chat/${targetLogin}`);\n  };\n\n  if (isLoading) {\n    return (\n      <ProfileContainer>\n        <LoadingSpinner />\n      </ProfileContainer>\n    );\n  }\n\n  if (error || !profile) {\n    return (\n      <ProfileContainer>\n        <ContentCard $maxWidth=\"600px\">\n          <div style={{ textAlign: 'center', padding: '60px 20px' }}>\n            <h2>Профиль не найден</h2>\n            <p>Пользователь {targetLogin} не существует или был удален</p>\n            <Button onClick={() => navigate('/catalog')}>\n              Вернуться к каталогу\n            </Button>\n          </div>\n        </ContentCard>\n      </ProfileContainer>\n    );\n  }\n\n  // Проверяем наличие взаимного мэтча\n  const hasMatch = matchStatus?.hasMatch || false;\n  const hasUserLiked = matchStatus?.userHasLiked || false;\n\n  return (\n    <ProfileContainer>\n      <ContentCard $maxWidth=\"1000px\" $padding=\"0\">\n        <ProfileHeader>\n          <AvatarSection>\n            <Avatar\n              $src={profile.ava ? `/uploads/${profile.ava}` : ''}\n              $size=\"120px\"\n              $fontSize=\"48px\"\n              $clickable={isOwnProfile}\n            >\n              {!profile.ava && profile.login?.charAt(0).toUpperCase()}\n            </Avatar>\n            {isOwnProfile && (\n              <>\n                <AvatarOverlay onClick={() => avatarInputRef.current?.click()}>\n                  <CameraIcon />\n                </AvatarOverlay>\n                <HiddenInput\n                  ref={avatarInputRef}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleAvatarUpload}\n                />\n              </>\n            )}\n          </AvatarSection>\n          \n          <UserInfo>\n            <h2>@{profile.login}</h2>\n                            <p>{profile.city} • {profile.status} {profile.distance > 0 && `• ${profile.distance}км от вас`}</p>\n          </UserInfo>\n        </ProfileHeader>\n\n        {/* Секция баланса (только для своего профиля) */}\n        {isOwnProfile && (\n          <BalanceSection>\n            <BalanceTitle>💰 Ваш баланс</BalanceTitle>\n            <BalanceAmount>{profile.balance || 0} ₽</BalanceAmount>\n            <BalanceButton onClick={() => navigate('/subscriptions')}>\n              Пополнить баланс\n            </BalanceButton>\n          </BalanceSection>\n        )}\n\n        {/* Кнопки действий (только для чужих профилей) */}\n        {!isOwnProfile && (\n          <ActionsContainer>\n            <ActionButton \n              className=\"gift\" \n              onClick={() => setShowGiftModal(true)}\n            >\n              <GiftIcon />\n              Подарок\n            </ActionButton>\n            \n            {hasMatch ? (\n              <ActionButton\n                className=\"chat\"\n                onClick={handleGoToChat}\n              >\n                <MessageIcon />\n                Написать\n              </ActionButton>\n            ) : !hasUserLiked ? (\n              <>\n                <ActionButton \n                  className=\"like\" \n                  onClick={handleLike}\n                  disabled={likeMutation.isLoading}\n                >\n                  <HeartIcon />\n                  {likeMutation.isLoading ? 'Отправляем...' : 'Лайк'}\n                </ActionButton>\n                \n                <ActionButton \n                  className=\"superlike\" \n                  onClick={() => setShowSuperlikeModal(true)}\n                >\n                  <StarIcon />\n                  Суперлайк\n                </ActionButton>\n              </>\n            ) : null}\n          </ActionsContainer>\n        )}\n\n        {/* Интеграция рейтинговой системы */}\n        {!isOwnProfile && (\n          <RatingSection>\n                        <RatingDisplay\n              targetUser={targetLogin}\n              onRatingSubmit={() => {\n                if (targetLogin) {\n                  queryClient.invalidateQueries(['profile', targetLogin]);\n                }\n              }}\n            />\n          </RatingSection>\n        )}\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'profile'}\n            onClick={() => setActiveTab('profile')}\n          >\n            Профиль\n          </Tab>\n          <Tab\n            $active={activeTab === 'photos'}\n            onClick={() => setActiveTab('photos')}\n          >\n            Фотографии\n          </Tab>\n          <Tab\n            $active={activeTab === 'gifts'}\n            onClick={() => setActiveTab('gifts')}\n          >\n            🎁 Подарки {receivedGifts.length > 0 && `(${receivedGifts.length})`}\n          </Tab>\n          {isOwnProfile && (\n            <Tab\n              $active={activeTab === 'settings'}\n              onClick={() => setActiveTab('settings')}\n            >\n              Настройки\n            </Tab>\n          )}\n        </TabsContainer>\n\n        <TabContent>\n          {activeTab === 'profile' && (\n            <div>\n              {isOwnProfile ? (\n                <>\n                  <Form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup>\n                      <Label>Имя</Label>\n                      <Input\n                        {...register('name')}\n                        placeholder=\"Ваше имя\"\n                      />\n                    </FormGroup>\n\n                    <LocationSelector\n                      countryValue={watch('country')}\n                      cityValue={watch('city')}\n                      onCountryChange={(value) => {\n                        setValue('country', value);\n                        clearErrors('country');\n                        if (watch('city')) {\n                          setValue('city', '');\n                          clearErrors('city');\n                        }\n                      }}\n                      onCityChange={(value) => {\n                        setValue('city', value);\n                        clearErrors('city');\n                      }}\n                      countryError={errors.country?.message}\n                      cityError={errors.city?.message}\n                      required={true}\n                      showValidation={true}\n                      layout=\"side-by-side\"\n                    />\n\n                    <FormGroup>\n                      <Label>О себе</Label>\n                      <TextArea\n                        {...register('info')}\n                        placeholder=\"Расскажите о себе...\"\n                        $minHeight=\"120px\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Label>Что ищете</Label>\n                      <TextArea\n                        {...register('looking_for')}\n                        placeholder=\"Опишите, кого или что вы ищете...\"\n                        $minHeight=\"120px\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      type=\"submit\"\n                      disabled={updateProfileMutation.isLoading}\n                    >\n                      {updateProfileMutation.isLoading ? 'Сохранение...' : 'Сохранить изменения'}\n                    </Button>\n                  </Form>\n                  \n                  {/* Реклама подписки (только для своего профиля) */}\n                  <VipAdSection>\n                    <VipAdTitle>\n                      👑 <CrownIcon />\n                      Переходите на подписку!\n                    </VipAdTitle>\n                    <VipAdText>\n                      Получите эксклюзивные возможности: больше лайков, \n                      приоритет в поиске, расширенная статистика и многое другое!\n                      Доступны планы VIP и PREMIUM.\n                    </VipAdText>\n                    <VipAdButton onClick={() => navigate('/subscriptions')}>\n                      Перейти к подписке\n                    </VipAdButton>\n                  </VipAdSection>\n                </>\n              ) : (\n                <div>\n                  <InfoSection>\n                    <h3>Основная информация</h3>\n                    <InfoItem><strong>Страна:</strong> {profile.country}</InfoItem>\n                    <InfoItem><strong>Город:</strong> {profile.city}</InfoItem>\n                    <InfoItem><strong>Статус:</strong> {profile.status}</InfoItem>\n                    {profile.distance > 0 && (\n                      <InfoItem><strong>Расстояние:</strong> {profile.distance} км от вас</InfoItem>\n                    )}\n                  </InfoSection>\n\n                  {/* Показываем данные партнера для пар */}\n                  {profile.isCouple && profile.partnerData && (\n                    <InfoSection>\n                      <h3>👫 Данные пары</h3>\n                      <div style={{ \n                        display: 'grid', \n                        gridTemplateColumns: '1fr 1fr', \n                        gap: '15px',\n                        padding: '15px',\n                        background: 'rgba(220, 53, 34, 0.05)',\n                        borderRadius: '10px',\n                        border: '1px solid rgba(220, 53, 34, 0.1)'\n                      }}>\n                        <div>\n                          <h4 style={{ margin: '0 0 10px 0', color: '#dc3522', fontSize: '16px' }}>👨 Мужчина</h4>\n                          {profile.partnerData.manDate && (\n                            <InfoItem><strong>Дата рождения:</strong> {new Date(profile.partnerData.manDate).toLocaleDateString('ru-RU')}</InfoItem>\n                          )}\n                          {profile.partnerData.manHeight && (\n                            <InfoItem><strong>Рост:</strong> {profile.partnerData.manHeight} см</InfoItem>\n                          )}\n                          {profile.partnerData.manWeight && (\n                            <InfoItem><strong>Вес:</strong> {profile.partnerData.manWeight} кг</InfoItem>\n                          )}\n                          {profile.partnerData.manSmoking && (\n                            <InfoItem><strong>Курение:</strong> {profile.partnerData.manSmoking}</InfoItem>\n                          )}\n                          {profile.partnerData.manAlko && (\n                            <InfoItem><strong>Алкоголь:</strong> {profile.partnerData.manAlko}</InfoItem>\n                          )}\n                        </div>\n                        <div>\n                          <h4 style={{ margin: '0 0 10px 0', color: '#dc3522', fontSize: '16px' }}>👩 Женщина</h4>\n                          {profile.partnerData.womanDate && (\n                            <InfoItem><strong>Дата рождения:</strong> {new Date(profile.partnerData.womanDate).toLocaleDateString('ru-RU')}</InfoItem>\n                          )}\n                          {profile.partnerData.womanHeight && (\n                            <InfoItem><strong>Рост:</strong> {profile.partnerData.womanHeight} см</InfoItem>\n                          )}\n                          {profile.partnerData.womanWeight && (\n                            <InfoItem><strong>Вес:</strong> {profile.partnerData.womanWeight} кг</InfoItem>\n                          )}\n                          {profile.partnerData.womanSmoking && (\n                            <InfoItem><strong>Курение:</strong> {profile.partnerData.womanSmoking}</InfoItem>\n                          )}\n                          {profile.partnerData.womanAlko && (\n                            <InfoItem><strong>Алкоголь:</strong> {profile.partnerData.womanAlko}</InfoItem>\n                          )}\n                        </div>\n                      </div>\n                    </InfoSection>\n                  )}\n\n                  {/* Дополнительная информация */}\n                  {(profile.height || profile.weight || profile.smoking || profile.alko) && (\n                    <InfoSection>\n                      <h3>Дополнительная информация</h3>\n                      {profile.height && <InfoItem><strong>Рост:</strong> {profile.height} см</InfoItem>}\n                      {profile.weight && <InfoItem><strong>Вес:</strong> {profile.weight} кг</InfoItem>}\n                      {profile.smoking && <InfoItem><strong>Отношение к курению:</strong> {profile.smoking}</InfoItem>}\n                      {profile.alko && <InfoItem><strong>Отношение к алкоголю:</strong> {profile.alko}</InfoItem>}\n                    </InfoSection>\n                  )}\n\n                  {/* Предпочтения в поиске */}\n                  {(profile.searchStatus || profile.searchAge || profile.location) && (\n                    <InfoSection>\n                      <h3>Что ищет</h3>\n                      {profile.searchStatus && <InfoItem><strong>Статус:</strong> {profile.searchStatus}</InfoItem>}\n                      {profile.searchAge && <InfoItem><strong>Возраст:</strong> {profile.searchAge}</InfoItem>}\n                      {profile.location && <InfoItem><strong>Места для встреч:</strong> {profile.location}</InfoItem>}\n                    </InfoSection>\n                  )}\n\n                  {profile.info && (\n                    <InfoSection>\n                      <h3>О пользователе</h3>\n                      <InfoItem>{profile.info}</InfoItem>\n                    </InfoSection>\n                  )}\n\n                  {/* Подарки (для всех профилей) */}\n                  {receivedGifts.length > 0 && (\n                    <InfoSection>\n                      <h3>🎁 Полученные подарки</h3>\n                      <div style={{ \n                        display: 'grid', \n                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', \n                        gap: '15px',\n                        marginTop: '15px'\n                      }}>\n                        {receivedGifts.slice(0, 6).map((gift, index) => (\n                          <div key={index} style={{\n                            background: 'linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%)',\n                            border: '2px solid #fed7d7',\n                            borderRadius: '12px',\n                            padding: '15px',\n                            textAlign: 'center',\n                            transition: 'all 0.3s ease'\n                          }}>\n                            <div style={{ fontSize: '32px', marginBottom: '8px' }}>\n                              {GIFT_CONFIG[gift.gift_type]?.emoji || '🎁'}\n                            </div>\n                            <div style={{ \n                              fontSize: '12px', \n                              color: '#dc3522', \n                              fontWeight: '600',\n                              marginBottom: '5px'\n                            }}>\n                              {GIFT_CONFIG[gift.gift_type]?.name || 'Подарок'}\n                            </div>\n                            {gift.message && (\n                              <div style={{ \n                                fontSize: '11px', \n                                color: '#4a5568', \n                                fontStyle: 'italic',\n                                marginBottom: '5px'\n                              }}>\n                                \"{gift.message}\"\n                              </div>\n                            )}\n                            <div style={{ \n                              fontSize: '10px', \n                              color: '#718096'\n                            }}>\n                              {new Date(gift.created_at).toLocaleDateString('ru-RU')}\n                            </div>\n                          </div>\n                        ))}\n                        {receivedGifts.length > 6 && (\n                          <div style={{\n                            background: 'rgba(220, 53, 34, 0.1)',\n                            border: '2px dashed #dc3522',\n                            borderRadius: '12px',\n                            padding: '15px',\n                            textAlign: 'center',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer'\n                          }} onClick={() => setActiveTab('gifts')}>\n                            <div style={{ color: '#dc3522', fontSize: '14px', fontWeight: '600' }}>\n                              +{receivedGifts.length - 6} еще\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </InfoSection>\n                  )}\n                  \n                  {/* Комментарии к профилю */}\n                  <div style={{ marginTop: '30px' }}>\n                    <ProfileComments \n                      username={login} \n                      currentUser={currentUser?.login}\n                      isOwnProfile={isOwnProfile}\n                    />\n                  </div>\n                  \n                  {/* Реакции на профиль */}\n                  <div style={{ marginTop: '20px' }}>\n                    <Reactions \n                      objectType=\"profile\" \n                      objectId={login} \n                      currentUser={currentUser?.login}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'photos' && (\n            <div>\n              {isOwnProfile && (\n                <>\n                  <UploadArea onClick={() => imagesInputRef.current?.click()}>\n                    <div style={{ fontSize: '48px', marginBottom: '15px', opacity: 0.6 }}>📸</div>\n                    <h4 style={{ margin: '0 0 8px 0', color: '#2d3748', fontSize: '18px' }}>Загрузить фотографии</h4>\n                    <p style={{ margin: 0, color: '#718096', fontSize: '14px' }}>\n                      Нажмите, чтобы выбрать файлы. Поддерживаются JPG, PNG. Максимум 5MB на файл.\n                    </p>\n                  </UploadArea>\n                  \n                  <HiddenInput\n                    ref={imagesInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImageUpload}\n                  />\n                </>\n              )}\n\n\n\n              <ImageGallery $columns=\"repeat(auto-fill, minmax(200px, 1fr))\" $gap=\"20px\">\n                {profile?.images && Array.isArray(profile.images) && profile.images.map((image, index) => (\n                  <ImageCard key={index} onClick={() => handleImageClick(image)}>\n                    <Image src={`/uploads/${image}`} alt={`Фото ${index + 1}`} />\n                    {isOwnProfile && (\n                      <ImageOverlay>\n                        <IconButton\n                          $variant=\"danger\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDeleteImage(image);\n                          }}\n                        >\n                          <TrashIcon />\n                        </IconButton>\n                      </ImageOverlay>\n                    )}\n                  </ImageCard>\n                ))}\n              </ImageGallery>\n              \n              {/* Комментарии к фотографиям */}\n              {profile?.images && Array.isArray(profile.images) && profile.images.length > 0 && (\n                <div style={{ marginTop: '30px' }}>\n                  <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                    Комментарии к фотографиям\n                  </h3>\n                  {profile.images.map((image, index) => (\n                    <div key={index} style={{ marginBottom: '30px' }}>\n                      <div style={{ \n                        display: 'flex', \n                        alignItems: 'center', \n                        gap: '15px', \n                        marginBottom: '15px',\n                        padding: '15px',\n                        background: '#f7fafc',\n                        borderRadius: '12px'\n                      }}>\n                        <img \n                          src={`/uploads/${image}`} \n                          alt={`Фото ${index + 1}`}\n                          style={{\n                            width: '80px',\n                            height: '80px',\n                            objectFit: 'cover',\n                            borderRadius: '8px',\n                            border: '2px solid #e2e8f0'\n                          }}\n                        />\n                        <div>\n                          <h4 style={{ margin: '0 0 5px 0', color: '#2d3748' }}>\n                            Фото {index + 1}\n                          </h4>\n                          <p style={{ margin: 0, color: '#718096', fontSize: '14px' }}>\n                            Нажмите на фото для просмотра\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <PhotoComments \n                        filename={image} \n                        currentUser={currentUser?.login}\n                      />\n                      \n                      {/* Реакции на фотографию */}\n                      <div style={{ marginTop: '20px' }}>\n                        <Reactions \n                          objectType=\"image\" \n                          objectId={image} \n                          currentUser={currentUser?.login}\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'gifts' && (\n            <div>\n              <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                🎁 Подарки\n              </h3>\n              \n              {receivedGifts.length === 0 ? (\n                <div style={{ textAlign: 'center', padding: '40px 20px', color: '#718096' }}>\n                  <div style={{ fontSize: '64px', marginBottom: '20px', opacity: 0.5 }}>🎁</div>\n                  <h4 style={{ margin: '0 0 10px 0', color: '#2d3748' }}>\n                    {isOwnProfile ? 'Вы пока не получили подарков' : 'Пользователь пока не получил подарков'}\n                  </h4>\n                  <p style={{ margin: 0, fontSize: '14px' }}>\n                    {isOwnProfile \n                      ? 'Подарки появятся здесь, когда кто-то отправит их вам'\n                      : 'Подарки появятся здесь, когда кто-то отправит их пользователю'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <>\n                  {/* Статистика подарков */}\n                  <div style={{ \n                    background: 'linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%)',\n                    border: '2px solid #fed7d7',\n                    borderRadius: '15px',\n                    padding: '20px',\n                    marginBottom: '25px',\n                    textAlign: 'center'\n                  }}>\n                    <h4 style={{ margin: '0 0 15px 0', color: '#dc3522' }}>\n                      📊 Статистика подарков\n                    </h4>\n                    <div style={{ \n                      display: 'grid', \n                      gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))', \n                      gap: '15px'\n                    }}>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {receivedGifts.length}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>Всего получено</div>\n                      </div>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {receivedGifts.filter(g => g.message).length}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>С сообщениями</div>\n                      </div>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {new Set(receivedGifts.map(g => g.from_user)).size}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>Отправителей</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Список подарков */}\n                  <Grid $columns=\"repeat(auto-fill, minmax(280px, 1fr))\" $gap=\"20px\">\n                    {receivedGifts.map((gift, index) => (\n                      <GiftCard key={index}>\n                        <GiftEmoji>{GIFT_CONFIG[gift.gift_type]?.emoji || '🎁'}</GiftEmoji>\n                        <GiftSender onClick={() => handleGiftSenderClick(gift.from_user)}>\n                          {gift.from_user}\n                        </GiftSender>\n                        <GiftMessage>{gift.message || 'Нет сообщения'}</GiftMessage>\n                        <p style={{ margin: '0 0 10px 0', color: '#4a5568', fontSize: '14px' }}>\n                          Тип: {GIFT_CONFIG[gift.gift_type]?.name || 'Неизвестный подарок'}\n                        </p>\n                        <p style={{ margin: '0 0 10px 0', color: '#4a5568', fontSize: '14px' }}>\n                          Дата: {new Date(gift.created_at).toLocaleDateString('ru-RU')}\n                        </p>\n                      </GiftCard>\n                    ))}\n                  </Grid>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'settings' && isOwnProfile && (\n            <div>\n              <InfoSection>\n                <h3>Настройки профиля</h3>\n                <InfoItem>Здесь будут настройки приватности и уведомлений</InfoItem>\n              </InfoSection>\n            </div>\n          )}\n        </TabContent>\n      </ContentCard>\n\n      {/* Модальные окна */}\n      {/* Модальное окно для просмотра изображений */}\n      {showImageModal && selectedImage && (\n        <Modal onClick={() => setShowImageModal(false)}>\n          <ModalContent $maxWidth=\"800px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Просмотр фотографии</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowImageModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            <img\n              src={`/uploads/${selectedImage}`}\n              alt=\"Просмотр\"\n              style={{\n                width: '100%',\n                borderRadius: '15px',\n                maxHeight: '70vh',\n                objectFit: 'contain'\n              }}\n            />\n          </ModalContent>\n        </Modal>\n      )}\n\n      {/* Модальное окно подарков */}\n      {showGiftModal && (\n        <Modal onClick={() => setShowGiftModal(false)}>\n          <ModalContent $maxWidth=\"600px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить подарок</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowGiftModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            \n            <GiftGrid $columns=\"repeat(auto-fit, minmax(120px, 1fr))\" $gap=\"15px\">\n              {Object.entries(GIFT_CONFIG).map(([id, gift]) => (\n                <GiftOption\n                  key={id}\n                  $selected={selectedGift === id}\n                  onClick={() => setSelectedGift(id)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <div className=\"emoji\">{gift.emoji}</div>\n                  <div className=\"name\">{gift.name}</div>\n                  <div className=\"cost\">{gift.cost} 🦊</div>\n                </GiftOption>\n              ))}\n            </GiftGrid>\n\n            <FormGroup>\n              <Label>Сообщение (необязательно)</Label>\n              <TextArea\n                value={giftMessage}\n                onChange={(e) => setGiftMessage(e.target.value)}\n                placeholder=\"Добавьте личное сообщение к подарку...\"\n                $minHeight=\"80px\"\n              />\n            </FormGroup>\n\n            <Button\n              onClick={handleSendGift}\n              disabled={sendGiftMutation.isLoading || !selectedGift}\n              style={{ width: '100%' }}\n            >\n              {sendGiftMutation.isLoading ? 'Отправляем...' : 'Отправить подарок'}\n            </Button>\n          </ModalContent>\n        </Modal>\n      )}\n\n      {/* Модальное окно суперлайка */}\n      {showSuperlikeModal && (\n        <Modal onClick={() => setShowSuperlikeModal(false)}>\n          <ModalContent $maxWidth=\"500px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить суперлайк</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowSuperlikeModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n\n            <FormGroup>\n              <Label>Сообщение *</Label>\n              <TextArea\n                value={superlikeMessage}\n                onChange={(e) => setSuperlikeMessage(e.target.value)}\n                placeholder=\"Напишите сообщение для суперлайка...\"\n                $minHeight=\"120px\"\n                required\n              />\n            </FormGroup>\n\n            <Button\n              onClick={handleSuperlike}\n              disabled={superlikeMutation.isLoading || !superlikeMessage.trim()}\n              style={{ width: '100%' }}\n            >\n              {superlikeMutation.isLoading ? 'Отправляем...' : 'Отправить суперлайк'}\n            </Button>\n          </ModalContent>\n        </Modal>\n      )}\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;","import React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { chatAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  Avatar,\n  IconButton,\n  FlexContainer,\n  SearchIcon,\n  SendIcon,\n  PlusIcon\n} from '../components/UI';\n\n// Иконки\nconst BackIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M19 12H6m6-7l-7 7 7 7\"/>\n  </svg>\n);\n\nconst AttachIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66L9.64 16.2a2 2 0 0 1-2.83-2.83l8.49-8.49\"/>\n  </svg>\n);\n\nconst MoreIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"1\"/>\n    <circle cx=\"19\" cy=\"12\" r=\"1\"/>\n    <circle cx=\"5\" cy=\"12\" r=\"1\"/>\n  </svg>\n);\n\n// Стили\nconst ChatContainer = styled(PageContainer)`\n  display: flex;\n  height: 100vh;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst ChatSidebar = styled.div`\n  width: 400px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$selectedChat ? '0' : '100%'};\n    position: ${props => props.$selectedChat ? 'absolute' : 'relative'};\n    left: ${props => props.$selectedChat ? '-100%' : '0'};\n    transition: all 0.3s ease;\n    z-index: 10;\n  }\n`;\n\nconst ChatHeader = styled.div`\n  padding: 30px 25px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  text-align: center;\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 28px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n  \n  p {\n    margin: 0;\n    opacity: 0.9;\n    font-size: 16px;\n    font-weight: 300;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 25px 20px;\n    \n    h3 {\n      font-size: 24px;\n    }\n  }\n`;\n\nconst SearchContainer = styled.div`\n  padding: 20px 25px;\n  background: rgba(255, 255, 255, 0.8);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst SearchInput = styled.div`\n  position: relative;\n  \n      input {\n      width: 100%;\n      padding: 15px 20px 15px 50px;\n      border: 2px solid rgba(220, 53, 34, 0.2);\n      border-radius: 25px;\n      font-size: 16px;\n      background: white;\n      transition: all 0.3s ease;\n      \n      &:focus {\n        outline: none;\n        border-color: #dc3522;\n        box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n      }\n    \n    &::placeholder {\n      color: #a0aec0;\n    }\n  }\n  \n  .search-icon {\n    position: absolute;\n    left: 18px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #a0aec0;\n  }\n`;\n\nconst ChatsContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  background: white;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n`;\n\nconst ChatItem = styled.div`\n  padding: 20px 25px;\n  border-bottom: 1px solid #f7fafc;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    border-right: 4px solid #dc3522;\n  }\n  \n  .chat-info {\n    flex: 1;\n    min-width: 0;\n    \n    .name {\n      font-weight: 600;\n      margin-bottom: 6px;\n      color: #2d3748;\n      font-size: 16px;\n    }\n    \n    .last-message {\n      color: #718096;\n      font-size: 14px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      line-height: 1.4;\n      \n              .new-match-indicator {\n          color: #dc3522;\n          font-weight: 600;\n        }\n    }\n    \n    .time {\n      font-size: 12px;\n      color: #a0aec0;\n      margin-top: 4px;\n    }\n  }\n  \n  .unread-badge {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    border-radius: 12px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    font-weight: bold;\n    position: absolute;\n    top: 15px;\n    right: 20px;\n  }\n  \n  .new-match-badge {\n    background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 100%);\n    color: white;\n    border-radius: 12px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    position: absolute;\n    top: 15px;\n    right: 20px;\n    animation: pulse 2s infinite;\n  }\n  \n  @keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.1); }\n    100% { transform: scale(1); }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px 20px;\n    \n    .chat-info {\n      .name {\n        font-size: 15px;\n      }\n      \n      .last-message {\n        font-size: 13px;\n      }\n    }\n  }\n`;\n\nconst ChatWindow = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$selectedChat ? '100%' : '0'};\n    position: ${props => props.$selectedChat ? 'relative' : 'absolute'};\n    right: ${props => props.$selectedChat ? '0' : '-100%'};\n    transition: all 0.3s ease;\n  }\n`;\n\nconst ChatWindowHeader = styled.div`\n  padding: 20px 30px;\n  background: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  \n  .back-button {\n    @media (min-width: 769px) {\n      display: none;\n    }\n  }\n  \n  .user-info {\n    flex: 1;\n    \n    .name {\n      font-weight: 600;\n      color: #2d3748;\n      font-size: 18px;\n      margin-bottom: 2px;\n    }\n    \n    .status {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      font-size: 14px;\n      color: #718096;\n      \n      .online-dot {\n        width: 8px;\n        height: 8px;\n        background: #48bb78;\n        border-radius: 50%;\n        animation: pulse 2s infinite;\n      }\n    }\n  }\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n`;\n\nconst MessageGroup = styled.div`\n  display: flex;\n  justify-content: ${props => props.$isOwn ? 'flex-end' : 'flex-start'};\n  margin-bottom: 20px;\n`;\n\nconst Message = styled.div`\n  max-width: 70%;\n  padding: 15px 20px;\n  border-radius: 20px;\n  background: ${props => props.$isOwn \n    ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' \n    : 'white'};\n  color: ${props => props.$isOwn ? 'white' : '#2d3748'};\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  position: relative;\n  \n  .message-text {\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 8px;\n  }\n  \n  .message-file {\n    margin-top: 10px;\n    \n    img {\n      border-radius: 10px;\n      max-width: 100%;\n      height: auto;\n    }\n  }\n  \n  .message-time {\n    font-size: 12px;\n    opacity: 0.7;\n    text-align: right;\n    margin-top: 5px;\n  }\n  \n  @media (max-width: 768px) {\n    max-width: 85%;\n    padding: 12px 16px;\n    \n    .message-text {\n      font-size: 15px;\n    }\n  }\n`;\n\nconst TypingIndicator = styled.div`\n  padding: 15px 20px;\n  background: white;\n  border-radius: 20px;\n  color: #718096;\n  font-style: italic;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n`;\n\nconst MessageInputWrapper = styled.div`\n  padding: 20px 30px;\n  background: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  opacity: ${props => props.$disabled ? 0.5 : 1};\n  pointer-events: ${props => props.$disabled ? 'none' : 'auto'};\n`;\n\nconst MessageInput = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 12px;\n  background: #f7fafc;\n  border-radius: 25px;\n  padding: 8px;\n  border: 2px solid transparent;\n  transition: all 0.3s ease;\n  \n  &:focus-within {\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n`;\n\nconst InputContainer = styled.div`\n  flex: 1;\n`;\n\nconst TextInput = styled.textarea`\n  width: 100%;\n  min-height: 20px;\n  max-height: 120px;\n  padding: 12px 16px;\n  border: none;\n  background: transparent;\n  font-size: 16px;\n  resize: none;\n  outline: none;\n  font-family: inherit;\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n`;\n\nconst ActionButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  background: ${props => props.$primary \n    ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' \n    : 'rgba(220, 53, 34, 0.1)'};\n  color: ${props => props.$primary ? 'white' : '#dc3522'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    transform: scale(1.1);\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  color: #718096;\n  padding: 40px 20px;\n  \n  .content {\n    max-width: 400px;\n    \n    .icon {\n      font-size: 80px;\n      margin-bottom: 20px;\n      opacity: 0.5;\n    }\n    \n    h3 {\n      font-size: 24px;\n      font-weight: 600;\n      color: #2d3748;\n      margin: 0 0 10px 0;\n    }\n    \n    p {\n      font-size: 16px;\n      line-height: 1.6;\n      margin: 0;\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  color: #e53e3e;\n  padding: 40px 20px;\n  \n  p {\n    font-size: 18px;\n    margin-bottom: 20px;\n  }\n  \n      button {\n      padding: 12px 24px;\n      background: #dc3522;\n      color: white;\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      font-size: 16px;\n      \n      &:hover {\n        background: #b8291e;\n      }\n    }\n`;\n\nconst NewChatWelcome = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 40px 20px;\n  \n  .welcome-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    max-width: 500px;\n  }\n  \n  .match-icon {\n    font-size: 80px;\n    animation: bounce 2s infinite;\n  }\n  \n  @keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n      transform: translateY(0);\n    }\n    40% {\n      transform: translateY(-10px);\n    }\n    60% {\n      transform: translateY(-5px);\n    }\n  }\n  \n      h3 {\n      font-size: 32px;\n      font-weight: 700;\n      color: #2d3748;\n      margin: 0;\n      background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n  \n  p {\n    font-size: 18px;\n    color: #718096;\n    margin: 0;\n  }\n  \n  .subtitle {\n    font-size: 16px;\n    color: #a0aec0;\n  }\n  \n  .suggestions {\n    margin-top: 30px;\n    width: 100%;\n    \n    h4 {\n      font-size: 18px;\n      font-weight: 600;\n      color: #2d3748;\n      margin: 0 0 20px 0;\n    }\n  }\n  \n  .suggestion-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n  \n  .suggestion-btn {\n    padding: 15px 20px;\n    background: white;\n    border: 2px solid rgba(102, 126, 234, 0.2);\n    border-radius: 15px;\n    font-size: 15px;\n    color: #2d3748;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    \n    &:hover {\n      background: rgba(102, 126, 234, 0.05);\n      border-color: #667eea;\n      transform: translateY(-2px);\n      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 30px 20px;\n    \n    .match-icon {\n      font-size: 60px;\n    }\n    \n    h3 {\n      font-size: 24px;\n    }\n    \n    p {\n      font-size: 16px;\n    }\n    \n    .subtitle {\n      font-size: 14px;\n    }\n    \n    .suggestion-btn {\n      padding: 12px 16px;\n      font-size: 14px;\n    }\n  }\n`;\n\nconst MatchStatusBanner = styled.div`\n  padding: 15px 20px;\n  margin: 0 20px 20px 20px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  \n  background: ${props => {\n    switch (props.$status) {\n      case 'match':\n        return 'linear-gradient(135deg, #48bb78 0%, #38a169 100%)';\n      case 'liked':\n        return 'linear-gradient(135deg, #ed8936 0%, #dd6b20 100%)';\n      case 'liked_by':\n        return 'linear-gradient(135deg, #e53e3e 0%, #c53030 100%)';\n      default:\n        return 'linear-gradient(135deg, #a0aec0 0%, #718096 100%)';\n    }\n  }};\n  color: white;\n  \n  .icon {\n    font-size: 16px;\n  }\n  \n  .message {\n    flex: 1;\n  }\n`;\n\nconst Chat = () => {\n  const { username: chatId } = useParams();\n  const navigate = useNavigate();\n  const [selectedChat, setSelectedChat] = useState(chatId || null);\n  const [messageText, setMessageText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [matchStatus, setMatchStatus] = useState(null);\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const queryClient = useQueryClient();\n  const lastSelectedChatRef = useRef(null); // Ref для отслеживания последнего выбранного чата\n  \n  const currentUser = apiUtils.getCurrentUser();\n\n  // Получение списка чатов\n  const { data: chats = [], error: chatsError, isLoading: chatsLoading } = useQuery(\n    'conversations',\n    () => chatAPI.getConversations(50, 0), // Увеличим лимит для лучшего UX\n    {\n      refetchInterval: 5000, // Обновляем каждые 5 секунд\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 3000, // Данные считаются свежими 3 секунды\n      onError: (error) => {\n        console.error('Ошибка при получении списка чатов:', error);\n        toast.error('Не удалось загрузить список чатов');\n      }\n    }\n  );\n\n  // Создаем виртуальный чат для нового мэтча, если перешли через уведомления\n  const existingChat = chats?.conversations?.find(chat => chat.companion === chatId);\n  const virtualChat = chatId && !existingChat && !chatsLoading ? {\n    companion: chatId,\n    last_message: null,\n    last_message_date: null,\n    last_message_by: null,\n    unread_count: 0,\n    has_images: false,\n    companion_info: {\n      login: chatId,\n      ava: 'no_photo.jpg',\n      status: 'Новый мэтч',\n      online: null,\n      viptype: 'FREE'\n    }\n  } : null;\n\n  // Принудительно создаем виртуальный чат, если есть chatId и нет чатов\n  const forceVirtualChat = chatId && !chatsLoading && (!chats?.conversations || chats.conversations.length === 0) ? {\n    companion: chatId,\n    last_message: null,\n    last_message_date: null,\n    last_message_by: null,\n    unread_count: 0,\n    has_images: false,\n    companion_info: {\n      login: chatId,\n      ava: 'no_photo.jpg',\n      status: 'Новый мэтч',\n      online: null,\n      viptype: 'FREE'\n    }\n  } : null;\n\n  // Объединяем реальные чаты с виртуальным\n  const allChats = (virtualChat || forceVirtualChat)\n    ? [(virtualChat || forceVirtualChat), ...(chats?.conversations || [])]\n    : (chats?.conversations || []);\n\n  // Отладочная информация (только при изменениях)\n  useEffect(() => {\n    console.log('Chat Debug:', {\n      chatId,\n      chats: chats?.conversations,\n      existingChat,\n      virtualChat,\n      forceVirtualChat,\n      allChats,\n      selectedChat,\n      lastSelectedChatRef: lastSelectedChatRef.current,\n      chatsLoading,\n      userInfo,\n      timestamp: new Date().toISOString()\n    });\n  }, [chatId, chats?.conversations, selectedChat, chatsLoading, userInfo]);\n\n\n  // Получение сообщений текущего чата\n  const { data: messages = [], error: messagesError, isLoading: messagesLoading } = useQuery(\n    ['messages', selectedChat],\n    () => chatAPI.getMessages(selectedChat, 100, 0), // Увеличим лимит сообщений\n    {\n      enabled: !!selectedChat && !chatsLoading,\n      refetchInterval: 2000, // Обновляем каждые 2 секунды\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 1000, // Данные считаются свежими 1 секунду\n      onError: (error) => {\n        console.error('Ошибка при получении сообщений:', error);\n        toast.error('Не удалось загрузить сообщения');\n      },\n      onSuccess: (data) => {\n        // Сохраняем информацию о мэтче из ответа\n        if (data?.match_status) {\n          setMatchStatus(data.match_status);\n        }\n      }\n    }\n  );\n\n  // Получение статуса мэтча для текущего чата\n  const { data: matchData } = useQuery(\n    ['match-status', selectedChat],\n    () => chatAPI.getMatchStatus(selectedChat),\n    {\n      enabled: !!selectedChat && !chatsLoading,\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 30000, // Данные считаются свежими 30 секунд\n      onError: (error) => {\n        console.error('Ошибка при получении статуса мэтча:', error);\n      },\n      onSuccess: (data) => {\n        if (data) {\n          setMatchStatus(data);\n        }\n      }\n    }\n  );\n\n  // Получение информации о пользователе для виртуального чата\n  const { data: userInfo } = useQuery(\n    ['user-info', chatId],\n    () => apiUtils.getUserInfo(chatId),\n    {\n      enabled: !!chatId && !!virtualChat && !chatsLoading,\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 60000, // Данные считаются свежими 1 минуту\n      onError: (error) => {\n        console.error('Ошибка при получении информации о пользователе:', error);\n      }\n    }\n  );\n\n  // Обновляем виртуальный чат с информацией о пользователе\n  useEffect(() => {\n    if (virtualChat && userInfo && userInfo.login && !chatsLoading) {\n      // Проверяем, не обновляем ли мы уже актуальные данные\n      if (virtualChat.companion_info?.login !== userInfo.login ||\n          virtualChat.companion_info?.ava !== userInfo.ava ||\n          virtualChat.companion_info?.status !== userInfo.status) {\n        virtualChat.companion_info = {\n          login: userInfo.login,\n          ava: userInfo.ava || 'no_photo.jpg',\n          status: userInfo.status || 'Новый мэтч',\n          online: userInfo.online,\n          viptype: userInfo.viptype || 'FREE'\n        };\n      }\n    }\n  }, [virtualChat, userInfo, chatsLoading]);\n\n  // Мутации\n  const sendMessageMutation = useMutation(chatAPI.sendMessage, {\n    onSuccess: (data) => {\n      setMessageText('');\n      queryClient.invalidateQueries(['messages', selectedChat]);\n      queryClient.invalidateQueries('conversations');\n      \n      // Показываем предупреждение если есть\n      if (data?.match_warning) {\n        toast.warning(data.match_warning);\n      }\n    },\n    onError: (error) => {\n      console.error('Ошибка отправки сообщения:', error);\n      // Обрабатываем ошибки мэтча отдельно\n      if (error.response?.data?.error === 'no_match') {\n        toast.error('Для отправки сообщений нужен взаимный лайк! 💕');\n      } else if (error.response?.status === 404) {\n        toast.error('Пользователь не найден или чат недоступен');\n      } else if (error.response?.status === 403) {\n        toast.error('У вас нет прав для отправки сообщений в этот чат');\n      } else {\n        toast.error(apiUtils.handleError(error) || 'Ошибка отправки сообщения');\n      }\n    }\n  });\n\n  const sendFileMutation = useMutation(chatAPI.sendMessage, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['messages', selectedChat]);\n      queryClient.invalidateQueries('conversations');\n      toast.success('Файл успешно отправлен');\n    },\n    onError: (error) => {\n      console.error('Ошибка отправки файла:', error);\n      if (error.response?.data?.error === 'no_match') {\n        toast.error('Для отправки файлов нужен взаимный лайк! 💕');\n      } else if (error.response?.status === 413) {\n        toast.error('Файл слишком большой');\n      } else {\n        toast.error(apiUtils.handleError(error) || 'Ошибка отправки файла');\n      }\n    }\n  });\n\n  // Эффекты\n  useEffect(() => {\n    if (chatId && chatId !== selectedChat && chatId !== lastSelectedChatRef.current && !chatsLoading) {\n      lastSelectedChatRef.current = chatId;\n      setSelectedChat(chatId);\n    }\n  }, [chatId, chatsLoading]); // Добавляем chatsLoading в зависимости\n\n  // Автоматически выбираем виртуальный чат, если перешли через уведомления\n  useEffect(() => {\n    if ((virtualChat || forceVirtualChat) && !selectedChat && chatId && chatId !== lastSelectedChatRef.current && !chatsLoading) {\n      lastSelectedChatRef.current = chatId;\n      setSelectedChat(chatId);\n    }\n  }, [virtualChat, forceVirtualChat, chatId, chatsLoading]); // Добавляем chatsLoading в зависимости\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Очистка при размонтировании\n  useEffect(() => {\n    return () => {\n      lastSelectedChatRef.current = null;\n    };\n  }, []);\n\n  // Фильтрация чатов по поиску\n  const filteredChats = allChats.filter(chat =>\n    chat.companion.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Обработчики\n  const handleChatSelect = (chatUser) => {\n    // Проверяем, не пытаемся ли мы перейти к тому же чату\n    if (chatUser === selectedChat || chatUser === lastSelectedChatRef.current || chatsLoading) {\n      return;\n    }\n    \n    lastSelectedChatRef.current = chatUser;\n    setSelectedChat(chatUser);\n    // Обновляем URL только если он отличается\n    if (chatUser !== chatId) {\n      navigate(`/chat/${chatUser}`);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (messageText.trim() && selectedChat) {\n      // Проверяем статус мэтча перед отправкой\n      if (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown') {\n        toast.error(`${matchStatus.message} ${matchStatus.icon}`);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('to_user', selectedChat);\n      formData.append('message', messageText.trim());\n      sendMessageMutation.mutate(formData);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && selectedChat) {\n      // Проверяем статус мэтча перед отправкой файла\n      if (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown') {\n        toast.error(`${matchStatus.message} ${matchStatus.icon}`);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('images', file);\n      formData.append('to_user', selectedChat);\n      sendFileMutation.mutate(formData);\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const selectedChatData = allChats.find(chat => chat.companion === selectedChat);\n\n  return (\n    <ChatContainer>\n      <ChatSidebar $selectedChat={selectedChat}>\n        <ChatHeader>\n          <h3>Сообщения</h3>\n          <p>Найдите интересных собеседников</p>\n        </ChatHeader>\n        \n        <SearchContainer>\n          <SearchInput>\n            <SearchIcon className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Поиск чатов...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </SearchInput>\n        </SearchContainer>\n        \n        <ChatsContainer>\n          {chatsError ? (\n            <ErrorMessage>\n              <p>Ошибка загрузки чатов</p>\n              <button onClick={() => window.location.reload()}>Попробовать снова</button>\n            </ErrorMessage>\n          ) : chatsLoading ? (\n            <EmptyState>\n              <p>Загрузка чатов...</p>\n            </EmptyState>\n          ) : (filteredChats.length > 0 || forceVirtualChat) ? (\n            <>\n              {/* Принудительно показываем виртуальный чат, если он есть */}\n              {forceVirtualChat && !filteredChats.find(chat => chat.companion === forceVirtualChat.companion) && (\n                <ChatItem\n                  key={forceVirtualChat.companion}\n                  className={selectedChat === forceVirtualChat.companion ? 'active' : ''}\n                  onClick={() => handleChatSelect(forceVirtualChat.companion)}\n                >\n                  <Avatar\n                    $src={forceVirtualChat.companion_info?.ava ? `/uploads/${forceVirtualChat.companion_info.ava}` : ''}\n                    $size=\"50px\"\n                    $fontSize=\"20px\"\n                    $online={forceVirtualChat.companion_info?.online}\n                  >\n                    {!forceVirtualChat.companion_info?.ava && forceVirtualChat.companion.charAt(0).toUpperCase()}\n                  </Avatar>\n                  \n                  <div className=\"chat-info\">\n                    <div className=\"name\">@{forceVirtualChat.companion}</div>\n                    <div className=\"last-message\">\n                      <span className=\"new-match-indicator\">💕 Новый мэтч - начните общение</span>\n                    </div>\n                    <div className=\"time\">Сейчас</div>\n                  </div>\n                  \n                  <div className=\"new-match-badge\">💕</div>\n                </ChatItem>\n              )}\n              \n                            {/* Показываем остальные чаты */}\n              {filteredChats.map(chat => (\n                <ChatItem\n                  key={chat.companion}\n                  className={selectedChat === chat.companion ? 'active' : ''}\n                  onClick={() => handleChatSelect(chat.companion)}\n                >\n                  <Avatar\n                    $src={chat.companion_info?.ava ? `/uploads/${chat.companion_info.ava}` : ''}\n                    $size=\"50px\"\n                    $fontSize=\"20px\"\n                    $online={chat.companion_info?.online}\n                  >\n                    {!chat.companion_info?.ava && chat.companion.charAt(0).toUpperCase()}\n                  </Avatar>\n                  \n                  <div className=\"chat-info\">\n                    <div className=\"name\">@{chat.companion}</div>\n                    <div className=\"last-message\">\n                      {chat.last_message ? (\n                        chat.last_message\n                      ) : (\n                        <span className=\"new-match-indicator\">💕 Новый мэтч - начните общение</span>\n                      )}\n                    </div>\n                    <div className=\"time\">\n                      {chat.last_message_date ? formatTime(chat.last_message_date) : 'Сейчас'}\n                    </div>\n                  </div>\n                  \n                  {chat.unread_count > 0 ? (\n                    <div className=\"unread-badge\">{chat.unread_count}</div>\n                  ) : !chat.last_message && (\n                    <div className=\"new-match-badge\">💕</div>\n                  )}\n                </ChatItem>\n              ))}\n            </>\n          ) : (\n            <EmptyState>\n              <p>Нет активных чатов</p>\n              <p>Найдите интересных собеседников в каталоге</p>\n            </EmptyState>\n          )}\n        </ChatsContainer>\n      </ChatSidebar>\n\n      <ChatWindow $selectedChat={selectedChat}>\n        {selectedChat ? (\n          <>\n            <ChatWindowHeader>\n              <IconButton \n                className=\"back-button\"\n                $variant=\"secondary\"\n                onClick={() => {\n                  setSelectedChat(null);\n                  navigate('/chat');\n                }}\n              >\n                <BackIcon />\n              </IconButton>\n              \n              <Avatar\n                $src={selectedChatData?.companion_info?.ava ? `/uploads/${selectedChatData.companion_info.ava}` : ''}\n                $size=\"45px\"\n                $fontSize=\"18px\"\n              >\n                {!selectedChatData?.companion_info?.ava && selectedChat.charAt(0).toUpperCase()}\n              </Avatar>\n              \n              <div className=\"user-info\">\n                <div className=\"name\">@{selectedChat}</div>\n                <div className=\"status\">\n                  {selectedChatData?.companion_info?.online && <div className=\"online-dot\" />}\n                  {selectedChatData?.companion_info?.online ? 'онлайн' : 'не в сети'}\n                </div>\n              </div>\n              \n              <IconButton $variant=\"secondary\">\n                <MoreIcon />\n              </IconButton>\n            </ChatWindowHeader>\n\n            {/* Баннер статуса мэтча */}\n            {matchStatus && matchStatus.status !== 'unknown' && (\n              <MatchStatusBanner $status={matchStatus.status}>\n                <span className=\"icon\">{matchStatus.icon}</span>\n                <span className=\"message\">{matchStatus.message}</span>\n              </MatchStatusBanner>\n            )}\n\n            <MessagesContainer>\n              {messagesError ? (\n                <ErrorMessage>\n                  <p>Ошибка загрузки сообщений</p>\n                  <button onClick={() => window.location.reload()}>Попробовать снова</button>\n                </ErrorMessage>\n              ) : messagesLoading ? (\n                <EmptyState>\n                  <p>Загрузка сообщений...</p>\n                </EmptyState>\n              ) : (messages?.messages || []).length > 0 ? (\n                (messages?.messages || []).map((message, index) => {\n                  const isOwn = message.by_user === currentUser.login;\n                  const prevMessage = messages.messages[index - 1];\n                  const isNewGroup = !prevMessage ||\n                    prevMessage.by_user !== message.by_user ||\n                    (new Date(message.date) - new Date(prevMessage.date)) > 300000;\n\n                  return (\n                    <MessageGroup key={message.id} $isOwn={isOwn}>\n                      <Message $isOwn={isOwn}>\n                        {message.message && (\n                          <div className=\"message-text\">{message.message}</div>\n                        )}\n                        {message.images && Array.isArray(message.images) && message.images.length > 0 && (\n                          <div className=\"message-file\">\n                            {message.images.map((image, idx) => (\n                              <img\n                                key={idx}\n                                src={`/uploads/${image}`}\n                                alt=\"Вложение\"\n                                style={{ margin: '2px', maxWidth: '250px' }}\n                              />\n                            ))}\n                          </div>\n                        )}\n                        <div className=\"message-time\">\n                          {formatTime(message.date)}\n                        </div>\n                      </Message>\n                    </MessageGroup>\n                  );\n                })\n              ) : (\n                <NewChatWelcome>\n                  <div className=\"welcome-content\">\n                    <div className=\"match-icon\">💕</div>\n                    <h3>Взаимная симпатия!</h3>\n                    <p>У вас совпадение с @{selectedChat}</p>\n                    <p className=\"subtitle\">Начните общение первым сообщением</p>\n                    \n                    <div className=\"suggestions\">\n                      <h4>Идеи для первого сообщения:</h4>\n                      <div className=\"suggestion-buttons\">\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Рад нашему совпадению 😊')}\n                        >\n                          Привет! Рад нашему совпадению 😊\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Как дела?')}\n                        >\n                          Привет! Как дела?\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Интересно познакомиться поближе')}\n                        >\n                          Интересно познакомиться поближе\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Что планируешь на выходные?')}\n                        >\n                          Что планируешь на выходные?\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </NewChatWelcome>\n              )}\n              \n              {isTyping && (\n                <TypingIndicator>\n                  @{selectedChat} печатает...\n                </TypingIndicator>\n              )}\n              \n              <div ref={messagesEndRef} />\n            </MessagesContainer>\n\n            <MessageInputWrapper $disabled={matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown'}>\n              <MessageInput>\n              <InputContainer>\n                <TextInput\n                  value={messageText}\n                  onChange={(e) => setMessageText(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Напишите сообщение...\"\n                  rows={1}\n                />\n              </InputContainer>\n              \n              <ActionButton \n                className=\"attach\"\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <AttachIcon />\n              </ActionButton>\n              \n              <ActionButton\n                onClick={handleSendMessage}\n                disabled={\n                  !messageText.trim() ||\n                  sendMessageMutation.isLoading ||\n                  (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown')\n                }\n              >\n                <SendIcon />\n              </ActionButton>\n              \n              <HiddenInput\n                ref={fileInputRef}\n                type=\"file\"\n                onChange={handleFileUpload}\n              />\n            </MessageInput>\n            </MessageInputWrapper>\n          </>\n        ) : (\n          <EmptyState>\n            <div className=\"content\">\n              <div className=\"icon\">💬</div>\n              <h3>Выберите чат</h3>\n              <p>Выберите диалог из списка, чтобы начать общение, или найдите нового собеседника</p>\n            </div>\n          </EmptyState>\n        )}\n      </ChatWindow>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;","import React, { useState, useMemo, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { adsAPI, apiUtils, clubsAPI } from '../services/api';\nimport { LocationSelector, CitySelector } from '../components/Geography';\nimport {\n  PageContainer,\n  ContentCard,\n  Button,\n  Input,\n  Select,\n  TextArea,\n  Form,\n  FormGroup,\n  Label,\n  ErrorText,\n  Grid,\n  Card,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Avatar,\n  FlexContainer,\n  LoadingSpinner,\n  SearchIcon,\n  PlusIcon,\n  CloseIcon,\n  EditIcon,\n  MessageIcon\n} from '../components/UI';\n\n// Дополнительные иконки\nconst FilterIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst AdsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst Header = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 32px;\n  font-weight: 700;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  \n  @media (max-width: 768px) {\n    font-size: 28px;\n    text-align: center;\n  }\n`;\n\nconst Filters = styled(ContentCard)`\n  margin-bottom: 30px;\n  padding: 25px;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst FiltersTitle = styled.h3`\n  margin: 0 0 20px 0;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FiltersGrid = styled(Grid)`\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst SearchInputWrapper = styled.div`\n  position: relative;\n  \n  input {\n    padding-left: 45px;\n  }\n  \n  .search-icon {\n    position: absolute;\n    left: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #a0aec0;\n    z-index: 1;\n  }\n`;\n\nconst AdsGrid = styled(Grid)`\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 25px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n  }\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst AdCard = styled(Card)`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n    border-color: #dc3522;\n  }\n`;\n\nconst AdImage = styled.div`\n  width: 100%;\n  height: 200px;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center;\n  background-color: #f7fafc;\n  position: relative;\n  \n  ${props => !props.$src && `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%);\n    color: #a0aec0;\n    font-size: 48px;\n  `}\n`;\n\nconst AdTypeBadge = styled.div`\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n`;\n\nconst AdContent = styled.div`\n  padding: 25px;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst AdMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  \n  .author {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-weight: 600;\n    color: #dc3522;\n    font-size: 14px;\n  }\n  \n  .date {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 12px;\n    color: #718096;\n  }\n`;\n\nconst AdTitle = styled.h3`\n  margin: 0 0 12px 0;\n  color: #2d3748;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.3;\n  \n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst AdDescription = styled.p`\n  color: #4a5568;\n  margin: 0 0 20px 0;\n  font-size: 15px;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    -webkit-line-clamp: 2;\n  }\n`;\n\nconst AdActions = styled(FlexContainer)`\n  gap: 10px;\n  \n  .contact-btn {\n    flex: 1;\n  }\n  \n  @media (max-width: 576px) {\n    flex-direction: column;\n    \n    .contact-btn {\n      width: 100%;\n    }\n  }\n`;\n\nconst NoAds = styled.div`\n  text-align: center;\n  color: #718096;\n  padding: 80px 20px;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 24px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0 0 30px 0;\n    font-size: 16px;\n    line-height: 1.5;\n    max-width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 60px 20px;\n    \n    .icon {\n      font-size: 48px;\n    }\n    \n    h3 {\n      font-size: 20px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst StatsCard = styled(Card)`\n  text-align: center;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  padding: 20px;\n  \n  .number {\n    font-size: 28px;\n    font-weight: 700;\n    color: #dc3522;\n    margin-bottom: 5px;\n  }\n  \n  .label {\n    font-size: 14px;\n    color: #718096;\n    font-weight: 500;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n    \n    .number {\n      font-size: 24px;\n    }\n    \n    .label {\n      font-size: 13px;\n    }\n  }\n`;\n\n// Компонент для загрузки изображения\nconst ImageUpload = ({ image, onImageChange, error }) => {\n  const fileInputRef = useRef(null);\n  const [preview, setPreview] = useState(image ? `/uploads/${image}` : null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Создаем превью\n      const reader = new FileReader();\n      reader.onload = (e) => setPreview(e.target.result);\n      reader.readAsDataURL(file);\n      \n      onImageChange(file);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setPreview(null);\n    onImageChange(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <FormGroup>\n      <Label>Изображение объявления</Label>\n      <div style={{ marginBottom: '10px' }}>\n        {preview && (\n          <div style={{ \n            position: 'relative', \n            display: 'inline-block',\n            marginBottom: '10px'\n          }}>\n            <img \n              src={preview} \n              alt=\"Превью\" \n              style={{ \n                maxWidth: '200px', \n                maxHeight: '200px', \n                borderRadius: '8px',\n                border: '2px solid #e2e8f0'\n              }} \n            />\n            <Button\n              type=\"button\"\n              $variant=\"danger\"\n              $size=\"small\"\n              onClick={handleRemoveImage}\n              style={{\n                position: 'absolute',\n                top: '-8px',\n                right: '-8px',\n                borderRadius: '50%',\n                width: '24px',\n                height: '24px',\n                padding: '0',\n                fontSize: '12px'\n              }}\n            >\n              ×\n            </Button>\n          </div>\n        )}\n      </div>\n      \n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleFileChange}\n        style={{ display: 'none' }}\n      />\n      \n      <Button\n        type=\"button\"\n        $variant=\"secondary\"\n        onClick={() => fileInputRef.current?.click()}\n        style={{ width: '100%' }}\n      >\n        {preview ? 'Изменить изображение' : 'Выбрать изображение'}\n      </Button>\n      \n      {error && <ErrorText>{error}</ErrorText>}\n      \n      <div style={{ \n        fontSize: '12px', \n        color: '#718096', \n        marginTop: '5px' \n      }}>\n        Поддерживаемые форматы: JPEG, PNG, WebP. Максимальный размер: 5MB.\n      </div>\n    </FormGroup>\n  );\n};\n\nconst Ads = () => {\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const [editingAd, setEditingAd] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [filters, setFilters] = useState({\n    type: '',\n    country: '',\n    city: ''\n  });\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n\n  // Проверка владения клубом\n  const { data: clubOwnership } = useQuery(\n    ['club-ownership'],\n    clubsAPI.checkClubOwnership,\n    {\n      retry: false,\n      onError: () => {\n        // Пользователь не владеет клубом\n      }\n    }\n  );\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      country: '',\n      city: ''\n    }\n  });\n\n  // Валидация изображения\n  const validateImage = (file) => {\n    if (!file) return true;\n    \n    const maxSize = 5 * 1024 * 1024; // 5MB\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n    \n    if (file.size > maxSize) {\n      return 'Размер файла не должен превышать 5MB';\n    }\n    \n    if (!allowedTypes.includes(file.type)) {\n      return 'Поддерживаются только форматы: JPEG, PNG, WebP';\n    }\n    \n    return true;\n  };\n\n  // Получение объявлений\n  const { data: adsResponse, isLoading } = useQuery(\n    ['ads', filters],\n    () => adsAPI.getAds(filters),\n    {\n      keepPreviousData: true\n    }\n  );\n\n  // Извлекаем массив объявлений и трансформируем данные\n  const ads = useMemo(() => {\n    if (!adsResponse?.ads) return [];\n    \n    return adsResponse.ads.map(ad => ({\n      ...ad,\n      // Трансформируем поля для соответствия ожиданиям компонента\n      author: ad.author?.login || ad.author,\n      author_avatar: ad.author?.ava || null,\n      title: ad.title || ad.description, // Используем title если есть, иначе description\n      created_at: ad.created_at\n    }));\n  }, [adsResponse]);\n\n  // Мутации\n  const createAdMutation = useMutation(adsAPI.createAd, {\n    onSuccess: () => {\n      toast.success('Объявление создано!');\n      setShowModal(false);\n      reset();\n      queryClient.invalidateQueries('ads');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const updateAdMutation = useMutation(\n    ({ id, data }) => adsAPI.updateAd(id, data),\n    {\n      onSuccess: () => {\n        toast.success('Объявление обновлено!');\n        setShowModal(false);\n        setEditingAd(null);\n        reset();\n        queryClient.invalidateQueries('ads');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const deleteAdMutation = useMutation(adsAPI.deleteAd, {\n    onSuccess: () => {\n      toast.success('Объявление удалено!');\n      queryClient.invalidateQueries('ads');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Обработчики\n  const onSubmit = (data) => {\n    // Валидируем изображение\n    const imageValidation = validateImage(selectedImage);\n    if (imageValidation !== true) {\n      toast.error(imageValidation);\n      return;\n    }\n\n    // Добавляем изображение к данным\n    const formData = {\n      ...data,\n      image: selectedImage\n    };\n\n    if (editingAd) {\n      updateAdMutation.mutate({ id: editingAd.id, data: formData });\n    } else {\n      createAdMutation.mutate(formData);\n    }\n  };\n\n  const handleEdit = (ad) => {\n    setEditingAd(ad);\n    setSelectedImage(null); // Сбрасываем выбранное изображение\n    reset(ad);\n    setShowModal(true);\n  };\n\n  const handleDelete = (adId) => {\n    if (window.confirm('Удалить объявление?')) {\n      deleteAdMutation.mutate(adId);\n    }\n  };\n\n  const handleContact = (authorLogin) => {\n    navigate(`/chat/${authorLogin}`);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setEditingAd(null);\n    setSelectedImage(null);\n    reset();\n  };\n\n  const handleImageChange = (file) => {\n    setSelectedImage(file);\n  };\n\n  // Фильтрация типов объявлений на основе прав пользователя\n  const adTypes = useMemo(() => {\n    const baseTypes = [\n      { value: 'Встречи', label: 'Встречи', icon: '👥' },\n      { value: 'Знакомства', label: 'Знакомства', icon: '💕' },\n      { value: 'Вечеринки', label: 'Вечеринки', icon: '🎉' },\n      { value: 'Общение', label: 'Общение', icon: '💬' }\n    ];\n    \n    // Добавляем \"Мероприятия\" только если пользователь владеет активным клубом\n    if (clubOwnership?.hasActiveClub) {\n      baseTypes.push({ value: 'Мероприятия', label: 'Мероприятия', icon: '🎪' });\n    }\n    \n    // Добавляем \"Все\" в конец\n    baseTypes.push({ value: 'Все', label: 'Все', icon: '📋' });\n    \n    return baseTypes;\n  }, [clubOwnership]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  const getTypeIcon = (type) => {\n    return adTypes.find(t => t.value === type)?.icon || '📋';\n  };\n\n  const getTypeLabel = (type) => {\n    return adTypes.find(t => t.value === type)?.label || 'Другое';\n  };\n\n  // Статистика\n  const stats = {\n    total: ads.length,\n    myAds: ads.filter(ad => ad.author === currentUser?.login).length,\n    parties: ads.filter(ad => ad.type === 'Вечеринки').length,\n    meetings: ads.filter(ad => ad.type === 'Встречи').length\n  };\n\n  if (isLoading) {\n    return (\n      <AdsContainer>\n        <LoadingSpinner />\n      </AdsContainer>\n    );\n  }\n\n  return (\n    <AdsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <Header>\n          <HeaderContent>\n            <Title>Объявления</Title>\n            <Button onClick={() => setShowModal(true)}>\n              <PlusIcon />\n              Создать объявление\n            </Button>\n          </HeaderContent>\n\n          {/* Статистика */}\n          <Grid $columns=\"repeat(auto-fit, minmax(120px, 1fr))\" $gap=\"15px\" style={{ marginBottom: '20px' }}>\n            <StatsCard>\n              <div className=\"number\">{stats.total}</div>\n              <div className=\"label\">Всего</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.myAds}</div>\n              <div className=\"label\">Мои</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.parties}</div>\n              <div className=\"label\">Вечеринки</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.meetings}</div>\n              <div className=\"label\">Встречи</div>\n            </StatsCard>\n          </Grid>\n        </Header>\n\n        <Filters>\n          <FiltersTitle>\n            <FilterIcon />\n            Фильтры\n          </FiltersTitle>\n          <FiltersGrid>\n            <FormGroup>\n              <Label>Тип объявления</Label>\n              <Select\n                value={filters.type}\n                onChange={(e) => setFilters(prev => ({ ...prev, type: e.target.value }))}\n              >\n                <option value=\"\">Все типы</option>\n                {adTypes.map(type => (\n                  <option key={type.value} value={type.value}>\n                    {type.icon} {type.label}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Поиск по локации</Label>\n              <LocationSelector\n                countryValue={filters.country}\n                cityValue={filters.city}\n                onCountryChange={(value) => {\n                  setFilters(prev => ({ ...prev, country: value }));\n                  // Сброс города при смене страны\n                  if (filters.city) {\n                    setFilters(prev => ({ ...prev, city: '' }));\n                  }\n                }}\n                onCityChange={(value) => {\n                  setFilters(prev => ({ ...prev, city: value }));\n                }}\n                required={false}\n                showValidation={false}\n                layout=\"side-by-side\"\n                countryPlaceholder=\"Все страны\"\n                cityPlaceholder=\"Все города\"\n              />\n            </FormGroup>\n          </FiltersGrid>\n        </Filters>\n\n        {ads.length > 0 ? (\n          <AdsGrid>\n            {ads.map(ad => (\n              <AdCard key={ad.id}>\n                <AdImage $src={ad.image ? `/uploads/${ad.image}` : ''}>\n                  {!ad.image && '📸'}\n                  <AdTypeBadge>\n                    {getTypeIcon(ad.type)} {getTypeLabel(ad.type)}\n                  </AdTypeBadge>\n                </AdImage>\n                \n                <AdContent>\n                  <AdMeta>\n                    <div className=\"author\">\n                      <Avatar \n                        $size=\"24px\" \n                        $fontSize=\"12px\"\n                        $src={ad.author_avatar ? `/uploads/${ad.author_avatar}` : ''}\n                      >\n                        {!ad.author_avatar && ad.author.charAt(0).toUpperCase()}\n                      </Avatar>\n                      @{ad.author}\n                    </div>\n                    <div className=\"date\">\n                      <CalendarIcon />\n                      {formatDate(ad.created_at)}\n                    </div>\n                  </AdMeta>\n                  \n                  <AdTitle>{ad.title}</AdTitle>\n                  <AdDescription>{ad.description}</AdDescription>\n                  \n                  <AdActions>\n                    {ad.author !== currentUser?.login ? (\n                      <Button \n                        className=\"contact-btn\"\n                        onClick={() => handleContact(ad.author)}\n                      >\n                        <MessageIcon />\n                        Написать\n                      </Button>\n                    ) : (\n                      <>\n                        <Button \n                          $variant=\"secondary\"\n                          onClick={() => handleEdit(ad)}\n                          style={{ flex: 1 }}\n                        >\n                          <EditIcon />\n                          Изменить\n                        </Button>\n                        <Button \n                          $variant=\"danger\"\n                          onClick={() => handleDelete(ad.id)}\n                          style={{ flex: 1 }}\n                        >\n                          <TrashIcon />\n                          Удалить\n                        </Button>\n                      </>\n                    )}\n                  </AdActions>\n                </AdContent>\n              </AdCard>\n            ))}\n          </AdsGrid>\n        ) : (\n          <NoAds>\n            <div className=\"icon\">📢</div>\n            <h3>Объявлений пока нет</h3>\n            <p>\n              {filters.type || filters.city \n                ? 'По вашим фильтрам ничего не найдено. Попробуйте изменить параметры поиска.'\n                : 'Станьте первым, кто разместит объявление и найдет интересных людей!'\n              }\n            </p>\n            {!filters.type && !filters.city && (\n              <Button onClick={() => setShowModal(true)}>\n                <PlusIcon />\n                Создать первое объявление\n              </Button>\n            )}\n          </NoAds>\n        )}\n      </ContentCard>\n\n      {/* Модальное окно создания/редактирования */}\n      {showModal && (\n        <Modal onClick={handleCloseModal}>\n          <ModalContent $maxWidth=\"600px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>{editingAd ? 'Редактировать объявление' : 'Новое объявление'}</h2>\n              <Button $variant=\"secondary\" $size=\"small\" onClick={handleCloseModal}>\n                <CloseIcon />\n              </Button>\n            </ModalHeader>\n\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label>Заголовок <span className=\"required\">*</span></Label>\n                <Input\n                  {...register('title', { \n                    required: 'Заголовок обязателен',\n                    minLength: { value: 5, message: 'Заголовок должен содержать минимум 5 символов' },\n                    maxLength: { value: 200, message: 'Заголовок не должен превышать 200 символов' }\n                  })}\n                  className={errors.title ? 'error' : ''}\n                  placeholder=\"Введите заголовок объявления\"\n                />\n                {errors.title && <ErrorText>{errors.title.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Тип объявления <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('type', { required: 'Выберите тип' })}\n                  className={errors.type ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите тип</option>\n                  {adTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.icon} {type.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.type && <ErrorText>{errors.type.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Описание <span className=\"required\">*</span></Label>\n                <TextArea\n                  {...register('description', { \n                    required: 'Описание обязательно',\n                    minLength: { value: 20, message: 'Описание должно содержать минимум 20 символов' },\n                    maxLength: { value: 5000, message: 'Описание не должно превышать 5000 символов' }\n                  })}\n                  className={errors.description ? 'error' : ''}\n                  placeholder=\"Подробно опишите ваше объявление...\"\n                  $minHeight=\"120px\"\n                />\n                {errors.description && <ErrorText>{errors.description.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Цена (необязательно)</Label>\n                <Input\n                  {...register('price', {\n                    min: { value: 0, message: 'Цена не может быть отрицательной' },\n                    pattern: { value: /^\\d+(\\.\\d{1,2})?$/, message: 'Введите корректную цену (например: 100 или 100.50)' }\n                  })}\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  className={errors.price ? 'error' : ''}\n                />\n                {errors.price && <ErrorText>{errors.price.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Контактная информация (необязательно)</Label>\n                <TextArea\n                  {...register('contact_info', {\n                    maxLength: { value: 1000, message: 'Контактная информация не должна превышать 1000 символов' }\n                  })}\n                  placeholder=\"Телефон, email или другие способы связи...\"\n                  $minHeight=\"80px\"\n                  className={errors.contact_info ? 'error' : ''}\n                />\n                {errors.contact_info && <ErrorText>{errors.contact_info.message}</ErrorText>}\n              </FormGroup>\n\n              <LocationSelector\n                countryValue={watch('country')}\n                cityValue={watch('city')}\n                onCountryChange={(value) => {\n                  setValue('country', value);\n                  clearErrors('country');\n                  // Сброс города при смене страны\n                  if (watch('city')) {\n                    setValue('city', '');\n                    clearErrors('city');\n                  }\n                }}\n                onCityChange={(value) => {\n                  setValue('city', value);\n                  clearErrors('city');\n                }}\n                countryError={errors.country?.message}\n                cityError={errors.city?.message}\n                required={true}\n                showValidation={true}\n                layout=\"side-by-side\"\n              />\n              \n              {/* Отображение ошибок для полей страны и города */}\n              {errors.country && <ErrorText style={{ marginTop: '-15px', marginBottom: '15px' }}>{errors.country.message}</ErrorText>}\n              {errors.city && <ErrorText style={{ marginTop: '-15px', marginBottom: '15px' }}>{errors.city.message}</ErrorText>}\n              \n              {/* Скрытые поля для react-hook-form валидации */}\n              <input\n                type=\"hidden\"\n                {...register('country', { required: 'Страна обязательна' })}\n              />\n              <input\n                type=\"hidden\"\n                {...register('city', { required: 'Город обязателен' })}\n              />\n\n              {/* Компонент загрузки изображения */}\n              <ImageUpload\n                image={editingAd?.image}\n                onImageChange={handleImageChange}\n                error={errors.image?.message}\n              />\n\n              <FlexContainer $gap=\"15px\" style={{ marginTop: '30px' }}>\n                <Button\n                  type=\"submit\"\n                  disabled={createAdMutation.isLoading || updateAdMutation.isLoading}\n                  style={{ flex: 1 }}\n                >\n                  {editingAd \n                    ? (updateAdMutation.isLoading ? 'Сохранение...' : 'Сохранить изменения') \n                    : (createAdMutation.isLoading ? 'Создание...' : 'Создать объявление')\n                  }\n                </Button>\n                <Button $variant=\"secondary\" type=\"button\" onClick={handleCloseModal}>\n                  Отмена\n                </Button>\n              </FlexContainer>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </AdsContainer>\n  );\n};\n\nexport default Ads;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { adminAPI, apiUtils } from '../services/api';\n\nconst AdminContainer = styled.div`\n  min-height: 100vh;\n  background: ${props => props.theme.colors.background};\n`;\n\nconst AdminHeader = styled.div`\n  background: ${props => props.theme.colors.primary};\n  color: white;\n  padding: ${props => props.theme.spacing.lg};\n  \n  h1 {\n    margin: 0;\n    font-size: ${props => props.theme.fonts.sizes.xlarge};\n  }\n  \n  p {\n    margin: ${props => props.theme.spacing.xs} 0 0 0;\n    opacity: 0.9;\n  }\n`;\n\nconst AdminContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${props => props.theme.spacing.lg};\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing.lg};\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  overflow: hidden;\n  box-shadow: ${props => props.theme.shadow};\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: ${props => props.theme.spacing.md};\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.2s ease;\n  \n  &.active {\n    background: ${props => props.theme.colors.primary};\n    color: white;\n  }\n  \n  &:hover:not(.active) {\n    background: ${props => props.theme.colors.background};\n  }\n`;\n\nconst Card = styled.div`\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.spacing.lg};\n  box-shadow: ${props => props.theme.shadow};\n  margin-bottom: ${props => props.theme.spacing.lg};\n`;\n\nconst CardTitle = styled.h3`\n  margin: 0 0 ${props => props.theme.spacing.md} 0;\n  color: ${props => props.theme.colors.primary};\n  font-size: ${props => props.theme.fonts.sizes.large};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${props => props.theme.spacing.lg};\n  margin-bottom: ${props => props.theme.spacing.lg};\n`;\n\nconst StatCard = styled.div`\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.spacing.lg};\n  box-shadow: ${props => props.theme.shadow};\n  text-align: center;\n  \n  .number {\n    font-size: 2rem;\n    font-weight: bold;\n    color: ${props => props.theme.colors.primary};\n    margin-bottom: ${props => props.theme.spacing.xs};\n  }\n  \n  .label {\n    color: ${props => props.theme.colors.textLight};\n    font-size: ${props => props.theme.fonts.sizes.small};\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    text-align: left;\n    padding: ${props => props.theme.spacing.sm};\n    border-bottom: 1px solid ${props => props.theme.colors.border};\n  }\n  \n  th {\n    background: ${props => props.theme.colors.background};\n    font-weight: bold;\n    color: ${props => props.theme.colors.text};\n  }\n  \n  tr:hover {\n    background: ${props => props.theme.colors.background};\n  }\n`;\n\nconst Button = styled.button`\n  padding: ${props => props.theme.spacing.xs} ${props => props.theme.spacing.sm};\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  cursor: pointer;\n  font-size: ${props => props.theme.fonts.sizes.small};\n  font-weight: bold;\n  transition: all 0.2s ease;\n  margin-right: ${props => props.theme.spacing.xs};\n  \n  &.primary {\n    background: ${props => props.theme.colors.primary};\n    color: white;\n    \n    &:hover {\n      background: ${props => props.theme.colors.primaryDark};\n    }\n  }\n  \n  &.danger {\n    background: ${props => props.theme.colors.error};\n    color: white;\n    \n    &:hover {\n      background: #d32f2f;\n    }\n  }\n  \n  &.warning {\n    background: #ff9800;\n    color: white;\n    \n    &:hover {\n      background: #f57c00;\n    }\n  }\n  \n  &.success {\n    background: #4caf50;\n    color: white;\n    \n    &:hover {\n      background: #388e3c;\n    }\n  }\n  \n  &:disabled {\n    background: ${props => props.theme.colors.border};\n    cursor: not-allowed;\n  }\n`;\n\nconst StatusBadge = styled.span`\n  padding: ${props => props.theme.spacing.xs} ${props => props.theme.spacing.sm};\n  border-radius: 12px;\n  font-size: ${props => props.theme.fonts.sizes.small};\n  font-weight: bold;\n  \n  &.active {\n    background: #4caf50;\n    color: white;\n  }\n  \n  &.banned {\n    background: ${props => props.theme.colors.error};\n    color: white;\n  }\n  \n  &.pending {\n    background: #ff9800;\n    color: white;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing.md};\n  margin-bottom: ${props => props.theme.spacing.lg};\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  padding: ${props => props.theme.spacing.sm};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: ${props => props.theme.fonts.sizes.medium};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${props => props.theme.spacing.sm};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: ${props => props.theme.fonts.sizes.medium};\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Admin = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [userFilters, setUserFilters] = useState({\n    search: '',\n    status: ''\n  });\n  const [adsFilters, setAdsFilters] = useState({\n    search: '',\n    status: ''\n  });\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n\n  // Проверка прав администратора\n  if (!currentUser?.is_admin) {\n    return (\n      <AdminContainer>\n        <AdminContent>\n          <Card>\n            <CardTitle>Доступ запрещен</CardTitle>\n            <p>У вас нет прав для доступа к административной панели.</p>\n          </Card>\n        </AdminContent>\n      </AdminContainer>\n    );\n  }\n\n  // Запросы данных\n  const { data: stats } = useQuery('admin-stats', adminAPI.getStats);\n  \n  const { data: users = [], isLoading: usersLoading } = useQuery(\n    ['admin-users', userFilters],\n    () => adminAPI.getUsers(userFilters),\n    {\n      enabled: activeTab === 'users',\n      keepPreviousData: true\n    }\n  );\n\n  const { data: ads = [], isLoading: adsLoading } = useQuery(\n    ['admin-ads', adsFilters],\n    () => adminAPI.getAds(adsFilters),\n    {\n      enabled: activeTab === 'ads',\n      keepPreviousData: true\n    }\n  );\n\n  const { data: reports = [] } = useQuery(\n    'admin-reports',\n    adminAPI.getReports,\n    {\n      enabled: activeTab === 'reports'\n    }\n  );\n\n  // Мутации\n  const userActionMutation = useMutation(\n    ({ userId, action }) => adminAPI.userAction(userId, action),\n    {\n      onSuccess: (data, variables) => {\n        const actionLabels = {\n          ban: 'заблокирован',\n          unban: 'разблокирован',\n          delete: 'удален',\n          verify: 'верифицирован'\n        };\n        toast.success(`Пользователь ${actionLabels[variables.action]}!`);\n        queryClient.invalidateQueries('admin-users');\n        queryClient.invalidateQueries('admin-stats');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const adActionMutation = useMutation(\n    ({ adId, action }) => adminAPI.adAction(adId, action),\n    {\n      onSuccess: (data, variables) => {\n        const actionLabels = {\n          approve: 'одобрено',\n          reject: 'отклонено',\n          delete: 'удалено'\n        };\n        toast.success(`Объявление ${actionLabels[variables.action]}!`);\n        queryClient.invalidateQueries('admin-ads');\n        queryClient.invalidateQueries('admin-stats');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const reportActionMutation = useMutation(\n    ({ reportId, action }) => adminAPI.reportAction(reportId, action),\n    {\n      onSuccess: () => {\n        toast.success('Жалоба обработана!');\n        queryClient.invalidateQueries('admin-reports');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Обработчики\n  const handleUserAction = (userId, action) => {\n    const confirmMessages = {\n      ban: 'Заблокировать пользователя?',\n      unban: 'Разблокировать пользователя?',\n      delete: 'Удалить пользователя? Это действие необратимо!',\n      verify: 'Верифицировать пользователя?'\n    };\n\n    if (window.confirm(confirmMessages[action])) {\n      userActionMutation.mutate({ userId, action });\n    }\n  };\n\n  const handleAdAction = (adId, action) => {\n    const confirmMessages = {\n      approve: 'Одобрить объявление?',\n      reject: 'Отклонить объявление?',\n      delete: 'Удалить объявление?'\n    };\n\n    if (window.confirm(confirmMessages[action])) {\n      adActionMutation.mutate({ adId, action });\n    }\n  };\n\n  const handleReportAction = (reportId, action) => {\n    reportActionMutation.mutate({ reportId, action });\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <AdminContainer>\n      <AdminHeader>\n        <h1>Административная панель</h1>\n        <p>Управление платформой SwingFox</p>\n      </AdminHeader>\n\n      <AdminContent>\n        <TabsContainer>\n          <Tab\n            className={activeTab === 'dashboard' ? 'active' : ''}\n            onClick={() => setActiveTab('dashboard')}\n          >\n            Дашборд\n          </Tab>\n          <Tab\n            className={activeTab === 'users' ? 'active' : ''}\n            onClick={() => setActiveTab('users')}\n          >\n            Пользователи\n          </Tab>\n          <Tab\n            className={activeTab === 'ads' ? 'active' : ''}\n            onClick={() => setActiveTab('ads')}\n          >\n            Объявления\n          </Tab>\n          <Tab\n            className={activeTab === 'reports' ? 'active' : ''}\n            onClick={() => setActiveTab('reports')}\n          >\n            Жалобы\n          </Tab>\n        </TabsContainer>\n\n        {activeTab === 'dashboard' && (\n          <>\n            <StatsGrid>\n              <StatCard>\n                <div className=\"number\">{stats?.total_users || 0}</div>\n                <div className=\"label\">Всего пользователей</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.active_users || 0}</div>\n                <div className=\"label\">Активных пользователей</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.total_ads || 0}</div>\n                <div className=\"label\">Всего объявлений</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.pending_reports || 0}</div>\n                <div className=\"label\">Новых жалоб</div>\n              </StatCard>\n            </StatsGrid>\n\n            <Card>\n              <CardTitle>Последняя активность</CardTitle>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Время</th>\n                    <th>Пользователь</th>\n                    <th>Действие</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats?.recent_activity?.map((activity, index) => (\n                    <tr key={index}>\n                      <td>{formatDate(activity.timestamp)}</td>\n                      <td>@{activity.user}</td>\n                      <td>{activity.action}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'users' && (\n          <>\n            <SearchContainer>\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск пользователей...\"\n                value={userFilters.search}\n                onChange={(e) => setUserFilters(prev => ({ ...prev, search: e.target.value }))}\n              />\n              <Select\n                value={userFilters.status}\n                onChange={(e) => setUserFilters(prev => ({ ...prev, status: e.target.value }))}\n              >\n                <option value=\"\">Все статусы</option>\n                <option value=\"active\">Активные</option>\n                <option value=\"banned\">Заблокированные</option>\n                <option value=\"verified\">Верифицированные</option>\n              </Select>\n            </SearchContainer>\n\n            <Card>\n              <CardTitle>Пользователи</CardTitle>\n              {usersLoading ? (\n                <div>Загрузка...</div>\n              ) : (\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>Логин</th>\n                      <th>Email</th>\n                      <th>Регистрация</th>\n                      <th>Статус</th>\n                      <th>Последний вход</th>\n                      <th>Действия</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {users.map(user => (\n                      <tr key={user.id}>\n                        <td>@{user.login}</td>\n                        <td>{user.email}</td>\n                        <td>{formatDate(user.created_at)}</td>\n                        <td>\n                          <StatusBadge className={user.banned ? 'banned' : 'active'}>\n                            {user.banned ? 'Заблокирован' : 'Активен'}\n                          </StatusBadge>\n                          {user.verified && <StatusBadge className=\"success\">Верифицирован</StatusBadge>}\n                        </td>\n                        <td>{user.last_seen ? formatDate(user.last_seen) : 'Никогда'}</td>\n                        <td>\n                          {user.banned ? (\n                            <Button \n                              className=\"success\"\n                              onClick={() => handleUserAction(user.id, 'unban')}\n                            >\n                              Разблокировать\n                            </Button>\n                          ) : (\n                            <Button \n                              className=\"warning\"\n                              onClick={() => handleUserAction(user.id, 'ban')}\n                            >\n                              Заблокировать\n                            </Button>\n                          )}\n                          {!user.verified && (\n                            <Button \n                              className=\"primary\"\n                              onClick={() => handleUserAction(user.id, 'verify')}\n                            >\n                              Верифицировать\n                            </Button>\n                          )}\n                          <Button \n                            className=\"danger\"\n                            onClick={() => handleUserAction(user.id, 'delete')}\n                          >\n                            Удалить\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'ads' && (\n          <>\n            <SearchContainer>\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск объявлений...\"\n                value={adsFilters.search}\n                onChange={(e) => setAdsFilters(prev => ({ ...prev, search: e.target.value }))}\n              />\n              <Select\n                value={adsFilters.status}\n                onChange={(e) => setAdsFilters(prev => ({ ...prev, status: e.target.value }))}\n              >\n                <option value=\"\">Все статусы</option>\n                <option value=\"pending\">На модерации</option>\n                <option value=\"approved\">Одобренные</option>\n                <option value=\"rejected\">Отклоненные</option>\n              </Select>\n            </SearchContainer>\n\n            <Card>\n              <CardTitle>Объявления</CardTitle>\n              {adsLoading ? (\n                <div>Загрузка...</div>\n              ) : (\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>Заголовок</th>\n                      <th>Автор</th>\n                      <th>Тип</th>\n                      <th>Создано</th>\n                      <th>Статус</th>\n                      <th>Действия</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {ads.map(ad => (\n                      <tr key={ad.id}>\n                        <td>{ad.title}</td>\n                        <td>@{ad.author}</td>\n                        <td>{ad.type}</td>\n                        <td>{formatDate(ad.created_at)}</td>\n                        <td>\n                          <StatusBadge className={ad.status || 'pending'}>\n                            {ad.status === 'approved' ? 'Одобрено' : \n                             ad.status === 'rejected' ? 'Отклонено' : 'На модерации'}\n                          </StatusBadge>\n                        </td>\n                        <td>\n                          {(!ad.status || ad.status === 'pending') && (\n                            <>\n                              <Button \n                                className=\"success\"\n                                onClick={() => handleAdAction(ad.id, 'approve')}\n                              >\n                                Одобрить\n                              </Button>\n                              <Button \n                                className=\"warning\"\n                                onClick={() => handleAdAction(ad.id, 'reject')}\n                              >\n                                Отклонить\n                              </Button>\n                            </>\n                          )}\n                          <Button \n                            className=\"danger\"\n                            onClick={() => handleAdAction(ad.id, 'delete')}\n                          >\n                            Удалить\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'reports' && (\n          <Card>\n            <CardTitle>Жалобы пользователей</CardTitle>\n            <Table>\n              <thead>\n                <tr>\n                  <th>От кого</th>\n                  <th>На кого</th>\n                  <th>Причина</th>\n                  <th>Время</th>\n                  <th>Статус</th>\n                  <th>Действия</th>\n                </tr>\n              </thead>\n              <tbody>\n                {reports.map(report => (\n                  <tr key={report.id}>\n                    <td>@{report.from_user}</td>\n                    <td>@{report.target_user}</td>\n                    <td>{report.reason}</td>\n                    <td>{formatDate(report.created_at)}</td>\n                    <td>\n                      <StatusBadge className={report.status || 'pending'}>\n                        {report.status === 'resolved' ? 'Решено' : 'Новая'}\n                      </StatusBadge>\n                    </td>\n                    <td>\n                      {(!report.status || report.status === 'pending') && (\n                        <Button \n                          className=\"primary\"\n                          onClick={() => handleReportAction(report.id, 'resolve')}\n                        >\n                          Закрыть\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card>\n        )}\n      </AdminContent>\n    </AdminContainer>\n  );\n};\n\nexport default Admin;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Button, Avatar } from './UI';\n\nconst heartBeat = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`;\n\nconst sparkle = keyframes`\n  0%, 100% { opacity: 0; transform: scale(0) rotate(0deg); }\n  50% { opacity: 1; transform: scale(1) rotate(180deg); }\n`;\n\nconst MatchContainer = styled(motion.div)`\n  background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 50%, #ffa8a8 100%);\n  border-radius: 20px;\n  padding: 25px;\n  margin: 15px 0;\n  color: white;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n    animation: ${sparkle} 3s infinite;\n  }\n`;\n\nconst MatchHeader = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n  position: relative;\n  z-index: 2;\n`;\n\nconst MatchIcon = styled.div`\n  font-size: 48px;\n  margin-bottom: 10px;\n  animation: ${heartBeat} 2s infinite;\n  filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.5));\n`;\n\nconst MatchTitle = styled.h3`\n  margin: 0 0 5px 0;\n  font-size: 24px;\n  font-weight: bold;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst MatchSubtitle = styled.p`\n  margin: 0;\n  font-size: 16px;\n  opacity: 0.9;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst MatchContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n  position: relative;\n  z-index: 2;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  text-align: center;\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-top: 10px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: scale(1.05);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst HeartConnector = styled.div`\n  font-size: 32px;\n  animation: ${heartBeat} 1.5s infinite;\n  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.6));\n  \n  @media (max-width: 768px) {\n    transform: rotate(90deg);\n    font-size: 28px;\n  }\n`;\n\nconst MatchActions = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: center;\n  margin-top: 20px;\n  position: relative;\n  z-index: 2;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ChatButton = styled(Button)`\n  background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);\n  border: none;\n  padding: 12px 24px;\n  font-weight: 600;\n  box-shadow: 0 4px 15px rgba(68, 160, 141, 0.3);\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45b7b8 0%, #3d8b7a 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(68, 160, 141, 0.4);\n  }\n`;\n\nconst DismissButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 12px 24px;\n  \n  &:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst TimeStamp = styled.div`\n  text-align: center;\n  margin-top: 15px;\n  font-size: 12px;\n  opacity: 0.8;\n  position: relative;\n  z-index: 2;\n`;\n\nconst MatchNotification = ({ \n  notification, \n  onDismiss, \n  onStartChat,\n  isAnimatingOut = false\n}) => {\n  const navigate = useNavigate();\n  \n  const matchUser = notification?.data?.match_user || notification?.from_user;\n  const userData = notification?.from_user_data;\n\n  const handleStartChat = () => {\n    if (onStartChat) {\n      onStartChat(matchUser);\n    } else {\n      navigate(`/chat/${matchUser}`);\n    }\n  };\n\n  const handleViewProfile = () => {\n    navigate(`/profile/${matchUser}`);\n  };\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffMinutes < 1) return 'только что';\n    if (diffMinutes < 60) return `${diffMinutes} мин назад`;\n    if (diffMinutes < 1440) return `${Math.floor(diffMinutes / 60)} ч назад`;\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  return (\n    <MatchContainer\n      initial={{ scale: 0.8, opacity: 0 }}\n      animate={{ \n        scale: isAnimatingOut ? 0.8 : 1, \n        opacity: isAnimatingOut ? 0 : 1,\n        y: isAnimatingOut ? -20 : 0\n      }}\n      exit={{ scale: 0.8, opacity: 0 }}\n      transition={{ \n        type: \"spring\", \n        duration: isAnimatingOut ? 0.3 : 0.6,\n        bounce: isAnimatingOut ? 0 : 0.4 \n      }}\n    >\n      <MatchHeader>\n        <MatchIcon>💕</MatchIcon>\n        <MatchTitle>Взаимная симпатия!</MatchTitle>\n        <MatchSubtitle>У вас совпадение! Начните общение прямо сейчас</MatchSubtitle>\n      </MatchHeader>\n\n      <MatchContent>\n        <UserInfo>\n          <Avatar\n            $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n            $size=\"80px\"\n            $fontSize=\"32px\"\n            $online={true}\n          >\n            {!userData?.avatar && 'Я'}\n          </Avatar>\n          <UserName>Вы</UserName>\n        </UserInfo>\n\n        <HeartConnector>💖</HeartConnector>\n\n        <UserInfo>\n          <Avatar\n            $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n            $size=\"80px\"\n            $fontSize=\"32px\"\n            $online={true}\n          >\n            {!userData?.avatar && (matchUser ? matchUser.charAt(0).toUpperCase() : '?')}\n          </Avatar>\n          <UserName \n            style={{ cursor: 'pointer' }}\n            onClick={() => handleViewProfile()}\n            title=\"Кликните, чтобы перейти в профиль\"\n          >\n            @{matchUser || 'Пользователь'}\n          </UserName>\n        </UserInfo>\n      </MatchContent>\n\n      <MatchActions>\n        <ChatButton onClick={handleStartChat}>\n          💬 Начать чат\n        </ChatButton>\n        \n        <DismissButton $variant=\"secondary\" onClick={handleViewProfile}>\n          👀 Профиль\n        </DismissButton>\n        \n        {onDismiss && (\n          <DismissButton $variant=\"secondary\" onClick={onDismiss}>\n            ✕ Закрыть\n          </DismissButton>\n        )}\n      </MatchActions>\n\n      <TimeStamp>\n        {formatTime(notification.created_at)}\n      </TimeStamp>\n    </MatchContainer>\n  );\n};\n\nexport default MatchNotification;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled, { css } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { notificationsAPI, apiUtils } from '../services/api';\nimport MatchNotification from '../components/MatchNotification';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  BellIcon,\n  CheckIcon,\n  TrashIcon,\n  FilterIcon,\n  MessageIcon,\n  HeartIcon,\n  GiftIcon,\n  StarIcon,\n  UsersIcon,\n  EyeIcon,\n  CrownIcon\n} from '../components/UI';\n\n// Иконки для типов уведомлений\nconst getNotificationIcon = (type) => {\n  const iconMap = {\n    message: MessageIcon,\n    like: HeartIcon,\n    visit: EyeIcon,\n    gift: GiftIcon,\n    match: HeartIcon,\n    event: UsersIcon,\n    club: UsersIcon,\n    subscription: CrownIcon,\n    admin: BellIcon,\n    system: BellIcon,\n    rating: StarIcon,\n    photo: EyeIcon,\n    comment: MessageIcon,\n    invitation: UsersIcon,\n    reminder: BellIcon,\n    warning: BellIcon,\n    promotion: CrownIcon\n  };\n  \n  const IconComponent = iconMap[type] || BellIcon;\n  return <IconComponent />;\n};\n\n// Цвета для типов уведомлений\nconst getNotificationColor = (type) => {\n  const colorMap = {\n    message: '#4299e1',\n    like: '#e53e3e',\n    visit: '#38a169',\n    gift: '#d69e2e',\n    match: '#e53e3e',\n    event: '#805ad5',\n    club: '#805ad5',\n    subscription: '#d69e2e',\n    admin: '#dc3522',\n    system: '#4a5568',\n    rating: '#ed8936',\n    photo: '#38a169',\n    comment: '#4299e1',\n    invitation: '#805ad5',\n    reminder: '#4a5568',\n    warning: '#f56565',\n    promotion: '#d69e2e'\n  };\n  \n  return colorMap[type] || '#4a5568';\n};\n\nconst NotificationsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst NotificationsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst FilterTabs = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst FilterTab = styled.button`\n  padding: 10px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  ${props => props.$count > 0 && `\n    &::after {\n      content: '${props.$count}';\n      position: absolute;\n      top: -5px;\n      right: -5px;\n      background: #f56565;\n      color: white;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      font-size: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n    }\n  `}\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px;\n    font-size: 13px;\n  }\n`;\n\nconst BulkActions = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst NotificationsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst NotificationItem = styled(motion.div)`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-left: 4px solid ${props => props.$color};\n  transition: all 0.3s ease;\n  position: relative;\n  \n  ${props => !props.$isRead && css`\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.02) 0%, rgba(255, 107, 88, 0.02) 100%);\n    border-left-color: #dc3522;\n    \n    &::before {\n      content: '';\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      width: 8px;\n      height: 8px;\n      background: #dc3522;\n      border-radius: 50%;\n    }\n  `}\n  \n  &:hover {\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    transform: translateY(-2px);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst NotificationContent = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: flex-start;\n`;\n\nconst NotificationIcon = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 12px;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  \n  @media (max-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst NotificationDetails = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst NotificationTitle = styled.h4`\n  margin: 0 0 5px 0;\n  color: #2d3748;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.3;\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst NotificationMessage = styled.p`\n  margin: 0 0 10px 0;\n  color: #4a5568;\n  font-size: 14px;\n  line-height: 1.4;\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst NotificationMeta = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst NotificationTime = styled.span`\n  font-size: 12px;\n  color: #718096;\n`;\n\nconst NotificationPriority = styled.span`\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-size: 11px;\n  font-weight: 500;\n  text-transform: uppercase;\n  \n  ${props => {\n    switch (props.$priority) {\n      case 'high':\n        return 'background: #fed7d7; color: #c53030;';\n      case 'normal':\n        return 'background: #bee3f8; color: #2b6cb0;';\n      case 'low':\n        return 'background: #e2e8f0; color: #4a5568;';\n      default:\n        return 'background: #e2e8f0; color: #4a5568;';\n    }\n  }}\n`;\n\nconst NotificationActions = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\n// Кнопка для перехода в профиль\nconst ProfileButton = styled(IconButton)`\n  background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%);\n  color: white;\n  border: 2px solid #3182ce;\n  transition: all 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #3182ce 0%, #2c5aa0 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(66, 153, 225, 0.4);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px;\n    \n    .icon {\n      font-size: 48px;\n    }\n    \n    h3 {\n      font-size: 18px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst Notifications = () => {\n  const [filter, setFilter] = useState('all');\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\n  const [localNotifications, setLocalNotifications] = useState([]);\n  const [animatingOut, setAnimatingOut] = useState(new Set());\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n\n  // Получение уведомлений\n  const { data: notificationsData, isLoading, refetch } = useQuery(\n    ['notifications', filter],\n    () => {\n      const filters = {};\n      if (filter === 'unread') filters.unread = true;\n      if (filter !== 'all' && filter !== 'unread') filters.type = filter;\n      return notificationsAPI.getNotifications(filters);\n    },\n    {\n      refetchInterval: 30000, // Обновление каждые 30 секунд\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const notifications = notificationsData?.notifications || [];\n  const unreadCount = notificationsData?.unread_count || 0;\n\n  // Обновляем локальное состояние при изменении данных\n  useEffect(() => {\n    setLocalNotifications(notifications);\n  }, [notifications]);\n\n  // Фильтруем уведомления в зависимости от выбранного фильтра\n  const filteredNotifications = useMemo(() => {\n    if (filter === 'unread') {\n      return localNotifications.filter(notif => !notif.is_read);\n    } else if (filter !== 'all') {\n      return localNotifications.filter(notif => notif.type === filter);\n    }\n    return localNotifications;\n  }, [localNotifications, filter]);\n\n  // Подсчитаем количество по типам для фильтров\n  const countByType = useMemo(() => {\n    return localNotifications.reduce((acc, notif) => {\n      acc[notif.type] = (acc[notif.type] || 0) + 1;\n      return acc;\n    }, {});\n  }, [localNotifications]);\n\n  // Подсчитаем количество непрочитанных\n  const currentUnreadCount = useMemo(() => {\n    return localNotifications.filter(notif => !notif.is_read).length;\n  }, [localNotifications]);\n\n  // Мутации\n  const markAsReadMutation = useMutation(notificationsAPI.markAsRead, {\n    onSuccess: (data, variables) => {\n      // Обновляем локальное состояние\n      setLocalNotifications(prev => \n        prev.map(notif => \n          notif.id === variables \n            ? { ...notif, is_read: true }\n            : notif\n        )\n      );\n      \n      // Обновляем счетчик непрочитанных\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          unread_count: Math.max(0, (oldData.unread_count || 0) - 1)\n        };\n      });\n      \n      toast.success('Уведомление отмечено как прочитанное');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const markAllAsReadMutation = useMutation(notificationsAPI.markAllAsRead, {\n    onSuccess: () => {\n      // Обновляем локальное состояние\n      setLocalNotifications(prev => \n        prev.map(notif => ({ ...notif, is_read: true }))\n      );\n      \n      // Обновляем счетчик непрочитанных\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          unread_count: 0\n        };\n      });\n      \n      toast.success('Все уведомления отмечены как прочитанные');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteNotificationMutation = useMutation(notificationsAPI.deleteNotification, {\n    onSuccess: (data, variables) => {\n      // Удаляем уведомление из локального состояния\n      setLocalNotifications(prev => \n        prev.filter(notif => notif.id !== variables)\n      );\n      \n      toast.success('Уведомление удалено');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteReadNotificationsMutation = useMutation(notificationsAPI.deleteReadNotifications, {\n    onSuccess: () => {\n      // Удаляем прочитанные уведомления из локального состояния\n      setLocalNotifications(prev => \n        prev.filter(notif => !notif.is_read)\n      );\n      \n      toast.success('Прочитанные уведомления удалены');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Функция для перехода в профиль пользователя\n  const handleViewProfile = (username) => {\n    if (username) {\n      navigate(`/profile/${username}`);\n    }\n  };\n\n  // Функция для определения, можно ли перейти в профиль\n  const canViewProfile = (notification) => {\n    // Можно перейти в профиль для уведомлений, где есть информация о пользователе\n    return notification.from_user && \n           ['like', 'superlike', 'gift', 'profile_visit', 'image_like', 'rating', 'comment'].includes(notification.type);\n  };\n\n  // Обработчики\n  const handleMarkAsRead = (id) => {\n    // Добавляем ID в множество анимирующих уведомлений\n    setAnimatingOut(prev => new Set(prev).add(id));\n    \n    // Запускаем мутацию\n    markAsReadMutation.mutate(id);\n    \n    // Если фильтр \"Непрочитанные\", то скрываем уведомление через анимацию\n    if (filter === 'unread') {\n      setTimeout(() => {\n        setLocalNotifications(prev => \n          prev.filter(notif => notif.id !== id)\n        );\n        setAnimatingOut(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(id);\n          return newSet;\n        });\n      }, 300); // Время анимации\n    }\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('Удалить это уведомление?')) {\n      deleteNotificationMutation.mutate(id);\n    }\n  };\n\n  const handleMarkAllAsRead = () => {\n    if (window.confirm('Отметить все уведомления как прочитанные?')) {\n      markAllAsReadMutation.mutate();\n    }\n  };\n\n  const handleDeleteRead = () => {\n    if (window.confirm('Удалить все прочитанные уведомления?')) {\n      deleteReadNotificationsMutation.mutate();\n    }\n  };\n\n  // Фильтры\n  const filterTabs = [\n    { key: 'all', label: 'Все', count: localNotifications.length },\n    { key: 'unread', label: 'Непрочитанные', count: currentUnreadCount },\n    { key: 'match', label: '💕 Мэтчи', count: countByType.match || 0 },\n    { key: 'message', label: 'Сообщения', count: countByType.message || 0 },\n    { key: 'like', label: 'Лайки', count: countByType.like || 0 },\n    { key: 'gift', label: 'Подарки', count: countByType.gift || 0 },\n    { key: 'system', label: 'Системные', count: countByType.system || 0 }\n  ];\n\n  if (isLoading) {\n    return (\n      <NotificationsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </NotificationsContainer>\n    );\n  }\n\n  return (\n    <NotificationsContainer>\n      <ContentCard $maxWidth=\"1000px\">\n        <FlexContainer $justify=\"space-between\" $align=\"center\" $wrap>\n          <SectionTitle>\n            <BellIcon />\n            Уведомления\n          </SectionTitle>\n          <Button $size=\"small\" onClick={() => refetch()}>\n            Обновить\n          </Button>\n        </FlexContainer>\n\n        <NotificationsHeader>\n          <FilterTabs>\n            {filterTabs.map(tab => (\n              <FilterTab\n                key={tab.key}\n                $active={filter === tab.key}\n                $count={tab.key === 'unread' ? unreadCount : 0}\n                onClick={() => setFilter(tab.key)}\n              >\n                {tab.label}\n              </FilterTab>\n            ))}\n          </FilterTabs>\n\n          <BulkActions>\n            {currentUnreadCount > 0 && (\n              <Button\n                $size=\"small\"\n                $variant=\"secondary\"\n                onClick={handleMarkAllAsRead}\n                disabled={markAllAsReadMutation.isLoading}\n              >\n                <CheckIcon />\n                Отметить все\n              </Button>\n            )}\n            \n            <Button\n              $size=\"small\"\n              $variant=\"danger\"\n              onClick={handleDeleteRead}\n              disabled={deleteReadNotificationsMutation.isLoading}\n            >\n              <TrashIcon />\n              Удалить прочитанные\n            </Button>\n          </BulkActions>\n        </NotificationsHeader>\n\n        {filteredNotifications.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">🔔</div>\n            <h3>Нет уведомлений</h3>\n            <p>\n              {filter === 'unread' \n                ? 'У вас нет непрочитанных уведомлений'\n                : 'Здесь будут отображаться ваши уведомления'\n              }\n            </p>\n          </EmptyState>\n        ) : (\n          <NotificationsList>\n            <AnimatePresence>\n              {filteredNotifications.map((notification) => {\n                // Специальная обработка для мэтч-уведомлений\n                if (notification.type === 'match') {\n                  return (\n                    <MatchNotification\n                      key={notification.id}\n                      notification={notification}\n                      onDismiss={() => handleMarkAsRead(notification.id)}\n                      onStartChat={(username) => {\n                        // Перенаправляем в чат\n                        window.location.href = `/chat/${username}`;\n                      }}\n                      isAnimatingOut={animatingOut.has(notification.id)}\n                    />\n                  );\n                }\n\n                // Обычные уведомления\n                return (\n                  <NotificationItem\n                    key={notification.id}\n                    $color={getNotificationColor(notification.type)}\n                    $isRead={notification.is_read}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ \n                      opacity: animatingOut.has(notification.id) ? 0 : 1, \n                      y: animatingOut.has(notification.id) ? -20 : 0,\n                      scale: animatingOut.has(notification.id) ? 0.8 : 1\n                    }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <NotificationContent>\n                      <NotificationIcon $color={getNotificationColor(notification.type)}>\n                        {getNotificationIcon(notification.type)}\n                      </NotificationIcon>\n                      \n                      <NotificationDetails>\n                        <NotificationTitle>\n                          {notification.title}\n                        </NotificationTitle>\n                        \n                        <NotificationMessage>\n                          {notification.type === 'like' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> лайкнул вашу анкету!\n                            </span>\n                          )}\n                          {notification.type === 'superlike' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> отправил вам суперлайк\n                              {notification.data?.message && (\n                                <span>: <i>«{notification.data.message}»</i></span>\n                              )}\n                            </span>\n                          )}\n                          {notification.type === 'gift' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> отправил вам подарок\n                              {notification.data?.gift_type && (\n                                <span>: {notification.data.gift_type}</span>\n                              )}\n                            </span>\n                          )}\n                          {notification.type === 'profile_visit' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> посмотрел ваш профиль\n                            </span>\n                          )}\n                          {notification.type === 'image_like' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> лайкнул ваше фото\n                            </span>\n                          )}\n                          {notification.type === 'rating' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> оценил ваш профиль\n                            </span>\n                          )}\n                          {notification.type === 'comment' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> оставил комментарий\n                            </span>\n                          )}\n                          {!['like', 'superlike', 'gift', 'profile_visit', 'image_like', 'rating', 'comment'].includes(notification.type) && (\n                            notification.message\n                          )}\n                        </NotificationMessage>\n                        \n                        <NotificationMeta>\n                          <NotificationTime>\n                            {apiUtils.formatTimeAgo(notification.created_at)}\n                          </NotificationTime>\n                          \n                          <NotificationPriority $priority={notification.priority}>\n                            {notification.priority}\n                          </NotificationPriority>\n                          \n                          {notification.from_user && (\n                            <span \n                              style={{ \n                                fontSize: '12px', \n                                color: '#dc3522', \n                                cursor: 'pointer',\n                                textDecoration: 'underline',\n                                fontWeight: '500',\n                                transition: 'all 0.2s ease'\n                              }}\n                              onClick={() => handleViewProfile(notification.from_user)}\n                              title=\"Кликните, чтобы перейти в профиль\"\n                              onMouseEnter={(e) => {\n                                e.target.style.transform = 'scale(1.05)';\n                                e.target.style.color = '#ff6b58';\n                              }}\n                              onMouseLeave={(e) => {\n                                e.target.style.transform = 'scale(1)';\n                                e.target.style.color = '#dc3522';\n                              }}\n                            >\n                              от {notification.from_user}\n                            </span>\n                          )}\n                        </NotificationMeta>\n                      </NotificationDetails>\n                      \n                      <NotificationActions>\n                        {/* Кнопка для перехода в профиль */}\n                        {canViewProfile(notification) && (\n                          <ProfileButton\n                            $size=\"35px\"\n                            $variant=\"secondary\"\n                            onClick={() => handleViewProfile(notification.from_user)}\n                            title=\"Посмотреть профиль\"\n                          >\n                            👤\n                          </ProfileButton>\n                        )}\n                        \n                        {!notification.is_read && (\n                          <IconButton\n                            $size=\"35px\"\n                            $variant=\"secondary\"\n                            onClick={() => handleMarkAsRead(notification.id)}\n                            title=\"Отметить как прочитанное\"\n                          >\n                            <CheckIcon />\n                          </IconButton>\n                        )}\n                        \n                        <IconButton\n                          $size=\"35px\"\n                          $variant=\"secondary\"\n                          onClick={() => handleDelete(notification.id)}\n                          title=\"Удалить уведомление\"\n                        >\n                          <TrashIcon />\n                        </IconButton>\n                      </NotificationActions>\n                    </NotificationContent>\n                  </NotificationItem>\n                );\n              })}\n            </AnimatePresence>\n          </NotificationsList>\n        )}\n      </ContentCard>\n    </NotificationsContainer>\n  );\n};\n\nexport default Notifications;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { clubsAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  TextArea,\n  Select,\n  Avatar,\n  UsersIcon,\n  PlusIcon,\n  CloseIcon,\n  SearchIcon,\n  FilterIcon,\n  CheckIcon,\n  EditIcon\n} from '../components/UI';\n\nconst ClubsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst FilterRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: 15px;\n  align-items: end;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n`;\n\nconst SearchInput = styled.div`\n  position: relative;\n  \n  input {\n    width: 100%;\n    padding: 12px 16px 12px 45px;\n    border: 2px solid #e2e8f0;\n    border-radius: 10px;\n    font-size: 15px;\n    transition: all 0.3s ease;\n    \n    &:focus {\n      outline: none;\n      border-color: #dc3522;\n      box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n    }\n  }\n  \n  .search-icon {\n    position: absolute;\n    left: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #718096;\n  }\n`;\n\nconst ClubCard = styled(motion.div)`\n  background: white;\n  border-radius: 20px;\n  overflow: hidden;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ClubHeader = styled.div`\n  height: 120px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  position: relative;\n  padding: 20px;\n  color: white;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 20px;\n    background: white;\n    border-radius: 20px 20px 0 0;\n  }\n`;\n\nconst ClubContent = styled.div`\n  padding: 20px;\n`;\n\nconst ClubTitle = styled.h3`\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #2d3748;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ClubDescription = styled.p`\n  margin: 0 0 15px 0;\n  color: #4a5568;\n  font-size: 14px;\n  line-height: 1.4;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst ClubMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst ClubStats = styled.div`\n  display: flex;\n  gap: 15px;\n  font-size: 12px;\n  color: #718096;\n  \n  span {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  }\n`;\n\nconst ClubType = styled.span`\n  padding: 4px 8px;\n  border-radius: 6px;\n  font-size: 11px;\n  font-weight: 500;\n  text-transform: uppercase;\n  \n  ${props => props.$isPrivate ? `\n    background: #fed7d7;\n    color: #c53030;\n  ` : `\n    background: #c6f6d5;\n    color: #276749;\n  `}\n`;\n\nconst MyClubCard = styled(ClubCard)`\n  border: 2px solid #dc3522;\n  \n  ${ClubHeader} {\n    background: linear-gradient(135deg, #38a169 0%, #48bb78 100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0 0 20px 0;\n    font-size: 16px;\n  }\n`;\n\nconst ApplicationCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-left: 4px solid #d69e2e;\n  margin-bottom: 15px;\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 15px;\n  }\n  \n  .applicant {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    \n    .name {\n      font-weight: 600;\n      color: #2d3748;\n    }\n    \n    .date {\n      font-size: 12px;\n      color: #718096;\n    }\n  }\n  \n  .message {\n    margin: 10px 0;\n    color: #4a5568;\n    font-size: 14px;\n    font-style: italic;\n  }\n  \n  .actions {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nconst Clubs = () => {\n  const [activeTab, setActiveTab] = useState('browse');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [selectedClub, setSelectedClub] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [cityFilter, setCityFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const queryClient = useQueryClient();\n\n  // Form state\n  const [clubForm, setClubForm] = useState({\n    name: '',\n    description: '',\n    city: '',\n    is_private: false,\n    max_members: 50\n  });\n\n  // Queries\n  const { data: clubsData, isLoading: isLoadingClubs } = useQuery(\n    ['clubs', searchQuery, cityFilter, typeFilter],\n    () => clubsAPI.getClubs({\n      search: searchQuery,\n      city: cityFilter,\n      type: typeFilter\n    }),\n    {\n      enabled: activeTab === 'browse',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: myClubs, isLoading: isLoadingMyClubs } = useQuery(\n    'my-clubs',\n    clubsAPI.getMyClubs,\n    {\n      enabled: activeTab === 'my-clubs',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: clubApplications, isLoading: isLoadingApplications } = useQuery(\n    ['club-applications', selectedClub?.id],\n    () => clubsAPI.getClubApplications(selectedClub.id),\n    {\n      enabled: !!selectedClub && activeTab === 'my-clubs',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Mutations\n  const createClubMutation = useMutation(clubsAPI.createClub, {\n    onSuccess: () => {\n      toast.success('Клуб создан успешно!');\n      setShowCreateModal(false);\n      setClubForm({\n        name: '',\n        description: '',\n        city: '',\n        is_private: false,\n        max_members: 50\n      });\n      queryClient.invalidateQueries(['clubs']);\n      queryClient.invalidateQueries('my-clubs');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const joinClubMutation = useMutation(\n    ({ clubId, message }) => clubsAPI.joinClub(clubId, message),\n    {\n      onSuccess: () => {\n        toast.success('Заявка на вступление отправлена!');\n        queryClient.invalidateQueries(['clubs']);\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const manageApplicationMutation = useMutation(\n    ({ clubId, applicationId, action, reason }) => \n      clubsAPI.manageApplication(clubId, applicationId, action, reason),\n    {\n      onSuccess: (data, variables) => {\n        toast.success(\n          variables.action === 'approve' \n            ? 'Заявка одобрена!' \n            : 'Заявка отклонена!'\n        );\n        queryClient.invalidateQueries(['club-applications']);\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Handlers\n  const handleCreateClub = (e) => {\n    e.preventDefault();\n    \n    if (!clubForm.name.trim()) {\n      toast.error('Введите название клуба');\n      return;\n    }\n\n    if (!clubForm.description.trim()) {\n      toast.error('Введите описание клуба');\n      return;\n    }\n\n    createClubMutation.mutate(clubForm);\n  };\n\n  const handleJoinClub = (club) => {\n    const message = prompt('Введите сообщение для заявки (необязательно):');\n    if (message !== null) { // Пользователь не отменил\n      joinClubMutation.mutate({\n        clubId: club.id,\n        message: message.trim()\n      });\n    }\n  };\n\n  const handleClubClick = (club) => {\n    setSelectedClub(club);\n    setShowDetailsModal(true);\n  };\n\n  const handleApplicationAction = (applicationId, action) => {\n    const reason = action === 'reject' \n      ? prompt('Причина отклонения (необязательно):') \n      : '';\n    \n    if (action === 'reject' && reason === null) return;\n\n    manageApplicationMutation.mutate({\n      clubId: selectedClub.id,\n      applicationId,\n      action,\n      reason: reason || ''\n    });\n  };\n\n  const filteredClubs = clubsData?.clubs || [];\n  const myClubsList = myClubs?.clubs || [];\n\n  return (\n    <ClubsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"space-between\" $align=\"center\" $wrap>\n          <SectionTitle>\n            <UsersIcon />\n            Клубы и события\n          </SectionTitle>\n          <Button onClick={() => setShowCreateModal(true)}>\n            <PlusIcon />\n            Создать клуб\n          </Button>\n        </FlexContainer>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'browse'}\n            onClick={() => setActiveTab('browse')}\n          >\n            <SearchIcon />\n            Все клубы\n          </Tab>\n          <Tab\n            $active={activeTab === 'my-clubs'}\n            onClick={() => setActiveTab('my-clubs')}\n          >\n            <UsersIcon />\n            Мои клубы\n          </Tab>\n        </TabsContainer>\n\n        {/* Фильтры для просмотра всех клубов */}\n        {activeTab === 'browse' && (\n          <FiltersContainer>\n            <FilterRow>\n              <SearchInput>\n                <div className=\"search-icon\">\n                  <SearchIcon />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск клубов...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </SearchInput>\n              \n              <Select\n                value={cityFilter}\n                onChange={(e) => setCityFilter(e.target.value)}\n                style={{ minWidth: '150px' }}\n              >\n                <option value=\"\">Все города</option>\n                <option value=\"Москва\">Москва</option>\n                <option value=\"Санкт-Петербург\">Санкт-Петербург</option>\n                <option value=\"Екатеринбург\">Екатеринбург</option>\n                <option value=\"Новосибирск\">Новосибирск</option>\n              </Select>\n              \n              <Select\n                value={typeFilter}\n                onChange={(e) => setTypeFilter(e.target.value)}\n                style={{ minWidth: '120px' }}\n              >\n                <option value=\"\">Все типы</option>\n                <option value=\"public\">Открытые</option>\n                <option value=\"private\">Приватные</option>\n              </Select>\n            </FilterRow>\n          </FiltersContainer>\n        )}\n\n        {/* Просмотр всех клубов */}\n        {activeTab === 'browse' && (\n          <div>\n            {isLoadingClubs ? (\n              <LoadingSpinner />\n            ) : filteredClubs.length > 0 ? (\n              <Grid $columns=\"repeat(auto-fill, minmax(300px, 1fr))\" $gap=\"25px\">\n                {filteredClubs.map((club) => (\n                  <ClubCard\n                    key={club.id}\n                    onClick={() => handleClubClick(club)}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <ClubHeader>\n                      <FlexContainer $justify=\"space-between\" $align=\"flex-start\">\n                        <div>\n                          <ClubTitle style={{ color: 'white', fontSize: '16px' }}>\n                            {club.name}\n                          </ClubTitle>\n                          <div style={{ fontSize: '12px', opacity: '0.9' }}>\n                            {club.city}\n                          </div>\n                        </div>\n                        <ClubType $isPrivate={club.is_private}>\n                          {club.is_private ? 'Приватный' : 'Открытый'}\n                        </ClubType>\n                      </FlexContainer>\n                    </ClubHeader>\n                    \n                    <ClubContent>\n                      <ClubDescription>\n                        {club.description}\n                      </ClubDescription>\n                      \n                      <ClubMeta>\n                        <ClubStats>\n                          <span>\n                            <UsersIcon />\n                            {club.member_count || 0}/{club.max_members}\n                          </span>\n                        </ClubStats>\n                        \n                        <Button \n                          $size=\"small\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleJoinClub(club);\n                          }}\n                          disabled={club.is_member || joinClubMutation.isLoading}\n                        >\n                          {club.is_member ? 'Участник' : 'Вступить'}\n                        </Button>\n                      </ClubMeta>\n                    </ClubContent>\n                  </ClubCard>\n                ))}\n              </Grid>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🏛️</div>\n                <h3>Клубы не найдены</h3>\n                <p>Попробуйте изменить параметры поиска</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Мои клубы */}\n        {activeTab === 'my-clubs' && (\n          <div>\n            {isLoadingMyClubs ? (\n              <LoadingSpinner />\n            ) : myClubsList.length > 0 ? (\n              <Grid $columns=\"repeat(auto-fill, minmax(300px, 1fr))\" $gap=\"25px\">\n                {myClubsList.map((club) => (\n                  <MyClubCard\n                    key={club.id}\n                    onClick={() => handleClubClick(club)}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <ClubHeader>\n                      <FlexContainer $justify=\"space-between\" $align=\"flex-start\">\n                        <div>\n                          <ClubTitle style={{ color: 'white', fontSize: '16px' }}>\n                            {club.name}\n                          </ClubTitle>\n                          <div style={{ fontSize: '12px', opacity: '0.9' }}>\n                            {club.is_owner ? 'Владелец' : 'Участник'}\n                          </div>\n                        </div>\n                        <ClubType $isPrivate={club.is_private}>\n                          {club.is_private ? 'Приватный' : 'Открытый'}\n                        </ClubType>\n                      </FlexContainer>\n                    </ClubHeader>\n                    \n                    <ClubContent>\n                      <ClubDescription>\n                        {club.description}\n                      </ClubDescription>\n                      \n                      <ClubMeta>\n                        <ClubStats>\n                          <span>\n                            <UsersIcon />\n                            {club.member_count || 0}/{club.max_members}\n                          </span>\n                          {club.pending_applications > 0 && (\n                            <span style={{ color: '#d69e2e' }}>\n                              📋 {club.pending_applications} заявок\n                            </span>\n                          )}\n                        </ClubStats>\n                        \n                        {club.is_owner && (\n                          <Button $size=\"small\" $variant=\"secondary\">\n                            <EditIcon />\n                            Управление\n                          </Button>\n                        )}\n                      </ClubMeta>\n                    </ClubContent>\n                  </MyClubCard>\n                ))}\n              </Grid>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🏛️</div>\n                <h3>Вы не состоите в клубах</h3>\n                <p>Вступите в существующий клуб или создайте свой</p>\n                <Button onClick={() => setShowCreateModal(true)}>\n                  <PlusIcon />\n                  Создать клуб\n                </Button>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Модал создания клуба */}\n        {showCreateModal && (\n          <Modal onClick={() => setShowCreateModal(false)}>\n            <ModalContent onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>Создать новый клуб</h2>\n                <IconButton onClick={() => setShowCreateModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <Form onSubmit={handleCreateClub}>\n                <FormGroup>\n                  <Label>Название клуба</Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Введите название клуба\"\n                    value={clubForm.name}\n                    onChange={(e) => setClubForm({...clubForm, name: e.target.value})}\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup>\n                  <Label>Описание</Label>\n                  <TextArea\n                    placeholder=\"Опишите цели и активности клуба...\"\n                    value={clubForm.description}\n                    onChange={(e) => setClubForm({...clubForm, description: e.target.value})}\n                    $minHeight=\"120px\"\n                    required\n                  />\n                </FormGroup>\n\n                <FlexContainer $gap=\"15px\">\n                  <FormGroup style={{ flex: 1 }}>\n                    <Label>Город</Label>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Укажите город\"\n                      value={clubForm.city}\n                      onChange={(e) => setClubForm({...clubForm, city: e.target.value})}\n                    />\n                  </FormGroup>\n\n                  <FormGroup style={{ flex: 1 }}>\n                    <Label>Максимум участников</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"5\"\n                      max=\"500\"\n                      value={clubForm.max_members}\n                      onChange={(e) => setClubForm({...clubForm, max_members: parseInt(e.target.value)})}\n                    />\n                  </FormGroup>\n                </FlexContainer>\n\n                <FormGroup>\n                  <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>\n                    <input\n                      type=\"checkbox\"\n                      checked={clubForm.is_private}\n                      onChange={(e) => setClubForm({...clubForm, is_private: e.target.checked})}\n                    />\n                    Приватный клуб (требует одобрения заявок)\n                  </label>\n                </FormGroup>\n\n                <FlexContainer $gap=\"10px\" $justify=\"flex-end\">\n                  <Button \n                    $variant=\"secondary\" \n                    onClick={() => setShowCreateModal(false)} \n                    type=\"button\"\n                  >\n                    Отмена\n                  </Button>\n                  <Button type=\"submit\" disabled={createClubMutation.isLoading}>\n                    {createClubMutation.isLoading ? 'Создание...' : 'Создать клуб'}\n                  </Button>\n                </FlexContainer>\n              </Form>\n            </ModalContent>\n          </Modal>\n        )}\n\n        {/* Модал деталей клуба и заявок */}\n        {showDetailsModal && selectedClub && (\n          <Modal onClick={() => setShowDetailsModal(false)}>\n            <ModalContent $maxWidth=\"600px\" onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>{selectedClub.name}</h2>\n                <IconButton onClick={() => setShowDetailsModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ marginBottom: '20px' }}>\n                <p style={{ color: '#4a5568', lineHeight: 1.5 }}>\n                  {selectedClub.description}\n                </p>\n                \n                <FlexContainer $gap=\"15px\" $wrap style={{ marginTop: '15px' }}>\n                  <span>📍 {selectedClub.city}</span>\n                  <span>👥 {selectedClub.member_count}/{selectedClub.max_members}</span>\n                  <ClubType $isPrivate={selectedClub.is_private}>\n                    {selectedClub.is_private ? 'Приватный' : 'Открытый'}\n                  </ClubType>\n                </FlexContainer>\n              </div>\n\n              {/* Заявки на вступление (только для владельцев) */}\n              {selectedClub.is_owner && clubApplications?.applications?.length > 0 && (\n                <div>\n                  <h3 style={{ marginBottom: '15px', color: '#2d3748' }}>\n                    Заявки на вступление ({clubApplications.applications.length})\n                  </h3>\n                  \n                  {clubApplications.applications.map((application) => (\n                    <ApplicationCard key={application.id}>\n                      <div className=\"header\">\n                        <div className=\"applicant\">\n                          <Avatar\n                            $src={application.user_avatar ? `/uploads/${application.user_avatar}` : ''}\n                            $size=\"40px\"\n                          >\n                            {application.user_login?.charAt(0).toUpperCase()}\n                          </Avatar>\n                          <div>\n                            <div className=\"name\">@{application.user_login}</div>\n                            <div className=\"date\">\n                              {apiUtils.formatTimeAgo(application.created_at)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {application.message && (\n                        <div className=\"message\">\n                          \"{application.message}\"\n                        </div>\n                      )}\n                      \n                      <div className=\"actions\">\n                        <Button\n                          $size=\"small\"\n                          onClick={() => handleApplicationAction(application.id, 'approve')}\n                          disabled={manageApplicationMutation.isLoading}\n                        >\n                          <CheckIcon />\n                          Принять\n                        </Button>\n                        <Button\n                          $size=\"small\"\n                          $variant=\"danger\"\n                          onClick={() => handleApplicationAction(application.id, 'reject')}\n                          disabled={manageApplicationMutation.isLoading}\n                        >\n                          Отклонить\n                        </Button>\n                      </div>\n                    </ApplicationCard>\n                  ))}\n                </div>\n              )}\n\n              {!selectedClub.is_member && !selectedClub.is_owner && (\n                <FlexContainer $justify=\"center\">\n                  <Button onClick={() => handleJoinClub(selectedClub)}>\n                    Подать заявку на вступление\n                  </Button>\n                </FlexContainer>\n              )}\n            </ModalContent>\n          </Modal>\n        )}\n      </ContentCard>\n    </ClubsContainer>\n  );\n};\n\nexport default Clubs;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { subscriptionsAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  CrownIcon,\n  CheckIcon,\n  CloseIcon,\n  StarIcon\n} from '../components/UI';\n\nconst SubscriptionsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst PlanCard = styled(motion.div)`\n  background: white;\n  border-radius: 25px;\n  padding: 35px;\n  text-align: center;\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.15);\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  \n  ${props => props.$featured && `\n    transform: scale(1.05);\n    border: 3px solid #ffd700;\n    box-shadow: 0 20px 60px rgba(255, 215, 0, 0.3);\n    \n    &::before {\n      content: 'ПОПУЛЯРНЫЙ';\n      position: absolute;\n      top: 15px;\n      right: -30px;\n      background: linear-gradient(135deg, #ffd700 0%, #ffed4a 100%);\n      color: #2d3748;\n      padding: 8px 40px;\n      font-size: 12px;\n      font-weight: 700;\n      transform: rotate(45deg);\n      box-shadow: 0 2px 10px rgba(255, 215, 0, 0.3);\n    }\n  `}\n  \n  &:hover {\n    transform: ${props => props.$featured ? 'scale(1.08)' : 'scale(1.02)'};\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 25px;\n    transform: none !important;\n    \n    &:hover {\n      transform: none !important;\n    }\n  }\n`;\n\nconst PlanIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  margin: 0 auto 20px;\n  border-radius: 20px;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 36px;\n  box-shadow: 0 10px 30px ${props => props.$color}40;\n  \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n    font-size: 28px;\n  }\n`;\n\nconst PlanTitle = styled.h3`\n  margin: 0 0 10px 0;\n  font-size: 28px;\n  font-weight: 700;\n  color: #2d3748;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst PlanPrice = styled.div`\n  margin-bottom: 25px;\n  \n  .price {\n    font-size: 48px;\n    font-weight: 700;\n    color: ${props => props.$color};\n    line-height: 1;\n  }\n  \n  .currency {\n    font-size: 24px;\n    margin-left: 5px;\n  }\n  \n  .period {\n    font-size: 14px;\n    color: #718096;\n    margin-top: 5px;\n  }\n  \n  @media (max-width: 768px) {\n    .price {\n      font-size: 36px;\n    }\n    \n    .currency {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst FeaturesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 30px 0;\n  text-align: left;\n`;\n\nconst FeatureItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 0;\n  color: #4a5568;\n  font-size: 15px;\n  \n  .icon {\n    color: #4caf50;\n    flex-shrink: 0;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst CurrentStatusCard = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  margin-bottom: 30px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  \n  .status-icon {\n    width: 80px;\n    height: 80px;\n    margin: 0 auto 20px;\n    border-radius: 20px;\n    background: ${props => props.$statusColor};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 36px;\n  }\n  \n  .status-title {\n    font-size: 24px;\n    font-weight: 700;\n    color: #2d3748;\n    margin-bottom: 10px;\n  }\n  \n  .status-info {\n    color: #4a5568;\n    font-size: 16px;\n    margin-bottom: 20px;\n    line-height: 1.5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    \n    .status-icon {\n      width: 60px;\n      height: 60px;\n      font-size: 28px;\n    }\n    \n    .status-title {\n      font-size: 20px;\n    }\n    \n    .status-info {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst HistoryCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 15px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  .payment-info {\n    .plan {\n      font-weight: 600;\n      color: #2d3748;\n      margin-bottom: 5px;\n    }\n    \n    .date {\n      font-size: 12px;\n      color: #718096;\n    }\n  }\n  \n  .payment-amount {\n    font-size: 18px;\n    font-weight: 700;\n    color: #4caf50;\n  }\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    \n    .payment-amount {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst PromoSection = styled.div`\n  background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 20px;\n  \n  .promo-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 10px;\n  }\n  \n  .promo-input {\n    display: flex;\n    gap: 10px;\n    \n    input {\n      flex: 1;\n      padding: 10px 15px;\n      border: 2px solid #e2e8f0;\n      border-radius: 8px;\n      font-size: 14px;\n      \n      &:focus {\n        outline: none;\n        border-color: #dc3522;\n      }\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\n\n// Конфигурация планов\nconst PLAN_CONFIGS = {\n  VIP: {\n    icon: '👑',\n    color: '#ffd700',\n    price: 299,\n    features: [\n      'Безлимитные лайки',\n      'Просмотр всех профилей',\n      'Суперлайки (5 в день)',\n      'Приоритет в поиске',\n      'Скрытие рекламы',\n      'Расширенные фильтры'\n    ]\n  },\n  PREMIUM: {\n    icon: '💎',\n    color: '#9b59b6',\n    price: 599,\n    featured: true,\n    features: [\n      'Все возможности VIP',\n      'Безлимитные суперлайки',\n      'Просмотр лайков',\n      'Невидимый режим',\n      'Приоритетная поддержка',\n      'Эксклюзивные события',\n      'Расширенная статистика'\n    ]\n  }\n};\n\nconst Subscriptions = () => {\n  const [activeTab, setActiveTab] = useState('plans');\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [promoCode, setPromoCode] = useState('');\n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: subscriptionStatus, isLoading: isLoadingStatus } = useQuery(\n    'subscription-status',\n    subscriptionsAPI.getStatus,\n    {\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: subscriptionHistory, isLoading: isLoadingHistory } = useQuery(\n    'subscription-history',\n    subscriptionsAPI.getHistory,\n    {\n      enabled: activeTab === 'history',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Mutations\n  const subscribeMutation = useMutation(subscriptionsAPI.subscribe, {\n    onSuccess: () => {\n      toast.success('Подписка успешно оформлена!');\n      setShowPaymentModal(false);\n      setSelectedPlan(null);\n      queryClient.invalidateQueries('subscription-status');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const cancelMutation = useMutation(subscriptionsAPI.cancel, {\n    onSuccess: () => {\n      toast.success('Подписка отменена');\n      queryClient.invalidateQueries('subscription-status');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const promoMutation = useMutation(subscriptionsAPI.usePromoCode, {\n    onSuccess: (data) => {\n      toast.success(`Промокод применен! Скидка: ${data.discount}%`);\n      setPromoCode('');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Handlers\n  const handleSubscribe = (planType) => {\n    setSelectedPlan(planType);\n    setShowPaymentModal(true);\n  };\n\n  const handlePayment = (e) => {\n    e.preventDefault();\n    \n    if (!selectedPlan) return;\n\n    subscribeMutation.mutate({\n      plan: selectedPlan.toLowerCase(),\n      duration: 1,\n      promo_code: promoCode.trim() || undefined\n    });\n  };\n\n  const handleCancel = () => {\n    if (window.confirm('Вы уверены, что хотите отменить подписку?')) {\n      const reason = prompt('Причина отмены (необязательно):');\n      cancelMutation.mutate(reason || '');\n    }\n  };\n\n  const handlePromoApply = () => {\n    if (!promoCode.trim()) {\n      toast.error('Введите промокод');\n      return;\n    }\n    \n    promoMutation.mutate(promoCode.trim());\n  };\n\n  const getStatusColor = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'vip': return '#ffd700';\n      case 'premium': return '#9b59b6';\n      default: return '#4a5568';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'vip': return '👑';\n      case 'premium': return '💎';\n      default: return '👤';\n    }\n  };\n\n  if (isLoadingStatus) {\n    return (\n      <SubscriptionsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </SubscriptionsContainer>\n    );\n  }\n\n  return (\n    <SubscriptionsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"center\" $align=\"center\" $wrap>\n          <SectionTitle style={{ color: 'white', textAlign: 'center', marginBottom: '10px' }}>\n            <CrownIcon />\n            VIP & PREMIUM подписки\n          </SectionTitle>\n        </FlexContainer>\n        <p style={{ textAlign: 'center', color: 'rgba(255,255,255,0.9)', marginBottom: '30px' }}>\n          Получите максимум от SwingFox с премиум возможностями\n        </p>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'plans'}\n            onClick={() => setActiveTab('plans')}\n          >\n            <CrownIcon />\n            Планы\n          </Tab>\n          <Tab\n            $active={activeTab === 'status'}\n            onClick={() => setActiveTab('status')}\n          >\n            <StarIcon />\n            Мой статус\n          </Tab>\n          <Tab\n            $active={activeTab === 'history'}\n            onClick={() => setActiveTab('history')}\n          >\n            📋 История\n          </Tab>\n        </TabsContainer>\n\n        {/* Планы подписки */}\n        {activeTab === 'plans' && (\n          <div>\n            <Grid $columns=\"repeat(auto-fit, minmax(300px, 1fr))\" $gap=\"30px\">\n              {Object.entries(PLAN_CONFIGS).map(([planType, config]) => (\n                <PlanCard\n                  key={planType}\n                  $featured={config.featured}\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <PlanIcon $color={config.color}>\n                    {config.icon}\n                  </PlanIcon>\n                  \n                  <PlanTitle>{planType}</PlanTitle>\n                  \n                  <PlanPrice $color={config.color}>\n                    <div className=\"price\">\n                      {config.price}\n                      <span className=\"currency\">₽</span>\n                    </div>\n                    <div className=\"period\">в месяц</div>\n                  </PlanPrice>\n                  \n                  <FeaturesList>\n                    {config.features.map((feature, index) => (\n                      <FeatureItem key={index}>\n                        <div className=\"icon\">\n                          <CheckIcon />\n                        </div>\n                        {feature}\n                      </FeatureItem>\n                    ))}\n                  </FeaturesList>\n                  \n                  <Button\n                    onClick={() => handleSubscribe(planType)}\n                    disabled={subscriptionStatus?.plan === planType.toLowerCase()}\n                    style={{\n                      background: subscriptionStatus?.plan === planType.toLowerCase() \n                        ? '#e2e8f0' \n                        : `linear-gradient(135deg, ${config.color} 0%, ${config.color}dd 100%)`,\n                      width: '100%'\n                    }}\n                  >\n                    {subscriptionStatus?.plan === planType.toLowerCase() \n                      ? 'Текущий план' \n                      : 'Выбрать план'\n                    }\n                  </Button>\n                </PlanCard>\n              ))}\n            </Grid>\n          </div>\n        )}\n\n        {/* Статус подписки */}\n        {activeTab === 'status' && (\n          <div>\n            <CurrentStatusCard $statusColor={getStatusColor(subscriptionStatus?.plan)}>\n              <div className=\"status-icon\">\n                {getStatusIcon(subscriptionStatus?.plan)}\n              </div>\n              <div className=\"status-title\">\n                {subscriptionStatus?.plan?.toUpperCase() || 'БАЗОВЫЙ'} план\n              </div>\n              <div className=\"status-info\">\n                {subscriptionStatus?.plan ? (\n                  <>\n                    Активна до: {apiUtils.formatDate(subscriptionStatus.expires_at)}\n                    <br />\n                    Автопродление: {subscriptionStatus.auto_renew ? 'Включено' : 'Отключено'}\n                  </>\n                ) : (\n                  'У вас базовый план. Оформите премиум подписку для получения дополнительных возможностей!'\n                )}\n              </div>\n              \n              {subscriptionStatus?.plan && (\n                <FlexContainer $gap=\"15px\" $justify=\"center\">\n                  <Button $variant=\"secondary\">\n                    Изменить план\n                  </Button>\n                  <Button \n                    $variant=\"danger\" \n                    onClick={handleCancel}\n                    disabled={cancelMutation.isLoading}\n                  >\n                    Отменить подписку\n                  </Button>\n                </FlexContainer>\n              )}\n            </CurrentStatusCard>\n\n            {/* Промокоды */}\n            <PromoSection>\n              <div className=\"promo-title\">Есть промокод?</div>\n              <div className=\"promo-input\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Введите промокод\"\n                  value={promoCode}\n                  onChange={(e) => setPromoCode(e.target.value.toUpperCase())}\n                />\n                <Button \n                  $size=\"small\" \n                  onClick={handlePromoApply}\n                  disabled={promoMutation.isLoading || !promoCode.trim()}\n                >\n                  Применить\n                </Button>\n              </div>\n            </PromoSection>\n          </div>\n        )}\n\n        {/* История платежей */}\n        {activeTab === 'history' && (\n          <div>\n            {isLoadingHistory ? (\n              <LoadingSpinner />\n            ) : subscriptionHistory?.payments?.length > 0 ? (\n              <div>\n                {subscriptionHistory.payments.map((payment) => (\n                  <HistoryCard key={payment.id}>\n                    <div className=\"payment-info\">\n                      <div className=\"plan\">\n                        {payment.plan?.toUpperCase()} подписка\n                      </div>\n                      <div className=\"date\">\n                        {apiUtils.formatDate(payment.created_at)}\n                      </div>\n                    </div>\n                    <div className=\"payment-amount\">\n                      +{payment.amount}₽\n                    </div>\n                  </HistoryCard>\n                ))}\n              </div>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">💳</div>\n                <h3>Нет истории платежей</h3>\n                <p>Здесь будет отображаться история ваших подписок</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Модал оплаты */}\n        {showPaymentModal && selectedPlan && (\n          <Modal onClick={() => setShowPaymentModal(false)}>\n            <ModalContent onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>Оформление {selectedPlan} подписки</h2>\n                <IconButton onClick={() => setShowPaymentModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ textAlign: 'center', marginBottom: '25px' }}>\n                <PlanIcon $color={PLAN_CONFIGS[selectedPlan].color}>\n                  {PLAN_CONFIGS[selectedPlan].icon}\n                </PlanIcon>\n                <h3 style={{ margin: '15px 0 5px 0', color: '#2d3748' }}>\n                  {selectedPlan} подписка\n                </h3>\n                <div style={{ fontSize: '24px', fontWeight: '700', color: PLAN_CONFIGS[selectedPlan].color }}>\n                  {PLAN_CONFIGS[selectedPlan].price}₽/месяц\n                </div>\n              </div>\n\n              <Form onSubmit={handlePayment}>\n                <FormGroup>\n                  <Label>Промокод (необязательно)</Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Введите промокод для скидки\"\n                    value={promoCode}\n                    onChange={(e) => setPromoCode(e.target.value.toUpperCase())}\n                  />\n                </FormGroup>\n\n                <div style={{ \n                  background: '#f7fafc', \n                  padding: '15px', \n                  borderRadius: '10px', \n                  marginBottom: '20px',\n                  fontSize: '14px',\n                  color: '#4a5568'\n                }}>\n                  <strong>Условия:</strong>\n                  <ul style={{ margin: '10px 0 0 20px', paddingLeft: 0 }}>\n                    <li>Подписка активируется сразу после оплаты</li>\n                    <li>Автопродление можно отключить в любое время</li>\n                    <li>Возврат средств в течение 7 дней</li>\n                  </ul>\n                </div>\n\n                <FlexContainer $gap=\"10px\" $justify=\"flex-end\">\n                  <Button \n                    $variant=\"secondary\" \n                    onClick={() => setShowPaymentModal(false)} \n                    type=\"button\"\n                  >\n                    Отмена\n                  </Button>\n                  <Button type=\"submit\" disabled={subscribeMutation.isLoading}>\n                    {subscribeMutation.isLoading ? 'Обработка...' : 'Оплатить'}\n                  </Button>\n                </FlexContainer>\n              </Form>\n            </ModalContent>\n          </Modal>\n        )}\n      </ContentCard>\n    </SubscriptionsContainer>\n  );\n};\n\nexport default Subscriptions;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { ratingAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  StarIcon,\n  CrownIcon,\n  TrophyIcon,\n  FilterIcon,\n  CloseIcon,\n  ChevronUpIcon,\n  ChevronDownIcon\n} from '../components/UI';\n\nconst RatingsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst RankingCard = styled(motion.div)`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 15px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  \n  ${props => props.$rank <= 3 && `\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      height: 4px;\n      background: ${props.$rank === 1 ? '#ffd700' : props.$rank === 2 ? '#c0c0c0' : '#cd7f32'};\n    }\n  `}\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  }\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n    gap: 15px;\n    \n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst RankBadge = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: ${props => {\n    if (props.$rank === 1) return 'linear-gradient(135deg, #ffd700 0%, #ffed4a 100%)';\n    if (props.$rank === 2) return 'linear-gradient(135deg, #c0c0c0 0%, #e8e8e8 100%)';\n    if (props.$rank === 3) return 'linear-gradient(135deg, #cd7f32 0%, #deb887 100%)';\n    return 'linear-gradient(135deg, #4a5568 0%, #718096 100%)';\n  }};\n  color: ${props => props.$rank <= 3 ? '#2d3748' : 'white'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 700;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  flex-shrink: 0;\n  \n  @media (max-width: 768px) {\n    width: 50px;\n    height: 50px;\n    font-size: 16px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n  \n  .name {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 5px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  \n  .stats {\n    display: flex;\n    gap: 20px;\n    color: #4a5568;\n    font-size: 14px;\n    \n    .stat {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    .stats {\n      justify-content: center;\n      gap: 15px;\n    }\n  }\n`;\n\nconst RatingValue = styled.div`\n  text-align: right;\n  \n  .rating {\n    font-size: 24px;\n    font-weight: 700;\n    color: #dc3522;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n  \n  .change {\n    font-size: 12px;\n    margin-top: 2px;\n    display: flex;\n    align-items: center;\n    gap: 2px;\n    \n    &.positive {\n      color: #4caf50;\n    }\n    \n    &.negative {\n      color: #f44336;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    text-align: center;\n    \n    .rating {\n      justify-content: center;\n    }\n  }\n`;\n\nconst StatsGrid = styled(Grid)`\n  margin-bottom: 30px;\n`;\n\nconst StatCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 25px;\n  text-align: center;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  position: relative;\n  overflow: hidden;\n  \n  .icon {\n    width: 60px;\n    height: 60px;\n    margin: 0 auto 15px;\n    border-radius: 15px;\n    background: ${props => props.$color};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n  \n  .value {\n    font-size: 28px;\n    font-weight: 700;\n    color: #2d3748;\n    margin-bottom: 5px;\n  }\n  \n  .label {\n    color: #4a5568;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    \n    .icon {\n      width: 50px;\n      height: 50px;\n      font-size: 20px;\n    }\n    \n    .value {\n      font-size: 24px;\n    }\n  }\n`;\n\nconst FilterContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  .filter-row {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n  .filter-group {\n    flex: 1;\n    min-width: 200px;\n  }\n  \n  @media (max-width: 768px) {\n    .filter-row {\n      flex-direction: column;\n      gap: 10px;\n    }\n    \n    .filter-group {\n      width: 100%;\n      min-width: auto;\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\n\nconst VipBadge = styled.span`\n  background: ${props => apiUtils.getVipBadgeColor(props.$vipLevel)};\n  color: white;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 10px;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst Ratings = () => {\n  const [activeTab, setActiveTab] = useState('leaderboard');\n  const [filter, setFilter] = useState({\n    period: 'month',\n    category: 'overall',\n    city: ''\n  });\n  \n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: leaderboard, isLoading: isLoadingLeaderboard } = useQuery(\n    ['leaderboard', filter],\n    () => ratingAPI.getLeaderboard(filter),\n    {\n      enabled: activeTab === 'leaderboard',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: myStats, isLoading: isLoadingStats } = useQuery(\n    ['my-rating-stats'],\n    ratingAPI.getMyStats,\n    {\n      enabled: activeTab === 'my-rating',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: topUsers, isLoading: isLoadingTop } = useQuery(\n    ['top-users', filter.period],\n    () => ratingAPI.getTopUsers({ period: filter.period }),\n    {\n      enabled: activeTab === 'top-users',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Handlers\n  const handleFilterChange = (field, value) => {\n    setFilter(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const renderRankIcon = (rank) => {\n    if (rank === 1) return '🥇';\n    if (rank === 2) return '🥈';\n    if (rank === 3) return '🥉';\n    return rank;\n  };\n\n  const renderChangeIcon = (change) => {\n    if (change > 0) return <ChevronUpIcon />;\n    if (change < 0) return <ChevronDownIcon />;\n    return null;\n  };\n\n  const renderChangeClass = (change) => {\n    if (change > 0) return 'positive';\n    if (change < 0) return 'negative';\n    return '';\n  };\n\n  if ((activeTab === 'leaderboard' && isLoadingLeaderboard) ||\n      (activeTab === 'my-rating' && isLoadingStats) ||\n      (activeTab === 'top-users' && isLoadingTop)) {\n    return (\n      <RatingsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </RatingsContainer>\n    );\n  }\n\n  return (\n    <RatingsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"center\" $align=\"center\" $wrap>\n          <SectionTitle style={{ color: 'white', textAlign: 'center', marginBottom: '10px' }}>\n            <TrophyIcon />\n            Система рейтинга\n          </SectionTitle>\n        </FlexContainer>\n        <p style={{ textAlign: 'center', color: 'rgba(255,255,255,0.9)', marginBottom: '30px' }}>\n          Следите за рейтингом пользователей и своими достижениями\n        </p>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'leaderboard'}\n            onClick={() => setActiveTab('leaderboard')}\n          >\n            <TrophyIcon />\n            Рейтинг\n          </Tab>\n          <Tab\n            $active={activeTab === 'my-rating'}\n            onClick={() => setActiveTab('my-rating')}\n          >\n            <StarIcon />\n            Мой рейтинг\n          </Tab>\n          <Tab\n            $active={activeTab === 'top-users'}\n            onClick={() => setActiveTab('top-users')}\n          >\n            <CrownIcon />\n            Топ пользователи\n          </Tab>\n        </TabsContainer>\n\n        {/* Общий рейтинг */}\n        {activeTab === 'leaderboard' && (\n          <div>\n            <FilterContainer>\n              <div className=\"filter-row\">\n                <div className=\"filter-group\">\n                  <Label>Период</Label>\n                  <select\n                    value={filter.period}\n                    onChange={(e) => handleFilterChange('period', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"week\">Неделя</option>\n                    <option value=\"month\">Месяц</option>\n                    <option value=\"year\">Год</option>\n                    <option value=\"all\">Все время</option>\n                  </select>\n                </div>\n                \n                <div className=\"filter-group\">\n                  <Label>Категория</Label>\n                  <select\n                    value={filter.category}\n                    onChange={(e) => handleFilterChange('category', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"overall\">Общий</option>\n                    <option value=\"activity\">Активность</option>\n                    <option value=\"popularity\">Популярность</option>\n                    <option value=\"engagement\">Вовлеченность</option>\n                  </select>\n                </div>\n                \n                <div className=\"filter-group\">\n                  <Label>Город</Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Фильтр по городу\"\n                    value={filter.city}\n                    onChange={(e) => handleFilterChange('city', e.target.value)}\n                  />\n                </div>\n              </div>\n            </FilterContainer>\n\n            {leaderboard?.users?.length > 0 ? (\n              <div>\n                {leaderboard.users.map((user, index) => (\n                  <RankingCard\n                    key={user.id}\n                    $rank={index + 1}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                  >\n                    <RankBadge $rank={index + 1}>\n                      {renderRankIcon(index + 1)}\n                    </RankBadge>\n                    \n                    <UserInfo>\n                      <div className=\"name\">\n                        {user.name}\n                        {user.vip_level && (\n                          <VipBadge $vipLevel={user.vip_level}>\n                            {user.vip_level}\n                          </VipBadge>\n                        )}\n                      </div>\n                      <div className=\"stats\">\n                        <div className=\"stat\">\n                          👁️ {user.profile_views || 0}\n                        </div>\n                        <div className=\"stat\">\n                          ❤️ {user.likes_received || 0}\n                        </div>\n                        <div className=\"stat\">\n                          📍 {user.city || 'Не указан'}\n                        </div>\n                      </div>\n                    </UserInfo>\n                    \n                    <RatingValue>\n                      <div className=\"rating\">\n                        <StarIcon />\n                        {user.rating_score || 0}\n                      </div>\n                      {user.rating_change !== undefined && (\n                        <div className={`change ${renderChangeClass(user.rating_change)}`}>\n                          {renderChangeIcon(user.rating_change)}\n                          {Math.abs(user.rating_change)}\n                        </div>\n                      )}\n                    </RatingValue>\n                  </RankingCard>\n                ))}\n              </div>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🏆</div>\n                <h3>Нет данных рейтинга</h3>\n                <p>Рейтинг пользователей пока не сформирован</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Мой рейтинг */}\n        {activeTab === 'my-rating' && (\n          <div>\n            <StatsGrid $columns=\"repeat(auto-fit, minmax(250px, 1fr))\" $gap=\"20px\">\n              <StatCard $color=\"linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)\">\n                <div className=\"icon\">\n                  <StarIcon />\n                </div>\n                <div className=\"value\">{myStats?.current_rating || 0}</div>\n                <div className=\"label\">Текущий рейтинг</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #4caf50 0%, #66bb6a 100%)\">\n                <div className=\"icon\">\n                  <TrophyIcon />\n                </div>\n                <div className=\"value\">#{myStats?.current_position || '-'}</div>\n                <div className=\"label\">Позиция в рейтинге</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #ff9800 0%, #ffb74d 100%)\">\n                <div className=\"icon\">\n                  📈\n                </div>\n                <div className=\"value\">\n                  {myStats?.rating_change > 0 ? '+' : ''}{myStats?.rating_change || 0}\n                </div>\n                <div className=\"label\">Изменение за месяц</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #9c27b0 0%, #ba68c8 100%)\">\n                <div className=\"icon\">\n                  🎯\n                </div>\n                <div className=\"value\">{myStats?.max_rating || 0}</div>\n                <div className=\"label\">Максимальный рейтинг</div>\n              </StatCard>\n            </StatsGrid>\n\n            {myStats?.rating_history?.length > 0 && (\n              <ContentCard>\n                <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                  История рейтинга\n                </h3>\n                <div style={{ \n                  maxHeight: '300px', \n                  overflowY: 'auto',\n                  padding: '10px'\n                }}>\n                  {myStats.rating_history.map((entry, index) => (\n                    <div \n                      key={index}\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        padding: '10px 0',\n                        borderBottom: '1px solid #e2e8f0'\n                      }}\n                    >\n                      <div>\n                        <strong>{entry.reason || 'Обновление рейтинга'}</strong>\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {apiUtils.formatDate(entry.created_at)}\n                        </div>\n                      </div>\n                      <div style={{\n                        color: entry.change > 0 ? '#4caf50' : '#f44336',\n                        fontWeight: '600'\n                      }}>\n                        {entry.change > 0 ? '+' : ''}{entry.change}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ContentCard>\n            )}\n          </div>\n        )}\n\n        {/* Топ пользователи */}\n        {activeTab === 'top-users' && (\n          <div>\n            <FilterContainer>\n              <div className=\"filter-row\">\n                <div className=\"filter-group\">\n                  <Label>Период</Label>\n                  <select\n                    value={filter.period}\n                    onChange={(e) => handleFilterChange('period', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"week\">Неделя</option>\n                    <option value=\"month\">Месяц</option>\n                    <option value=\"year\">Год</option>\n                  </select>\n                </div>\n              </div>\n            </FilterContainer>\n\n            <Grid $columns=\"repeat(auto-fit, minmax(300px, 1fr))\" $gap=\"20px\">\n              {['most_active', 'most_popular', 'most_gifts'].map((category, index) => {\n                const categoryData = topUsers?.[category] || [];\n                const categoryTitles = {\n                  most_active: 'Самые активные',\n                  most_popular: 'Самые популярные', \n                  most_gifts: 'Больше всего подарков'\n                };\n                \n                return (\n                  <ContentCard key={category}>\n                    <h3 style={{ marginBottom: '20px', color: '#2d3748', textAlign: 'center' }}>\n                      {categoryTitles[category]}\n                    </h3>\n                    \n                    {categoryData.length > 0 ? (\n                      <div>\n                        {categoryData.slice(0, 5).map((user, userIndex) => (\n                          <div \n                            key={user.id}\n                            style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '15px',\n                              padding: '10px 0',\n                              borderBottom: userIndex < 4 ? '1px solid #e2e8f0' : 'none'\n                            }}\n                          >\n                            <div style={{\n                              width: '30px',\n                              height: '30px',\n                              borderRadius: '50%',\n                              background: userIndex === 0 ? '#ffd700' : userIndex === 1 ? '#c0c0c0' : userIndex === 2 ? '#cd7f32' : '#e2e8f0',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              fontSize: '12px',\n                              fontWeight: '600',\n                              color: userIndex <= 2 ? '#2d3748' : '#718096'\n                            }}>\n                              {userIndex + 1}\n                            </div>\n                            \n                            <div style={{ flex: 1 }}>\n                              <div style={{ fontWeight: '600', color: '#2d3748' }}>\n                                {user.name}\n                                {user.vip_level && (\n                                  <VipBadge $vipLevel={user.vip_level} style={{ marginLeft: '8px' }}>\n                                    {user.vip_level}\n                                  </VipBadge>\n                                )}\n                              </div>\n                              <div style={{ fontSize: '12px', color: '#718096' }}>\n                                {user.score || 0} {category === 'most_active' ? 'действий' : \n                                                   category === 'most_popular' ? 'лайков' : \n                                                   'подарков'}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div style={{ textAlign: 'center', color: '#718096', padding: '20px' }}>\n                        Нет данных\n                      </div>\n                    )}\n                  </ContentCard>\n                );\n              })}\n            </Grid>\n          </div>\n        )}\n      </ContentCard>\n    </RatingsContainer>\n  );\n};\n\nexport default Ratings;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Toaster } from 'react-hot-toast';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\n\n// Компоненты\nimport AuthGuard from './components/AuthGuard';\nimport Navigation from './components/Navigation';\nimport { NotificationProvider } from './contexts/NotificationContext';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Home from './pages/Home';\nimport Catalog from './pages/Catalog';\nimport Profile from './pages/Profile';\nimport Chat from './pages/Chat';\nimport Ads from './pages/Ads';\nimport Admin from './pages/Admin';\nimport Notifications from './pages/Notifications';\n\nimport Clubs from './pages/Clubs';\nimport Subscriptions from './pages/Subscriptions';\nimport Ratings from './pages/Ratings';\n\n// Стили и тема\nconst theme = {\n  colors: {\n    primary: '#dc3522',\n    secondary: '#39354e',\n    background: '#fbfbfb',\n    surface: '#ffffff',\n    text: '#39354e',\n    textLight: '#666',\n    border: '#e0e0e0',\n    success: '#4caf50',\n    error: '#f44336',\n    warning: '#ff9800'\n  },\n  fonts: {\n    primary: 'Arial, sans-serif',\n    sizes: {\n      small: '12px',\n      medium: '14px',\n      large: '16px',\n      xlarge: '18px',\n      xxlarge: '24px'\n    }\n  },\n  spacing: {\n    xs: '4px',\n    sm: '8px',\n    md: '16px',\n    lg: '24px',\n    xl: '32px'\n  },\n  borderRadius: '8px',\n  shadow: '0 2px 8px rgba(0,0,0,0.1)'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${props => props.theme.fonts.primary};\n    background-color: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    font-size: ${props => props.theme.fonts.sizes.large};\n    line-height: 1.5;\n  }\n\n  a {\n    color: ${props => props.theme.colors.primary};\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    background: none;\n    font-family: inherit;\n  }\n\n  input, textarea, select {\n    font-family: inherit;\n    font-size: inherit;\n  }\n\n  .container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 ${props => props.theme.spacing.md};\n  }\n\n  .btn {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\n    border-radius: ${props => props.theme.borderRadius};\n    font-weight: 500;\n    transition: all 0.2s ease;\n    text-decoration: none;\n    border: none;\n    cursor: pointer;\n    \n    &.btn-primary {\n      background-color: ${props => props.theme.colors.primary};\n      color: white;\n      \n      &:hover {\n        background-color: #b8291e;\n        text-decoration: none;\n      }\n    }\n    \n    &.btn-secondary {\n      background-color: transparent;\n      color: ${props => props.theme.colors.secondary};\n      border: 1px solid ${props => props.theme.colors.border};\n      \n      &:hover {\n        background-color: ${props => props.theme.colors.border};\n        text-decoration: none;\n      }\n    }\n  }\n\n  .form-group {\n    margin-bottom: ${props => props.theme.spacing.md};\n    \n    label {\n      display: block;\n      margin-bottom: ${props => props.theme.spacing.xs};\n      font-weight: 500;\n      color: ${props => props.theme.colors.secondary};\n    }\n    \n    input, textarea, select {\n      width: 100%;\n      padding: ${props => props.theme.spacing.sm};\n      border: 1px solid ${props => props.theme.colors.border};\n      border-radius: ${props => props.theme.borderRadius};\n      background-color: white;\n      \n      &:focus {\n        outline: none;\n        border-color: ${props => props.theme.colors.primary};\n        box-shadow: 0 0 0 2px rgba(220, 53, 34, 0.1);\n      }\n      \n      &::placeholder {\n        color: ${props => props.theme.colors.textLight};\n      }\n    }\n    \n    textarea {\n      min-height: 100px;\n      resize: vertical;\n    }\n  }\n\n  .card {\n    background: white;\n    border-radius: ${props => props.theme.borderRadius};\n    box-shadow: ${props => props.theme.shadow};\n    padding: ${props => props.theme.spacing.md};\n    margin-bottom: ${props => props.theme.spacing.md};\n  }\n\n  .text-center {\n    text-align: center;\n  }\n\n  .text-error {\n    color: ${props => props.theme.colors.error};\n    font-size: ${props => props.theme.fonts.sizes.small};\n  }\n\n  .loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${props => props.theme.spacing.xl};\n    \n    &::after {\n      content: '';\n      width: 20px;\n      height: 20px;\n      border: 2px solid ${props => props.theme.colors.border};\n      border-top: 2px solid ${props => props.theme.colors.primary};\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  @media (max-width: 768px) {\n    .container {\n      padding: 0 ${props => props.theme.spacing.sm};\n    }\n  }\n`;\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// React Query клиент\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      staleTime: 30000, // Данные считаются свежими 30 секунд по умолчанию\n      cacheTime: 5 * 60 * 1000, // Кэш хранится 5 минут\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <AppContainer>\n          <Router\n            future={{\n              v7_startTransition: true,\n              v7_relativeSplatPath: true\n            }}\n          >\n            <NotificationProvider>\n              <Routes>\n              {/* Публичные роуты */}\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              \n              {/* Защищенные роуты */}\n              <Route path=\"/\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Home />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/catalog\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Catalog />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/profile\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Profile />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/profile/:login\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Profile />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/chat/:username?\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Chat />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/notifications\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Notifications />\n                </AuthGuard>\n              } />\n              \n\n              \n              <Route path=\"/clubs\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Clubs />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/subscriptions\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Subscriptions />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/ratings\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Ratings />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/ads\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Ads />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/admin/*\" element={\n                <AuthGuard>\n                  <Admin />\n                </AuthGuard>\n              } />\n              \n              {/* Редирект на главную */}\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n              </Routes>\n            </NotificationProvider>\n          </Router>\n        </AppContainer>\n        \n        {/* Уведомления */}\n        <Toaster\n          position=\"top-right\"\n          toastOptions={{\n            duration: 4000,\n            style: {\n              background: theme.colors.surface,\n              color: theme.colors.text,\n              border: `1px solid ${theme.colors.border}`,\n              borderRadius: theme.borderRadius,\n            },\n            success: {\n              iconTheme: {\n                primary: theme.colors.success,\n                secondary: 'white',\n              },\n            },\n            error: {\n              iconTheme: {\n                primary: theme.colors.error,\n                secondary: 'white',\n              },\n            },\n          }}\n        />\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(React.createElement(App));"],"names":["apiClient","axios","create","baseURL","process","REACT_APP_API_URL","timeout","headers","TOKEN_KEY","USER_CACHE_KEY","getToken","localStorage","getItem","setToken","token","setItem","removeItem","clearUserCache","getUserCache","cached","JSON","parse","error","console","warn","setUserCache","userData","stringify","_objectSpread","cachedAt","Date","now","isRedirecting","interceptors","request","use","config","Authorization","concat","Promise","reject","response","_error$response","_error$response2","status","toast","window","dispatchEvent","CustomEvent","setTimeout","_fetchCurrentUserData","_logout","_resetPassword","_sendCode","_register","_login","_registerVisit","_sendSuperlike","_getUserRating","_rateUser","_sendGift","_deleteProfileComment","_updateProfileComment","_createProfileComment","_getProfileComments","_deletePhotoComment","_updatePhotoComment","_createPhotoComment","_getPhotoComments","_getPhotoLikes","_likePhoto","_unlockImages","_setLockedPassword","_deleteImage","_uploadImages","_uploadAvatar","_updateProfile","_getProfile","_checkExistingMatch","_getSuperlikes","_superlike","_dislike","_like","_getProfilesBatch","_getProfiles","_getFilters","_getProfiles2","_checkMatchPermission","_getMatchStatus","_deleteConversation","_getUnreadCount","_setTyping","_getUserStatus","_sendMessage","_getMessages","_getConversations","_getAdTypes","_respondToAd","_deleteAd","_updateAd","_createAd","_getMyAds","_getAds","_getAnalytics","_broadcast","_deleteMessage","_getMessages2","_deleteUser","_updateUser","_getUsers","_getDashboard","_getUnreadCount2","_getNotificationTypes","_deleteReadNotifications","_deleteNotification","_markAllAsRead","_markAsRead","_getNotifications","_getSentGifts","_getReceivedGifts","_getGiftStats","_getGiftHistory","_sendGift2","_getGiftTypes","_checkClubOwnership","_manageApplication","_getClubApplications","_getClubMembers","_getMyClubs","_leaveClub","_joinClub","_deleteClub","_updateClub","_getClub","_createClub","_getClubs","_getFeatures","_usePromoCode","_cancel","_getHistory","_getStatus","_subscribe","_getPlans","_getMyStats","_getLeaderboard","_getMyReceivedRatings","_getMyGivenRatings","_getTopUsers","_deleteRating","_rateUser2","_getUserRating2","_getReactionStats","_getUserReactions","_removeReaction","_setReaction","_getObjectReactions","_deletePhoto","_uploadPrivatePhotos","_uploadPhotos","_uploadAvatar2","_getUserInfo","_refreshCurrentUser","authAPI","login","_asyncToGenerator","_regeneratorRuntime","_callee","credentials","_context","prev","next","post","sent","data","user","abrupt","stop","_x","apply","arguments","register","_callee2","_context2","_x2","sendCode","_callee3","email","_context3","_x3","resetPassword","_callee4","_context4","_x4","logout","_callee5","_context5","finish","getCurrentUser","cachedData","payload","atob","split","baseUser","userId","vipType","cachedUser","ava","city","country","is_admin","_unused","fetchCurrentUserData","_callee6","_t","_context6","get","id","viptype","updateUserCache","updates","currentUser","usersAPI","getProfile","_callee7","_context7","profile","_x5","updateProfile","_callee8","profileData","_context8","put","success","_x6","uploadAvatar","_callee9","formData","_context9","filename","_x7","uploadImages","_callee0","userResponse","_t2","_context0","_x8","deleteImage","_callee1","type","_args1","_context1","length","undefined","delete","_x9","setLockedPassword","_callee10","password","_context10","_x0","unlockImages","_callee11","targetUser","_context11","target_user","_x1","_x10","likePhoto","_callee12","photoIndex","_context12","photo_index","_x11","_x12","getPhotoLikes","_callee13","_context13","_x13","getPhotoComments","_callee14","limit","params","_args14","_context14","URLSearchParams","page","toString","_x14","createPhotoComment","_callee15","commentText","_context15","log","_typeof","Error","comment_text","_x15","_x16","updatePhotoComment","_callee16","commentId","_context16","_x17","_x18","deletePhotoComment","_callee17","_context17","_x19","getProfileComments","_callee18","username","includePrivate","_args18","_context18","append","_x20","createProfileComment","_callee19","isPublic","_args19","_context19","is_public","_x21","_x22","updateProfileComment","_callee20","_context20","_x23","_x24","deleteProfileComment","_callee21","_context21","_x25","sendGift","_callee22","giftType","message","_args22","_context22","gift_type","_x26","_x27","rateUser","_callee23","value","_context23","_x28","_x29","getUserRating","_callee24","_context24","_x30","sendSuperlike","_callee25","_args25","_context25","_x31","registerVisit","_callee26","_context26","_x32","swipeAPI","getProfiles","_callee27","direction","_args27","_context27","getProfilesBatch","_callee28","count","exclude","_args28","_context28","join","like","_callee29","source","_args29","_context29","_x33","dislike","_callee30","_args30","_context30","_x34","superlike","_callee31","_ref","_context31","_x35","getSuperlikes","_callee32","_context32","checkExistingMatch","_callee33","_t3","_context33","hasMatch","_x36","catalogAPI","_callee34","filters","_args34","_context34","forEach","s","offset","getFilters","_callee35","_context35","chatAPI","getConversations","_callee36","_args36","_context36","getMessages","_callee37","_args37","_context37","_x37","sendMessage","_callee38","_context38","_x38","getUserStatus","_callee39","_context39","_x39","setTyping","_callee40","toUser","isTyping","_context40","to_user","is_typing","_x40","_x41","getUnreadCount","_callee41","_context41","deleteConversation","_callee42","_context42","_x42","getMatchStatus","_callee43","_context43","_x43","checkMatchPermission","_callee44","_context44","_x44","adsAPI","getAds","_callee45","_args45","_context45","getMyAds","_callee46","_args46","_context46","createAd","_callee47","adData","_context47","FormData","title","description","price","contact_info","image","File","_x45","updateAd","_callee48","_context48","_x46","_x47","deleteAd","_callee49","_context49","_x48","respondToAd","_callee50","_context50","_x49","_x50","getAdTypes","_callee51","_context51","adminAPI","getDashboard","_callee52","_context52","getUsers","_callee53","_args53","_context53","updateUser","_callee54","_context54","_x51","_x52","deleteUser","_callee55","_context55","_x53","_callee56","_args56","_context56","deleteMessage","_callee57","_context57","_x54","broadcast","_callee58","targetVipType","_args58","_context58","target_viptype","_x55","getAnalytics","_callee59","period","_args59","_context59","notificationsAPI","getNotifications","_callee60","_args60","_context60","priority","unread","markAsRead","_callee61","_context61","_x56","markAllAsRead","_callee62","_context62","deleteNotification","_callee63","_context63","_x57","deleteReadNotifications","_callee64","_context64","getNotificationTypes","_callee65","_context65","_callee66","_context66","giftsAPI","getGiftTypes","_callee67","_context67","_callee68","giftData","_context68","_x58","getGiftHistory","_callee69","_args69","_context69","getGiftStats","_callee70","_args70","_context70","getReceivedGifts","_callee71","url","_url","_response","_args71","_context71","getSentGifts","_callee72","_args72","_context72","clubsAPI","getClubs","_callee73","_args73","_context73","search","createClub","_callee74","clubData","_context74","_x59","getClub","_callee75","clubId","_context75","_x60","updateClub","_callee76","_context76","_x61","_x62","deleteClub","_callee77","_context77","_x63","joinClub","_callee78","_args78","_context78","_x64","leaveClub","_callee79","_context79","_x65","getMyClubs","_callee80","_context80","getClubMembers","_callee81","_context81","_x66","getClubApplications","_callee82","_context82","_x67","manageApplication","_callee83","applicationId","action","reason","_args83","_context83","_x68","_x69","_x70","checkClubOwnership","_callee84","_context84","subscriptionsAPI","getPlans","_callee85","_context85","subscribe","_callee86","planData","_context86","_x71","getStatus","_callee87","_context87","getHistory","_callee88","_args88","_context88","cancel","_callee89","_args89","_context89","usePromoCode","_callee90","code","_context90","_x72","getFeatures","_callee91","_context91","ratingAPI","_callee92","_context92","_x73","_callee93","_context93","_x74","_x75","deleteRating","_callee94","_context94","_x76","getTopUsers","_callee95","_args95","_context95","getMyGivenRatings","_callee96","_args96","_context96","getMyReceivedRatings","_callee97","_args97","_context97","getLeaderboard","_callee98","_args98","_context98","category","getMyStats","_callee99","_context99","reactionsAPI","getObjectReactions","_callee100","objectType","objectId","_context100","_x77","_x78","setReaction","_callee101","reactionType","_args101","_context101","reaction_type","_x79","_x80","_x81","removeReaction","_callee102","_context102","_x82","_x83","getUserReactions","_callee103","_args103","_context103","_x84","getReactionStats","_callee104","_context104","_x85","_x86","uploadsAPI","_callee105","_context105","_x87","uploadPhotos","_callee106","_context106","_x88","uploadPrivatePhotos","_callee107","_context107","_x89","deletePhoto","_callee108","_args108","_context108","_x90","getUploadProgress","onProgress","onUploadProgress","progressEvent","progress","Math","round","loaded","total","apiUtils","isAuthenticated","refreshCurrentUser","_callee109","_context109","createFormData","Object","keys","key","Array","isArray","item","handleError","_error$response3","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","formatTimeAgo","date","diffInSeconds","floor","isVip","isPremium","getVipBadgeColor","getVipBadgeIcon","getUserInfo","_callee110","_t4","_context110","_x91","api","auth","users","swipe","catalog","chat","ads","admin","notifications","gifts","clubs","subscriptions","rating","reactions","uploads","utils","children","_useState","useState","_useState2","_slicedToArray","setIsAuthenticated","_useState3","_useState4","isValidating","setIsValidating","location","useLocation","useEffect","checkAuth","_ref2","handleAuthLogout","handleStorageChange","addEventListener","removeEventListener","pathname","_jsx","className","Navigate","to","replace","state","from","EyeIcon","_jsxs","width","height","viewBox","fill","stroke","strokeWidth","d","cx","cy","r","EyeOffIcon","x1","y1","x2","y2","SearchIcon","SendIcon","points","HeartIcon","MessageIcon","CloseIcon","PlusIcon","EditIcon","BellIcon","CheckIcon","TrashIcon","GiftIcon","x","y","StarIcon","UsersIcon","CrownIcon","ChevronUpIcon","ChevronDownIcon","TrophyIcon","PageContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","$gradient","theme","colors","background","$noPadding","ContentCard","_templateObject2","$maxWidth","$padding","$mobilePadding","LogoSection","_templateObject3","Logo","_templateObject4","$size","$fontSize","$mobileSize","$mobileFontSize","Title","h1","_templateObject5","Subtitle","p","_templateObject6","SectionTitle","h3","_templateObject7","Form","form","_templateObject8","FormGroup","_templateObject9","_templateObject0","Label","_templateObject1","$minWidth","label","_templateObject10","InputWrapper","_templateObject11","Input","input","_templateObject12","Select","select","_templateObject13","TextArea","textarea","_templateObject14","$minHeight","Button","button","_templateObject15","$variant","IconButton","_templateObject16","ErrorText","span","_templateObject17","Card","_templateObject18","Avatar","_templateObject19","$src","$bgColor","$border","$clickable","$online","Modal","_templateObject20","ModalContent","_templateObject21","ModalHeader","_templateObject22","FlexContainer","_templateObject23","$align","$justify","$gap","$direction","$wrap","$mobileDirection","$mobileGap","Grid","_templateObject24","$columns","$mobileColumns","LoadingSpinner","_templateObject25","ThumbsUpIcon","_templateObject26","$progress","ThumbsDownIcon","transform","LockIcon","rx","ry","BREAKPOINTS","MEDIA","mobile","mobileLarge","tablet","tabletLarge","desktopMobile","desktop","desktopLarge","desktopXL","maxMobile","parseInt","maxMobileLarge","maxTablet","maxTabletLarge","maxDesktopMobile","maxDesktop","maxDesktopLarge","mobileOnly","tabletOnly","desktopOnly","landscape","portrait","retina","HEADER_SIZES","tiny","padding","fontSize","gap","linkPadding","minWidth","HomeIcon","ChatIcon","AdsIcon","AdminIcon","MenuIcon","ProfileIcon","SettingsIcon","LogoutIcon","NavContainer","nav","NavContent","LogoContainer","LogoIcon","LogoText","NavLinks","NavLink","Link","UserSection","UserMenuButton","VipIndicator","$color","DropdownMenu","$show","DropdownItem","MobileMenuButton","MobileMenu","attrs","MobileNavLink","NotificationBadge","NotificationCounter","unreadCountData","useQuery","refetchInterval","retry","enabled","onError","unreadCount","total_unread","navigate","useNavigate","queryClient","useQueryClient","showUserMenu","setShowUserMenu","showMobileMenu","setShowMobileMenu","_useState5","_useState6","setCurrentUser","userMenuRef","useRef","fetchUserData","updatedUser","event","refreshUserData","refreshNavigation","handleLogout","confirm","clear","isActiveRoute","path","handleClickOutside","current","contains","target","mobileMenuButton","closest","mobileMenuContent","document","style","textDecoration","display","alignItems","startsWith","position","ref","onClick","css","charAt","toUpperCase","e","stopPropagation","heartFloat","keyframes","sparkleAnimation","PopupOverlay","PopupContainer","motion","PopupHeader","PopupTitle","h4","PopupContent","UserInfo","UserDetails","UserName","UserSubtext","PopupActions","ChatButton","DismissButton","CloseButton","ProgressBar","$duration","_notification$data","notification","onClose","onStartChat","onViewProfile","_ref$autoCloseDelay","autoCloseDelay","isVisible","setIsVisible","matchUser","match_user","from_user","from_user_data","timer","handleClose","clearTimeout","createPortal","AnimatePresence","initial","opacity","scale","animate","exit","transition","duration","bounce","avatar","body","NotificationContext","createContext","NotificationProvider","activePopups","setActivePopups","lastChecked","setLastChecked","setUnreadCount","_useState7","_useState8","isMounted","setIsMounted","_useState9","_useState0","isRouterReady","setIsRouterReady","_useState1","_useState10","authenticated","handleAuthChange","onSuccess","_onSuccess","_useQuery2","checkForNewMatchNotifications","recentTime","newMatchNotifications","_iterator","_step","_yield$import","filter","notificationTime","created_at","getTime","find","popup","_createForOfIteratorHelper","n","done","showMatchPopup","f","_ref3","_yield$import2","timestamp","_toConsumableArray","removePopup","notificationId","markNotificationAsRead","_ref4","max","showCustomMatchPopup","_ref5","matchData","_yield$import3","_t5","toISOString","contextValue","Provider","map","MatchPopup","href","isLoading","setIsLoading","showPassword","setShowPassword","_useForm","useForm","handleSubmit","errors","formState","React","checkExistingAuth","onSubmit","errorMessage","htmlFor","placeholder","autoComplete","required","minLength","right","color","disabled","marginTop","fontWeight","SelectorContainer","DropdownContainer","LoadingContainer","NoResultsText","_ref$value","onChange","onSelect","_ref$placeholder","_ref$required","_ref$disabled","isOpen","setIsOpen","searchValue","setSearchValue","countries","setCountries","filteredCountries","setFilteredCountries","selectedIndex","setSelectedIndex","inputRef","containerRef","dropdownRef","fetchCountries","filtered","toLowerCase","includes","fetch","ok","json","handleCountrySelect","selectedElement","scrollIntoView","block","behavior","newValue","onFocus","onKeyDown","_inputRef$current","preventDefault","blur","index","DisabledText","_ref$country","cities","setCities","filteredCities","setFilteredCities","fetchCities","selectedCountry","encodeURIComponent","handleCitySelect","isDisabledByCountry","isFullyDisabled","_Fragment","region","LocationContainer","LocationRow","$layout","ValidationInfo","$valid","_ref$countryValue","countryValue","_ref$cityValue","cityValue","onCountryChange","onCityChange","onCountrySelect","onCitySelect","onLocationChange","countryError","cityError","_ref$layout","layout","_ref$countryLabel","countryLabel","_ref$cityLabel","cityLabel","_ref$countryPlacehold","countryPlaceholder","_ref$cityPlaceholder","cityPlaceholder","_ref$showValidation","showValidation","isValidLocation","setIsValidLocation","CountrySelector","isComplete","countryData","CitySelector","cityData","fullData","RegisterContainer","RegisterCard","h2","StepIndicator","Step","$active","FormSection","PasswordToggle","SecondaryButton","FormRow","LoginLink","StatusOptions","StatusOption","EmailCodeSection","CodeInputSection","CodeTimer","_templateObject27","_errors$country","_errors$city","currentStep","setCurrentStep","selectedStatus","setSelectedStatus","emailCode","setEmailCode","isCodeSent","setIsCodeSent","codeTimer","setCodeTimer","_useState11","_useState12","showConfirmPassword","setShowConfirmPassword","_useState13","_useState14","formProgress","setFormProgress","defaultValues","watch","setValue","getValues","clearErrors","allFields","requiredFields","push","field","interval","setInterval","clearInterval","sendCodeMutation","useMutation","registerMutation","smokingOptions","alkoOptions","searchStatus","searchAge","canProceed","manBirthday","womanBirthday","individualData","manHeight","womanHeight","weight","manWeight","womanWeight","smoking","manSmoking","womanSmoking","alko","manAlko","womanAlko","locationString","submitData","mail_code","about","search_status","search_age","info","individual","mutate","pattern","inputMode","slice","maxLength","textAlign","letterSpacing","fontFamily","validate","confirmPassword","name","checked","range","today","birthDate","getFullYear","LocationSelector","flexDirection","option","min","DislikeIcon","SuperlikeIcon","BackIcon","LocationIcon","InfoIcon","HomeContainer","Header","HeaderContent","WelcomeText","SwipeContainer","ProfileCard","ProfileImage","ProfileOverlay","ProfileDetails","ActionButtons","ActionButton","NoMoreProfiles","SwipeHint","ClickableUsername","_currentUser$login","_onSuccess2","currentProfile","setCurrentProfile","showHint","setShowHint","showSuperlikeModal","setShowSuperlikeModal","superlikeMessage","setSuperlikeMessage","swipeDirection","setSwipeDirection","profileQueue","setProfileQueue","isPreloading","setIsPreloading","profileHistory","setProfileHistory","_useState15","_useState16","historyIndex","setHistoryIndex","context","useContext","useNotifications","formatPartnerAge","age","monthDiff","getMonth","getDate","getAgeFromDate","dateField","dates","_dateField$split","_dateField$split2","manDate","womanDate","trim","parseDateField","parsed","manAge","womanAge","preloadProfiles","newProfiles","_args","getNextProfile","newHistory","nextProfile","_useQuery","refetch","likeMutation","result","match_created","dislikeMutation","superlikeMutation","handleCloseSuperlikeModal","mode","drag","dragConstraints","left","onDragEnd","rotateY","rotate","stiffness","whileDrag","onLoad","isCouple","partnerData","dateHasUnderscore","heightHasUnderscore","weightHasUnderscore","smokingHasUnderscore","alkoHasUnderscore","ages","distance","hasUnderscore","compatibility","totalScore","_currentProfile$heigh","_currentProfile$heigh2","_currentProfile$weigh","_currentProfile$weigh2","_currentProfile$smoki","_currentProfile$smoki2","substring","_currentProfile$alko$","_currentProfile$alko$2","previousProfile","marginBottom","lineHeight","justifyContent","CatalogContainer","FiltersContainer","FilterSection","FilterLabel","CheckboxGroup","CheckboxItem","InputGroup","InputField","FilterActions","ProfilesGrid","ProfileAvatar","ProfileInfo","NoResults","Pagination","setFilters","statuses","availableFilters","setAvailableFilters","profilesData","handlePageChange","newOffset","scrollTo","top","availableCities","fontStyle","handleStatusChange","variant","_user$login","percentage","borderRadius","margin","border","pagination","hasMore","RatingContainer","RatingHeader","RatingStats","VotingButtons","$userVote","$percentage","DisabledMessage","userVote","canVote","isVoting","setIsVoting","voteMutation","onMutate","invalidateQueries","onSettled","deleteVoteMutation","handleVote","_rating$total_rating","total_rating","_rating$total_votes","total_votes","_rating$positive_vote","positive_votes","_rating$negative_vote","negative_votes","_rating$percentage_po","percentage_positive","whileHover","whileTap","CommentsContainer","CommentsHeader","CommentForm","CommentsList","CommentItem","EditForm","EmptyState","LoadMoreButton","_commentsData$paginat","setCommentText","editingComment","setEditingComment","editText","setEditText","setPage","keepPreviousData","commentsData","createCommentMutation","updateCommentMutation","deleteCommentMutation","handleUpdateComment","canEditComment","comment","_comment$user","canDeleteComment","_comment$user2","comments","totalComments","trimmed","trimmedLength","commentData","_comment$user3","_comment$user4","_comment$user5","_comment$user6","_comment$user7","_usersAPI$utils","_usersAPI$utils$forma","src","alt","size","call","is_edited","text","handleEditComment","$isPublic","_ref$isOwnProfile","isOwnProfile","setIsPublic","setIncludePrivate","_comment$author","author","_comment$author2","cursor","_comment$author3","_comment$author4","_comment$author5","_comment$author6","_comment$author7","ReactionsContainer","ReactionsBar","ReactionButton","$isActive","$activeColor","$textColor","ReactionsStats","ReactionsModal","ReactionsModalContent","ReactionsGrid","ReactionOption","REACTION_CONFIG","emoji","textColor","love","laugh","wow","sad","angry","_REACTION_CONFIG$user","_REACTION_CONFIG$user2","_REACTION_CONFIG$user3","_ref$showStats","showStats","showModal","setShowModal","reactionsData","setReactionMutation","removeReactionMutation","handleReactionClick","userReaction","user_reaction","closeModal","totalReactions","topReactions","entries","sort","a","_ref8","_REACTION_CONFIG$reac","_REACTION_CONFIG$reac2","_REACTION_CONFIG$reac3","_ref9","_ref0","_REACTION_CONFIG$reac4","_ref1","_ref10","_ref11","CameraIcon","GIFT_CONFIG","cost","ProfileContainer","ProfileHeader","AvatarSection","AvatarOverlay","ActionsContainer","TabsContainer","Tab","TabContent","RatingSection","InfoSection","InfoItem","ImageGallery","ImageCard","Image","img","ImageOverlay","UploadArea","HiddenInput","GiftGrid","GiftOption","$selected","GiftCard","BalanceSection","BalanceTitle","BalanceAmount","BalanceButton","VipAdSection","VipAdTitle","VipAdText","VipAdButton","_templateObject28","GiftEmoji","_templateObject29","GiftSender","_templateObject30","GiftMessage","_templateObject31","_profile$login","useParams","targetLogin","activeTab","setActiveTab","showImageModal","setShowImageModal","selectedImage","setSelectedImage","showGiftModal","setShowGiftModal","selectedGift","setSelectedGift","giftMessage","setGiftMessage","receivedGiftsData","receivedGifts","avatarInputRef","imagesInputRef","matchStatus","values","updateProfileMutation","uploadAvatarMutation","uploadImageMutation","deleteImageMutation","sendGiftMutation","visitMutation","hasUserLiked","userHasLiked","_avatarInputRef$curre","click","accept","file","files","balance","RatingDisplay","onRatingSubmit","gridTemplateColumns","gift","_GIFT_CONFIG$gift$gif","_GIFT_CONFIG$gift$gif2","ProfileComments","Reactions","_imagesInputRef$curre","multiple","images","handleImageClick","imageId","objectFit","PhotoComments","g","Set","_GIFT_CONFIG$gift$gif3","_GIFT_CONFIG$gift$gif4","senderLogin","maxHeight","AttachIcon","MoreIcon","ChatContainer","ChatSidebar","$selectedChat","ChatHeader","SearchContainer","SearchInput","ChatsContainer","ChatItem","ChatWindow","ChatWindowHeader","MessagesContainer","MessageGroup","$isOwn","Message","TypingIndicator","MessageInputWrapper","$disabled","MessageInput","InputContainer","TextInput","$primary","ErrorMessage","NewChatWelcome","MatchStatusBanner","$status","_chats$conversations","_forceVirtualChat$com","_forceVirtualChat$com2","_forceVirtualChat$com3","_selectedChatData$com","_selectedChatData$com2","_selectedChatData$com3","_selectedChatData$com4","chatId","selectedChat","setSelectedChat","messageText","setMessageText","searchTerm","setSearchTerm","setMatchStatus","messagesEndRef","fileInputRef","lastSelectedChatRef","refetchOnWindowFocus","staleTime","_useQuery$data","chats","chatsError","chatsLoading","existingChat","conversations","companion","virtualChat","last_message","last_message_date","last_message_by","unread_count","has_images","companion_info","online","forceVirtualChat","allChats","userInfo","match_status","_useQuery2$data","messages","messagesError","messagesLoading","_virtualChat$companio","_virtualChat$companio2","_virtualChat$companio3","sendMessageMutation","match_warning","warning","sendFileMutation","_error$response4","_error$response5","_messagesEndRef$curre","filteredChats","handleChatSelect","chatUser","handleSendMessage","canChat","icon","formatTime","toLocaleTimeString","selectedChatData","reload","_chat$companion_info","_chat$companion_info2","_chat$companion_info3","isOwn","by_user","prevMessage","idx","maxWidth","onKeyPress","shiftKey","rows","_fileInputRef$current","FilterIcon","CalendarIcon","AdsContainer","Filters","FiltersTitle","FiltersGrid","AdsGrid","AdCard","AdImage","AdTypeBadge","AdContent","AdMeta","AdTitle","AdDescription","AdActions","NoAds","StatsCard","ImageUpload","onImageChange","preview","setPreview","reader","FileReader","onload","readAsDataURL","_errors$image","editingAd","setEditingAd","clubOwnership","reset","adsResponse","useMemo","ad","_ad$author","_ad$author2","author_avatar","createAdMutation","updateAdMutation","deleteAdMutation","handleCloseModal","adTypes","baseTypes","hasActiveClub","getTypeLabel","_adTypes$find2","t","stats","myAds","parties","meetings","_adTypes$find","authorLogin","handleEdit","flex","adId","imageValidation","step","AdminContainer","AdminHeader","primary","spacing","lg","fonts","sizes","xlarge","xs","AdminContent","shadow","md","CardTitle","large","StatsGrid","StatCard","textLight","small","Table","table","sm","primaryDark","StatusBadge","medium","_stats$recent_activit","userFilters","setUserFilters","adsFilters","setAdsFilters","getStats","usersLoading","_useQuery3","_useQuery3$data","adsLoading","_useQuery4$data","getReports","reports","userActionMutation","userAction","variables","ban","unban","verify","adActionMutation","adAction","approve","reportActionMutation","reportId","reportAction","handleUserAction","handleAdAction","total_users","active_users","total_ads","pending_reports","recent_activity","activity","banned","verified","last_seen","report","heartBeat","sparkle","MatchContainer","MatchHeader","MatchIcon","MatchTitle","MatchSubtitle","MatchContent","HeartConnector","MatchActions","TimeStamp","diffMinutes","onDismiss","_ref$isAnimatingOut","isAnimatingOut","handleViewProfile","getNotificationColor","visit","match","club","subscription","system","photo","invitation","reminder","promotion","NotificationsContainer","NotificationsHeader","FilterTabs","FilterTab","$count","BulkActions","NotificationsList","NotificationItem","$isRead","NotificationContent","NotificationIcon","NotificationDetails","NotificationTitle","NotificationMessage","NotificationMeta","NotificationTime","NotificationPriority","$priority","NotificationActions","ProfileButton","setFilter","localNotifications","setLocalNotifications","animatingOut","setAnimatingOut","notificationsData","filteredNotifications","notif","is_read","countByType","reduce","acc","currentUnreadCount","markAsReadMutation","setQueryData","oldData","markAllAsReadMutation","deleteNotificationMutation","deleteReadNotificationsMutation","canViewProfile","handleMarkAsRead","add","newSet","filterTabs","tab","_notification$data2","IconComponent","MatchNotification","has","onMouseEnter","onMouseLeave","ClubsContainer","FilterRow","ClubCard","ClubHeader","ClubContent","ClubTitle","ClubDescription","ClubMeta","ClubStats","ClubType","$isPrivate","MyClubCard","ApplicationCard","_clubApplications$app","showCreateModal","setShowCreateModal","showDetailsModal","setShowDetailsModal","selectedClub","setSelectedClub","searchQuery","setSearchQuery","cityFilter","setCityFilter","typeFilter","setTypeFilter","is_private","max_members","clubForm","setClubForm","clubsData","isLoadingClubs","myClubs","isLoadingMyClubs","clubApplications","createClubMutation","joinClubMutation","manageApplicationMutation","handleJoinClub","prompt","handleClubClick","handleApplicationAction","filteredClubs","myClubsList","member_count","is_member","is_owner","pending_applications","applications","application","_application$user_log","user_avatar","user_login","SubscriptionsContainer","PlanCard","$featured","PlanIcon","PlanTitle","PlanPrice","FeaturesList","ul","FeatureItem","li","CurrentStatusCard","$statusColor","HistoryCard","PromoSection","PLAN_CONFIGS","VIP","features","PREMIUM","featured","_subscriptionStatus$p","_subscriptionHistory$","showPaymentModal","setShowPaymentModal","selectedPlan","setSelectedPlan","promoCode","setPromoCode","subscriptionStatus","isLoadingStatus","subscriptionHistory","isLoadingHistory","subscribeMutation","cancelMutation","promoMutation","discount","planType","feature","handleSubscribe","plan","getStatusColor","getStatusIcon","expires_at","auto_renew","payments","payment","_payment$plan","amount","promo_code","paddingLeft","RatingsContainer","RankingCard","$rank","RankBadge","RatingValue","FilterContainer","VipBadge","$vipLevel","_leaderboard$users","_myStats$rating_histo","leaderboard","isLoadingLeaderboard","myStats","isLoadingStats","topUsers","isLoadingTop","handleFilterChange","_defineProperty","renderChangeIcon","change","delay","rank","vip_level","profile_views","likes_received","rating_score","rating_change","abs","current_rating","current_position","max_rating","rating_history","overflowY","entry","borderBottom","categoryData","most_active","most_popular","most_gifts","userIndex","marginLeft","score","secondary","surface","xxlarge","xl","GlobalStyle","createGlobalStyle","AppContainer","QueryClient","defaultOptions","queries","cacheTime","QueryClientProvider","client","ThemeProvider","Router","future","v7_startTransition","v7_relativeSplatPath","Routes","Route","element","Login","Register","AuthGuard","Navigation","Home","Catalog","Profile","Chat","Notifications","Clubs","Subscriptions","Ratings","Ads","Admin","Toaster","toastOptions","iconTheme","container","getElementById","createRoot","render","App"],"sourceRoot":""}