{"version":3,"file":"main.83fc08cefdbe841cba5d.js","mappings":"4PA+EA,QA3EkB,SAAHA,GAAqB,IAAfC,EAAQD,EAARC,SACnBC,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAC1CI,GAAwCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAuDjB,OArDAC,EAAAA,EAAAA,WAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIkC,GAHlDZ,GAAgB,GAAMU,EAAAC,KAAA,EAGEE,EAAAA,SAASlB,kBAEX,CAAFe,EAAAE,KAAA,QAEO,OADvBhB,GAAmB,GACnBI,GAAgB,GAAOU,EAAAI,OAAA,wBAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAMjBC,EAAAA,SAASE,qBAAoB,OACnCnB,GAAmB,GAAMc,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA,SAGzBM,QAAQC,KAAK,wCACbJ,EAAAA,SAASK,SACTtB,GAAmB,GAAO,OAAAc,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAF,EAAAC,EAAA,SAG5BM,QAAQG,MAAM,+BAA8BV,GAC5Cb,GAAmB,GAAO,OAEH,OAFGc,EAAAC,KAAA,EAE1BX,GAAgB,GAAOU,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,2BAE1B,kBA5Bc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KA8BfnB,IAGA,IAAMoB,EAAmB,WACvB5B,GAAmB,EACrB,EAGM6B,EAAsB,WAC1BrB,GACF,EAKA,OAHAsB,OAAOC,iBAAiB,cAAeH,GACvCE,OAAOC,iBAAiB,UAAWF,GAE5B,WACLC,OAAOE,oBAAoB,cAAeJ,GAC1CE,OAAOE,oBAAoB,UAAWH,EACxC,CACF,EAAG,CAACxB,EAAS4B,WAGT9B,GAEA+B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASzC,SAAC,4BAOxBK,EAKEL,GAJEwC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,SAASC,SAAO,EAACC,MAAO,CAAEC,KAAMnC,IAKxD,E,+kBC5EA,IAmZgBoC,EAFbC,EAxBeC,EAPCC,EAJEC,EANLC,EARFC,EAJMC,EAJLC,EAPIC,EANPC,EANDC,EAJKC,EALCC,EALJC,EANAC,EANYC,EANVC,EANEC,EALLC,EANDC,EANAC,EAPQC,EAPRC,EAJHC,EAJCC,EANKC,EALFC,EANFC,EAPAC,EAPAC,EAJHC,EALCC,GAPUC,GAnBCC,GAnBAC,GAHhBC,GANAC,GALiBC,GANDC,GAJAC,GAPLC,GAPKC,GAPMC,GAJHC,GAPTC,GAPAC,GAPAC,GAJHC,GALCC,GARIC,GAJHC,GARJC,GAbDC,GAPGC,GA5CJC,GAAe,YAGfC,GAAO,eAAAxG,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOsF,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhF,EAAAV,EAAA2F,EAAA7E,UAAA,OAAAhB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASjB,OATmBmF,EAAOK,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACpCJ,EAAQO,aAAaC,QAAQ,aAE7BP,EAAMQ,EAAA,CACVC,QAAOD,EAAAA,EAAA,CACL,eAAgB,oBACZT,GAAS,CAAE,cAAiB,UAAFW,OAAYX,KACvCD,EAAQW,UAEVX,GAAOrF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIagG,MAAM,GAADD,OAAIf,IAAYe,OAAGb,GAAYG,GAAO,OAApD,IAARC,EAAQxF,EAAAmG,MAEAC,GAAI,CAAFpG,EAAAE,KAAA,QACgB,OAA1BuF,EAAe,YAAWzF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERsF,EAASa,OAAM,OAA7B5F,EAAKT,EAAAmG,KACXV,EAAehF,EAAM6F,SAAW7F,EAAMA,OAAS,QAAJwF,OAAYT,EAASe,OAAM,MAAAN,OAAKT,EAASgB,YAAaxG,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA,SAEjGyF,EAAe,QAAHQ,OAAWT,EAASe,OAAM,MAAAN,OAAKT,EAASgB,YAAa,OAOhE,MALHlG,QAAQG,MAAM,qBAAsB,CAClC8F,OAAQf,EAASe,OACjBC,WAAYhB,EAASgB,WACrBpB,SAAAA,EACAG,OAAAA,IAEI,IAAIkB,MAAMhB,GAAa,cAAAzF,EAAAE,KAAA,EAGlBsF,EAASa,OAAM,cAAArG,EAAAI,OAAA,SAAAJ,EAAAmG,MAAA,OAEO,MAFPnG,EAAAC,KAAA,EAAAF,EAAAC,EAAA,SAE5BM,QAAQG,MAAM,aAAYV,GAASA,EAAA,yBAAAC,EAAAW,OAAA,EAAAb,EAAA,uBAGtC,gBArCY4G,GAAA,OAAA/H,EAAAiC,MAAA,KAAAC,UAAA,KAuCA8F,IAAOC,EAAG,CAErBC,UAAQ5B,IAAArF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiH,EAAOC,GAAQ,OAAAlH,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA5G,OAAA,SAChB+E,GAAQ,iBAAkB,CAC/B8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,MACrB,wBAAAC,EAAArG,OAAA,EAAAmG,EAAA,IACH,SALOO,GAAA,OAAApC,GAAArE,MAAA,KAAAC,UAAA,GAORyG,OAAKtC,IAAApF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0H,EAAOC,GAAW,IAAAhC,EAAA,OAAA3F,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAAAuH,EAAAvH,KAAA,EACAiF,GAAQ,cAAe,CAC5C8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUI,KACrB,OAID,OAPKhC,EAAQiC,EAAAtB,MAKDb,OACXO,aAAa6B,QAAQ,YAAalC,EAASF,OAC5CmC,EAAArH,OAAA,SAEMoF,GAAQ,wBAAAiC,EAAA9G,OAAA,EAAA4G,EAAA,IAChB,SAXII,GAAA,OAAA3C,GAAApE,MAAA,KAAAC,UAAA,GAaLL,QAAMuE,IAAAnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+H,IAAA,OAAA/H,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAA2H,EAAA5H,KAAA,EAAA4H,EAAA3H,KAAA,EAEEiF,GAAQ,eAAgB,CAAE8B,OAAQ,SAAS,OAEZ,OAFYY,EAAA5H,KAAA,EAEjD4F,aAAaiC,WAAW,aAAaD,EAAAnH,OAAA,2BAAAmH,EAAAlH,OAAA,EAAAiH,EAAA,oBAExC,WANK,OAAA7C,GAAAnE,MAAA,KAAAC,UAAA,GAQNkH,YAAUjD,IAAAlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAmI,IAAA,OAAAnI,IAAAA,KAAA,SAAAoI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,cAAA+H,EAAA7H,OAAA,SACH+E,GAAQ,kBAAgB,wBAAA8C,EAAAtH,OAAA,EAAAqH,EAAA,IAChC,WAFS,OAAAlD,GAAAlE,MAAA,KAAAC,UAAA,GAIVqH,eAAarD,IAAAjF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsI,EAAOC,GAAW,OAAAvI,IAAAA,KAAA,SAAAwI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAnI,MAAA,cAAAmI,EAAAjI,OAAA,SACxB+E,GAAQ,gBAAiB,CAC9B8B,OAAQ,MACRC,KAAMC,KAAKC,UAAUgB,MACrB,wBAAAC,EAAA1H,OAAA,EAAAwH,EAAA,IACH,SALYG,GAAA,OAAAzD,GAAAjE,MAAA,KAAAC,UAAA,GAQb0H,WAAS3D,IAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2I,IAAA,IAAAC,EAAAC,EAAA7H,UAAA,OAAAhB,IAAAA,KAAA,SAAA8I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,OACiD,OAApDuI,EAAc,IAAIG,gBADFF,EAAA/C,OAAA,QAAAC,IAAA8C,EAAA,GAAAA,EAAA,GAAG,CAAC,GACsBG,WAAUF,EAAAvI,OAAA,SACnD+E,GAAQ,iBAADc,OAAkBwC,EAAc,IAAHxC,OAAOwC,GAAgB,MAAK,wBAAAE,EAAAhI,OAAA,EAAA6H,EAAA,IACxE,WAHQ,OAAA5D,GAAAhE,MAAA,KAAAC,UAAA,GAKTiI,UAAQnE,IAAA/E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkJ,EAAOC,GAAO,OAAAnJ,IAAAA,KAAA,SAAAoJ,GAAA,cAAAA,EAAAhJ,KAAAgJ,EAAA/I,MAAA,cAAA+I,EAAA7I,OAAA,SACf+E,GAAQ,kBAADc,OAAmB+C,KAAU,wBAAAC,EAAAtI,OAAA,EAAAoI,EAAA,IAC5C,SAFOG,GAAA,OAAAvE,GAAA/D,MAAA,KAAAC,UAAA,GAIRsI,aAAWzE,IAAA9E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuJ,EAAOC,GAAS,OAAAxJ,IAAAA,KAAA,SAAAyJ,GAAA,cAAAA,EAAArJ,KAAAqJ,EAAApJ,MAAA,cAAAoJ,EAAAlJ,OAAA,SACpB+E,GAAQ,iBAAkB,CAC/B8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUiC,MACrB,wBAAAC,EAAA3I,OAAA,EAAAyI,EAAA,IACH,SALUG,GAAA,OAAA7E,GAAA9D,MAAA,KAAAC,UAAA,GAOX2I,aAAW/E,IAAA7E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4J,EAAOT,EAASK,GAAS,OAAAxJ,IAAAA,KAAA,SAAA6J,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAAxJ,MAAA,cAAAwJ,EAAAtJ,OAAA,SAC7B+E,GAAQ,kBAADc,OAAmB+C,GAAW,CAC1C/B,OAAQ,MACRC,KAAMC,KAAKC,UAAUiC,MACrB,wBAAAK,EAAA/I,OAAA,EAAA8I,EAAA,IACH,SALUE,EAAAC,GAAA,OAAAnF,GAAA7D,MAAA,KAAAC,UAAA,GAOXgJ,aAAWrF,IAAA5E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiK,EAAOd,GAAO,OAAAnJ,IAAAA,KAAA,SAAAkK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA3J,OAAA,SAClB+E,GAAQ,kBAADc,OAAmB+C,GAAW,CAC1C/B,OAAQ,YACR,wBAAA8C,EAAApJ,OAAA,EAAAmJ,EAAA,IACH,SAJUE,GAAA,OAAAxF,GAAA5D,MAAA,KAAAC,UAAA,GAOXoJ,sBAAoB1F,IAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqK,EAAOlB,GAAO,OAAAnJ,IAAAA,KAAA,SAAAsK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cAAAiK,EAAA/J,OAAA,SAC3B+E,GAAQ,kBAADc,OAAmB+C,EAAO,mBAAgB,wBAAAmB,EAAAxJ,OAAA,EAAAuJ,EAAA,IACzD,SAFmBE,GAAA,OAAA7F,GAAA3D,MAAA,KAAAC,UAAA,GAIpBwJ,yBAAuB/F,IAAA1E,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAyK,EAAOtB,EAASuB,EAAehE,GAAM,OAAA1G,IAAAA,KAAA,SAAA2K,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,cAAAsK,EAAApK,OAAA,SACrD+E,GAAQ,kBAADc,OAAmB+C,EAAO,kBAAA/C,OAAiBsE,GAAiB,CACxEtD,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEb,OAAAA,OACvB,wBAAAiE,EAAA7J,OAAA,EAAA2J,EAAA,IACH,SALsBG,EAAAC,EAAAC,GAAA,OAAArG,GAAA1D,MAAA,KAAAC,UAAA,GAOvB+J,mBAAiBvG,IAAAzE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgL,EAAO7B,EAASuB,GAAa,OAAA1K,IAAAA,KAAA,SAAAiL,GAAA,cAAAA,EAAA7K,KAAA6K,EAAA5K,MAAA,cAAA4K,EAAA1K,OAAA,SACvC+E,GAAQ,kBAADc,OAAmB+C,EAAO,kBAAA/C,OAAiBsE,GAAiB,CACxEtD,OAAQ,YACR,wBAAA6D,EAAAnK,OAAA,EAAAkK,EAAA,IACH,SAJgBE,EAAAC,GAAA,OAAA3G,GAAAzD,MAAA,KAAAC,UAAA,GAOjBoK,cAAY7G,IAAAxE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqL,EAAOlC,EAASmC,GAAe,OAAAtL,IAAAA,KAAA,SAAAuL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAhL,OAAA,SACpC+E,GAAQ,kBAADc,OAAmB+C,EAAO,UAAU,CAChD/B,OAAQ,OACRC,KAAMC,KAAKC,UAAU+D,MACrB,wBAAAC,EAAAzK,OAAA,EAAAuK,EAAA,IACH,SALWG,EAAAC,GAAA,OAAAlH,GAAAxD,MAAA,KAAAC,UAAA,GAOZ0K,mBAAiBpH,IAAAvE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2L,IAAA,OAAA3L,IAAAA,KAAA,SAAA4L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,cAAAuL,EAAArL,OAAA,SACV+E,GAAQ,8BAA4B,wBAAAsG,EAAA9K,OAAA,EAAA6K,EAAA,IAC5C,WAFgB,OAAArH,GAAAvD,MAAA,KAAAC,UAAA,GAIjB6K,mBAAiBxH,IAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8L,EAAO3C,GAAO,OAAAnJ,IAAAA,KAAA,SAAA+L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,cAAA0L,EAAAxL,OAAA,SACxB+E,GAAQ,uBAADc,OAAwB+C,EAAO,WAAW,CACtD/B,OAAQ,UACR,wBAAA2E,EAAAjL,OAAA,EAAAgL,EAAA,IACH,SAJgBE,GAAA,OAAA3H,GAAAtD,MAAA,KAAAC,UAAA,GAMjBiL,oBAAkB7H,IAAArE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkM,EAAO/C,EAASgD,GAAO,OAAAnM,IAAAA,KAAA,SAAAoM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA/L,MAAA,cAAA+L,EAAA7L,OAAA,SAClC+E,GAAQ,kBAADc,OAAmB+C,EAAO,WAAW,CACjD/B,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE8E,SAAUF,OACjC,wBAAAC,EAAAtL,OAAA,EAAAoL,EAAA,IACH,SALiBI,EAAAC,GAAA,OAAAnI,GAAArD,MAAA,KAAAC,UAAA,KAKjBwL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAzF,EAAA,qBAAA5C,IAAApE,EAAAA,EAAAA,GAAAC,IAAAA,KAEkB,SAAAyM,EAAOtD,EAASuD,GAAM,OAAA1M,IAAAA,KAAA,SAAA2M,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cAAAsM,EAAApM,OAAA,SAChC+E,GAAQ,kBAADc,OAAmB+C,EAAO,kBAAA/C,OAAiBsG,GAAU,CACjEtF,OAAQ,YACR,wBAAAuF,EAAA7L,OAAA,EAAA2L,EAAA,IACH,SAAAG,EAAAC,GAAA,OAAA1I,GAAApD,MAAA,KAAAC,UAAA,yBAAAkD,IAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,KAGkB,SAAA8M,EAAO3D,EAAS4D,GAAQ,IAAAtH,EAAAE,EAAA/E,EAAA,OAAAZ,IAAAA,KAAA,SAAAgN,GAAA,cAAAA,EAAA5M,KAAA4M,EAAA3M,MAAA,OACM,OAAzCoF,EAAQO,aAAaC,QAAQ,aAAY+G,EAAA3M,KAAA,EAExBgG,MAAM,GAADD,OAAIf,GAAY,mBAAAe,OAAkB+C,EAAO,WAAW,CAC9E/B,OAAQ,OACRjB,QAAOD,EAAA,GACDT,GAAS,CAAE,cAAiB,UAAFW,OAAYX,KAE5C4B,KAAM0F,IACN,OANY,IAARpH,EAAQqH,EAAA1G,MAQAC,GAAI,CAAFyG,EAAA3M,KAAA,eAAA2M,EAAA3M,KAAA,EACMsF,EAASa,OAAM,OAAxB,MAAL5F,EAAKoM,EAAA1G,KACL,IAAIM,MAAMhG,EAAM6F,SAAW,gBAAe,cAAAuG,EAAA3M,KAAA,EAGrCsF,EAASa,OAAM,cAAAwG,EAAAzM,OAAA,SAAAyM,EAAA1G,MAAA,wBAAA0G,EAAAlM,OAAA,EAAAgM,EAAA,IAC7B,SAjBgBG,EAAAC,GAAA,OAAAhJ,GAAAnD,MAAA,KAAAC,UAAA,yBAAAiD,IAAAlE,EAAAA,EAAAA,GAAAC,IAAAA,KAmBE,SAAAmN,EAAOhE,EAAS4D,GAAQ,IAAAtH,EAAAE,EAAA/E,EAAA,OAAAZ,IAAAA,KAAA,SAAAoN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAA/M,MAAA,OACM,OAAzCoF,EAAQO,aAAaC,QAAQ,aAAYmH,EAAA/M,KAAA,EAExBgG,MAAM,GAADD,OAAIf,GAAY,mBAAAe,OAAkB+C,EAAO,WAAW,CAC9E/B,OAAQ,OACRjB,QAAOD,EAAA,GACDT,GAAS,CAAE,cAAiB,UAAFW,OAAYX,KAE5C4B,KAAM0F,IACN,OANY,IAARpH,EAAQyH,EAAA9G,MAQAC,GAAI,CAAF6G,EAAA/M,KAAA,eAAA+M,EAAA/M,KAAA,EACMsF,EAASa,OAAM,OAAxB,MAAL5F,EAAKwM,EAAA9G,KACL,IAAIM,MAAMhG,EAAM6F,SAAW,gBAAe,cAAA2G,EAAA/M,KAAA,EAGrCsF,EAASa,OAAM,cAAA4G,EAAA7M,OAAA,SAAA6M,EAAA9G,MAAA,wBAAA8G,EAAAtM,OAAA,EAAAqM,EAAA,IAC7B,SAjBgBE,EAAAC,GAAA,OAAArJ,GAAAlD,MAAA,KAAAC,UAAA,wBAAAgD,IAAAjE,EAAAA,EAAAA,GAAAC,IAAAA,KAmBC,SAAAuN,EAAOpE,EAASqE,GAAQ,OAAAxN,IAAAA,KAAA,SAAAyN,GAAA,cAAAA,EAAArN,KAAAqN,EAAApN,MAAA,cAAAoN,EAAAlN,OAAA,SACjC+E,GAAQ,kBAADc,OAAmB+C,EAAO,YAAA/C,OAAWoH,GAAY,CAC7DpG,OAAQ,YACR,wBAAAqG,EAAA3M,OAAA,EAAAyM,EAAA,IACH,SAJeG,EAAAC,GAAA,OAAA3J,GAAAjD,MAAA,KAAAC,UAAA,cAAA+C,IAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,KAOR,SAAA4N,IAAA,IAAAhF,EAAAiF,EAAA7M,UAAA,OAAAhB,IAAAA,KAAA,SAAA8N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,OACoD,OAApDuI,EAAc,IAAIG,gBADL8E,EAAA/H,OAAA,QAAAC,IAAA8H,EAAA,GAAAA,EAAA,GAAG,CAAC,GACyB7E,WAAU8E,EAAAvN,OAAA,SACnD+E,GAAQ,WAADc,OAAYwC,EAAc,IAAHxC,OAAOwC,GAAgB,MAAK,wBAAAkF,EAAAhN,OAAA,EAAA8M,EAAA,IAClE,WAHK,OAAA7J,GAAAhD,MAAA,KAAAC,UAAA,aAAA8C,IAAA/D,EAAAA,EAAAA,GAAAC,IAAAA,KAKC,SAAA+N,EAAOC,GAAI,OAAAhO,IAAAA,KAAA,SAAAiO,GAAA,cAAAA,EAAA7N,KAAA6N,EAAA5N,MAAA,cAAA4N,EAAA1N,OAAA,SACT+E,GAAQ,YAADc,OAAa4H,KAAO,wBAAAC,EAAAnN,OAAA,EAAAiN,EAAA,IACnC,SAFIG,GAAA,OAAApK,GAAA/C,MAAA,KAAAC,UAAA,gBAAA6C,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,KAIK,SAAAmO,EAAOC,GAAM,OAAApO,IAAAA,KAAA,SAAAqO,GAAA,cAAAA,EAAAjO,KAAAiO,EAAAhO,MAAA,cAAAgO,EAAA9N,OAAA,SACd+E,GAAQ,WAAY,CACzB8B,OAAQ,OACRC,KAAMC,KAAKC,UAAU6G,MACrB,wBAAAC,EAAAvN,OAAA,EAAAqN,EAAA,IACH,SALOG,GAAA,OAAAzK,EAAA9C,MAAA,KAAAC,UAAA,gBAAA4C,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,KAOE,SAAAuO,EAAOP,EAAMI,GAAM,OAAApO,IAAAA,KAAA,SAAAwO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAnO,MAAA,cAAAmO,EAAAjO,OAAA,SACpB+E,GAAQ,YAADc,OAAa4H,GAAQ,CACjC5G,OAAQ,MACRC,KAAMC,KAAKC,UAAU6G,MACrB,wBAAAI,EAAA1N,OAAA,EAAAyN,EAAA,IACH,SALOE,EAAAC,GAAA,OAAA9K,EAAA7C,MAAA,KAAAC,UAAA,gBAAA2C,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,KAOE,SAAA2O,EAAOX,GAAI,OAAAhO,IAAAA,KAAA,SAAA4O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,cAAAuO,EAAArO,OAAA,SACZ+E,GAAQ,YAADc,OAAa4H,GAAQ,CACjC5G,OAAQ,YACR,wBAAAwH,EAAA9N,OAAA,EAAA6N,EAAA,IACH,SAJOE,GAAA,OAAAlL,EAAA5C,MAAA,KAAAC,UAAA,kBAAA0C,GAAA3D,EAAAA,EAAAA,GAAAC,IAAAA,KAMI,SAAA8O,IAAA,OAAA9O,IAAAA,KAAA,SAAA+O,GAAA,cAAAA,EAAA3O,KAAA2O,EAAA1O,MAAA,cAAA0O,EAAAxO,OAAA,SACH+E,GAAQ,4BAA0B,wBAAAyJ,EAAAjO,OAAA,EAAAgO,EAAA,IAC1C,WAFS,OAAApL,EAAA3C,MAAA,KAAAC,UAAA,KAAAwL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAzF,EAAA,gBAAAtD,GAAA1D,EAAAA,EAAAA,GAAAC,IAAAA,KAKI,SAAAgP,IAAA,IAAAC,EAAAC,EAAAC,EAAAnO,UAAA,OAAAhB,IAAAA,KAAA,SAAAoP,GAAA,cAAAA,EAAAhP,KAAAgP,EAAA/O,MAAA,OAAyC,OAAlC4O,EAAIE,EAAArJ,OAAA,QAAAC,IAAAoJ,EAAA,GAAAA,EAAA,GAAG,WAAYD,EAAMC,EAAArJ,OAAA,QAAAC,IAAAoJ,EAAA,GAAAA,EAAA,GAAG,OAAMC,EAAA7O,OAAA,SAC9C+E,GAAQ,cAADc,OAAe6I,EAAI,YAAA7I,OAAW8I,KAAS,wBAAAE,EAAAtO,OAAA,EAAAkO,EAAA,IACtD,WAFW,OAAAvL,EAAA1C,MAAA,KAAAC,UAAA,eAAAwC,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,KAMH,SAAAqP,IAAA,OAAArP,IAAAA,KAAA,SAAAsP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,cAAAiP,EAAA/O,OAAA,SACA+E,GAAQ,eAAa,wBAAAgK,EAAAxO,OAAA,EAAAuO,EAAA,IAC7B,WAFM,OAAA7L,EAAAzC,MAAA,KAAAC,UAAA,cAAAuC,GAAAxD,EAAAA,EAAAA,GAAAC,IAAAA,KAIC,SAAAuP,EAAOC,GAAK,OAAAxP,IAAAA,KAAA,SAAAyP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,cAAAoP,EAAAlP,OAAA,SACX+E,GAAQ,cAADc,OAAeoJ,KAAQ,wBAAAC,EAAA3O,OAAA,EAAAyO,EAAA,IACtC,SAFKG,GAAA,OAAAnM,EAAAxC,MAAA,KAAAC,UAAA,iBAAAsC,GAAAvD,EAAAA,EAAAA,GAAAC,IAAAA,KAIK,SAAA2P,EAAOC,GAAO,OAAA5P,IAAAA,KAAA,SAAA6P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAtP,OAAA,SAChB+E,GAAQ,aAAc,CAC3B8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUqI,MACrB,wBAAAC,EAAA/O,OAAA,EAAA6O,EAAA,IACH,SALQG,GAAA,OAAAxM,EAAAvC,MAAA,KAAAC,UAAA,yBAAAqC,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,KAOU,SAAA+P,EAAOP,EAAOQ,GAAQ,OAAAhQ,IAAAA,KAAA,SAAAiQ,GAAA,cAAAA,EAAA7P,KAAA6P,EAAA5P,MAAA,cAAA4P,EAAA1P,OAAA,SAChC+E,GAAQ,cAADc,OAAeoJ,EAAK,aAAa,CAC7CpI,OAAQ,MACRC,KAAMC,KAAKC,UAAUyI,MACrB,wBAAAC,EAAAnP,OAAA,EAAAiP,EAAA,IACH,SALgBG,EAAAC,GAAA,OAAA9M,EAAAtC,MAAA,KAAAC,UAAA,iBAAAoC,GAAArD,EAAAA,EAAAA,GAAAC,IAAAA,KAON,SAAAoQ,EAAOZ,GAAK,OAAAxP,IAAAA,KAAA,SAAAqQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAAgQ,EAAA9P,OAAA,SACd+E,GAAQ,cAADc,OAAeoJ,EAAK,WAAW,CAC3CpI,OAAQ,SACR,wBAAAiJ,EAAAvP,OAAA,EAAAsP,EAAA,IACH,SAJQE,GAAA,OAAAlN,EAAArC,MAAA,KAAAC,UAAA,iBAAAmC,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,KAME,SAAAuQ,EAAOf,GAAK,OAAAxP,IAAAA,KAAA,SAAAwQ,GAAA,cAAAA,EAAApQ,KAAAoQ,EAAAnQ,MAAA,cAAAmQ,EAAAjQ,OAAA,SACd+E,GAAQ,cAADc,OAAeoJ,GAAS,CACpCpI,OAAQ,YACR,wBAAAoJ,EAAA1P,OAAA,EAAAyP,EAAA,IACH,SAJQE,GAAA,OAAAtN,EAAApC,MAAA,KAAAC,UAAA,kBAAAkC,GAAAnD,EAAAA,EAAAA,GAAAC,IAAAA,KAMG,SAAA0Q,EAAOlB,GAAK,OAAAxP,IAAAA,KAAA,SAAA2Q,GAAA,cAAAA,EAAAvQ,KAAAuQ,EAAAtQ,MAAA,cAAAsQ,EAAApQ,OAAA,SACf+E,GAAQ,cAADc,OAAeoJ,EAAK,WAAQ,wBAAAmB,EAAA7P,OAAA,EAAA4P,EAAA,IAC3C,SAFSE,GAAA,OAAA1N,EAAAnC,MAAA,KAAAC,UAAA,uBAAAiC,GAAAlD,EAAAA,EAAAA,GAAAC,IAAAA,KAKO,SAAA6Q,EAAO1H,GAAO,OAAAnJ,IAAAA,KAAA,SAAA8Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAAAyQ,EAAAvQ,OAAA,SACtB+E,GAAQ,2BAADc,OAA4B+C,GAAW,CACnD/B,OAAQ,UACR,wBAAA0J,EAAAhQ,OAAA,EAAA+P,EAAA,IACH,SAJcE,GAAA,OAAA9N,EAAAlC,MAAA,KAAAC,UAAA,qBAAAgC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,KAMA,SAAAgR,IAAA,OAAAhR,IAAAA,KAAA,SAAAiR,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,cAAA4Q,EAAA1Q,OAAA,SACN+E,GAAQ,uBAAwB,CACrC8B,OAAQ,UACR,wBAAA6J,EAAAnQ,OAAA,EAAAkQ,EAAA,IACH,WAJY,OAAAhO,EAAAjC,MAAA,KAAAC,UAAA,KAAAwL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAzF,EAAA,2BAAAhE,GAAAhD,EAAAA,EAAAA,GAAAC,IAAAA,KAMY,SAAAkR,IAAA,OAAAlR,IAAAA,KAAA,SAAAmR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,cAAA8Q,EAAA5Q,OAAA,SAChB+E,GAAQ,6BAA8B,CAC3C8B,OAAQ,UACR,wBAAA+J,EAAArQ,OAAA,EAAAoQ,EAAA,IACH,WAJsB,OAAAnO,EAAAhC,MAAA,KAAAC,UAAA,mBAAA8B,GAAA/C,EAAAA,EAAAA,GAAAC,IAAAA,KAMV,SAAAoR,IAAA,OAAApR,IAAAA,KAAA,SAAAqR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAAgR,EAAA9Q,OAAA,SACJ+E,GAAQ,0BAA2B,CACxC8B,OAAQ,UACR,wBAAAiK,EAAAvQ,OAAA,EAAAsQ,EAAA,IACH,WAJU,OAAAtO,EAAA/B,MAAA,KAAAC,UAAA,mBAAA6B,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,KAME,SAAAsR,IAAA,OAAAtR,IAAAA,KAAA,SAAAuR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAhR,OAAA,SACJ+E,GAAQ,8BAA4B,wBAAAiM,EAAAzQ,OAAA,EAAAwQ,EAAA,IAC5C,WAFU,OAAAzO,EAAA9B,MAAA,KAAAC,UAAA,uBAAA4B,GAAA7C,EAAAA,EAAAA,GAAAC,IAAAA,KAKM,SAAAwR,IAAA,IAAA5I,EAAA6I,EAAAzQ,UAAA,OAAAhB,IAAAA,KAAA,SAAA0R,GAAA,cAAAA,EAAAtR,KAAAsR,EAAArR,MAAA,OAC2C,OAApDuI,EAAc,IAAIG,gBADI0I,EAAA3L,OAAA,QAAAC,IAAA0L,EAAA,GAAAA,EAAA,GAAG,CAAC,GACgBzI,WAAU0I,EAAAnR,OAAA,SACnD+E,GAAQ,6BAADc,OAA8BwC,EAAc,IAAHxC,OAAOwC,GAAgB,MAAK,wBAAA8I,EAAA5Q,OAAA,EAAA0Q,EAAA,IACpF,WAHc,OAAA5O,EAAA7B,MAAA,KAAAC,UAAA,sBAAA2B,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,KAKC,SAAA2R,EAAOxI,GAAO,OAAAnJ,IAAAA,KAAA,SAAA4R,GAAA,cAAAA,EAAAxR,KAAAwR,EAAAvR,MAAA,cAAAuR,EAAArR,OAAA,SACrB+E,GAAQ,uBAADc,OAAwB+C,KAAU,wBAAAyI,EAAA9Q,OAAA,EAAA6Q,EAAA,IACjD,SAFaE,GAAA,OAAAlP,EAAA5B,MAAA,KAAAC,UAAA,iBAAA0B,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,KAIH,SAAA8R,EAAO3I,GAAO,OAAAnJ,IAAAA,KAAA,SAAA+R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,cAAA0R,EAAAxR,OAAA,SAChB+E,GAAQ,uBAADc,OAAwB+C,EAAO,SAAS,CACpD/B,OAAQ,UACR,wBAAA2K,EAAAjR,OAAA,EAAAgR,EAAA,IACH,SAJQE,GAAA,OAAAtP,EAAA3B,MAAA,KAAAC,UAAA,kBAAAyB,GAAA1C,EAAAA,EAAAA,GAAAC,IAAAA,KAMG,SAAAiS,EAAO9I,GAAO,OAAAnJ,IAAAA,KAAA,SAAAkS,GAAA,cAAAA,EAAA9R,KAAA8R,EAAA7R,MAAA,cAAA6R,EAAA3R,OAAA,SACjB+E,GAAQ,uBAADc,OAAwB+C,EAAO,UAAU,CACrD/B,OAAQ,YACR,wBAAA8K,EAAApR,OAAA,EAAAmR,EAAA,IACH,SAJSE,GAAA,OAAA1P,EAAA1B,MAAA,KAAAC,UAAA,yBAAAwB,GAAAzC,EAAAA,EAAAA,GAAAC,IAAAA,KAMS,SAAAoS,EAAOjJ,EAASzC,GAAM,OAAA1G,IAAAA,KAAA,SAAAqS,GAAA,cAAAA,EAAAjS,KAAAiS,EAAAhS,MAAA,cAAAgS,EAAA9R,OAAA,SAChC+E,GAAQ,uBAADc,OAAwB+C,EAAO,WAAW,CACtD/B,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAEb,OAAAA,OACvB,wBAAA2L,EAAAvR,OAAA,EAAAsR,EAAA,IACH,SALgBE,EAAAC,GAAA,OAAA/P,EAAAzB,MAAA,KAAAC,UAAA,qBAAAuB,GAAAxC,EAAAA,EAAAA,GAAAC,IAAAA,KAOF,SAAAwS,IAAA,OAAAxS,IAAAA,KAAA,SAAAyS,GAAA,cAAAA,EAAArS,KAAAqS,EAAApS,MAAA,cAAAoS,EAAAlS,OAAA,SACN+E,GAAQ,6BAA2B,wBAAAmN,EAAA3R,OAAA,EAAA0R,EAAA,IAC3C,WAFY,OAAAjQ,EAAAxB,MAAA,KAAAC,UAAA,0BAAAsB,GAAAvC,EAAAA,EAAAA,GAAAC,IAAAA,KAIO,SAAA0S,IAAA,OAAA1S,IAAAA,KAAA,SAAA2S,GAAA,cAAAA,EAAAvS,KAAAuS,EAAAtS,MAAA,cAAAsS,EAAApS,OAAA,SACX+E,GAAQ,iCAA+B,wBAAAqN,EAAA7R,OAAA,EAAA4R,EAAA,IAC/C,WAFiB,OAAApQ,EAAAvB,MAAA,KAAAC,UAAA,KAAAwL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAzF,EAAA,gBAAA1E,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,KAIJ,SAAA4S,EAAOC,GAAK,IAAAC,EAAAlK,EAAAmK,EAAA/R,UAAA,OAAAhB,IAAAA,KAAA,SAAAgT,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,OAEkC,OADpDyS,EAAM5M,EAAA,CAAK+M,EAAGJ,GADaE,EAAAjN,OAAA,QAAAC,IAAAgN,EAAA,GAAAA,EAAA,GAAG,CAAC,GAE/BnK,EAAc,IAAIG,gBAAgB+J,GAAQ9J,WAAUgK,EAAAzS,OAAA,SACnD+E,GAAQ,8BAADc,OAA+BwC,KAAc,wBAAAoK,EAAAlS,OAAA,EAAA8R,EAAA,IAC5D,SAJWM,GAAA,OAAA7Q,EAAAtB,MAAA,KAAAC,UAAA,sBAAAoB,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,KAQI,SAAAmT,IAAA,IAAAvK,EAAAwK,EAAApS,UAAA,OAAAhB,IAAAA,KAAA,SAAAqT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,OAC4C,OAApDuI,EAAc,IAAIG,gBADGqK,EAAAtN,OAAA,QAAAC,IAAAqN,EAAA,GAAAA,EAAA,GAAG,CAAC,GACiBpK,WAAUqK,EAAA9S,OAAA,SACnD+E,GAAQ,4BAADc,OAA6BwC,EAAc,IAAHxC,OAAOwC,GAAgB,MAAK,wBAAAyK,EAAAvS,OAAA,EAAAqS,EAAA,IACnF,WAHa,OAAA/Q,EAAArB,MAAA,KAAAC,UAAA,2BAAAmB,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,KAMO,SAAAsT,IAAA,OAAAtT,IAAAA,KAAA,SAAAuT,GAAA,cAAAA,EAAAnT,KAAAmT,EAAAlT,MAAA,cAAAkT,EAAAhT,OAAA,SACZ+E,GAAQ,oCAAkC,wBAAAiO,EAAAzS,OAAA,EAAAwS,EAAA,IAClD,WAFkB,OAAAnR,EAAApB,MAAA,KAAAC,UAAA,yBAAAkB,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,KAIA,SAAAwT,EAAOC,GAAM,IAAAhN,EAAAiN,EAAA1S,UAAA,OAAAhB,IAAAA,KAAA,SAAA2T,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,OAAc,OAAZoG,EAAOiN,EAAA5N,OAAA,QAAAC,IAAA2N,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAApT,OAAA,SACrC+E,GAAQ,6BAA8B,CAC3C8B,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEqM,QAASH,EAAQhN,QAAAA,OACxC,wBAAAkN,EAAA7S,OAAA,EAAA0S,EAAA,IACH,SALgBK,GAAA,OAAA3R,EAAAnB,MAAA,KAAAC,UAAA,wBAAAiB,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,KAOC,SAAA8T,EAAO/G,GAAQ,IAAAtH,EAAAE,EAAA/E,EAAA,OAAAZ,IAAAA,KAAA,SAAA+T,GAAA,cAAAA,EAAA3T,KAAA2T,EAAA1T,MAAA,OACgB,OAAzCoF,EAAQO,aAAaC,QAAQ,aAAY8N,EAAA1T,KAAA,EAExBgG,MAAM,GAADD,OAAIf,GAAY,wBAAwB,CAClE+B,OAAQ,OACRjB,QAAOD,EAAA,GACDT,GAAS,CAAE,cAAiB,UAAFW,OAAYX,KAE5C4B,KAAM0F,IACN,OANY,IAARpH,EAAQoO,EAAAzN,MAQAC,GAAI,CAAFwN,EAAA1T,KAAA,eAAA0T,EAAA1T,KAAA,EACMsF,EAASa,OAAM,OAAxB,MAAL5F,EAAKmT,EAAAzN,KACL,IAAIM,MAAMhG,EAAM6F,SAAW,gBAAe,cAAAsN,EAAA1T,KAAA,EAGrCsF,EAASa,OAAM,cAAAuN,EAAAxT,OAAA,SAAAwT,EAAAzN,MAAA,wBAAAyN,EAAAjT,OAAA,EAAAgT,EAAA,IAC7B,SAjBeE,GAAA,OAAA/R,EAAAlB,MAAA,KAAAC,UAAA,qBAAAgB,GAAAjC,EAAAA,EAAAA,GAAAC,IAAAA,KAmBD,SAAAiU,EAAO1L,GAAW,OAAAvI,IAAAA,KAAA,SAAAkU,GAAA,cAAAA,EAAA9T,KAAA8T,EAAA7T,MAAA,cAAA6T,EAAA3T,OAAA,SACxB+E,GAAQ,gBAAiB,CAC9B8B,OAAQ,MACRC,KAAMC,KAAKC,UAAUgB,MACrB,wBAAA2L,EAAApT,OAAA,EAAAmT,EAAA,IACH,SAAAE,GAAA,OAAAnS,EAAAjB,MAAA,KAAAC,UAAA,sBAAAe,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,KAEe,SAAAoU,EAAOC,GAAY,IAAAC,EAAAC,EAAA,OAAAvU,IAAAA,KAAA,SAAAwU,GAAA,cAAAA,EAAApU,KAAAoU,EAAAnU,MAAA,OACgC,OAAjEI,QAAQgU,IAAI,sCAAuCJ,GAAcG,EAAApU,KAAA,EAAAoU,EAAAnU,KAAA,EAE1CiF,GAAQ,iBAAkB,CAC7C8B,OAAQ,MACRC,KAAMC,KAAKC,UAAU8M,KACrB,OACqD,OAJjDC,EAAME,EAAAlO,KAIZ7F,QAAQgU,IAAI,kCAAmCH,GAAQE,EAAAjU,OAAA,SAChD+T,GAAM,OAEyC,MAFzCE,EAAApU,KAAA,EAAAmU,EAAAC,EAAA,SAEb/T,QAAQG,MAAM,gCAA+B2T,GAASA,EAAA,wBAAAC,EAAA1T,OAAA,EAAAsT,EAAA,iBAGzD,SAbaM,GAAA,OAAA3S,EAAAhB,MAAA,KAAAC,UAAA,oBAAAc,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,KAeA,SAAA2U,EAAO5H,GAAQ,IAAAtH,EAAAE,EAAA/E,EAAA,OAAAZ,IAAAA,KAAA,SAAA4U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,OACoB,OAAzCoF,EAAQO,aAAaC,QAAQ,aAAY2O,EAAAvU,KAAA,EAExBgG,MAAM,GAADD,OAAIf,GAAY,wBAAwB,CAClE+B,OAAQ,OACRjB,QAAOD,EAAA,GACDT,GAAS,CAAE,cAAiB,UAAFW,OAAYX,KAE5C4B,KAAM0F,IACN,OANY,IAARpH,EAAQiP,EAAAtO,MAQAC,GAAI,CAAFqO,EAAAvU,KAAA,eAAAuU,EAAAvU,KAAA,EACMsF,EAASa,OAAM,OAAxB,MAAL5F,EAAKgU,EAAAtO,KACL,IAAIM,MAAMhG,EAAM6F,SAAW,gBAAe,cAAAmO,EAAAvU,KAAA,EAGrCsF,EAASa,OAAM,cAAAoO,EAAArU,OAAA,SAAAqU,EAAAtO,MAAA,wBAAAsO,EAAA9T,OAAA,EAAA6T,EAAA,IAC7B,SAjBWE,GAAA,OAAA/S,EAAAf,MAAA,KAAAC,UAAA,KAqBD8T,GACM,WACf,QAAS9O,aAAaC,QAAQ,YAChC,EAHW6O,GAaE,WACX9O,aAAaiC,WAAW,YAC1B,GAGYlI,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+U,IAAA,IAAApP,EAAAqP,EAAA,OAAAhV,IAAAA,KAAA,SAAAiV,GAAA,cAAAA,EAAA7U,KAAA6U,EAAA5U,MAAA,cAAA4U,EAAA7U,KAAA,EAAA6U,EAAA5U,KAAA,EAEaiF,GAAQ,gBAAiB,CAC9C8B,OAAQ,SACR,OAID,OANKzB,EAAQsP,EAAA3O,MAIDb,OACXO,aAAa6B,QAAQ,YAAalC,EAASF,OAC5CwP,EAAA1U,OAAA,SAEMoF,GAAQ,OAEsB,MAFtBsP,EAAA7U,KAAA,EAAA4U,EAAAC,EAAA,SAEfjP,aAAaiC,WAAW,aAAa+M,EAAA,wBAAAC,EAAAnU,OAAA,EAAAiU,EAAA,kBAMnChV,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkV,IAAA,OAAAlV,IAAAA,KAAA,SAAAmV,GAAA,cAAAA,EAAA/U,KAAA+U,EAAA9U,MAAA,cAAA8U,EAAA5U,OAAA,SACC+E,GAAQ,aAAW,wBAAA6P,EAAArU,OAAA,EAAAoU,EAAA,KAGpBnV,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoV,EAAOhH,GAAM,OAAApO,IAAAA,KAAA,SAAAqV,GAAA,cAAAA,EAAAjV,KAAAiV,EAAAhV,MAAA,cAAAgV,EAAA9U,OAAA,SACd+E,GAAQ,WAAY,CACzB8B,OAAQ,OACRC,KAAMC,KAAKC,UAAU6G,MACrB,wBAAAiH,EAAAvU,OAAA,EAAAsU,EAAA,KAGIrV,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsV,EAAOtH,EAAMI,GAAM,OAAApO,IAAAA,KAAA,SAAAuV,GAAA,cAAAA,EAAAnV,KAAAmV,EAAAlV,MAAA,cAAAkV,EAAAhV,OAAA,SACpB+E,GAAQ,YAADc,OAAa4H,GAAQ,CACjC5G,OAAQ,MACRC,KAAMC,KAAKC,UAAU6G,MACrB,wBAAAmH,EAAAzU,OAAA,EAAAwU,EAAA,KAGIvV,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwV,EAAOxH,GAAI,OAAAhO,IAAAA,KAAA,SAAAyV,GAAA,cAAAA,EAAArV,KAAAqV,EAAApV,MAAA,cAAAoV,EAAAlV,OAAA,SACZ+E,GAAQ,YAADc,OAAa4H,GAAQ,CACjC5G,OAAQ,YACR,wBAAAqO,EAAA3U,OAAA,EAAA0U,EAAA,KAKGzV,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0V,IAAA,OAAA1V,IAAAA,KAAA,SAAA2V,GAAA,cAAAA,EAAAvV,KAAAuV,EAAAtV,MAAA,cAAAsV,EAAApV,OAAA,SACA+E,GAAQ,eAAa,wBAAAqQ,EAAA7U,OAAA,EAAA4U,EAAA,KAGrB3V,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4V,EAAOhG,GAAO,OAAA5P,IAAAA,KAAA,SAAA6V,GAAA,cAAAA,EAAAzV,KAAAyV,EAAAxV,MAAA,cAAAwV,EAAAtV,OAAA,SAChB+E,GAAQ,aAAc,CAC3B8B,OAAQ,OACRC,KAAMC,KAAKC,UAAUqI,MACrB,wBAAAiG,EAAA/U,OAAA,EAAA8U,EAAA,KAGK7V,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8V,EAAOtG,EAAOI,GAAO,OAAA5P,IAAAA,KAAA,SAAA+V,GAAA,cAAAA,EAAA3V,KAAA2V,EAAA1V,MAAA,cAAA0V,EAAAxV,OAAA,SACvB+E,GAAQ,cAADc,OAAeoJ,GAAS,CACpCpI,OAAQ,MACRC,KAAMC,KAAKC,UAAUqI,MACrB,wBAAAmG,EAAAjV,OAAA,EAAAgV,EAAA,KAGK/V,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgW,EAAOxG,GAAK,OAAAxP,IAAAA,KAAA,SAAAiW,GAAA,cAAAA,EAAA7V,KAAA6V,EAAA5V,MAAA,cAAA4V,EAAA1V,OAAA,SACd+E,GAAQ,cAADc,OAAeoJ,GAAS,CACpCpI,OAAQ,YACR,wBAAA6O,EAAAnV,OAAA,EAAAkV,EAAA,KAIWjW,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkW,IAAA,OAAAlW,IAAAA,KAAA,SAAAmW,GAAA,cAAAA,EAAA/V,KAAA+V,EAAA9V,MAAA,cAAA8V,EAAA5V,OAAA,SACR+E,GAAQ,kBAAgB,wBAAA6Q,EAAArV,OAAA,EAAAoV,EAAA,KAGZnW,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoW,EAAO1L,EAAe2L,GAAI,OAAArW,IAAAA,KAAA,SAAAsW,GAAA,cAAAA,EAAAlW,KAAAkW,EAAAjW,MAAA,cAAAiW,EAAA/V,OAAA,SACxC+E,GAAQ,iBAADc,OAAkBsE,EAAa,SAAS,CACpDtD,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CAAE8O,KAAAA,OACvB,wBAAAC,EAAAxV,OAAA,EAAAsV,EAAA,KAGarW,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuW,EAAO7L,GAAa,OAAA1K,IAAAA,KAAA,SAAAwW,GAAA,cAAAA,EAAApW,KAAAoW,EAAAnW,MAAA,cAAAmW,EAAAjW,OAAA,SAC9B+E,GAAQ,iBAADc,OAAkBsE,GAAiB,CAC/CtD,OAAQ,YACR,wBAAAoP,EAAA1V,OAAA,EAAAyV,EAAA,ICzeN,SAhDsB,SAAHzX,GAAqB,IAAfC,EAAQD,EAARC,SACvBC,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAW1C,OATAU,EAAAA,EAAAA,WAAU,WACR,IACQ6W,IAAgB3B,KACtBzV,EAAmBoX,EAIvB,EAAG,IAEqB,OAApBrX,GAGAsX,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRC,WAAY,qDACZjY,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACVM,MAAO,OACPF,OAAQ,OACRG,OAAQ,qCACRC,UAAW,kBACXC,aAAc,MACdC,UAAW,8BAEb9V,EAAAA,EAAAA,KAAA,SAAAxC,SAAA,0JAUDK,EAKEL,GAHEwC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,cAAcC,SAAO,GAI7C,E,+oBC/CA,IAAM2V,GAAoBC,EAAAA,GAAOC,MAAKC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,sMAchCC,GAAgBJ,EAAAA,GAAOK,MAAKC,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,+JAY5BI,GAAgBP,EAAAA,GAAOQ,KAAIC,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,sEA6BjC,SAvBiB,SAAH5Y,GAOR,IANJ0Y,EAAK1Y,EAAL0Y,MACAS,EAAOnZ,EAAPmZ,QACAC,EAAQpZ,EAARoZ,SAAQC,EAAArZ,EACRsZ,SAAAA,OAAQ,IAAAD,GAAQA,EAChBE,EAAIvZ,EAAJuZ,KACGC,GAAKC,EAAAA,GAAAA,GAAAzZ,EAAA0Z,IAER,OACE9B,EAAAA,EAAAA,MAACY,GAAiB,CAAAvY,SAAA,EAChBwC,EAAAA,EAAAA,KAACoW,GAAazR,GAAA,CACZ+I,KAAK,WACLgJ,QAASA,EACTC,SAAUA,EACVE,SAAUA,EACVC,KAAMA,GACFC,KAEN/W,EAAAA,EAAAA,KAACuW,GAAa,CAAA/Y,SAAEyY,MAGtB,E,uGCjDMiB,GAAiBlB,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,uRAe3BiB,GAAcpB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,yDAKxBkB,GAAarB,EAAAA,GAAOsB,GAAEb,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,2JAWtBoB,GAAgBvB,EAAAA,GAAOwB,EAACC,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,6HAUxBuB,GAAgB1B,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,kCAI1ByB,GAAc5B,EAAAA,GAAOC,MAAK4B,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,iHAQ1B2B,GAAc9B,EAAAA,GAAOK,MAAK0B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,2eA4B1B6B,GAAehC,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,6LAWzB+B,GAAoBlC,EAAAA,GAAOmC,OAAMC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,8dA4BjCkC,GAAuBrC,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,kCAIjCoC,GAAqBvC,EAAAA,GAAOC,MAAKuC,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,iHAQjCsC,GAAsBzC,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,8PAehCwC,GAAoB3C,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,sBAI9B0C,GAAoB7C,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,6FAO9B4C,GAA2B/C,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,iDAKrC8C,GAAoBjD,EAAAA,GAAOmB,IAAG+B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,uEAO9BgD,GAAcnD,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,2VAiBxBkD,GAAWrD,EAAAA,GAAOmB,IAAGmC,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,uMAcrBoD,GAAkBvD,EAAAA,GAAOK,MAAKmD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,qcA0B9BsD,GAAczD,EAAAA,GAAOmB,IAAGuC,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,6LAcxBwD,GAAa3D,EAAAA,GAAOmB,IAAGyC,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,4FAQvB0D,GAAkB7D,EAAAA,GAAOmB,IAAG2C,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,kDAK5B4D,GAAkB/D,EAAAA,GAAOK,MAAK2D,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,kVAoB9B8D,GAAiBjE,EAAAA,GAAOmB,IAAG+C,KAAAA,IAAA/D,EAAAA,EAAAA,GAAA,2NAe3BgE,GAAenE,EAAAA,GAAOmB,IAAGiD,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,4KAWzBkE,GAAerE,EAAAA,GAAOK,MAAKiE,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,sXAmF3BoE,IA5DWvE,EAAAA,GAAOmB,IAAGqD,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,2LAYLH,EAAAA,GAAOyE,GAAEC,KAAAA,IAAAvE,EAAAA,EAAAA,GAAA,6FAOXH,EAAAA,GAAOmB,IAAGwD,KAAAA,IAAAxE,EAAAA,EAAAA,GAAA,gOAeZH,EAAAA,GAAOK,MAAKuE,KAAAA,IAAAzE,EAAAA,EAAAA,GAAA,2bA0BTH,EAAAA,GAAOmC,OAAM0C,KAAAA,IAAA1E,EAAAA,EAAAA,GAAA,yhBA4B5B2E,GAAiB9E,EAAAA,GAAOmB,IAAG4D,KAAAA,IAAA5E,EAAAA,EAAAA,GAAA,8PAc3B6E,GAAehF,EAAAA,GAAOmB,IAAG8D,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,kRA+O/B,SAhOqB,SAAH5Y,GAAmD,IAA7C2d,EAAO3d,EAAP2d,QAAOC,EAAA5d,EAAE6d,eAAAA,OAAc,IAAAD,EAAG,EAACA,EAAEE,EAAS9d,EAAT8d,UACnD5d,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC6d,EAAM3d,EAAA,GAAE4d,EAAS5d,EAAA,GACxBI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCyd,EAAUxd,EAAA,GAAEyd,EAAazd,EAAA,GAChC0d,GAAoChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8Bpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCxe,EAAAA,EAAAA,UAAS,IAAGye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwC5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAkChf,EAAAA,EAAAA,WAAS,GAAMif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0Bpf,EAAAA,EAAAA,UAAS,IAAGqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAA/Bzd,EAAK0d,EAAA,GAAEC,EAAQD,EAAA,GAkChBE,EAAY,eAAA1e,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOwe,GAAC,OAAAze,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,GAAnBoe,EAAEC,iBAEG7B,KAAU8B,WAAW9B,IAAW,GAAC,CAAA1c,EAAAE,KAAA,QACa,OAAjDke,EAAS,wCAAwCpe,EAAAI,OAAA,sBAI/Coe,WAAW9B,GAAU,KAAG,CAAA1c,EAAAE,KAAA,QAC0B,OAApDke,EAAS,2CAA2Cpe,EAAAI,OAAA,oBAIjDwc,GAAeI,GAAeI,GAAYI,EAAQ,CAAAxd,EAAAE,KAAA,QACJ,OAAjDke,EAAS,wCAAwCpe,EAAAI,OAAA,iBAInDge,EAAS,IACTP,GAAgB,GAGhBY,WAAW,WACTZ,GAAgB,GAChBI,GAAa,GAETxB,GACFA,IAIFgC,WAAW,WACTR,GAAa,GACT3B,GACFA,GAEJ,EAAG,IACL,EAAG,KAAM,wBAAAtc,EAAAW,OAAA,EAAAb,EAAA,IACV,gBAtCiB4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAmElB,OAAImd,GAEA5c,EAAAA,EAAAA,KAACkX,GAAc,CAAA1Z,UACb2X,EAAAA,EAAAA,MAAC2F,GAAc,CAAAtd,SAAA,EACbwC,EAAAA,EAAAA,KAACsd,GAAS,IAAG,8BACehC,EAAO,aAOzCnG,EAAAA,EAAAA,MAAC+B,GAAc,CAAA1Z,SAAA,EACb2X,EAAAA,EAAAA,MAACiC,GAAW,CAAA5Z,SAAA,EACVwC,EAAAA,EAAAA,KAACqX,GAAU,CAAA7Z,SAAC,wBACZ2X,EAAAA,EAAAA,MAACoC,GAAa,CAAA/Z,SAAA,CAAC,mBAAiB4d,EAAe,aAGjDjG,EAAAA,EAAAA,MAAA,QAAMoI,SAAUN,EAAazf,SAAA,EAC3B2X,EAAAA,EAAAA,MAACuC,GAAa,CAAAla,SAAA,EACZwC,EAAAA,EAAAA,KAAC4X,GAAW,CAAApa,SAAC,2BACbwC,EAAAA,EAAAA,KAAC8X,GAAW,CACVpK,KAAK,SACL8P,YAAY,gBACZC,MAAOnC,EACP3E,SAAU,SAACuG,GAAC,OA1HK,SAACO,GAI1B,GAHAlC,EAAUkC,GAGLA,GAAmB,KAAVA,EAAd,CAKA,IAAMC,EAAWN,WAAWK,GAGxBE,MAAMD,GACRV,EAAS,wCAMTA,EADEU,EAAW,GAAKA,EAAW,IACpB,0CAEA,GAdX,MAFEV,EAAS,GAkBb,CAmG2BY,CAAmBV,EAAEW,OAAOJ,MAAM,EACnDK,IAAI,IACJC,KAAK,MAGN1e,IAASW,EAAAA,EAAAA,KAACgb,GAAY,CAAAxd,SAAE6B,KACzBW,EAAAA,EAAAA,KAACgY,GAAY,CAAAxa,SAlIA,CAAC,IAAK,IAAK,IAAK,IAAM,IAAM,KAmIzBwgB,IAAI,SAACC,GAAW,OAC5Bje,EAAAA,EAAAA,KAACkY,GAAiB,CAEhBxK,KAAK,SACLzN,UAAWqb,IAAW2C,EAAYxW,WAAa,WAAa,GAC5DyW,QAAS,WAAF,OA7GK,SAACD,GACzBjB,EAAS,IACTzB,EAAU0C,EAAYxW,WACxB,CA0G6B0W,CAAkBF,EAAY,EAACzgB,SAE7CygB,GALIA,EAMa,SAK1B9I,EAAAA,EAAAA,MAACkD,GAAoB,CAAA7a,SAAA,EACnBwC,EAAAA,EAAAA,KAACuY,GAAkB,CAAA/a,SAAC,mBACpB2X,EAAAA,EAAAA,MAACsD,GAAmB,CAAAjb,SAAA,EAClB2X,EAAAA,EAAAA,MAACwD,GAAiB,CAAAnb,SAAA,EAChBwC,EAAAA,EAAAA,KAAC6Y,GAAiB,CAAArb,SAAC,sBACnBwC,EAAAA,EAAAA,KAAC+Y,GAAwB,CAAAvb,SAAC,8BAE5BwC,EAAAA,EAAAA,KAACiZ,GAAiB,CAAAzb,UAChBwC,EAAAA,EAAAA,KAACoe,GAAc,aAMrBjJ,EAAAA,EAAAA,MAACgE,GAAW,CAAA3b,SAAA,EACVwC,EAAAA,EAAAA,KAACqZ,GAAQ,CAAA7b,SAAC,QAGVwC,EAAAA,EAAAA,KAACuZ,GAAe,CACd7L,KAAK,OACL8P,YAAY,sBACZC,MAAOjC,EACP7E,SAAU,SAACuG,GAAC,OAAKzB,EA9FF,SAACgC,GAMxB,IALA,IAAMY,EAAIZ,EAAMrd,QAAQ,OAAQ,IAAIA,QAAQ,WAAY,IAClDke,EAAUD,EAAEE,MAAM,aAClBA,EAAQD,GAAWA,EAAQ,IAAM,GACjCE,EAAQ,GAELC,EAAI,EAAGC,EAAMH,EAAMha,OAAQka,EAAIC,EAAKD,GAAK,EAChDD,EAAMG,KAAKJ,EAAMK,UAAUH,EAAGA,EAAI,IAGpC,OAAID,EAAMja,OACDia,EAAMK,KAAK,KAEXR,CAEX,CA+EyCS,CAAiB5B,EAAEW,OAAOJ,OAAO,EAChEsB,UAAU,QAIZ5J,EAAAA,EAAAA,MAACsE,GAAW,CAAAjc,SAAA,EACV2X,EAAAA,EAAAA,MAACwE,GAAU,CAAAnc,SAAA,EACTwC,EAAAA,EAAAA,KAAC6Z,GAAe,CAAArc,SAAC,cACjBwC,EAAAA,EAAAA,KAAC+Z,GAAe,CACdrM,KAAK,OACL8P,YAAY,cACZC,MAAOrB,EACPzF,SAAU,SAACuG,GAAC,OAAKb,EAAYa,EAAEW,OAAOJ,MAAM,QAGhDtI,EAAAA,EAAAA,MAACwE,GAAU,CAAAnc,SAAA,EACTwC,EAAAA,EAAAA,KAAC6Z,GAAe,CAAArc,SAAC,mBACjBwC,EAAAA,EAAAA,KAAC+Z,GAAe,CACdrM,KAAK,OACL8P,YAAY,QACZC,MAAO7B,EACPjF,SAAU,SAACuG,GAAC,OAAKrB,GAjGvBwC,EAiGkDnB,EAAEW,OAAOJ,MAjGjDrd,QAAQ,OAAQ,IAAIA,QAAQ,WAAY,KAClDmE,QAAU,EACP8Z,EAAEO,UAAU,EAAG,GAAK,IAAMP,EAAEO,UAAU,EAAG,GAE3CP,GALY,IACbA,CAiGkE,EAC5DU,UAAU,aAMhB5J,EAAAA,EAAAA,MAAC8E,GAAc,CAAAzc,SAAA,EACbwC,EAAAA,EAAAA,KAACma,GAAY,CAAA3c,SAAC,SACdwC,EAAAA,EAAAA,KAACqa,GAAY,CACX3M,KAAK,OACL8P,YAAY,MACZC,MAAOzB,EACPrF,SAAU,SAACuG,GAAC,OAAKjB,EAAWiB,EAAEW,OAAOJ,MAAMrd,QAAQ,MAAO,IAAI,EAC9D2e,UAAU,aAKhB/e,EAAAA,EAAAA,KAACua,GAAY,CAAC7M,KAAK,SAASmJ,SAAU2F,EAAahf,SAChDgf,EAAe,eAAiB,gBAAH3X,OAAmByW,GAAU,EAAC,cAKtE,E,ylBCzpBA,IAAM0D,GAAmBhJ,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kOAc7B8I,GAAejJ,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,2mBAInB,SAAAY,GAAK,OAAIA,EAAMmI,SAAW,OAAO,EAoB/B,SAAAnI,GAAK,OAAIA,EAAMoI,eAAiB,OAAO,EAKvC,SAAApI,GAAK,OAAIA,EAAMoI,eAAiB,OAAO,GAK/CC,GAAWpJ,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,k1BA+CrBkJ,GAAarJ,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,08BAOjB,SAAAY,GAAK,OAAIA,EAAMuI,SAAW,WAAW,GA+B3CC,GAAWvJ,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,wNAcrBqJ,GAAexJ,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,wPAqd/B,SAtcsB,SAAH5Y,GAOb,IANJkiB,EAAMliB,EAANkiB,OACAvE,EAAO3d,EAAP2d,QACAwE,EAASniB,EAATmiB,UACAC,EAAMpiB,EAANoiB,OACeC,GADTriB,EACNsiB,YAAetiB,EACfuiB,SAAAA,OAAO,IAAAF,EAAG,IAAGA,EAEbniB,GAAgCC,EAAAA,EAAAA,UAAS,CAAEqiB,EAAG,EAAGC,EAAG,EAAGtK,MAAO,IAAKF,OAAQ,MAAM7X,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1EwiB,EAAQtiB,EAAA,GAAEuiB,EAAWviB,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CoiB,EAAUniB,EAAA,GAAEoiB,EAAapiB,EAAA,GAChC0d,GAAkChe,EAAAA,EAAAA,UAAS,CAAEqiB,EAAG,EAAGC,EAAG,IAAIrE,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAnD2E,EAAS1E,EAAA,GAAE2E,EAAY3E,EAAA,GAC9BG,GAAoCpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA5CyE,EAAUxE,EAAA,GAAEyE,EAAazE,EAAA,GAChCG,GAAwCxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA/CuE,EAAYtE,EAAA,GAAEuE,EAAevE,EAAA,GACpCG,GAAkC5e,EAAAA,EAAAA,UAAS,CAAEgY,MAAO,EAAGF,OAAQ,IAAI+G,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA5DqE,EAASpE,EAAA,GAAEqE,EAAYrE,EAAA,GAC9BG,GAAgChf,EAAAA,EAAAA,UAAS,IAAGif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAArCmE,EAAQlE,EAAA,GAAEmE,EAAWnE,EAAA,GAC5BG,GAA0Cpf,EAAAA,EAAAA,UAAS,CAAEgY,MAAO,IAAKF,OAAQ,MAAMuH,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAAxEiE,EAAahE,EAAA,GAAEiE,EAAgBjE,EAAA,GACtCkE,GAAgCvjB,EAAAA,EAAAA,WAAS,GAAMwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,UACXC,GAAeD,EAAAA,EAAAA,WAGrBjjB,EAAAA,EAAAA,WAAU,WACR,IAAMmjB,EAAc,WAClBJ,EAAYxhB,OAAO6hB,YAAc,IACnC,EAKA,OAHAD,IACA5hB,OAAOC,iBAAiB,SAAU2hB,GAE3B,kBAAM5hB,OAAOE,oBAAoB,SAAU0hB,EAAY,CAChE,EAAG,KAGHnjB,EAAAA,EAAAA,WAAU,WACR,GAAIqhB,EAAW,CACb,IAAMgC,EAAMC,IAAIC,gBAAgBlC,GAChCoB,EAAYY,GAEZ,IAAMG,EAAM,IAAIC,MAwChB,OAvCAD,EAAIE,OAAS,WACX,IAAQrM,EAAkBmM,EAAlBnM,MAAOF,EAAWqM,EAAXrM,OACfoL,EAAa,CAAElL,MAAAA,EAAOF,OAAAA,IAGtB,IACIwM,EAAgBC,EADdC,EAAmBf,EAAW,IAAM,IAGtCzL,EAAQF,GAEVwM,EAAiBE,EACjBD,EAAmBzM,EAASE,EAASwM,IAGrCD,EAAkBC,EAClBF,EAAkBtM,EAAQF,EAAU0M,GAItCF,EAAiBG,KAAKC,IAAIJ,EAAgBb,EAAW,IAAM,KAC3Dc,EAAkBE,KAAKC,IAAIH,EAAiBd,EAAW,IAAM,KAE7DH,EAAiB,CAAEtL,MAAOsM,EAAgBxM,OAAQyM,IAGlD,IAAMI,EAAWF,KAAKrE,IACpBqD,EAAW,IAAM,IAC2B,GAA5CgB,KAAKrE,IAAIkE,EAAgBC,IAG3B/B,EAAY,CACVH,GAAIiC,EAAiBK,GAAY,EACjCrC,GAAIiC,EAAkBI,GAAY,EAClC3M,MAAO2M,EACP7M,OAAQ6M,GAEZ,EACAR,EAAIS,IAAMZ,EAEH,kBAAMC,IAAIY,gBAAgBb,EAAI,CACvC,CACF,EAAG,CAAChC,EAAWyB,IAGf,IAAMqB,GAAsBC,EAAAA,EAAAA,aAAY,SAACvF,GACvC,OAAIA,EAAEwF,SAAWxF,EAAEwF,QAAQ,GAClB,CACL3C,EAAG7C,EAAEwF,QAAQ,GAAGC,QAChB3C,EAAG9C,EAAEwF,QAAQ,GAAGE,SAGb,CACL7C,EAAG7C,EAAEyF,QACL3C,EAAG9C,EAAE0F,QAET,EAAG,IAGGC,GAAcJ,EAAAA,EAAAA,aAAY,SAACvF,GAAqB,IAAlBxP,EAAIjO,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,OAErCyd,EAAExP,KACJwP,EAAEC,iBAIJD,EAAE4F,kBAEF,IAAMC,EAASP,EAAoBtF,GAEtB,SAATxP,GACF0S,GAAc,GACdE,EAAa,CACXP,EAAGgD,EAAOhD,EAAIE,EAASF,EACvBC,EAAG+C,EAAO/C,EAAIC,EAASD,MAGzBQ,GAAc,GACdE,EAAgBhT,GAChB4S,EAAa,CACXP,EAAGgD,EAAOhD,EACVC,EAAG+C,EAAO/C,IAGhB,EAAG,CAACC,EAASF,EAAGE,EAASD,EAAGwC,IAEtBQ,GAAaP,EAAAA,EAAAA,aAAY,SAACvF,GAC9B,GAAKiD,GAAeI,EAApB,CAGe,cAAXrD,EAAExP,MACJwP,EAAEC,iBAGJ,IAAM4F,EAASP,EAAoBtF,GAEnC,GAAIiD,EAAY,CACd,IAAM8C,EAAOF,EAAOhD,EAAIM,EAAUN,EAC5BmD,EAAOH,EAAO/C,EAAIK,EAAUL,EAG5BmD,EAAOpC,EAAcrL,MAAQuK,EAASvK,MACtC0N,EAAOrC,EAAcvL,OAASyK,EAASzK,OAE7C0K,EAAY,SAAArhB,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IACPkhB,EAAGoC,KAAKC,IAAI,EAAGD,KAAKrE,IAAImF,EAAME,IAC9BnD,EAAGmC,KAAKC,IAAI,EAAGD,KAAKrE,IAAIoF,EAAME,KAAM,EAExC,MAAO,GAAI7C,EAAY,CACrB,IAAM8C,EAASN,EAAOhD,EAAIM,EAAUN,EAC9BuD,EAASP,EAAO/C,EAAIK,EAAUL,EAEpCE,EAAY,SAAArhB,GACV,IAAI0kB,EAAW1kB,EAAK6W,MAChB8N,EAAY3kB,EAAK2W,OACjByN,EAAOpkB,EAAKkhB,EACZmD,EAAOrkB,EAAKmhB,EAEhB,OAAQS,GACN,IAAK,WACH8C,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,GAC1CG,EAAYrB,KAAKC,IAAItC,EAASjhB,EAAK2W,OAAS8N,GAC5CL,EAAOpkB,EAAKkhB,EAAIlhB,EAAK6W,MAAQ6N,EAC7BL,EAAOrkB,EAAKmhB,EAAInhB,EAAK2W,OAASgO,EAC9B,MACF,IAAK,YACHD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,GAC1CG,EAAYrB,KAAKC,IAAItC,EAASjhB,EAAK2W,OAAS8N,GAC5CJ,EAAOrkB,EAAKmhB,EAAInhB,EAAK2W,OAASgO,EAC9B,MACF,IAAK,cACHD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,GAC1CG,EAAYrB,KAAKC,IAAItC,EAASjhB,EAAK2W,OAAS8N,GAC5CL,EAAOpkB,EAAKkhB,EAAIlhB,EAAK6W,MAAQ6N,EAC7B,MACF,IAAK,eACHA,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,GAC1CG,EAAYrB,KAAKC,IAAItC,EAASjhB,EAAK2W,OAAS8N,GAC5C,MACF,QACE,OAAOzkB,EAIX,IAAM4kB,EAAOtB,KAAKrE,IAAIyF,EAAUC,GAG1BL,EAAOpC,EAAcrL,MAAQ+N,EAC7BL,EAAOrC,EAAcvL,OAASiO,EAEpC,MAAO,CACL1D,EAAGoC,KAAKC,IAAI,EAAGD,KAAKrE,IAAImF,EAAME,IAC9BnD,EAAGmC,KAAKC,IAAI,EAAGD,KAAKrE,IAAIoF,EAAME,IAC9B1N,MAAO+N,EACPjO,OAAQiO,EAEZ,GAEAnD,EAAa,CAAEP,EAAGgD,EAAOhD,EAAGC,EAAG+C,EAAO/C,GACxC,CAzEsC,CA0ExC,EAAG,CAACG,EAAYI,EAAYN,EAAUI,EAAWI,EAAcM,EAAejB,EAAS0C,IAEjFkB,GAAYjB,EAAAA,EAAAA,aAAY,SAACvF,GAEzBA,GAAgB,aAAXA,EAAExP,MACTwP,EAAEC,iBAGJiD,GAAc,GACdI,GAAc,GACdE,EAAgB,KAClB,EAAG,KAGHriB,EAAAA,EAAAA,WAAU,WACR,IAAMslB,EAAwB,SAACzG,GAAC,OAAK8F,EAAW9F,EAAE,EAC5C0G,EAAsB,WAAH,OAASF,GAAW,EACvCG,EAAwB,SAAC3G,GAE7BA,EAAEC,iBACF6F,EAAW9F,EACb,EACM4G,EAAuB,SAAC5G,GAAC,OAAKwG,EAAUxG,EAAE,EAG1C6G,EAAgB,SAAC7G,IACjBiD,GAAcI,IAChBrD,EAAEC,gBAEN,EAaA,OAXIgD,GAAcI,KAChByD,SAASnkB,iBAAiB,YAAa8jB,GACvCK,SAASnkB,iBAAiB,UAAW+jB,GAErCI,SAASnkB,iBAAiB,YAAagkB,EAAuB,CAAEI,SAAS,IACzED,SAASnkB,iBAAiB,WAAYikB,EAAsB,CAAEG,SAAS,IAEvED,SAASnkB,iBAAiB,YAAakkB,EAAe,CAAEE,SAAS,IACjED,SAASle,KAAKsP,MAAM8O,SAAW,UAG1B,WACLF,SAASlkB,oBAAoB,YAAa6jB,GAC1CK,SAASlkB,oBAAoB,UAAW8jB,GACxCI,SAASlkB,oBAAoB,YAAa+jB,GAC1CG,SAASlkB,oBAAoB,WAAYgkB,GACzCE,SAASlkB,oBAAoB,YAAaikB,GAC1CC,SAASle,KAAKsP,MAAM8O,SAAW,EACjC,CACF,EAAG,CAAC/D,EAAYI,EAAYyC,EAAYU,KAGxCrlB,EAAAA,EAAAA,WAAU,WACR,IAAM8lB,EAAkB5C,EAAa6C,QACrC,GAAKD,EAAL,CAEA,IAAME,EAAmB,SAACnH,GACxBA,EAAEC,iBACF0F,EAAY3F,EAAG,OACjB,EAEMoH,EAA0B,SAACpH,GAC/BA,EAAEC,iBACF0F,EAAY3F,EAAG,WACjB,EAEMqH,EAA2B,SAACrH,GAChCA,EAAEC,iBACF0F,EAAY3F,EAAG,YACjB,EAEMsH,EAA6B,SAACtH,GAClCA,EAAEC,iBACF0F,EAAY3F,EAAG,cACjB,EAEMuH,EAA8B,SAACvH,GACnCA,EAAEC,iBACF0F,EAAY3F,EAAG,eACjB,EAGM6G,EAAgB,SAAC7G,GACrBA,EAAEC,gBACJ,EAGAgH,EAAgBtkB,iBAAiB,aAAcwkB,EAAkB,CAAEJ,SAAS,IAC5EE,EAAgBtkB,iBAAiB,YAAakkB,EAAe,CAAEE,SAAS,IAGxE,IAAMS,EAAUP,EAAgBQ,iBAAiB,gBAMjD,OALAD,EAAQE,QAAQ,SAACC,EAAQC,GACvB,IAAMC,EAAU,CAACT,EAAyBC,EAA0BC,EAA4BC,GAA6BK,GAC7HD,EAAOhlB,iBAAiB,aAAcklB,EAAS,CAAEd,SAAS,GAC5D,GAEO,WACLE,EAAgBrkB,oBAAoB,aAAcukB,GAClDF,EAAgBrkB,oBAAoB,YAAaikB,GACjDW,EAAQE,QAAQ,SAACC,EAAQC,GACvB,IAAMC,EAAU,CAACT,EAAyBC,EAA0BC,EAA4BC,GAA6BK,GAC7HD,EAAO/kB,oBAAoB,aAAcilB,EAC3C,EACF,CAlD4B,CAmD9B,EAAG,CAAClC,KAGJxkB,EAAAA,EAAAA,WAAU,WACR,GAAIohB,EAKF,OAJAuE,SAASle,KAAKsP,MAAM8O,SAAW,SAC/BF,SAASle,KAAKsP,MAAM4P,SAAW,QAC/BhB,SAASle,KAAKsP,MAAMM,MAAQ,OAErB,WACLsO,SAASle,KAAKsP,MAAM8O,SAAW,GAC/BF,SAASle,KAAKsP,MAAM4P,SAAW,GAC/BhB,SAASle,KAAKsP,MAAMM,MAAQ,EAC9B,CAEJ,EAAG,CAAC+J,IAGJ,IAAMwF,GAAaxC,EAAAA,EAAAA,aAAY,WAC7B,GAAKpB,EAAS+C,QAAd,CAEA,IAAMc,EAASlB,SAASmB,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAG9BH,EAAOxP,MAAQuK,EAASvK,MACxBwP,EAAO1P,OAASyK,EAASzK,OAGzB,IAAM8P,EAAS3E,EAAUjL,MAAQqL,EAAcrL,MACzC6P,EAAS5E,EAAUnL,OAASuL,EAAcvL,OAG1CgQ,EAAUvF,EAASF,EAAIuF,EACvBG,EAAUxF,EAASD,EAAIuF,EACvBG,EAAczF,EAASvK,MAAQ4P,EAC/BK,EAAe1F,EAASzK,OAAS+P,EAGvCH,EAAIQ,UACFvE,EAAS+C,QACToB,EAASC,EAASC,EAAaC,EAC/B,EAAG,EAAG1F,EAASvK,MAAOuK,EAASzK,QAIjC0P,EAAOW,OAAO,SAACC,GACb,GAAIA,EAAM,CACR,IAAMC,EAAc,IAAIC,KAAK,CAACF,GAAO,aAAc,CAAEpY,KAAM,eAC3DiS,EAAOoG,GACP7K,GACF,CACF,EAAG,aAAc,GAjCY,CAkC/B,EAAG,CAAC+E,EAAUU,EAAWI,EAAepB,EAAQzE,IAG1C+K,GAAcxD,EAAAA,EAAAA,aAAY,WAC9B,IAAMJ,EAAWF,KAAKrE,IACpBqD,EAAW,IAAM,IACqC,GAAtDgB,KAAKrE,IAAIiD,EAAcrL,MAAOqL,EAAcvL,SAG9C0K,EAAY,CACVH,GAAIgB,EAAcrL,MAAQ2M,GAAY,EACtCrC,GAAIe,EAAcvL,OAAS6M,GAAY,EACvC3M,MAAO2M,EACP7M,OAAQ6M,GAEZ,EAAG,CAACtB,EAAeI,IAEnB,OAAK1B,GAAWC,GAGd1f,EAAAA,EAAAA,KAACkmB,GAAK,CAAA1oB,UACJ2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAWjF,EAAW,OAAS,QAAQ3jB,SAAA,EACnD2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYrI,QAAShD,EAAQ1d,UAC5CwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAC6J,GAAgB,CAAAxhB,SAAA,EACfwC,EAAAA,EAAAA,KAACwf,GAAY,CAAAhiB,SAEP,0HAKN2X,EAAAA,EAAAA,MAAC8J,GAAY,CACXwH,IAAKlF,EACLrC,QAAO,GAAAra,OAAKkc,EAAcvL,OAAM,MAChC2J,cAAa,GAAAta,OAAKsd,KAAKrE,IAAIiD,EAAcvL,OAAQ,KAAI,MAAKhY,SAAA,EAE1DwC,EAAAA,EAAAA,KAAA,OACEymB,IAAKpF,EACLiB,IAAKzB,EACL6F,IAAI,2BACJC,WAAW,KAGbxR,EAAAA,EAAAA,MAACiK,GAAQ,CACPhK,MAAO,CACLwR,KAAM3G,EAASF,EACf8G,IAAK5G,EAASD,EACdtK,MAAOuK,EAASvK,MAChBF,OAAQyK,EAASzK,QAEnBsR,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,OAAO,EAAC1f,SAAA,EAE3CwC,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,uBACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,WAAW,KAEhDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,wBACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,YAAY,KAEjDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,0BACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,cAAc,KAEnDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,2BACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,eAAe,WAKxD/H,EAAAA,EAAAA,MAACoK,GAAQ,CAAA/hB,SAAA,EACPwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYrI,QAAS+H,EAAYzoB,SAAC,cAGnDwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAAS+G,EAAWznB,SAAC,oCApEL,IA4EpC,E,wICvmBaupB,GAAU,WAAH,OAClB5R,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGKC,GAAa,WAAH,OACrBrS,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,0LACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,SAC3B,EAGKC,GAAa,WAAH,OACrB1S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,uBACJ,EAGKU,GAAW,WAAH,OACnB3S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,gCACZ,EAGKC,GAAY,WAAH,OACpBhoB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,8IACJ,EAGKa,GAAc,WAAH,OACtBjoB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,mEACJ,EAGKZ,GAAY,WAAH,OACpBrR,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,SAC3B,EAGKM,GAAW,WAAH,OACnB/S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGKO,GAAW,WAAH,OACnBhT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gEACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,8DACJ,EAGKgB,GAAW,WAAH,OACnBjT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iCACJ,EAGK9J,GAAY,WAAH,OACpBtd,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,oBACb,EAGKM,GAAY,WAAH,OACpBlT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kBACjB/nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oFACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EASKU,GAAW,WAAH,OACnBnT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,2BACjB/nB,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,OACpCxV,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC5nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kDACJ,EAGKmB,GAAW,WAAH,OACnBvoB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,8FACZ,EAGKS,GAAY,WAAH,OACpBrT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGKqB,GAAY,WAAH,OACpBtT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kBACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kBACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGKmB,GAAgB,WAAH,OACxB1oB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,qBACb,EAGKY,GAAkB,WAAH,OAC1B3oB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,oBACb,EAGKa,GAAa,WAAH,OACrBzT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,mDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,qDACJ,EAIKyB,GAAgB7S,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+HAEvB,SAAAY,GAAK,OAAIA,EAAM+R,UAC3B,oDACA/R,EAAMgS,MAAMC,OAAOvT,UAAU,EAEpB,SAAAsB,GAAK,OAAIA,EAAMkS,WAAa,IAAM,MAAM,EAGtC,SAAAlS,GAAK,OAAIA,EAAMkS,WAAa,IAAM,MAAM,GAI1CC,GAAclT,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,8eAEtB,SAAAY,GAAK,OAAIA,EAAMqP,WAAa,OAAO,EAIrC,SAAArP,GAAK,OAAIA,EAAMoS,UAAY,MAAM,EAgB/B,SAAApS,GAAK,OAAIA,EAAMqS,gBAAkB,MAAM,GAOzCC,GAAcrT,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,yDAKxBmT,GAAOtT,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,obAInB,SAAAY,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAC7B,SAAAxS,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAI3B,SAAAxS,GAAK,OAAIA,EAAMyS,WAAa,MAAM,EAMpC,SAAAzS,GAAK,OAAIA,EAAM0S,aAAe,MAAM,EACnC,SAAA1S,GAAK,OAAIA,EAAM0S,aAAe,MAAM,EACjC,SAAA1S,GAAK,OAAIA,EAAM2S,iBAAmB,MAAM,GAI5CC,GAAQ3T,EAAAA,GAAO4T,GAAEjS,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,+KAIf,SAAAY,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,OAAS,MAAM,EAIhD,SAAAxS,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,OAAS,MAAM,GAItDM,GAAW7T,EAAAA,GAAOwB,EAACK,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,gGAOnB2T,GAAe9T,EAAAA,GAAOyE,GAAE1C,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,mPAexB4T,GAAO/T,EAAAA,GAAOgU,KAAI/R,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,qEAuBlB8T,IAjBcjU,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,wSAiBZH,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,4FAkBtB+T,IAXUlU,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,gMAEkB,SAAAY,GAAK,OAAIA,EAAMoT,WAAa,OAAO,GASjEnU,EAAAA,GAAOC,MAAKyC,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,iQAmBpBiU,GAAepU,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,2EAMzBkU,GAAQrU,EAAAA,GAAOK,MAAKyC,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,oqBAwCpBmU,GAAStU,EAAAA,GAAOuU,OAAMvR,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,k5BAoCtBqU,GAAWxU,EAAAA,GAAOyU,SAAQvR,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,imBAMvB,SAAAY,GAAK,OAAIA,EAAM2T,YAAc,OAAO,GA6BvCpE,GAAStQ,EAAAA,GAAOmC,OAAMiB,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,qvBACtB,SAAAY,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,WAAa,WAAW,EACxD,SAAAxS,GACZ,MAAuB,cAAnBA,EAAMwP,SAAiC,QACpB,WAAnBxP,EAAMwP,SAA8B,UACjC,mDACT,EACS,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,OAAO,EAC5D,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,oBAAsB,MAAM,EAEnE,SAAAxP,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,OAAS,MAAM,EAIjD,SAAAxS,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,OAAS,mCAAmC,EAOrF,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,OAAS,kBAAkB,EACpE,SAAAxP,GACZ,MAAuB,cAAnBA,EAAMwP,SAAiC,oCACpB,WAAnBxP,EAAMwP,SAA8B,sCACjC,mCACT,EACc,SAAAxP,GACZ,MAAuB,cAAnBA,EAAMwP,SAAiC,UACpB,WAAnBxP,EAAMwP,SAA8B,UACjC,mDACT,EAYgB,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,aAAa,EAC1E,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,OAAO,EAI3D,SAAAxP,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,WAAa,WAAW,EACzD,SAAAxS,GAAK,MAAoB,UAAhBA,EAAMwS,MAAoB,OAAS,MAAM,GAItDoB,GAAa3U,EAAAA,GAAOmC,OAAMmB,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,qfAC5B,SAAAY,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAC7B,SAAAxS,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAG1B,SAAAxS,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,SAAS,EACpE,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,OAAO,EAStD,SAAAxP,GAAK,MAAuB,cAAnBA,EAAMwP,SAA2B,UAAY,SAAS,GAiBpEqE,GAAY5U,EAAAA,GAAOQ,KAAIgD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,6LAevB0U,GAAO7U,EAAAA,GAAOmB,IAAGuC,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,4RAGjB,SAAAY,GAAK,OAAIA,EAAMoS,UAAY,MAAM,GAWjC2B,GAAS9U,EAAAA,GAAOmB,IAAGyC,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,2tCACrB,SAAAY,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAC7B,SAAAxS,GAAK,OAAIA,EAAMwS,OAAS,MAAM,EAEhB,SAAAxS,GAAK,OAAIA,EAAMgU,IAAI,EAIvB,SAAAhU,GAAK,OAAIA,EAAMiU,UAAY,SAAS,EAM3C,SAAAjU,GAAK,OAAIA,EAAMyS,WAAa,MAAM,EACrC,SAAAzS,GAAK,OAAIA,EAAMkU,SAAW,mBAAmB,EAC7C,SAAAlU,GAAK,OAAIA,EAAMmU,WAAa,UAAY,SAAS,EAMvD,SAAAnU,GAAK,OAAIA,EAAMmU,YAAc,qEAG9B,EAGD,SAAAnU,GAAK,OAAIA,EAAMoU,SAAW,mPAY3B,EAKG,SAAApU,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,mGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,mGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,mGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,mGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,qGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,qGAKpC,EAKC,SAAAxS,GAAK,MAAoB,SAAhBA,EAAMwS,OAAoB,mGAKpC,GAKQrD,GAAQlQ,EAAAA,GAAOmB,IAAG2C,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,4PAelBgQ,GAAenQ,EAAAA,GAAOmB,IAAG6C,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,0YAIvB,SAAAY,GAAK,OAAIA,EAAMqP,WAAa,OAAO,GAkBrCC,GAAcrQ,EAAAA,GAAOmB,IAAG+C,KAAAA,IAAA/D,EAAAA,EAAAA,GAAA,kNAexBiV,GAAgBpV,EAAAA,GAAOmB,IAAGiD,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,kNAEtB,SAAAY,GAAK,OAAIA,EAAMsU,QAAU,QAAQ,EAC7B,SAAAtU,GAAK,OAAIA,EAAMuU,UAAY,YAAY,EACnD,SAAAvU,GAAK,OAAIA,EAAMwU,MAAQ,MAAM,EAClB,SAAAxU,GAAK,OAAIA,EAAMyU,YAAc,KAAK,EACvC,SAAAzU,GAAK,OAAIA,EAAM0U,MAAQ,OAAS,QAAQ,EAGjC,SAAA1U,GAAK,OAAIA,EAAM2U,kBAAoB3U,EAAMyU,YAAc,KAAK,EACvE,SAAAzU,GAAK,OAAIA,EAAM4U,YAAc5U,EAAMwU,MAAQ,MAAM,GAI/CK,GAAO5V,EAAAA,GAAOmB,IAAGmD,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,+JAEH,SAAAY,GAAK,OAAIA,EAAM8U,UAAY,sCAAsC,EACnF,SAAA9U,GAAK,OAAIA,EAAMwU,MAAQ,MAAM,EAGT,SAAAxU,GAAK,OAAIA,EAAM+U,gBAAkB,KAAK,EACxD,SAAA/U,GAAK,OAAIA,EAAM4U,YAAc,MAAM,GAIjCI,GAAiB/V,EAAAA,GAAOmB,IAAGqD,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,kaAuC3B6V,IAjBchW,EAAAA,GAAOmB,IAAGuD,KAAAA,IAAAvE,EAAAA,EAAAA,GAAA,wTAWxB,SAAAY,GAAK,OAAIA,EAAMkV,WAAa,CAAC,GAMd,WAAH,OACvBjsB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,yHACJ,GAGK8E,GAAiB,WAAH,OACzBlsB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAIgF,UAAU,cAAa3uB,UACvHwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,yHACJ,EAGKgF,GAAW,WAAH,OACnBjX,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,KAAKtK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACpDtsB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+BACJ,EAGKhJ,GAAiB,WAAH,OACzBjJ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EC3xBK2E,GAGH,QAHGA,GAIG,QAJHA,GAOH,QAPGA,GAQG,QARHA,GAWK,SAXLA,GAYF,SAZEA,GAaI,SAbJA,GAcC,SAIDC,GAAQ,CAEnBC,OAAQ,sBAAF5nB,OAAwB0nB,GAAkB,KAChDG,YAAa,sBAAF7nB,OAAwB0nB,GAAwB,KAC3DI,OAAQ,sBAAF9nB,OAAwB0nB,GAAkB,KAChDK,YAAa,sBAAF/nB,OAAwB0nB,GAAwB,KAC3DM,cAAe,sBAAFhoB,OAAwB0nB,GAA0B,KAC/DO,QAAS,sBAAFjoB,OAAwB0nB,GAAmB,KAClDQ,aAAc,sBAAFloB,OAAwB0nB,GAAyB,KAC7DS,UAAW,sBAAFnoB,OAAwB0nB,GAAsB,KAGvDU,UAAW,sBAAFpoB,OAAwBqoB,SAASX,IAAsB,EAAC,OACjEY,eAAgB,sBAAFtoB,OAAwBqoB,SAASX,IAA4B,EAAC,OAC5Ea,UAAW,sBAAFvoB,OAAwBqoB,SAASX,IAAsB,EAAC,OACjEc,eAAgB,sBAAFxoB,OAAwBqoB,SAASX,IAA4B,EAAC,OAC5Ee,iBAAkB,sBAAFzoB,OAAwBqoB,SAASX,IAA8B,EAAC,OAChFgB,WAAY,sBAAF1oB,OAAwBqoB,SAASX,IAAuB,EAAC,OACnEiB,gBAAiB,sBAAF3oB,OAAwBqoB,SAASX,IAA6B,EAAC,OAG9EkB,WAAY,sBAAF5oB,OAAwBqoB,SAASX,IAAsB,EAAC,OAClEmB,WAAY,sBAAF7oB,OAAwB0nB,GAAkB,sBAAA1nB,OAAqBqoB,SAASX,IAA8B,EAAC,OACjHoB,YAAa,sBAAF9oB,OAAwB0nB,GAA0B,KAG7DqB,UAAW,kCACXC,SAAU,iCAGVC,OAAQ,wEC9CGC,GAEH,CACNC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QAVFe,GAcF,CACPC,KAAM,QACNvB,OAAQ,SACRC,YAAa,SACbC,OAAQ,SACRC,YAAa,SACbE,QAAS,SACTC,aAAc,SACdC,UAAW,UAtBFe,GA0BD,CACRC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QAlCFe,GAsCG,CACZC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QA9CFe,GAkDD,CACRC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QA1DFe,GA8DF,CACPE,QAAS,CACPD,KAAM,UACNvB,OAAQ,WACRC,YAAa,WACbC,OAAQ,YACRC,YAAa,YACbE,QAAS,YACTC,aAAc,YACdC,UAAW,aAEbkB,SAAU,CACRF,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QAEbmB,IAAK,CACHH,KAAM,MACNvB,OAAQ,MACRC,YAAa,MACbC,OAAQ,MACRC,YAAa,MACbE,QAAS,MACTC,aAAc,MACdC,UAAW,SA3FJe,GAgGD,CACRI,IAAK,CACHH,KAAM,MACNvB,OAAQ,MACRC,YAAa,MACbC,OAAQ,MACRC,YAAa,MACbE,QAAS,MACTC,aAAc,OACdC,UAAW,SAzGJe,GA8GC,CACVC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QAtHFe,GA0HG,CACZC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QAlIFe,GAsIQ,CACjBC,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,QA9IFe,GAkJC,CACVE,QAAS,CACPD,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,QAEfwB,YAAa,CACXJ,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,QAEfsB,SAAU,CACRF,KAAM,OACNvB,OAAQ,OACRC,YAAa,OACbC,OAAQ,OACRC,YAAa,SAtKNmB,GA2KD,CACRM,SAAU,CACRL,KAAM,QACNvB,OAAQ,QACRC,YAAa,QACbC,OAAQ,QACRC,YAAa,QACbE,QAAS,QACTC,aAAc,QACdC,UAAW,SAEbiB,QAAS,CACPD,KAAM,MACNvB,OAAQ,MACRC,YAAa,MACbC,OAAQ,OACRC,YAAa,OACbE,QAAS,OACTC,aAAc,OACdC,UAAW,SCtLXsB,GAAW,WAAH,OACZnZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oDACRpnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,4BACb,EAGFwG,GAAW,WAAH,OACZvuB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,mEACJ,EAGFoH,GAAU,WAAH,OACXrZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EAGF6G,GAAY,WAAH,OACbzuB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wCACJ,EAGFgB,GAAW,WAAH,OACZjT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iCACJ,EAyBFoB,GAAY,WAAH,OACbrT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGFqB,GAAY,WAAH,OACbtT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,4BACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,6BACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,sBACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wBACJ,EAGFwB,GAAa,WAAH,OACdzT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,mDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,qDACJ,EAGFS,GAAa,WAAH,OACd1S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wBACJ,EAGFsH,GAAW,WAAH,OACZvZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGF+G,GAAc,WAAH,OACfxZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,IAAIC,EAAE,QACrB,EAGFqH,GAAe,WAAH,OAChBzZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,mCACJ,EAGFyH,GAAa,WAAH,OACd1Z,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,6CACRpnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,sBACjB/nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,SAC5B,EAGFkH,GAAe9Y,EAAAA,GAAO+Y,IAAG7Y,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4lBAsBzB6Y,GAAahZ,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,goBAQjB4X,GAAoBC,KACnBD,GAAqBC,KAE9BxB,GAAMC,OACIsB,GAAoBtB,OACnBsB,GAAqBtB,OAGhCD,GAAME,YACIqB,GAAoBrB,YACnBqB,GAAqBrB,YAGhCF,GAAMG,OACIoB,GAAoBpB,OACnBoB,GAAqBpB,OAGhCH,GAAMI,YACImB,GAAoBnB,YACnBmB,GAAqBnB,YAGhCJ,GAAMM,QACIiB,GAAoBjB,QACnBiB,GAAqBjB,QAGhCN,GAAMO,aACIgB,GAAoBhB,aACnBgB,GAAqBhB,aAIhCP,GAAMQ,UACIe,GAAoBf,UACnBe,GAAqBf,WAK9BiC,GAAgBjZ,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,kEAM1B+Y,GAAWlZ,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,+9BAYhB4X,GAAsBC,KACrBD,GAAsBC,KACnBD,GAA0BC,KAErCxB,GAAMC,OACGsB,GAAsBtB,OACrBsB,GAAsBtB,OACnBsB,GAA0BtB,OAGvCD,GAAME,YACGqB,GAAsBrB,YACrBqB,GAAsBrB,YACnBqB,GAA0BrB,YAGvCF,GAAMG,OACGoB,GAAsBpB,OACrBoB,GAAsBpB,OACnBoB,GAA0BpB,OAGvCH,GAAMI,YACGmB,GAAsBnB,YACrBmB,GAAsBnB,YACnBmB,GAA0BnB,YAGvCJ,GAAMM,QACGiB,GAAsBjB,QACrBiB,GAAsBjB,QACnBiB,GAA0BjB,QAGvCN,GAAMO,aACGgB,GAAsBhB,aACrBgB,GAAsBhB,aACnBgB,GAA0BhB,aAGvCP,GAAMQ,UACGe,GAAsBf,UACrBe,GAAsBf,UACnBe,GAA0Bf,WASrCmC,GAAWnZ,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,wpBAUZ4X,GAAsBC,KAEjCxB,GAAMC,OACOsB,GAAsBtB,OAGnCD,GAAME,YACOqB,GAAsBrB,YAGnCF,GAAMG,OACOoB,GAAsBpB,OAGnCH,GAAMI,YACOmB,GAAsBnB,YAGnCJ,GAAMM,QACOiB,GAAsBjB,QAGnCN,GAAMO,aACOgB,GAAsBhB,aAGnCP,GAAMQ,UACOe,GAAsBf,UAInCR,GAAMS,WAKJmC,GAAWpZ,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,oZAKlB4X,GAAsBI,IAAIH,KAE/BxB,GAAMC,OACCsB,GAAsBI,IAAI1B,OAGjCD,GAAME,YACCqB,GAAsBI,IAAIzB,YAGjCF,GAAMG,OACCoB,GAAsBI,IAAIxB,OAGjCH,GAAMI,YACCmB,GAAsBI,IAAIvB,YAGjCJ,GAAMM,QACCiB,GAAsBI,IAAIrB,QAGjCN,GAAMO,aACCgB,GAAsBI,IAAIpB,aAGjCP,GAAMQ,UACCe,GAAsBI,IAAInB,UAIjCR,GAAMc,kBAKJ+B,IAAUrZ,EAAAA,EAAAA,IAAOsZ,EAAAA,GAAPtZ,CAAY+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,g4CAYf4X,GAAqBE,QAAQD,KAC3BD,GAAqBG,SAASF,KACpCD,GAAqBI,IAAIH,KAE9BxB,GAAMC,OACKsB,GAAqBE,QAAQxB,OAC3BsB,GAAqBG,SAASzB,OACpCsB,GAAqBI,IAAI1B,OAGhCD,GAAME,YACKqB,GAAqBE,QAAQvB,YAC3BqB,GAAqBG,SAASxB,YACpCqB,GAAqBI,IAAIzB,YAGhCF,GAAMG,OACKoB,GAAqBE,QAAQtB,OAC3BoB,GAAqBG,SAASvB,OACpCoB,GAAqBI,IAAIxB,OAGhCH,GAAMI,YACKmB,GAAqBE,QAAQrB,YAC3BmB,GAAqBG,SAAStB,YACpCmB,GAAqBI,IAAIvB,YAGhCJ,GAAMM,QACKiB,GAAqBE,QAAQnB,QAC3BiB,GAAqBG,SAASpB,QACpCiB,GAAqBI,IAAIrB,QAGhCN,GAAMO,aACKgB,GAAqBE,QAAQlB,aAC3BgB,GAAqBG,SAASnB,aACpCgB,GAAqBI,IAAIpB,aAGhCP,GAAMQ,UACKe,GAAqBE,QAAQjB,UAC3Be,GAAqBG,SAASlB,UACpCe,GAAqBI,IAAInB,UAsB9BR,GAAMO,aAKNP,GAAMQ,WAONuC,GAAcvZ,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,iCAIxBqZ,GAAiBxZ,EAAAA,GAAOmC,OAAMC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,oNAc9BsZ,GAAezZ,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,u4BAKf,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,EAU1B3B,GAA0BC,KACzBD,GAA0BC,KAGlCxB,GAAMC,OACGsB,GAA0BtB,OACzBsB,GAA0BtB,OAIpCD,GAAME,YACGqB,GAA0BrB,YACzBqB,GAA0BrB,YAIpCF,GAAMG,OACGoB,GAA0BpB,OACzBoB,GAA0BpB,OAIpCH,GAAMI,YACGmB,GAA0BnB,YACzBmB,GAA0BnB,YAIpCJ,GAAMM,QACGiB,GAA0BjB,QACzBiB,GAA0BjB,QAIpCN,GAAMO,aACGgB,GAA0BhB,aACzBgB,GAA0BhB,aAIpCP,GAAMQ,UACGe,GAA0Bf,UACzBe,GAA0Bf,WAKlC2C,GAAe3Z,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,mgCAalB4X,GAAsBE,QAAQD,KAC5BD,GAAsBM,SAASL,KAE1CxB,GAAMC,OACKsB,GAAsBE,QAAQxB,OAC5BsB,GAAsBM,SAAS5B,OAG5CD,GAAME,YACKqB,GAAsBE,QAAQvB,YAC5BqB,GAAsBM,SAAS3B,YAG5CF,GAAMG,OACKoB,GAAsBE,QAAQtB,OAC5BoB,GAAsBM,SAAS1B,OAG5CH,GAAMI,YACKmB,GAAsBE,QAAQrB,YAC5BmB,GAAsBM,SAASzB,YAG5CJ,GAAMM,QACKiB,GAAsBE,QAAQnB,QAC5BiB,GAAsBM,SAASvB,QAG5CN,GAAMO,aACKgB,GAAsBE,QAAQlB,aAC5BgB,GAAsBM,SAAStB,aAG5CP,GAAMQ,UACKe,GAAsBE,QAAQjB,UAC5Be,GAAsBM,SAASrB,UAG5C,SAAAjW,GAAK,OAAKA,EAAM6Y,OAAS,gBAAgB,GAgBvCC,GAAe7Z,EAAAA,GAAOmC,OAAMO,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,whBA6B5B2Z,IAAmB9Z,EAAAA,EAAAA,IAAO2U,GAAP3U,CAAkB4C,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,maAKvCqW,GAAMc,iBASJd,GAAMC,OAKND,GAAMG,QAWNoD,GAAa/Z,EAAAA,GAAOmB,IAAI6Y,MAAM,CAClC/vB,UAAW,qBADM+V,CAEjB8C,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,ydAaW4X,GAAwBE,QAAQD,KAEzCxB,GAAMC,OACKsB,GAAwBE,QAAQxB,OAG3CD,GAAME,YACKqB,GAAwBE,QAAQvB,YAG3CF,GAAMG,OACKoB,GAAwBE,QAAQtB,OAG3CH,GAAMI,YACKmB,GAAwBE,QAAQrB,YAG3CJ,GAAMc,iBACK,SAAAvW,GAAK,OAAIA,EAAM6Y,MAAQ,QAAU,MAAM,GAIhDK,IAAgBja,EAAAA,EAAAA,IAAOsZ,EAAAA,GAAPtZ,CAAYgD,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,wjCAWrB4X,GAAwBK,YAAYJ,KAElCD,GAAwBG,SAASF,KAE5CxB,GAAMC,OACKsB,GAAwBK,YAAY3B,OAElCsB,GAAwBG,SAASzB,OAG9CD,GAAME,YACKqB,GAAwBK,YAAY1B,YAElCqB,GAAwBG,SAASxB,YAG9CF,GAAMG,OACKoB,GAAwBK,YAAYzB,OAElCoB,GAAwBG,SAASvB,OAG9CH,GAAMI,YACKmB,GAAwBK,YAAYxB,YAElCmB,GAAwBG,SAAStB,YAyB5CJ,GAAMG,QAONuD,GAAoBla,EAAAA,GAAOQ,KAAI0C,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,24BAe1B4X,GAA+BC,KAC9BD,GAA+BC,KAGvCxB,GAAMC,OACGsB,GAA+BtB,OAC9BsB,GAA+BtB,OAIzCD,GAAME,YACGqB,GAA+BrB,YAC9BqB,GAA+BrB,YAIzCF,GAAMG,OACGoB,GAA+BpB,OAC9BoB,GAA+BpB,OAIzCH,GAAMI,YACGmB,GAA+BnB,YAC9BmB,GAA+BnB,YAIzCJ,GAAMM,QACGiB,GAA+BjB,QAC9BiB,GAA+BjB,QAIzCN,GAAMO,aACGgB,GAA+BhB,aAC9BgB,GAA+BhB,aAIzCP,GAAMQ,UACGe,GAA+Bf,UAC9Be,GAA+Bf,WAMvCmD,GAAsB,WAC1B,IAAcC,GAAoBC,EAAAA,EAAAA,UAChC,6BACA,kBAAMC,EAAAA,iBAAiBC,gBAAgB,EACvC,CACEC,gBAAiB,IACjBC,MAAO,EACPC,QAAS3xB,EAAAA,SAASlB,kBAClB8yB,QAAS,SAACtxB,GAAU,IAAAuxB,EAEa,OAAb,QAAdA,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,OAAA,EAAdA,EAAgBzrB,SAClBjG,QAAQgU,IAAI,kDAEhB,IAZI2d,KAgBFC,GAAcV,aAAe,EAAfA,EAAiBW,eAAgB,EAErD,OAAKD,GAA+B,IAAhBA,GAGlB9wB,EAAAA,EAAAA,KAACkwB,GAAiB,CAAA1yB,SACfszB,EAAc,GAAK,MAAQA,IAJc,IAOhD,EA4YA,SA1YmB,WACjB,IAAM3yB,GAAWC,EAAAA,EAAAA,MACX4yB,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,kBACpB1zB,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhD2zB,EAAYzzB,EAAA,GAAE0zB,EAAe1zB,EAAA,GACpCI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDuzB,EAActzB,EAAA,GAAEuzB,EAAiBvzB,EAAA,GACxC0d,GAAsChe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA7C8V,EAAW7V,EAAA,GAAE8V,EAAc9V,EAAA,GAC5B+V,GAAcpQ,EAAAA,EAAAA,QAAO,OAG3BjjB,EAAAA,EAAAA,WAAU,WACR,IAAMszB,EAAa,eAAAp0B,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAkzB,EAAAC,EAAAC,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEoB,GAFpBF,EAAAC,KAAA,IAEZ+yB,EAAO7yB,EAAAA,SAASgzB,kBACZ,CAAFnzB,EAAAE,KAAA,QAGN,GAFA2yB,EAAeG,GAGVA,EAAKI,IAAK,CAAFpzB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACeC,EAAAA,SAASE,qBAAoB,QAAjD4yB,EAAWjzB,EAAAmG,OAEf0sB,EAAeI,GAChB,OAAAjzB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAILM,QAAQC,KAAK,wCAAuC2yB,GACpDL,EAAe1yB,EAAAA,SAASgzB,kBAAkB,wBAAAnzB,EAAAW,OAAA,EAAAb,EAAA,iBAE7C,kBAlBkB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAoBnBkyB,GACF,EAAG,KAGHtzB,EAAAA,EAAAA,WAAU,WACR,IAAMsB,EAAsB,SAACsyB,GAC3B,GAAkB,wBAAdA,EAAMC,KAA+C,mBAAdD,EAAMC,IAA0B,CACzE,IAAMN,EAAO7yB,EAAAA,SAASgzB,iBACtBN,EAAeG,EACjB,CACF,EAGA,OADAhyB,OAAOC,iBAAiB,UAAWF,GAC5B,kBAAMC,OAAOE,oBAAoB,UAAWH,EAAoB,CACzE,EAAG,IAGH,IAAMwyB,EAAe,eAAA5zB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,IAAA,IAAAmsB,EAAAlzB,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEMC,EAAAA,SAASE,qBAAoB,QAAjD4yB,EAAWjsB,EAAAb,OAEf0sB,EAAeI,GAChBjsB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAED1G,QAAQC,KAAK,yCAAwCR,GAAS,wBAAAiH,EAAArG,OAAA,EAAAmG,EAAA,iBAEjE,kBAToB,OAAAnH,EAAAiB,MAAA,KAAAC,UAAA,MAYrBpB,EAAAA,EAAAA,WAAU,WAER,OADAuB,OAAOwyB,kBAAoBD,EACpB,kBACEvyB,OAAOwyB,iBAChB,CACF,EAAG,IAEH,IAAMC,EAAe,WACfzyB,OAAO0yB,QAAQ,wBACjBvzB,EAAAA,SAASK,SACT8xB,EAAYqB,QACZC,EAAAA,GAAMC,QAAQ,wBACdzB,EAAS,UAEb,EAOM0B,EAAgB,SAACC,GACrB,OAAOx0B,EAAS4B,WAAa4yB,CAC/B,EAuBA,OApBAt0B,EAAAA,EAAAA,WAAU,WACR,IAAMu0B,EAAqB,SAACX,GAEtBP,EAAYtN,UAAYsN,EAAYtN,QAAQyO,SAASZ,EAAMpU,SAC7DwT,GAAgB,GAIlB,IAAMyB,EAAmBb,EAAMpU,OAAOkV,QAAQ,6BACxCC,EAAoBf,EAAMpU,OAAOkV,QAAQ,sBAE1CD,GAAqBE,IAAqB1B,GAC7CC,GAAkB,EAEtB,EAGA,OADAvN,SAASnkB,iBAAiB,YAAa+yB,GAChC,kBAAM5O,SAASlkB,oBAAoB,YAAa8yB,EAAmB,CAC5E,EAAG,CAACtB,IAECE,GAGHrc,EAAAA,EAAAA,MAAC2Z,GAAY,CAAC7uB,UAAU,6BAA4BzC,SAAA,EAClD2X,EAAAA,EAAAA,MAAC6Z,GAAU,CAAAxxB,SAAA,EACTwC,EAAAA,EAAAA,KAACivB,GAAa,CAAAzxB,UACZ2X,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAACnvB,GAAG,IAAIiV,MAAO,CAAE6d,eAAgB,OAAQ5d,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,QAAS3wB,SAAA,EACjGwC,EAAAA,EAAAA,KAACkvB,GAAQ,CAAA1xB,SAAC,QACVwC,EAAAA,EAAAA,KAACmvB,GAAQ,CAAA3xB,SAAC,mBAId2X,EAAAA,EAAAA,MAACia,GAAQ,CAAA5xB,SAAA,EACP2X,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,IACHF,UAAWyyB,EAAc,KAAO,SAAW,GAAGl1B,SAAA,EAE9CwC,EAAAA,EAAAA,KAACsuB,GAAQ,IAAG,YAIdnZ,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,WACHF,UAAWyyB,EAAc,YAAc,SAAW,GAAGl1B,SAAA,EAErDwC,EAAAA,EAAAA,KAAC6nB,GAAU,IAAG,cAIhB1S,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,QACHF,UAAW9B,EAAS4B,SAASmzB,WAAW,SAAW,SAAW,GAAG11B,SAAA,EAEjEwC,EAAAA,EAAAA,KAACuuB,GAAQ,IAAG,UAKdpZ,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,iBACHF,UAAWyyB,EAAc,kBAAoB,SAAW,GACxDtd,MAAO,CAAE4P,SAAU,YAAaxnB,SAAA,EAEhCwC,EAAAA,EAAAA,KAACooB,GAAQ,IAAG,eAEZpoB,EAAAA,EAAAA,KAACmwB,GAAmB,QAKtBhb,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,SACHF,UAAWyyB,EAAc,UAAY,SAAW,GAAGl1B,SAAA,EAEnDwC,EAAAA,EAAAA,KAACwoB,GAAS,IAAG,YAIfrT,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,iBACHF,UAAWyyB,EAAc,kBAAoB,SAAW,GAAGl1B,SAAA,EAE3DwC,EAAAA,EAAAA,KAACyoB,GAAS,IAAG,UAIftT,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,WACHF,UAAWyyB,EAAc,YAAc,SAAW,GAAGl1B,SAAA,EAErDwC,EAAAA,EAAAA,KAAC4oB,GAAU,IAAG,cAIhBzT,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,OACHF,UAAWyyB,EAAc,QAAU,SAAW,GAAGl1B,SAAA,EAEjDwC,EAAAA,EAAAA,KAACwuB,GAAO,IAAG,gBAIZgD,EAAY2B,WACXhe,EAAAA,EAAAA,MAACka,GAAO,CACNlvB,GAAG,SACHF,UAAW9B,EAAS4B,SAASmzB,WAAW,UAAY,SAAW,GAAG11B,SAAA,EAElEwC,EAAAA,EAAAA,KAACyuB,GAAS,IAAG,eAMnBtZ,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAM/tB,SAAA,EACxB2X,EAAAA,EAAAA,MAACoa,GAAW,CAAC9I,IAAKiL,EAAYl0B,SAAA,EAC5B2X,EAAAA,EAAAA,MAACqa,GAAc,CAACtR,QAAS,WAAF,OAAQmT,GAAiBD,EAAa,EAAC5zB,SAAA,EAC5DwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAMyG,EAAYQ,IAAM,YAAHntB,OAAe2sB,EAAYQ,KAAQ,GACxDzI,MAAOwE,GAAwBjB,QAC/BtD,UAAU,OACV0B,YAAU,EACVkI,IAAG,8BAAAvuB,OACQkpB,GAAwBC,KAAI,iCAAAnpB,OAC3BkpB,GAAwBC,KAAI,6CAAAnpB,OAEpC2nB,GAAMC,OAAM,mCAAA5nB,OACHkpB,GAAwBtB,OAAM,mCAAA5nB,OAC7BkpB,GAAwBtB,OAAM,kEAAA5nB,OAGxC2nB,GAAME,YAAW,mCAAA7nB,OACRkpB,GAAwBrB,YAAW,mCAAA7nB,OAClCkpB,GAAwBrB,YAAW,kEAAA7nB,OAG7C2nB,GAAMG,OAAM,mCAAA9nB,OACHkpB,GAAwBpB,OAAM,mCAAA9nB,OAC7BkpB,GAAwBpB,OAAM,kEAAA9nB,OAGxC2nB,GAAMI,YAAW,mCAAA/nB,OACRkpB,GAAwBnB,YAAW,mCAAA/nB,OAClCkpB,GAAwBnB,YAAW,kEAAA/nB,OAG7C2nB,GAAMM,QAAO,mCAAAjoB,OACJkpB,GAAwBjB,QAAO,mCAAAjoB,OAC9BkpB,GAAwBjB,QAAO,kEAAAjoB,OAGzC2nB,GAAMO,aAAY,mCAAAloB,OACTkpB,GAAwBhB,aAAY,mCAAAloB,OACnCkpB,GAAwBhB,aAAY,kEAAAloB,OAG9C2nB,GAAMQ,UAAS,mCAAAnoB,OACNkpB,GAAwBf,UAAS,mCAAAnoB,OAChCkpB,GAAwBf,UAAS,4CAE7CxvB,UAEAg0B,EAAYQ,KAAOR,EAAYtrB,MAAMmtB,OAAO,GAAGC,gBAElDv0B,EAAAA,SAASw0B,MAAM/B,KACdxxB,EAAAA,EAAAA,KAACyvB,GAAY,CAACC,OAAQ3wB,EAAAA,SAASy0B,iBAAiBhC,EAAYiC,SAASj2B,SAClEuB,EAAAA,SAAS20B,gBAAgBlC,EAAYiC,eAK5Cte,EAAAA,EAAAA,MAACwa,GAAY,CAACC,MAAOwB,EAAa5zB,SAAA,EAChC2X,EAAAA,EAAAA,MAAC0a,GAAY,CAAC3R,QArLC,WACzB8S,EAAS,YACTK,GAAgB,EAClB,EAkLsD7zB,SAAA,EACxCwC,EAAAA,EAAAA,KAAC2uB,GAAW,IAAG,kBAGjBxZ,EAAAA,EAAAA,MAAC0a,GAAY,CAAC3R,QAAS,WAAF,OAAQ8S,EAAS,wBAAwB,EAACxzB,SAAA,EAC7DwC,EAAAA,EAAAA,KAAC4uB,GAAY,IAAG,gBAGlBzZ,EAAAA,EAAAA,MAAC0a,GAAY,CAAC3R,QAAS,WAAF,OAAQ8S,EAAS,cAAc,EAACxzB,SAAA,EACnDwC,EAAAA,EAAAA,KAACwoB,GAAS,IAAG,sBAGfrT,EAAAA,EAAAA,MAAC0a,GAAY,CAAC5vB,UAAU,SAASie,QAASmU,EAAa70B,SAAA,EACrDwC,EAAAA,EAAAA,KAAC6uB,GAAU,IAAG,kBAMpB7uB,EAAAA,EAAAA,KAAC8vB,GAAgB,CACf5R,QAAS,SAAChB,GACRA,EAAE4F,kBACFyO,GAAmBD,EACrB,EACA,0BAAwB,OACxB/K,SAAS,YAAW/oB,UAEpBwC,EAAAA,EAAAA,KAAC0uB,GAAQ,aAKfvZ,EAAAA,EAAAA,MAAC4a,GAAU,CAACH,MAAO0B,EAAe9zB,SAAA,EAChC2X,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,IACHF,UAAWyyB,EAAc,KAAO,SAAW,GAC3CxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACsuB,GAAQ,IAAG,YAIdnZ,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,WACHF,UAAWyyB,EAAc,YAAc,SAAW,GAClDxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAAC6nB,GAAU,IAAG,cAIhB1S,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,QACHF,UAAW9B,EAAS4B,SAASmzB,WAAW,SAAW,SAAW,GAC9DhV,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACuuB,GAAQ,IAAG,UAIdpZ,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,iBACHF,UAAWyyB,EAAc,kBAAoB,SAAW,GACxDxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EACvCnc,MAAO,CAAE4P,SAAU,YAAaxnB,SAAA,EAEhCwC,EAAAA,EAAAA,KAACooB,GAAQ,IAAG,eAEZpoB,EAAAA,EAAAA,KAACmwB,GAAmB,QAKtBhb,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,SACHF,UAAWyyB,EAAc,UAAY,SAAW,GAChDxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACwoB,GAAS,IAAG,YAIfrT,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,iBACHF,UAAWyyB,EAAc,kBAAoB,SAAW,GACxDxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACyoB,GAAS,IAAG,UAIftT,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,WACHF,UAAWyyB,EAAc,YAAc,SAAW,GAClDxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAAC4oB,GAAU,IAAG,cAIhBzT,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,OACHF,UAAWyyB,EAAc,QAAU,SAAW,GAC9CxU,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACwuB,GAAO,IAAG,gBAIZgD,EAAY2B,WACXhe,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,SACHF,UAAW9B,EAAS4B,SAASmzB,WAAW,UAAY,SAAW,GAC/DhV,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAACyuB,GAAS,IAAG,YAKjBtZ,EAAAA,EAAAA,MAAC8a,GAAa,CACZ9vB,GAAG,WACH+d,QAAS,WAAF,OAAQqT,GAAkB,EAAM,EAAC/zB,SAAA,EAExCwC,EAAAA,EAAAA,KAAC2uB,GAAW,IAAG,cAIjBxZ,EAAAA,EAAAA,MAAC0a,GAAY,CAAC5vB,UAAU,SAASie,QAASmU,EAAa70B,SAAA,EACrDwC,EAAAA,EAAAA,KAAC6uB,GAAU,IAAG,iBAxRG,IA8R3B,E,wGChsCM8E,KAtBUC,EAAAA,EAAAA,IAAS1d,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0IAWRyd,EAAAA,EAAAA,IAAStd,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,0IAWPyd,EAAAA,EAAAA,IAASnd,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,gLAMtB0d,IAAmBD,EAAAA,EAAAA,IAASnc,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,yLAM5B2d,GAAe9d,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,iGAQzB4d,IAAiB/d,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB6B,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,w9BAwBxB0d,GAYAA,IAWXI,GAAcje,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,gIASxB6R,GAAYhS,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,sHAEbwd,IAITO,GAAale,EAAAA,GAAOme,GAAE/b,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,8KAWtBie,GAAepe,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,gDAKzBke,GAAWre,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,0FAOrBme,GAActe,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,sBAIxBoe,GAAWve,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,sLAWrBqe,GAAcxe,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,6GASxBse,GAAeze,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,mIAUzBue,IAAa1e,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAckD,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,4ZAgB3Bwe,IAAgB3e,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAcoD,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,2RAa9Bye,GAAc5e,EAAAA,GAAOmC,OAAMmB,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,0bAwB3B0e,GAAc7e,EAAAA,GAAOmB,IAAGqC,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,4dAiBJ,SAAAY,GAAK,OAAIA,EAAM+d,SAAS,GAgHlD,SAvGmB,SAAHv3B,GAMV,IAAAw3B,EALJC,EAAYz3B,EAAZy3B,aACA9Z,EAAO3d,EAAP2d,QACA+Z,EAAW13B,EAAX03B,YACAC,EAAa33B,EAAb23B,cAAaC,EAAA53B,EACb63B,eAAAA,OAAc,IAAAD,EAAG,IAAIA,EAErB13B,GAAkCC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzC43B,EAAS13B,EAAA,GAAE23B,EAAY33B,EAAA,GAExB43B,GAAYP,SAAkB,QAAND,EAAZC,EAAcnE,YAAI,IAAAkE,OAAA,EAAlBA,EAAoBS,cAAcR,aAAY,EAAZA,EAAcS,WAC5DC,EAAWV,aAAY,EAAZA,EAAcW,gBAE/Bt3B,EAAAA,EAAAA,WAAU,WACR,IAAMu3B,EAAQvY,WAAW,WACvBwY,GACF,EAAGT,GAEH,OAAO,kBAAMU,aAAaF,EAAM,CAClC,EAAG,CAACR,IAEJ,IAAMS,EAAc,WAClBP,GAAa,GACbjY,WAAW,WACLnC,GAASA,GACf,EAAG,IACL,EAgBA,OAAK8Z,GAEEe,EAAAA,GAAAA,eACL/1B,EAAAA,EAAAA,KAAC8zB,GAAY,CAAAt2B,UACXwC,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACb63B,IACClgB,EAAAA,EAAAA,MAAC4e,GAAc,CACbkC,QAAS,CAAElW,EAAG,OAAQmW,QAAS,EAAGC,MAAO,IACzCC,QAAS,CAAErW,EAAG,EAAGmW,QAAS,EAAGC,MAAO,GACpCE,KAAM,CAAEtW,EAAG,OAAQmW,QAAS,EAAGC,MAAO,IACtCG,WAAY,CACV5oB,KAAM,SACN6oB,SAAU,GACVC,OAAQ,IACRh5B,SAAA,EAEFwC,EAAAA,EAAAA,KAAC40B,GAAW,CAAC1W,QAAS2X,EAAYr4B,SAAC,OAInC2X,EAAAA,EAAAA,MAAC8e,GAAW,CAAAz2B,SAAA,EACVwC,EAAAA,EAAAA,KAACgoB,GAAS,CAAAxqB,SAAC,QACXwC,EAAAA,EAAAA,KAACk0B,GAAU,CAAA12B,SAAC,oBAGd2X,EAAAA,EAAAA,MAACif,GAAY,CAAA52B,SAAA,EACX2X,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACPwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAM2K,SAAAA,EAAUe,OAAS,YAAH5xB,OAAe6wB,EAASe,QAAW,GACzDlN,MAAM,OACNC,UAAU,OACV2B,SAAS,EAAK3tB,WAEZk4B,SAAAA,EAAUe,UAAWlB,EAAYA,EAAUlC,OAAO,GAAGC,cAAgB,QAGzEne,EAAAA,EAAAA,MAACmf,GAAW,CAAA92B,SAAA,EACV2X,EAAAA,EAAAA,MAACof,GAAQ,CAAA/2B,SAAA,CAAC,IAAE+3B,GAAa,mBACzBv1B,EAAAA,EAAAA,KAACw0B,GAAW,CAAAh3B,SAAC,oCAIjB2X,EAAAA,EAAAA,MAACsf,GAAY,CAAAj3B,SAAA,EACXwC,EAAAA,EAAAA,KAAC00B,GAAU,CAACxW,QAzDF,WAClB+W,GACFA,EAAYM,GAEdM,GACF,EAoDmDr4B,SAAC,YAItCwC,EAAAA,EAAAA,KAAC20B,GAAa,CAACzW,QAtDH,WACpBgX,GACFA,EAAcK,GAEhBM,GACF,EAiDwDr4B,SAAC,sBAM/CwC,EAAAA,EAAAA,KAAC60B,GAAW,CAACC,UAAWM,WAKhCpR,SAASle,MA1De,IA4D5B,E,y/BCrVA,IAAM4wB,IAAsBC,EAAAA,EAAAA,iBAUfC,GAAuB,SAAHr5B,GAAqB,IAAfC,EAAQD,EAARC,SAC/BwzB,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Co5B,EAAYl5B,EAAA,GAAEm5B,EAAen5B,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,UAASq5B,KAAKC,OAAMh5B,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDk5B,EAAWj5B,EAAA,GAAEk5B,EAAcl5B,EAAA,GAClC0d,GAAsChe,EAAAA,EAAAA,UAAS,GAAEie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA1CoV,EAAWnV,EAAA,GAAEwb,EAAcxb,EAAA,GAClCG,GAAkCpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA1Csb,EAASrb,EAAA,GAAEsb,EAAYtb,EAAA,GAC9BG,GAA0Cxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAlDob,EAAanb,EAAA,GAAEob,EAAgBpb,EAAA,GACtCG,GAA8C5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAAtDze,EAAe0e,EAAA,GAAEze,EAAkBye,EAAA,IAE1Cle,EAAAA,EAAAA,WAAU,WACRg5B,GAAa,EACf,EAAG,KAGHh5B,EAAAA,EAAAA,WAAU,WACR,IAAMC,EAAY,WAChB,IAAM4W,EAAgBnW,EAAAA,SAASlB,kBAC/BC,EAAmBoX,GAGdA,IACHiiB,EAAe,GACfL,EAAgB,IAEpB,EAEAx4B,IAGA,IAAMk5B,EAAmB,WACvBl5B,GACF,EAKA,OAHAsB,OAAOC,iBAAiB,cAAe23B,GACvC53B,OAAOC,iBAAiB,UAAW23B,GAE5B,WACL53B,OAAOE,oBAAoB,cAAe03B,GAC1C53B,OAAOE,oBAAoB,UAAW03B,EACxC,CACF,EAAG,KAGHn5B,EAAAA,EAAAA,WAAU,WACJ2yB,GAAgC,mBAAbA,GACrBuG,GAAiB,GACjBr4B,QAAQgU,IAAI,oDAEZhU,QAAQgU,IAAI,uDAEhB,EAAG,CAAC8d,KAGJ3yB,EAAAA,EAAAA,WAAU,WACH2yB,EAGH9xB,QAAQgU,IAAI,mDAFZhU,QAAQC,KAAK,mDAIjB,EAAG,CAAC6xB,KAGiCX,EAAAA,EAAAA,UACnC,6BACA,kBAAMC,EAAAA,iBAAiBC,gBAAgB,EACvC,CACEC,gBAAiB,KACjBE,QAAS4G,GAAiBz5B,EAC1Bwd,UAAW,SAACwV,GACVsG,GAAetG,aAAI,EAAJA,EAAME,eAAgB,EACvC,EACAJ,QAAS,SAACtxB,GAAU,IAAAuxB,EAEa,OAAb,QAAdA,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,OAAA,EAAdA,EAAgBzrB,UAClBjG,QAAQgU,IAAI,6DACZpV,GAAmB,GACnBq5B,EAAe,GAEnB,IAhBItG,KAAR,IA8Ba4G,EATbC,GAAsCrH,EAAAA,EAAAA,UACpC,CAAC,uBAAwB4G,GACzB,kBAAM3G,EAAAA,iBAAiBqH,iBAAiB,CACtCC,QAAQ,EACRC,MAAO,IACP,EACF,CACErH,gBAAiB,IACjBE,QAAS4G,GAAiBz5B,EAC1Bwd,WAASoc,GAAAj5B,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAC,EAAOmyB,GAAI,OAAApyB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAChB+xB,UAAAA,EAAMiH,cAAa,CAAAl5B,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACfi5B,EAA8BlH,EAAKiH,eAAc,wBAAAl5B,EAAAW,OAAA,EAAAb,EAAA,IAE1D,SAJQ4G,GAAA,OAAAmyB,EAAAj4B,MAAA,KAAAC,UAAA,GAKTkxB,QAAS,SAACtxB,GAAU,IAAA24B,EAEa,OAAb,QAAdA,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,OAAA,EAAdA,EAAgB7yB,UAClBjG,QAAQgU,IAAI,oEACZpV,GAAmB,GAEvB,IAIEi6B,GAxB2BL,EAAzB7G,KAwB2B,eAAAtyB,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOoyB,GAAa,IAAAd,EAAAiB,EAAAC,EAAAC,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAxG,EAAAnzB,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OAYtD,GAXIk4B,EAAMD,KAAKC,MACXiB,EAAajB,EAAO,KAEpBkB,EAAwBJ,EAAcS,OAAO,SAAAvD,GACjD,IAAMwD,EAAmB,IAAIzB,KAAK/B,EAAayD,YAAYC,UAC3D,MACwB,UAAtB1D,EAAatnB,MACb8qB,EAAmBP,GACnBO,EAAmBvB,IAClBJ,EAAa8B,KAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAO7D,EAAa6D,EAAE,EAE5D,KAEIX,EAAsB3zB,OAAS,GAAC,CAAAqB,EAAA9G,KAAA,SAClCq5B,EAAAW,GAC2BZ,GAAqBtyB,EAAA/G,KAAA,EAAAs5B,EAAAY,IAAA,WAAAX,EAAAD,EAAAa,KAAAC,KAAE,CAAFrzB,EAAA9G,KAAA,SAAzB,OAAZk2B,EAAYoD,EAAA3a,MAAA7X,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEO,uCAAyB,OAApC,OAAoCu5B,EAAAzyB,EAAAb,KAA3CuzB,EAAOD,EAAPC,QAAO1yB,EAAA9G,KAAA,EACWw5B,EAAQY,eAAelE,EAAaS,WAAU,OAAvD,GAAA7vB,EAAAb,KAGAo0B,SAAU,CAAFvzB,EAAA9G,KAAA,eAAA8G,EAAA9G,KAAA,EACjBs6B,EAAepE,GAAa,OAAApvB,EAAA9G,KAAA,eAElCI,QAAQgU,IAAI,4BAA6B8hB,EAAaS,UAAW,+BAA+B,OAAA7vB,EAAA9G,KAAA,gBAIlG,OAJkG8G,EAAA/G,KAAA,EAAAizB,EAAAlsB,EAAA,SAGlG1G,QAAQG,MAAM,kDAAiDyyB,GAC/DlsB,EAAA9G,KAAA,GACMs6B,EAAepE,GAAa,QAAApvB,EAAA9G,KAAA,gBAAA8G,EAAA9G,KAAA,iBAAA8G,EAAA/G,KAAA,GAAAF,EAAAiH,EAAA,SAAAuyB,EAAAjb,EAAAve,GAAA,eAAAiH,EAAA/G,KAAA,GAAAs5B,EAAAkB,IAAAzzB,EAAAtG,OAAA,YAGtC43B,EAAeF,GAAK,yBAAApxB,EAAArG,OAAA,EAAAmG,EAAA,8BAEvB,gBAnCkCO,GAAA,OAAA1H,EAAAiB,MAAA,KAAAC,UAAA,MAqC7B25B,EAAc,eAAAE,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAO6uB,GAAY,IAAAuE,EAAAjB,EAAAM,EAAA5lB,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,UAEnCw4B,GAAkBz5B,EAAe,CAAAwI,EAAAvH,KAAA,QACwD,OAA5FI,QAAQgU,IAAI,8DAA+D8hB,EAAa6D,IAAIxyB,EAAArH,OAAA,oBAKpE,UAAtBg2B,EAAatnB,OAAoBsnB,EAAaS,UAAS,CAAApvB,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAE7B,uCAAyB,OAApC,OAAoCy6B,EAAAlzB,EAAAtB,KAA3CuzB,EAAOiB,EAAPjB,QAAOjyB,EAAAvH,KAAA,EACWw5B,EAAQY,eAAelE,EAAaS,WAAU,OAAvD,IAAApvB,EAAAtB,KAGDo0B,SAAU,CAAF9yB,EAAAvH,KAAA,QAC+E,OAArGI,QAAQgU,IAAI,4BAA6B8hB,EAAaS,UAAW,kBAAmBT,EAAa6D,IAAIxyB,EAAArH,OAAA,iBAAAqH,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAIvGnH,QAAQG,MAAM,mDAAkD2T,GAChE,OAIE4lB,EAAQ,CACZC,GAAI7D,EAAa6D,GACjB7D,aAAAA,EACAwE,UAAWzC,KAAKC,OAGlBF,EAAgB,SAAAj4B,GAAI,SAAAgG,QAAA40B,EAAAA,GAAAA,GAAQ56B,GAAI,CAAE+5B,GAAK,GAGvCvb,WAAW,WACTqc,EAAY1E,EAAa6D,GAC3B,EAAG,KAAM,wBAAAxyB,EAAA9G,OAAA,EAAA4G,EAAA,iBACV,gBApCmBI,GAAA,OAAA+yB,EAAA95B,MAAA,KAAAC,UAAA,KAsCdi6B,EAAc,SAACC,GACnB7C,EAAgB,SAAAj4B,GAAI,OAAIA,EAAK05B,OAAO,SAAAK,GAAK,OAAIA,EAAMC,KAAOc,CAAc,EAAC,EAC3E,EAEMC,EAAsB,eAAAC,GAAAr7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA+H,EAAOmzB,GAAc,IAAAlmB,EAAA,OAAAhV,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAA2H,EAAA5H,KAAA,EAAA4H,EAAA3H,KAAA,EAE1CwxB,EAAAA,iBAAiBwJ,WAAWH,GAAe,OACjDD,EAAYC,GAEZxC,EAAe,SAAAt4B,GAAI,OAAIsjB,KAAKC,IAAI,EAAGvjB,EAAO,EAAE,GAAE4H,EAAA3H,KAAA,eAAA2H,EAAA5H,KAAA,EAAA4U,EAAAhN,EAAA,SAE9CvH,QAAQG,MAAM,sCAAqCoU,GAAS,wBAAAhN,EAAAlH,OAAA,EAAAiH,EAAA,iBAE/D,gBAT2BU,GAAA,OAAA2yB,EAAAr6B,MAAA,KAAAC,UAAA,KAWtBs6B,EAAoB,eAAAC,GAAAx7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAmI,EAAOqzB,GAAS,IAAAC,EAAA5B,EAAAtD,EAAAmF,EAAA,OAAA17B,IAAAA,KAAA,SAAAoI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UAEtCw4B,GAAkBz5B,EAAe,CAAAgJ,EAAA/H,KAAA,QAC6C,OAAjFI,QAAQgU,IAAI,qEAAqErM,EAAA7H,OAAA,wBAAA6H,EAAAhI,KAAA,EAAAgI,EAAA/H,KAAA,EAMvD,uCAAyB,OAApC,OAAoCo7B,EAAArzB,EAAA9B,KAA3CuzB,EAAO4B,EAAP5B,QAAOzxB,EAAA/H,KAAA,EACWw5B,EAAQY,eAAee,EAAUG,UAAS,OAAnD,IAAAvzB,EAAA9B,KAGDo0B,SAAU,CAAFtyB,EAAA/H,KAAA,QACyD,OAA/EI,QAAQgU,IAAI,4BAA6B+mB,EAAUG,SAAU,kBAAkBvzB,EAAA7H,OAAA,iBAAA6H,EAAA/H,KAAA,eAAA+H,EAAAhI,KAAA,EAAAs7B,EAAAtzB,EAAA,SAIjF3H,QAAQG,MAAM,0CAAyC86B,GACvD,OAaD,OAVKnF,EAAe,CACnB6D,GAAI,UAAFh0B,OAAYkyB,KAAKC,OACnBtpB,KAAM,QACN2sB,MAAO,qBACPn1B,QAAS,6BAAFL,OAA+Bo1B,EAAUG,SAAQ,KACxD3E,UAAWwE,EAAUG,SACrBzE,eAAgBsE,EAAUvE,SAC1B7E,KAAM,CAAE2E,WAAYyE,EAAUG,UAC9B3B,YAAY,IAAI1B,MAAOuD,cACvBC,SAAU,QACX1zB,EAAA/H,KAAA,EAEKs6B,EAAepE,GAAa,wBAAAnuB,EAAAtH,OAAA,EAAAqH,EAAA,iBACnC,gBAnCyBkB,GAAA,OAAAkyB,EAAAx6B,MAAA,KAAAC,UAAA,KAqCpB+6B,EAAe,CACnB1J,YAAAA,EACA+F,aAAAA,EACAuC,eAAgBW,EAChBL,YAAAA,EACAE,uBAAAA,GAGF,OACEzkB,EAAAA,EAAAA,MAACuhB,GAAoB+D,SAAQ,CAAChd,MAAO+c,EAAah9B,SAAA,CAC/CA,EAGA45B,GAAaE,GAAiBz5B,GAAmBg5B,EAAa7Y,IAAI,SAAA4a,GAAK,OACtE54B,EAAAA,EAAAA,KAAC06B,GAAU,CAET1F,aAAc4D,EAAM5D,aACpB9Z,QAAS,WAAF,OAAQwe,EAAYd,EAAMC,GAAG,EACpC5D,YAAa,SAACmF,GAEZ,GADAR,EAAuBhB,EAAMC,IACzB7H,GAAgC,mBAAbA,EACrB,IACEA,EAAS,SAADnsB,OAAUu1B,GACpB,CAAE,MAAO/6B,GACPH,QAAQG,MAAM,oBAAqBA,GAEnCO,OAAOzB,SAASw8B,KAAO,SAAH91B,OAAYu1B,EAClC,MAGAx6B,OAAOzB,SAASw8B,KAAO,SAAH91B,OAAYu1B,EAEpC,EACAlF,cAAe,SAACkF,GAEd,GADAR,EAAuBhB,EAAMC,IACzB7H,GAAgC,mBAAbA,EACrB,IACEA,EAAS,YAADnsB,OAAau1B,GACvB,CAAE,MAAO/6B,GACPH,QAAQG,MAAM,oBAAqBA,GAEnCO,OAAOzB,SAASw8B,KAAO,YAAH91B,OAAeu1B,EACrC,MAGAx6B,OAAOzB,SAASw8B,KAAO,YAAH91B,OAAeu1B,EAEvC,EACAhF,eAAgB,KAjCXwD,EAAMC,GAkCX,KAIV,E,8kBCvDA,SA9Nc,WACZ,IAAM7H,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1Cm9B,EAASj9B,EAAA,GAAEk9B,EAAYl9B,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhD+8B,EAAY98B,EAAA,GAAE+8B,EAAe/8B,EAAA,GAEpCg9B,GAIIC,EAAAA,GAAAA,MAHFx1B,EAAQu1B,EAARv1B,SACAwX,EAAY+d,EAAZ/d,aACaie,EAAMF,EAAnBG,UAAaD,OAIfE,EAAAA,UAAgB,WACd,IAAMC,EAAiB,eAAA99B,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,OAAAD,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACpBC,EAAAA,SAASlB,kBAAmB,CAAFe,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpBC,EAAAA,SAASE,qBAAoB,OACnC+xB,EAAS,IAAK,CAAE5wB,SAAS,IAAQxB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA,SAGjCM,QAAQC,KAAK,qCACbJ,EAAAA,SAASK,SAAS,wBAAAR,EAAAW,OAAA,EAAAb,EAAA,iBAGvB,kBAZsB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAcvB47B,GACF,EAAG,CAACrK,IAEJ,IAAMzT,EAAQ,eAAAhf,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOmrB,GAAI,IAAAxsB,EAAA1F,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OACP,OAAnB+7B,GAAa,GAAMj1B,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAGMw8B,EAAAA,QAAQp1B,MAAM,CACnCA,MAAO2qB,EAAK3qB,MACZq1B,SAAU1K,EAAK0K,WACf,OAHY31B,EAAAb,KAKD0tB,UACXD,EAAAA,GAAMC,QAAQ,yBACdzB,EAAS,IAAK,CAAE5wB,SAAS,KAC1BwF,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEKvB,EAAetF,EAAAA,SAASy8B,YAAW78B,GACzC6zB,EAAAA,GAAMnzB,MAAMgF,GAAc,OAEN,OAFMuB,EAAA/G,KAAA,EAE1Bg8B,GAAa,GAAOj1B,EAAAtG,OAAA,2BAAAsG,EAAArG,OAAA,EAAAmG,EAAA,qBAEvB,gBAnBaJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAqBd,OACE0V,EAAAA,EAAAA,MAAC0T,GAAa,CAACC,WAAS,EAAAtrB,SAAA,EAEtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAEfkV,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,QAAO5oB,SAAA,EAC5B2X,EAAAA,EAAAA,MAACkU,GAAW,CAAA7rB,SAAA,EACVwC,EAAAA,EAAAA,KAACspB,GAAI,CAAA9rB,SAAC,QACNwC,EAAAA,EAAAA,KAAC2pB,GAAK,CAAAnsB,SAAC,cACPwC,EAAAA,EAAAA,KAAC6pB,GAAQ,CAAArsB,SAAC,iDAGZ2X,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,EAAaM,GAAU/f,SAAA,EACrC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,QAAOj+B,SAAC,qBACvBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,QACHrb,YAAY,0BACZke,aAAa,YACTj2B,EAAS,QAAS,CACpBk2B,SAAU,6BACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,wBAEX,IACFjF,UAAWi7B,EAAOh1B,MAAQ,QAAU,MAErCg1B,EAAOh1B,QAASlG,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOh1B,MAAMhB,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,WAAUj+B,SAAC,YAC1B2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAMotB,EAAe,OAAS,WAC9BjC,GAAG,WACHrb,YAAY,iBACZke,aAAa,oBACTj2B,EAAS,WAAY,CACvBk2B,SAAU,oBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,yBAEX,IACFjF,UAAWi7B,EAAOK,SAAW,QAAU,OAEzCv7B,EAAAA,EAAAA,KAAC2qB,GAAU,CACTjd,KAAK,SACL6Y,SAAS,YACTrI,QAAS,WAAF,OAAQ6c,GAAiBD,EAAa,EAC7C1lB,MAAO,CACL4P,SAAU,WACV6W,MAAO,OACPpmB,WAAY,OACZqmB,MAAO,WACPt+B,SAEDs9B,GAAe96B,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAG5CmU,EAAOK,WAAYv7B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOK,SAASr2B,cAGlDlF,EAAAA,EAAAA,KAACsmB,GAAM,CAAC5Y,KAAK,SAASmJ,SAAU+jB,EAAWxlB,MAAO,CAAEM,MAAO,QAASlY,SACjEo9B,EAAY,UAAY,cAI7BzlB,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,SAASC,KAAK,OAAOnW,MAAO,CAAE2mB,UAAW,QAASv+B,SAAA,EACxEwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,YACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,iBAGDwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAC,OACnCwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,mBACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,uBAMH2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV2mB,UAAW,OACXE,WAAY,OACZrmB,UAAW,oBACXsmB,UAAW,UACX1+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CACR0mB,MAAO,UACP5N,SAAU,OACViO,aAAc,OACdH,WAAY,OACZx+B,SAAC,4BAGH2X,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,SAASC,KAAK,OAAM/tB,SAAA,EAC1CwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,cACHiV,MAAO,CACLK,WAAY,oDACZqmB,MAAO,QACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,OACVD,QAAS,YACTpY,aAAc,MACdygB,WAAY,gBACZ8F,UAAW,qCAEbC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,mBAC3BjP,EAAEW,OAAOzI,MAAMgnB,UAAY,mCAC7B,EACAE,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,gBAC3BjP,EAAEW,OAAOzI,MAAMgnB,UAAY,mCAC7B,EAAE5+B,SACH,qBAGDwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,iBACHiV,MAAO,CACLK,WAAY,QACZqmB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,OACVD,QAAS,YACTpY,aAAc,MACdF,OAAQ,oBACR2gB,WAAY,iBAEd+F,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAMK,WAAa,UAC5ByH,EAAEW,OAAOzI,MAAM0mB,MAAQ,QACvB5e,EAAEW,OAAOzI,MAAM+W,UAAY,kBAC7B,EACAmQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAMK,WAAa,QAC5ByH,EAAEW,OAAOzI,MAAM0mB,MAAQ,UACvB5e,EAAEW,OAAOzI,MAAM+W,UAAY,eAC7B,EAAE3uB,SACH,iCAQb,E,mBClPM++B,GAAoBvmB,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iDAK9BqmB,GAAoBxmB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,6SAavB,SAAAY,GAAK,OAAIA,EAAM6Y,MAAQ,QAAU,MAAM,GAG9CC,GAAe7Z,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,2ZA0BzBsmB,GAAmBzmB,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,sJAU7BumB,GAAgB1mB,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,sHAkNhC,SA1MwB,SAAH5Y,GAUf,IAAAo/B,EAAAp/B,EATJkgB,MAAAA,OAAK,IAAAkf,EAAG,GAAEA,EACVhmB,EAAQpZ,EAARoZ,SACAimB,EAAQr/B,EAARq/B,SACAv9B,EAAK9B,EAAL8B,MAAKw9B,EAAAt/B,EACLigB,YAAAA,OAAW,IAAAqf,EAAG,qBAAoBA,EAClC5mB,EAAK1Y,EAAL0Y,MAAK6mB,EAAAv/B,EACLo+B,SAAAA,OAAQ,IAAAmB,GAAQA,EAAAlmB,EAAArZ,EAChBsZ,SAAAA,OAAQ,IAAAD,GAAQA,EAChB3W,EAAS1C,EAAT0C,UAEAxC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCgiB,EAAM9hB,EAAA,GAAEo/B,EAASp/B,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,UAAS+f,GAAMzf,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9Ci/B,EAAWh/B,EAAA,GAAEi/B,EAAcj/B,EAAA,GAClC0d,GAAkChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAvCwhB,EAASvhB,EAAA,GAAEwhB,EAAYxhB,EAAA,GAC9BG,GAAkDpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAvDshB,EAAiBrhB,EAAA,GAAEshB,EAAoBthB,EAAA,GAC9CG,GAAkCxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA1C0e,EAASze,EAAA,GAAE0e,EAAY1e,EAAA,GAC9BG,GAA0C5e,EAAAA,EAAAA,WAAU,GAAE6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA/CghB,EAAa/gB,EAAA,GAAEghB,EAAgBhhB,EAAA,GAEhCihB,GAAWlc,EAAAA,EAAAA,QAAO,MAClBC,GAAeD,EAAAA,EAAAA,QAAO,MACtBmc,GAAcnc,EAAAA,EAAAA,QAAO,OAG3BjjB,EAAAA,EAAAA,WAAU,WACRq/B,GACF,EAAG,KAGHr/B,EAAAA,EAAAA,WAAU,WACR4+B,EAAexf,EACjB,EAAG,CAACA,KAGJpf,EAAAA,EAAAA,WAAU,WACR,GAAI6+B,EAAU34B,OAAS,EAAG,CACxB,IAAMo5B,EAAWT,EAAU3E,OAAO,SAAAqF,GAAO,OACvCA,EAAQA,QAAQC,cAAcC,SAASd,EAAYa,cAAc,GAEnER,EAAqBM,GACrBJ,GAAkB,EACpB,CACF,EAAG,CAACP,EAAaE,KAGjB7+B,EAAAA,EAAAA,WAAU,WACR,IAAMu0B,EAAqB,SAACX,GACtB1Q,EAAa6C,UAAY7C,EAAa6C,QAAQyO,SAASZ,EAAMpU,UAC/Dkf,GAAU,GACVQ,GAAkB,GAEtB,EAGA,OADAvZ,SAASnkB,iBAAiB,YAAa+yB,GAChC,kBAAM5O,SAASlkB,oBAAoB,YAAa8yB,EAAmB,CAC5E,EAAG,IAEH,IAAM8K,EAAc,eAAAn/B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAAysB,EAAAiB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAAnB+7B,GAAa,GAAMj8B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMgG,MAAM,sBAAqB,OAApC,IAARV,EAAQxF,EAAAmG,MACAC,GAAI,CAAFpG,EAAAE,KAAA,cACR,IAAIuG,MAAM,yBAAwB,cAAAzG,EAAAE,KAAA,EAEvBsF,EAASa,OAAM,OAA5B4rB,EAAIjyB,EAAAmG,KACVo4B,EAAatM,EAAKA,MAAQ,IAC1BwM,EAAqBxM,EAAKA,MAAQ,IAAIjyB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEtCM,QAAQG,MAAM,yBAAwByyB,GACtCqL,EAAa,IACbE,EAAqB,IAAI,OAEL,OAFKz+B,EAAAC,KAAA,EAEzBg8B,GAAa,GAAOj8B,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAEvB,kBAjBmB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAoCds+B,EAAsB,SAACH,GAC3BX,EAAeW,EAAQA,SACvBb,GAAU,GACVQ,GAAkB,GAEd5mB,GACFA,EAASinB,EAAQA,SAGfhB,GACFA,EAASgB,EAEb,EAiDA,OAZAv/B,EAAAA,EAAAA,WAAU,WACR,GAAIi/B,GAAiB,GAAKG,EAAYrZ,QAAS,CAC7C,IAAM4Z,EAAkBP,EAAYrZ,QAAQ5mB,SAAS8/B,GACjDU,GACFA,EAAgBC,eAAe,CAC7BC,MAAO,UACPC,SAAU,UAGhB,CACF,EAAG,CAACb,KAGFnoB,EAAAA,EAAAA,MAAConB,GAAiB,CAAC9V,IAAKlF,EAActhB,UAAWA,EAAUzC,SAAA,CACxDyY,IACCd,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CACHyY,EAAM,IAAE0lB,IAAY37B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAIpDwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ5D,IAAK+W,EACL9vB,KAAK,OACL+P,MAAOuf,EACPrmB,SA1FoB,SAACuG,GACzB,IAAMkhB,EAAWlhB,EAAEW,OAAOJ,MAC1Bwf,EAAemB,GACfrB,GAAU,GAENpmB,GACFA,EAASynB,EAEb,EAmFMC,QAjFmB,WACvBtB,GAAU,GACe,IAArBG,EAAU34B,QACZm5B,GAEJ,EA6EMY,UA7DgB,SAACphB,GAAM,IAAAqhB,EAC3B,GAAK9e,EAEL,OAAQvC,EAAEgV,KACR,IAAK,YACHhV,EAAEC,iBACFogB,EAAiB,SAAA1+B,GAAI,OACnBA,EAAOu+B,EAAkB74B,OAAS,EAAI1F,EAAO,EAAIA,CAAI,GAEvD,MAEF,IAAK,UACHqe,EAAEC,iBACFogB,EAAiB,SAAA1+B,GAAI,OAAIA,EAAO,EAAIA,EAAO,GAAK,CAAC,GACjD,MAEF,IAAK,QACHqe,EAAEC,iBACEmgB,GAAiB,GAAKF,EAAkBE,IAC1CS,EAAoBX,EAAkBE,IAExC,MAEF,IAAK,SACHP,GAAU,GACVQ,GAAkB,GACF,QAAhBgB,EAAAf,EAASpZ,eAAO,IAAAma,GAAhBA,EAAkBC,OAMxB,EA8BMhhB,YAAaA,EACb3G,SAAUA,EACV5W,UAAWZ,EAAQ,QAAU,GAC7Bq8B,aAAa,SAGf17B,EAAAA,EAAAA,KAACw8B,GAAiB,CAAC5M,MAAOnQ,IAAW5I,EAAU4P,IAAKgX,EAAYjgC,SAC7Do9B,GACCzlB,EAAAA,EAAAA,MAACsnB,GAAgB,CAAAj/B,SAAA,EACfwC,EAAAA,EAAAA,KAAC+rB,GAAc,IAAG,uBAGlBqR,EAAkB74B,OAAS,EAC7B64B,EAAkBpf,IAAI,SAAC4f,EAAS9Y,GAAK,OACnC9kB,EAAAA,EAAAA,KAAC6vB,GAAY,CAEX3R,QAAS,WAAF,OAAQ6f,EAAoBH,EAAQ,EAC3C39B,UAAW6kB,IAAUwY,EAAgB,WAAa,GAAG9/B,SAEpDogC,EAAQA,SAJJA,EAAQA,QAKA,IAGjB59B,EAAAA,EAAAA,KAAC08B,GAAa,CAAAl/B,SACXw/B,EAAc,oBAAsB,kBAK1C39B,IAASW,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE6B,MAG5B,E,sBCzQMk9B,GAAoBvmB,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iDAK9BqmB,GAAoBxmB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,6SAavB,SAAAY,GAAK,OAAIA,EAAM6Y,MAAQ,QAAU,MAAM,GAG9CC,GAAe7Z,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,4qBA4CzBsmB,GAAmBzmB,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,sJAU7BumB,GAAgB1mB,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,sHAQ1BsoB,GAAezoB,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,6KA2O/B,SAjOqB,SAAH5Y,GAWZ,IAAAmhC,EAAAnhC,EAVJqgC,QAAAA,OAAO,IAAAc,EAAG,GAAEA,EAAA/B,EAAAp/B,EACZkgB,MAAAA,OAAK,IAAAkf,EAAG,GAAEA,EACVhmB,EAAQpZ,EAARoZ,SACAimB,EAAQr/B,EAARq/B,SACAv9B,EAAK9B,EAAL8B,MAAKw9B,EAAAt/B,EACLigB,YAAAA,OAAW,IAAAqf,EAAG,oBAAmBA,EACjC5mB,EAAK1Y,EAAL0Y,MAAK6mB,EAAAv/B,EACLo+B,SAAAA,OAAQ,IAAAmB,GAAQA,EAAAlmB,EAAArZ,EAChBsZ,SAAAA,OAAQ,IAAAD,GAAQA,EAChB3W,EAAS1C,EAAT0C,UAEAxC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCgiB,EAAM9hB,EAAA,GAAEo/B,EAASp/B,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,UAAS+f,GAAMzf,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9Ci/B,EAAWh/B,EAAA,GAAEi/B,EAAcj/B,EAAA,GAClC0d,GAA4Bhe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjCijB,EAAMhjB,EAAA,GAAEijB,EAASjjB,EAAA,GACxBG,GAA4Cpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAjD+iB,EAAc9iB,EAAA,GAAE+iB,EAAiB/iB,EAAA,GACxCG,GAAkCxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA1C0e,EAASze,EAAA,GAAE0e,EAAY1e,EAAA,GAC9BG,GAA0C5e,EAAAA,EAAAA,WAAU,GAAE6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA/CghB,EAAa/gB,EAAA,GAAEghB,EAAgBhhB,EAAA,GAEhCihB,GAAWlc,EAAAA,EAAAA,QAAO,MAClBC,GAAeD,EAAAA,EAAAA,QAAO,MACtBmc,GAAcnc,EAAAA,EAAAA,QAAO,OAG3BjjB,EAAAA,EAAAA,WAAU,WACR4+B,EAAexf,EACjB,EAAG,CAACA,KAGJpf,EAAAA,EAAAA,WAAU,WACJu/B,EACFmB,EAAYnB,IAEZgB,EAAU,IACVE,EAAkB,IAClB7B,EAAe,IACXtmB,GACFA,EAAS,IAGf,EAAG,CAACinB,KAGJv/B,EAAAA,EAAAA,WAAU,WACR,GAAIsgC,EAAOp6B,OAAS,EAAG,CACrB,IAAMo5B,EAAWgB,EAAOpG,OAAO,SAAAyG,GAAI,OACjCA,EAAKA,KAAKnB,cAAcC,SAASd,EAAYa,cAAc,GAE7DiB,EAAkBnB,GAClBJ,GAAkB,EACpB,CACF,EAAG,CAACP,EAAa2B,KAGjBtgC,EAAAA,EAAAA,WAAU,WACR,IAAMu0B,EAAqB,SAACX,GACtB1Q,EAAa6C,UAAY7C,EAAa6C,QAAQyO,SAASZ,EAAMpU,UAC/Dkf,GAAU,GACVQ,GAAkB,GAEtB,EAGA,OADAvZ,SAASnkB,iBAAiB,YAAa+yB,GAChC,kBAAM5O,SAASlkB,oBAAoB,YAAa8yB,EAAmB,CAC5E,EAAG,IAEH,IAAMmM,EAAW,eAAAxgC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOugC,GAAe,IAAA76B,EAAAysB,EAAAiB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrB,OAAnB+7B,GAAa,GAAMj8B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMgG,MAAM,mBAADD,OAAoBq6B,mBAAmBD,GAAgB,eAAa,OAAlF,IAAR76B,EAAQxF,EAAAmG,MACAC,GAAI,CAAFpG,EAAAE,KAAA,cACR,IAAIuG,MAAM,2BAA0B,cAAAzG,EAAAE,KAAA,EAEzBsF,EAASa,OAAM,OAA5B4rB,EAAIjyB,EAAAmG,KACV65B,EAAU/N,EAAKA,MAAQ,IACvBiO,EAAkBjO,EAAKA,MAAQ,IAAIjyB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEnCM,QAAQG,MAAM,2BAA0ByyB,GACxC8M,EAAU,IACVE,EAAkB,IAAI,OAEF,OAFElgC,EAAAC,KAAA,EAEtBg8B,GAAa,GAAOj8B,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAEvB,gBAjBgB4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAmCX0/B,EAAmB,SAACH,GACxB/B,EAAe+B,EAAKA,MACpBjC,GAAU,GACVQ,GAAkB,GAEd5mB,GACFA,EAASqoB,EAAKA,MAGZpC,GACFA,EAASoC,EAEb,GAqCA3gC,EAAAA,EAAAA,WAAU,WACR,GAAIi/B,GAAiB,GAAKG,EAAYrZ,QAAS,CAC7C,IAAM4Z,EAAkBP,EAAYrZ,QAAQ5mB,SAAS8/B,GACjDU,GACFA,EAAgBC,eAAe,CAC7BC,MAAO,UACPC,SAAU,UAGhB,CACF,EAAG,CAACb,IAEJ,IAAM8B,GAAuBxB,EACvByB,EAAkBxoB,GAAYuoB,EAEpC,OACEjqB,EAAAA,EAAAA,MAAConB,GAAiB,CAAC9V,IAAKlF,EAActhB,UAAWA,EAAUzC,SAAA,CACxDyY,IACCd,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CACHyY,EAAM,IAAE0lB,IAAY37B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,SAInD4hC,GACCp/B,EAAAA,EAAAA,KAACy+B,GAAY,CAAAjhC,SAAC,6BAId2X,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ5D,IAAK+W,EACL9vB,KAAK,OACL+P,MAAOuf,EACPrmB,SAlGgB,SAACuG,GACzB,IAAMkhB,EAAWlhB,EAAEW,OAAOJ,MAC1Bwf,EAAemB,GACfrB,GAAU,GAENpmB,GACFA,EAASynB,EAEb,EA2FUC,QAzFe,WACnBT,GACFb,GAAU,EAEd,EAsFUuB,UAtEY,SAACphB,GAAM,IAAAqhB,EAC3B,GAAK9e,GAAWme,EAEhB,OAAQ1gB,EAAEgV,KACR,IAAK,YACHhV,EAAEC,iBACFogB,EAAiB,SAAA1+B,GAAI,OACnBA,EAAOggC,EAAet6B,OAAS,EAAI1F,EAAO,EAAIA,CAAI,GAEpD,MAEF,IAAK,UACHqe,EAAEC,iBACFogB,EAAiB,SAAA1+B,GAAI,OAAIA,EAAO,EAAIA,EAAO,GAAK,CAAC,GACjD,MAEF,IAAK,QACHqe,EAAEC,iBACEmgB,GAAiB,GAAKuB,EAAevB,IACvC6B,EAAiBN,EAAevB,IAElC,MAEF,IAAK,SACHP,GAAU,GACVQ,GAAkB,GACF,QAAhBgB,EAAAf,EAASpZ,eAAO,IAAAma,GAAhBA,EAAkBC,OAMxB,EAuCUhhB,YAAaA,EACb3G,SAAUwoB,EACVp/B,UAAWZ,EAAQ,QAAU,GAC7Bq8B,aAAa,SAGf17B,EAAAA,EAAAA,KAACw8B,GAAiB,CAAC5M,MAAOnQ,IAAW4f,EAAiB5Y,IAAKgX,EAAYjgC,SACpEo9B,GACCzlB,EAAAA,EAAAA,MAACsnB,GAAgB,CAAAj/B,SAAA,EACfwC,EAAAA,EAAAA,KAAC+rB,GAAc,IAAG,yBAGlB8S,EAAet6B,OAAS,EAC1Bs6B,EAAe7gB,IAAI,SAACghB,EAAMla,GAAK,OAC7B3P,EAAAA,EAAAA,MAAC0a,GAAY,CAEX3R,QAAS,WAAF,OAAQihB,EAAiBH,EAAK,EACrC/+B,UAAW6kB,IAAUwY,EAAgB,WAAa,GAAG9/B,SAAA,EAErDwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,SAAEwhC,EAAKA,OAChCA,EAAKO,SACJv/B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SAAEwhC,EAAKO,WACpC,GAAA16B,OAPOm6B,EAAKA,KAAI,KAAAn6B,OAAIm6B,EAAKO,QAAU,aAQvB,IAGjBv/B,EAAAA,EAAAA,KAAC08B,GAAa,CAAAl/B,SACXw/B,EAAc,oBAAsBY,EAAU,cAAgB,yBAOxEv+B,IAASW,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE6B,MAG5B,E,aC1TMmgC,GAAoBxpB,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qFAO9BspB,GAAczpB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,iKAEH,SAAAY,GAAK,MAAsB,YAAlBA,EAAM2oB,QAAwB,MAAQ,SAAS,GAS7EC,GAAiB3pB,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,2MAKtB,SAAAY,GAAK,OAAIA,EAAM6oB,OAAS,UAAY,SAAS,EAIxC,SAAA7oB,GAAK,OAAIA,EAAM6oB,OAAS,IAAM,GAAG,EAEpC,SAAA7oB,GAAK,OAAIA,EAAM6oB,OAAS,UAAY,SAAS,GA0N1D,SAtNyB,SAAHriC,GA8BhB,IAAAsiC,EAAAtiC,EA5BJuiC,aAAAA,OAAY,IAAAD,EAAG,GAAEA,EAAAE,EAAAxiC,EACjByiC,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAGdE,EAAe1iC,EAAf0iC,gBACAC,EAAY3iC,EAAZ2iC,aACAC,EAAe5iC,EAAf4iC,gBACAC,EAAY7iC,EAAZ6iC,aACAC,EAAgB9iC,EAAhB8iC,iBAGAC,EAAY/iC,EAAZ+iC,aACAC,EAAShjC,EAATgjC,UAASC,EAAAjjC,EAGTkjC,OAAAA,OAAM,IAAAD,EAAG,eAAcA,EAAAE,EAAAnjC,EACvBojC,aAAAA,OAAY,IAAAD,EAAG,SAAQA,EAAAE,EAAArjC,EACvBsjC,UAAAA,OAAS,IAAAD,EAAG,QAAOA,EAAAE,EAAAvjC,EACnBwjC,mBAAAA,OAAkB,IAAAD,EAAG,qBAAoBA,EAAAE,EAAAzjC,EACzC0jC,gBAAAA,OAAe,IAAAD,EAAG,oBAAmBA,EAAAlE,EAAAv/B,EAGrCo+B,SAAAA,OAAQ,IAAAmB,GAAQA,EAAAlmB,EAAArZ,EAChBsZ,SAAAA,OAAQ,IAAAD,GAAQA,EAAAsqB,EAAA3jC,EAChB4jC,eAAAA,OAAc,IAAAD,GAAQA,EAGtBjhC,EAAS1C,EAAT0C,UAEAxC,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtD2jC,EAAezjC,EAAA,GAAE0jC,EAAkB1jC,EAAA,GAwG1C,OACEwX,EAAAA,EAAAA,MAACqqB,GAAiB,CAACv/B,UAAWA,EAAUzC,SAAA,EACtC2X,EAAAA,EAAAA,MAACsqB,GAAW,CAACC,QAASe,EAAOjjC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACshC,GAAe,CACd7jB,MAAOqiB,EACPnpB,SA3GoB,SAACinB,GAEvBsC,GAAgBF,GAClBE,EAAa,IAGXD,GACFA,EAAgBrC,GAIdyC,GACFA,EAAiB,CACfzC,QAAAA,EACAoB,KAAM,GACNuC,YAAY,IAIhBF,GAAmB,EACrB,EAwFQzE,SAnEoB,SAAC4E,GACvBrB,GACFA,EAAgBqB,EAEpB,EAgEQniC,MAAOihC,EACPrqB,MAAO0qB,EACPnjB,YAAaujB,EACbpF,SAAUA,EACV9kB,SAAUA,KAGZ7W,EAAAA,EAAAA,KAACyhC,GAAY,CACX7D,QAASkC,EACTriB,MAAOuiB,EACPrpB,SAjGiB,SAACqoB,GACpBkB,GACFA,EAAalB,GAIf,IAAMuC,KAAgBzB,IAAgBd,GACtCqC,EAAmBE,GAGflB,GACFA,EAAiB,CACfzC,QAASkC,EACTd,KAAAA,EACAuC,WAAAA,GAGN,EAiFQ3E,SAzEiB,SAAC8E,GAExB,IAAMH,KAAgBzB,IAAgB4B,EAAS1C,MAC/CqC,EAAmBE,GAEfnB,GACFA,EAAasB,GAIXrB,GACFA,EAAiB,CACfzC,QAASkC,EACTd,KAAM0C,EAAS1C,KACfO,OAAQmC,EAASnC,OACjBgC,WAAAA,EACAI,SAAU,CACR/D,QAASkC,EACTd,KAAM0C,EAAS1C,KACfO,OAAQmC,EAASnC,SAIzB,EAmDQlgC,MAAOkhC,EACPtqB,MAAO4qB,EACPrjB,YAAayjB,EACbtF,SAAUA,EACV9kB,SAAUA,OApDXsqB,EAEDC,GAEAphC,EAAAA,EAAAA,KAAC2/B,GAAc,CAACC,QAAQ,EAAKpiC,SAAC,gCAM9BsiC,IAAiBE,GAEjBhgC,EAAAA,EAAAA,KAAC2/B,GAAc,CAACC,QAAQ,EAAMpiC,SAAC,kCAM9BsiC,EAQE,MANH9/B,EAAAA,EAAAA,KAAC2/B,GAAc,CAACC,QAAQ,EAAMpiC,SAAC,4BApBP,OA2DhC,E,8pBCjMA,IAAMupB,GAAU,WAAH,OACX5R,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFC,GAAa,WAAH,OACdrS,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,0LACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,SAC3B,EAGFga,GAAoB5rB,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,sPAa9B0rB,GAAe7rB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,geA2BzBkT,GAAcrT,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,yDAKxBmT,GAAOtT,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,2bAqBjBwT,GAAQ3T,EAAAA,GAAOsB,GAAEK,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,kLAYjB0T,GAAW7T,EAAAA,GAAOwB,EAACK,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,gGAOnB2rB,GAAgB9rB,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,yTAmB1B4rB,GAAO/rB,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,sbAOP,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,SAAS,EAC7F,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAOvC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,oCAAsC,MAAM,GAU/EjY,GAAO/T,EAAAA,GAAOgU,KAAI5R,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,qEAMlB8rB,GAAcjsB,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,wSAiBxB2T,GAAe9T,EAAAA,GAAOyE,GAAEjC,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,mPAcxB8T,GAAYjU,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,2FAOtB+T,GAAQlU,EAAAA,GAAOC,MAAK2C,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,gQAkBpBiU,GAAepU,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,2EAMzBkU,GAAQrU,EAAAA,GAAOK,MAAK2C,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,oqBAwCpB+rB,GAAiBlsB,EAAAA,GAAOmC,OAAMe,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,0UAsB9BmU,GAAStU,EAAAA,GAAOuU,OAAMnR,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,k5BAoCtBqU,GAAWxU,EAAAA,GAAOyU,SAAQnR,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,omBAkC1ByU,GAAY5U,EAAAA,GAAOQ,KAAIgD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,6LAcvBmQ,GAAStQ,EAAAA,GAAOmC,OAAMuB,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,quBAkCtBgsB,IAAkBnsB,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc4D,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,odA0BhCisB,GAAUpsB,EAAAA,GAAOmB,IAAG2C,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,mMAWpBksB,GAAYrsB,EAAAA,GAAOmB,IAAG6C,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,2SAmBtBmsB,GAAgBtsB,EAAAA,GAAOmB,IAAG+C,KAAAA,IAAA/D,EAAAA,EAAAA,GAAA,wMAW1BosB,GAAevsB,EAAAA,GAAOC,MAAKmE,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,w9BAuD3BqsB,GAAmBxsB,EAAAA,GAAOmB,IAAGmD,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,wWA0B7BssB,GAAmBzsB,EAAAA,GAAOmB,IAAGqD,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,6FAQ7BusB,GAAY1sB,EAAAA,GAAOmB,IAAGuD,KAAAA,IAAAvE,EAAAA,EAAAA,GAAA,6LActB0e,GAAc7e,EAAAA,GAAOmB,IAAGwD,KAAAA,IAAAxE,EAAAA,EAAAA,GAAA,wTAWjB,SAAAY,GAAK,OAAIA,EAAMkV,SAAS,GAqxBrC,SA/wBiB,WAAM,IAAA0W,EAAAC,EACf5R,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAsCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1ColC,EAAWllC,EAAA,GAAEmlC,EAAcnlC,EAAA,GAClCI,GAA4CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDglC,EAAc/kC,EAAA,GAAEglC,EAAiBhlC,EAAA,GACxC0d,GAAkChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAvCunB,EAAStnB,EAAA,GAAEunB,EAAYvnB,EAAA,GAC9BG,GAAoCpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA5CqnB,EAAUpnB,EAAA,GAAEqnB,EAAarnB,EAAA,GAChCG,GAAkCxe,EAAAA,EAAAA,UAAS,GAAEye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAtCmnB,EAASlnB,EAAA,GAAEmnB,EAAYnnB,EAAA,GAC9BG,GAAwC5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAAhDwe,EAAYve,EAAA,GAAEwe,EAAexe,EAAA,GACpCG,GAAsDhf,EAAAA,EAAAA,WAAS,GAAMif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAA9D6mB,EAAmB5mB,EAAA,GAAE6mB,EAAsB7mB,EAAA,GAClDG,GAAwCpf,EAAAA,EAAAA,UAAS,GAAEqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAA5C2mB,EAAY1mB,EAAA,GAAE2mB,EAAe3mB,EAAA,GAEpCie,GAQIC,EAAAA,GAAAA,IAAQ,CACV0I,cAAe,CACb/F,QAAS,SACToB,KAAM,MAVRv5B,EAAQu1B,EAARv1B,SACAwX,EAAY+d,EAAZ/d,aACA2mB,EAAK5I,EAAL4I,MAEAC,GADS7I,EAAT8I,UACQ9I,EAAR6I,UACAE,EAAW/I,EAAX+I,YACa7I,EAAMF,EAAnBG,UAAaD,OAQTK,EAAWqI,EAAM,YACjBI,EAAQJ,EAAM,SACdK,EAAYL,KAGlBvlC,EAAAA,EAAAA,WAAU,WACR,IAAI6lC,EAAiB,CAAC,QAAS,QAAS,WAAY,kBAAmB,eAAgB,YAAa,QAG7E,uBAAnBnB,GAA8D,yBAAnBA,EAC7CmB,EAAevlB,KAAK,cAAe,iBACP,YAAnBokB,EACTmB,EAAevlB,KAAK,eACQ,YAAnBokB,GACTmB,EAAevlB,KAAK,iBAIlBslB,EAAU9lC,UAAYgmC,MAAMC,QAAQH,EAAU9lC,WAAa8lC,EAAU9lC,SAASoG,OAAS,GACzF2/B,EAAevlB,KAAK,YAGtB,IAOM0lB,EAPeH,EAAe3L,OAAO,SAAA+L,GACzC,MAAc,aAAVA,EACKL,EAAU9lC,UAAYgmC,MAAMC,QAAQH,EAAU9lC,WAAa8lC,EAAU9lC,SAASoG,OAAS,EAEzF0/B,EAAUK,EACnB,GAE+B//B,OAAS2/B,EAAe3/B,OAAU,IACjEm/B,EAAgBW,EAClB,EAAG,CAACJ,EAAWlB,KAGf1kC,EAAAA,EAAAA,WAAU,WACR,IAAIkmC,EAMJ,OALIlB,EAAY,IACdkB,EAAWC,YAAY,WACrBlB,EAAa,SAAAzkC,GAAI,OAAIA,EAAO,CAAC,EAC/B,EAAG,MAEE,kBAAM4lC,cAAcF,EAAS,CACtC,EAAG,CAAClB,IAGJ,IAAMqB,GAAmBC,EAAAA,EAAAA,aAAYrJ,EAAAA,QAAQsJ,SAAU,CACrDvpB,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,8BACd2Q,GAAc,GACdE,EAAa,IACf,EACA3S,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIIwlC,IAAmBF,EAAAA,EAAAA,aAAYrJ,EAAAA,QAAQ71B,SAAU,CACrD4V,UAAW,SAACwV,GACV2B,EAAAA,GAAMC,QAAQ,qDACdzB,EAAS,IACX,EACAL,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAqGIylC,GAAiB,CACrB,CAAErnB,MAAO,uCAAwCxH,MAAO,wCACxD,CAAEwH,MAAO,gDAAiDxH,MAAO,iDACjE,CAAEwH,MAAO,oDAAqDxH,MAAO,qDACrE,CAAEwH,MAAO,6DAA8DxH,MAAO,+DAG1E8uB,GAAc,CAClB,CAAEtnB,MAAO,uBAAwBxH,MAAO,wBACxC,CAAEwH,MAAO,8EAA+ExH,MAAO,+EAC/F,CAAEwH,MAAO,6DAA8DxH,MAAO,8DAC9E,CAAEwH,MAAO,wDAAyDxH,MAAO,0DA6B3E,OAzBA5X,EAAAA,EAAAA,WAAU,WACR,GAAI4lC,EAAUe,cAAgBf,EAAUgB,WAAalC,EAAgB,CAEnE,IAAImC,GAAa,EAEM,uBAAnBnC,GAA8D,yBAAnBA,EAC7CmC,EAAajB,EAAUkB,aAAelB,EAAUmB,cACpB,YAAnBrC,EACTmC,EAAajB,EAAUkB,YACK,YAAnBpC,IACTmC,EAAajB,EAAUmB,eAIvBtC,EADEoC,EACa,EAEA,EAEnB,MAAWjB,EAAU/9B,OAAS+9B,EAAUD,OAASC,EAAU1I,SACzDuH,EAAe,GAEfA,EAAe,EAEnB,EAAG,CAACmB,EAAWlB,KAGb5tB,EAAAA,EAAAA,MAACysB,GAAiB,CAAApkC,SAAA,EAEhBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAEfkV,EAAAA,EAAAA,MAAC0sB,GAAY,CAAArkC,SAAA,EACX2X,EAAAA,EAAAA,MAACkU,GAAW,CAAA7rB,SAAA,EACVwC,EAAAA,EAAAA,KAACspB,GAAI,CAAA9rB,SAAC,QACNwC,EAAAA,EAAAA,KAAC2pB,GAAK,CAAAnsB,SAAC,+BACPwC,EAAAA,EAAAA,KAAC6pB,GAAQ,CAAArsB,SAAC,oDAGZ2X,EAAAA,EAAAA,MAAC2sB,GAAa,CAAAtkC,SAAA,EACZwC,EAAAA,EAAAA,KAAC+hC,GAAI,CAACC,QAASa,GAAe,EAAErlC,SAAC,OACjCwC,EAAAA,EAAAA,KAAC+hC,GAAI,CAACC,QAASa,GAAe,EAAErlC,SAAC,OACjCwC,EAAAA,EAAAA,KAAC+hC,GAAI,CAACC,QAASa,GAAe,EAAErlC,SAAC,UAGnCwC,EAAAA,EAAAA,KAAC60B,GAAW,CAAC5I,UAAWwX,KAExBtuB,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,EAvJL,SAAC4T,GAChB,GAAKoS,EAKL,GAAKF,EAAL,CAMA,IAAIsC,EAAiB,CAAC,EAEC,uBAAnBtC,GAA8D,yBAAnBA,EAE7CsC,EAAiB,CACfC,KAAM,GAAFzgC,OAAKgsB,EAAKsU,YAAW,KAAAtgC,OAAIgsB,EAAKuU,eAClC5vB,OAAQ,GAAF3Q,OAAKgsB,EAAK0U,WAAa,GAAE,KAAA1gC,OAAIgsB,EAAK2U,aAAe,IACvDC,OAAQ,GAAF5gC,OAAKgsB,EAAK6U,WAAa,GAAE,KAAA7gC,OAAIgsB,EAAK8U,aAAe,IACvDC,QAAS,GAAF/gC,OAAKgsB,EAAKgV,YAAc,YAAW,KAAAhhC,OAAIgsB,EAAKiV,cAAgB,aACnEC,KAAM,GAAFlhC,OAAKgsB,EAAKmV,SAAW,YAAW,KAAAnhC,OAAIgsB,EAAKoV,WAAa,cAIrC,YAAnBlD,EACFsC,EAAiB,CACfC,KAAMzU,EAAKsU,YACX3vB,OAAQqb,EAAK0U,WAAa,GAC1BE,OAAQ5U,EAAK6U,WAAa,GAC1BE,QAAS/U,EAAKgV,YAAc,YAC5BE,KAAMlV,EAAKmV,SAAW,aAEI,YAAnBjD,IACTsC,EAAiB,CACfC,KAAMzU,EAAKuU,cACX5vB,OAAQqb,EAAK2U,aAAe,GAC5BC,OAAQ5U,EAAK8U,aAAe,GAC5BC,QAAS/U,EAAKiV,cAAgB,YAC9BC,KAAMlV,EAAKoV,WAAa,cAM9B,IACMC,GADgB/B,MAAMC,QAAQvT,EAAK1yB,UAAY0yB,EAAK1yB,SAAW,IAChC0gB,KAAK,MAEpCsnB,EAAa,CACjBnC,MAAOnT,EAAKmT,MACZoC,UAAWnD,EACX/8B,MAAO2qB,EAAK3qB,MACZq1B,SAAU1K,EAAK0K,SACf8K,MAAO,CACLlhC,OAAQ49B,EACRnF,QAAS/M,EAAK+M,SAAW,SACzBoB,KAAMnO,EAAKmO,KACXsH,cAAezV,EAAKmU,aACpBuB,WAAY1V,EAAKoU,UACjB9mC,SAAU+nC,EACVzZ,OAAQoE,EAAKpE,QAAU,GACvB+Z,KAAM3V,EAAK2V,MAAQ,IAErBC,WAAYpB,GAGdR,GAAiB6B,OAAOP,EAzDxB,MAFE3T,EAAAA,GAAMnzB,MAAM,4BALZmzB,EAAAA,GAAMnzB,MAAM,qCAiEhB,GAoF6C7B,SAAA,EAErC2X,EAAAA,EAAAA,MAAC8sB,GAAW,CAAAzkC,SAAA,EACVwC,EAAAA,EAAAA,KAAC8pB,GAAY,CAAAtsB,SAAC,yBAEd2X,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,UAAMwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACxCwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,GACAc,EAAS,QAAS,CACpBk2B,SAAU,mBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,qBAEXyhC,QAAS,CACPlpB,MAAO,mBACPvY,QAAS,2CAEX,IACFjF,UAAWi7B,EAAOh1B,MAAQ,QAAU,GACpCsX,YAAY,YACZke,aAAa,cAEdR,EAAOh1B,QAASlG,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOh1B,MAAMhB,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,UAAMwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACxC2X,EAAAA,EAAAA,MAACqtB,GAAgB,CAAAhlC,SAAA,EACf2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,SACDjI,EAAS,QAAS,CACpBk2B,SAAU,mBACVgL,QAAS,CACPlpB,MAAO,6BACPvY,QAAS,4BAEX,IACFjF,UAAWi7B,EAAO8I,MAAQ,QAAU,GACpCxmB,YAAY,iBACZke,aAAa,WAEdR,EAAO8I,QAAShkC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO8I,MAAM9+B,cAE5ClF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBzC,UAClCwC,EAAAA,EAAAA,KAACmiC,GAAe,CACdz0B,KAAK,SACLwQ,QAhNG,WAChB8lB,EAILU,EAAiBgC,OAAO1C,GAHtBxR,EAAAA,GAAMnzB,MAAM,sBAIhB,EA2MoBwX,UAAWmtB,GAASU,EAAiB9J,WAAayI,EAAY,EAAE7lC,SAE/DknC,EAAiB9J,UAAY,cAC7ByI,EAAY,EAAI,GAAHx+B,OAAMw+B,EAAS,KAAM,aAIxCA,EAAY,IACXluB,EAAAA,EAAAA,MAACutB,GAAS,CAAAllC,SAAA,CAAC,4BACiB6lC,EAAU,oBAM5CrjC,EAAAA,EAAAA,KAACoiC,GAAO,CAAA5kC,UACNwC,EAAAA,EAAAA,KAACyiC,GAAgB,CAAAjlC,UACf2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,iBAAawC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC/CwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACLk5B,UAAU,UACVD,QAAQ,SACRlpB,MAAOwlB,EACPtsB,SAAU,SAACuG,GAET,IAAMO,EAAQP,EAAEW,OAAOJ,MAAMrd,QAAQ,MAAO,IAAIymC,MAAM,EAAG,GACzD3D,EAAazlB,EACf,EACAD,YAAY,SACZ3G,UAAWssB,EACXpkB,UAAU,IACV3J,MAAO,CACL8mB,UAAW,SACX4K,cAAe,MACf9K,WAAY,OACZ9N,SAAU,OACV6Y,WAAY,gBAGd5D,IACAnjC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAC,mCAEZylC,EAAU1+B,OAAS,GAAK0+B,EAAU1+B,OAAS,GAAK4+B,IAC/CnjC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAC,wCAMnB2X,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,WAAOwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACzC2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAMotB,EAAe,OAAS,YAC1Br1B,EAAS,WAAY,CACvBk2B,SAAU,oBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,yBAEX,IACFjF,UAAWi7B,EAAOK,SAAW,QAAU,GACvC/d,YAAY,SACZke,aAAa,mBAEf17B,EAAAA,EAAAA,KAACkiC,GAAc,CACbx0B,KAAK,SACLwQ,QAAS,WAAF,OAAQ6c,GAAiBD,EAAa,EAACt9B,SAE7Cs9B,GAAe96B,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAG5CmU,EAAOK,WAAYv7B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOK,SAASr2B,cAGlDiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,yBAAqBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACvD2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAM61B,EAAsB,OAAS,YACjC99B,EAAS,kBAAmB,CAC9Bk2B,SAAU,qBACVqL,SAAU,SAAAvpB,GAAK,OACbA,IAAU8d,GAAY,qBAAqB,KAC7C,IACFt7B,UAAWi7B,EAAO+L,gBAAkB,QAAU,GAC9CzpB,YAAY,mBACZke,aAAa,mBAEf17B,EAAAA,EAAAA,KAACkiC,GAAc,CACbx0B,KAAK,SACLwQ,QAAS,WAAF,OAAQslB,GAAwBD,EAAoB,EAAC/lC,SAE3D+lC,GAAsBvjC,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAGnDmU,EAAO+L,kBAAmBjnC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO+L,gBAAgB/hC,oBAMpEiQ,EAAAA,EAAAA,MAAC8sB,GAAW,CAAAzkC,SAAA,EACVwC,EAAAA,EAAAA,KAAC8pB,GAAY,CAAAtsB,SAAC,+BAEd2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,eAAWwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC7CwC,EAAAA,EAAAA,KAACsiC,GAAa,CAAA9kC,SAjPN,CAClB,CAAEigB,MAAO,qBAAsBxH,MAAO,sBACtC,CAAEwH,MAAO,uBAAwBxH,MAAO,wBACxC,CAAEwH,MAAO,UAAWxH,MAAO,WAC3B,CAAEwH,MAAO,UAAWxH,MAAO,YA8OF+H,IAAI,SAAA7Y,GAAM,OACrBgQ,EAAAA,EAAAA,MAACotB,GAAY,CAEXtiC,UAAW8iC,IAAmB59B,EAAOsY,MAAQ,WAAa,GAAGjgB,SAAA,EAE7DwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,QACLoJ,KAAK,SACL2G,MAAOtY,EAAOsY,MACd/G,QAASqsB,IAAmB59B,EAAOsY,MACnC9G,SAAU,SAACuG,GAAC,OAAK8lB,EAAkB9lB,EAAEW,OAAOJ,MAAM,EAClDke,UAAQ,KAEV37B,EAAAA,EAAAA,KAAA,QAAAxC,SAAO2H,EAAO8Q,UAXT9Q,EAAOsY,MAYC,SAKrBtI,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,eAAWwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC7C2X,EAAAA,EAAAA,MAACmV,GAAM3lB,GAAAA,GAAA,GACDc,EAAS,eAAgB,CAC3Bk2B,SAAU,yBACV,IACF17B,UAAWi7B,EAAO8J,aAAe,QAAU,GAAGxnC,SAAA,EAE9CwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,gBAvQP,CACxB,CAAEigB,MAAO,qBAAsBxH,MAAO,sBACtC,CAAEwH,MAAO,uBAAwBxH,MAAO,wBACxC,CAAEwH,MAAO,UAAWxH,MAAO,WAC3B,CAAEwH,MAAO,UAAWxH,MAAO,YAoQM+H,IAAI,SAAAtQ,GAAI,OACzB1N,EAAAA,EAAAA,KAAA,UAAyByd,MAAO/P,EAAK+P,MAAMjgB,SACxCkQ,EAAKuI,OADKvI,EAAK+P,MAET,OAGZyd,EAAO8J,eAAgBhlC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO8J,aAAa9/B,cAG1DiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,wBAAoBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACtD2X,EAAAA,EAAAA,MAACmV,GAAM3lB,GAAAA,GAAA,GACDc,EAAS,YAAa,CACxBk2B,SAAU,kCACV,IACF17B,UAAWi7B,EAAO+J,UAAY,QAAU,GAAGznC,SAAA,EAE3CwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,gBAlRf,CAChB,CAAEigB,MAAO,4BAA6BxH,MAAO,6BAC7C,CAAEwH,MAAO,iBAAkBxH,MAAO,kBAClC,CAAEwH,MAAO,0CAA2CxH,MAAO,2CAC3D,CAAEwH,MAAO,2CAA4CxH,MAAO,6CA+QnC+H,IAAI,SAAAkpB,GAAK,OAClBlnC,EAAAA,EAAAA,KAAA,UAA0Byd,MAAOypB,EAAMzpB,MAAMjgB,SAC1C0pC,EAAMjxB,OADIixB,EAAMzpB,MAEV,OAGZyd,EAAO+J,YAAajlC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO+J,UAAU//B,oBAMxDiQ,EAAAA,EAAAA,MAAC8sB,GAAW,CAAAzkC,SAAA,EACVwC,EAAAA,EAAAA,KAAC8pB,GAAY,CAAAtsB,SAAC,uBAEd2X,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,kBAAeulC,GAAsC,uBAAnBA,GAA8D,yBAAnBA,EAA2D,GAAd,YAAiB,KAAC/iC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC9KwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,QACDjI,EAAS,cAAe,CAC1Bk2B,SAAU,4BACVqL,SAAU,SAAAvpB,GACR,IAAM0pB,EAAQ,IAAIpQ,KACZqQ,EAAY,IAAIrQ,KAAKtZ,GAE3B,OADY0pB,EAAME,cAAgBD,EAAUC,eAC9B,IAAM,+BACtB,KACA,IACFpnC,UAAWi7B,EAAOiK,YAAc,QAAU,MAE3CjK,EAAOiK,cAAenlC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOiK,YAAYjgC,aAGvD69B,IAAsC,uBAAnBA,GAA8D,yBAAnBA,KAC7D5tB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,4BAAwBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC1DwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,QACDjI,EAAS,gBAAiB,CAC5Bk2B,SAAU,qCACVqL,SAAU,SAAAvpB,GACR,IAAM0pB,EAAQ,IAAIpQ,KACZqQ,EAAY,IAAIrQ,KAAKtZ,GAE3B,OADY0pB,EAAME,cAAgBD,EAAUC,eAC9B,IAAM,oCACtB,KACA,IACFpnC,UAAWi7B,EAAOkK,cAAgB,QAAU,MAE7ClK,EAAOkK,gBAAiBplC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOkK,cAAclgC,cAI9DlF,EAAAA,EAAAA,KAACsnC,GAAgB,CACfxH,aAAc8D,EAAM,WACpB5D,UAAW4D,EAAM,QACjB3D,gBAAiB,SAACxiB,GAChBomB,EAAS,UAAWpmB,GACpBsmB,EAAY,WAERH,EAAM,UACRC,EAAS,OAAQ,IACjBE,EAAY,QAEhB,EACA7D,aAAc,SAACziB,GACbomB,EAAS,OAAQpmB,GACjBsmB,EAAY,OACd,EACAzD,aAA4B,QAAhBqC,EAAEzH,EAAO0C,eAAO,IAAA+E,OAAA,EAAdA,EAAgBz9B,QAC9Bq7B,UAAsB,QAAbqC,EAAE1H,EAAO8D,YAAI,IAAA4D,OAAA,EAAXA,EAAa19B,QACxBy2B,UAAU,EACVwF,gBAAgB,EAChBV,OAAO,aAITzgC,EAAAA,EAAAA,KAAA,QAAA2E,GAAA,CACE+I,KAAK,UACDjI,EAAS,UAAW,CAAEk2B,SAAU,0BAEtC37B,EAAAA,EAAAA,KAAA,QAAA2E,GAAA,CACE+I,KAAK,UACDjI,EAAS,OAAQ,CAAEk2B,SAAU,2BAIrCxmB,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,uBACPwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACDjI,EAAS,WAAS,IACtB+X,YAAY,4BAIhBrI,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,qCACPwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAEC,QAAS,OAAQkyB,cAAe,SAAUpZ,IAAK,OAAQ3wB,SAClE,CACC,CAAEq7B,GAAI,iCAAkC5iB,MAAO,kCAC/C,CAAE4iB,GAAI,kCAAmC5iB,MAAO,mCAChD,CAAE4iB,GAAI,0CAA2C5iB,MAAO,2CACxD,CAAE4iB,GAAI,UAAW5iB,MAAO,WACxB,CAAE4iB,GAAI,sCAAuC5iB,MAAO,wCACpD+H,IAAI,SAAAwpB,GAAM,OACVryB,EAAAA,EAAAA,MAAA,SAAuBC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAClFwC,EAAAA,EAAAA,KAAA,QAAA2E,GAAA,CACE+I,KAAK,WACL+P,MAAO+pB,EAAO3O,IACVpzB,EAAS,eAEfzF,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAEgqC,EAAOvxB,UANjCuxB,EAAO3O,GAOX,YAMhB1jB,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,cAAWulC,GAAsC,uBAAnBA,GAA8D,yBAAnBA,EAA2D,GAAd,gBAC7H/iC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,UACDjI,EAAS,cAAY,IACzB+X,YAAY,MACZM,IAAI,MACJsE,IAAI,YAIP2gB,IAAsC,uBAAnBA,GAA8D,yBAAnBA,KAC7D5tB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,yBACPwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,UACDjI,EAAS,gBAAc,IAC3B+X,YAAY,MACZM,IAAI,MACJsE,IAAI,gBAMZjN,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,aAAUulC,GAAsC,uBAAnBA,GAA8D,yBAAnBA,EAA2D,GAAd,gBAC5H/iC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,UACDjI,EAAS,cAAY,IACzB+X,YAAY,KACZM,IAAI,KACJsE,IAAI,YAIP2gB,IAAsC,uBAAnBA,GAA8D,yBAAnBA,KAC7D5tB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,wBACPwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,UACDjI,EAAS,gBAAc,IAC3B+X,YAAY,KACZM,IAAI,KACJsE,IAAI,gBAMZjN,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,wBAAqBulC,GAAsC,uBAAnBA,GAA8D,yBAAnBA,EAA2D,GAAd,gBACvI/iC,EAAAA,EAAAA,KAACsqB,GAAM3lB,GAAAA,GAAA,GAAKc,EAAS,eAAa,IAAAjI,SAC/BsnC,GAAe9mB,IAAI,SAAAwpB,GAAM,OACxBxnC,EAAAA,EAAAA,KAAA,UAA2Byd,MAAO+pB,EAAO/pB,MAAMjgB,SAC5CgqC,EAAOvxB,OADGuxB,EAAO/pB,MAEX,SAKdslB,IAAsC,uBAAnBA,GAA8D,yBAAnBA,KAC7D5tB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,mCACPwC,EAAAA,EAAAA,KAACsqB,GAAM3lB,GAAAA,GAAA,GAAKc,EAAS,iBAAe,IAAAjI,SACjCsnC,GAAe9mB,IAAI,SAAAwpB,GAAM,OACxBxnC,EAAAA,EAAAA,KAAA,UAA2Byd,MAAO+pB,EAAO/pB,MAAMjgB,SAC5CgqC,EAAOvxB,OADGuxB,EAAO/pB,MAEX,aAOnBtI,EAAAA,EAAAA,MAACitB,GAAO,CAAA5kC,SAAA,EACN2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,yBAAsBulC,GAAsC,uBAAnBA,GAA8D,yBAAnBA,EAA2D,GAAd,gBACxI/iC,EAAAA,EAAAA,KAACsqB,GAAM3lB,GAAAA,GAAA,GAAKc,EAAS,YAAU,IAAAjI,SAC5BunC,GAAY/mB,IAAI,SAAAwpB,GAAM,OACrBxnC,EAAAA,EAAAA,KAAA,UAA2Byd,MAAO+pB,EAAO/pB,MAAMjgB,SAC5CgqC,EAAOvxB,OADGuxB,EAAO/pB,MAEX,SAKdslB,IAAsC,uBAAnBA,GAA8D,yBAAnBA,KAC7D5tB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,oCACPwC,EAAAA,EAAAA,KAACsqB,GAAM3lB,GAAAA,GAAA,GAAKc,EAAS,cAAY,IAAAjI,SAC9BunC,GAAY/mB,IAAI,SAAAwpB,GAAM,OACrBxnC,EAAAA,EAAAA,KAAA,UAA2Byd,MAAO+pB,EAAO/pB,MAAMjgB,SAC5CgqC,EAAOvxB,OADGuxB,EAAO/pB,MAEX,aAOnBtI,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,YACPwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,GACHc,EAAS,SAAO,IACpB+X,YAAY,kEAKlBxd,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACLmJ,SAAUguB,GAAiBjK,YAAcqI,EAAUzlC,SAElDqnC,GAAiBjK,UAAY,iBAAmB,2BAIrDzlB,EAAAA,EAAAA,MAACktB,GAAS,CAAA7kC,SAAA,CAAC,sBACSwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CAACnvB,GAAG,SAAQ3C,SAAC,cAItC2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV2mB,UAAW,OACXE,WAAY,OACZrmB,UAAW,oBACXsmB,UAAW,UACX1+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CACR0mB,MAAO,UACP5N,SAAU,OACViO,aAAc,OACdH,WAAY,OACZx+B,SAAC,4BAGH2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACTC,eAAgB,SAChB6Y,IAAK,OACLsZ,SAAU,QACVjqC,SAAA,EACAwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,cACHiV,MAAO,CACLK,WAAY,oDACZqmB,MAAO,QACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,OACVD,QAAS,YACTpY,aAAc,MACdygB,WAAY,gBACZ8F,UAAW,qCAEbC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,mBAC3BjP,EAAEW,OAAOzI,MAAMgnB,UAAY,mCAC7B,EACAE,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,gBAC3BjP,EAAEW,OAAOzI,MAAMgnB,UAAY,mCAC7B,EAAE5+B,SACH,qBAGDwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,iBACHiV,MAAO,CACLK,WAAY,QACZqmB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,OACVD,QAAS,YACTpY,aAAc,MACdF,OAAQ,oBACR2gB,WAAY,iBAEd+F,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAMK,WAAa,UAC5ByH,EAAEW,OAAOzI,MAAM0mB,MAAQ,QACvB5e,EAAEW,OAAOzI,MAAM+W,UAAY,kBAC7B,EACAmQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAMK,WAAa,QAC5ByH,EAAEW,OAAOzI,MAAM0mB,MAAQ,UACvB5e,EAAEW,OAAOzI,MAAM+W,UAAY,eAC7B,EAAE3uB,SACH,iCAQb,E,iDC9zCMkqC,GAAc,WAAH,OACfvyB,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,SAC3B,EAGF+f,GAAgB,WAAH,OACjB3nC,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,8FACZ,EAGF6f,GAAW,WAAH,OACZ5nC,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,2BACJ,EAGFygB,GAAe,WAAH,OAChB1yB,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFugB,GAAW,WAAH,OACZ3yB,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC1BvnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAAQC,GAAG,QAC/B,EAGFmgB,IAAgB/xB,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+IAOrC6xB,GAAShyB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,+mCAkDnB8xB,GAAgBjyB,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,ggBA8B1B+xB,GAAclyB,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,g6CA+FxBke,GAAWre,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,+2CAsFrBgyB,GAAiBnyB,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,kXAsB3BiyB,IAAcpyB,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,kpBAiChCkyB,GAAeryB,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,mjCAGL,SAAAY,GAAK,OAAIA,EAAMgU,IAAI,EAwBzC,SAAAhU,GAAK,OAAKA,EAAMgU,MAAQ,6QAYzB,GA2BGud,GAAiBtyB,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,68BA4D3BoyB,GAAiBvyB,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,6zRAqa3BqyB,GAAgBxyB,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,8TAmB1BsyB,IAAezyB,EAAAA,EAAAA,IAAO2U,GAAP3U,CAAkB0C,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,swEAkGjCuyB,GAAiB1yB,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,m6EA6H3BwyB,GAAY3yB,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,6uBAYf,SAAAY,GAAK,OAAIA,EAAM6Y,MAAQ,EAAI,CAAC,EAOrC,SAAA7Y,GAAK,OAAIA,EAAM6Y,OAAS,yDAEzB,GAkBGgZ,IAAoB5yB,EAAAA,EAAAA,IAAOsZ,EAAAA,GAAPtZ,CAAYgD,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,8ZAwgCtC,SAl/Ba,WAAM,IAAA0yB,EAmQJpR,EAuEAqR,EAzUbrrC,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDsrC,EAAcprC,EAAA,GAAEqrC,EAAiBrrC,EAAA,GACxCI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCkrC,EAAQjrC,EAAA,GAAEkrC,EAAWlrC,EAAA,GAC5B0d,GAAoDhe,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA5DytB,EAAkBxtB,EAAA,GAAEytB,EAAqBztB,EAAA,GAChDG,GAAgDpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAArDutB,EAAgBttB,EAAA,GAAEutB,EAAmBvtB,EAAA,GAC5CG,GAA4Cxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAnDqtB,EAAcptB,EAAA,GAAEqtB,EAAiBrtB,EAAA,GACxCG,GAAwC5e,EAAAA,EAAAA,UAAS,IAAG6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA7CmtB,EAAYltB,EAAA,GAAEmtB,EAAentB,EAAA,GACpCG,GAAwChf,EAAAA,EAAAA,WAAS,GAAMif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAAhDitB,EAAYhtB,EAAA,GAAEitB,EAAejtB,EAAA,GAGpCG,GAA4Cpf,EAAAA,EAAAA,UAAS,IAAGqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAAjD+sB,EAAc9sB,EAAA,GAAE+sB,EAAiB/sB,EAAA,GACxCkE,GAAwCvjB,EAAAA,EAAAA,WAAU,GAAEwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAA7C8oB,EAAY7oB,EAAA,GAAE8oB,EAAe9oB,EAAA,GAGpC+oB,GAA4CvsC,EAAAA,EAAAA,UAAS,GAAEwsC,GAAAtsC,EAAAA,EAAAA,GAAAqsC,EAAA,GAAhDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAGxCG,GAAsC3sC,EAAAA,EAAAA,WAAS,GAAK4sC,GAAA1sC,EAAAA,EAAAA,GAAAysC,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,GAAcF,EAAA,GAG5B9Y,KADcL,EAAAA,EAAAA,kBACApyB,EAAAA,SAASgzB,kBACrBqH,GNhuCsB,WAC9B,IAAMqR,GAAUC,EAAAA,EAAAA,YAAWhU,IAC3B,IAAK+T,EACH,MAAM,IAAIplC,MAAM,+DAElB,OAAOolC,CACT,CM0tC6BE,GAAnBvR,eAGFwR,GAAoB,WACxB,IACE,IAAMC,EAAc,CAClB9B,eAAAA,EACAU,aAAAA,EACAI,eAAAA,EACAE,aAAAA,EACAI,eAAAA,EACA3Q,UAAWzC,KAAKC,OAElB8T,eAAexkC,QAAQ,sBAAuBP,KAAKC,UAAU6kC,IAC7D3rC,QAAQgU,IAAI,gDACd,CAAE,MAAO7T,GACPH,QAAQG,MAAM,+BAAgCA,EAChD,CACF,EAkCM0rC,GAAqB,WACzB,IACED,eAAepkC,WAAW,uBAC1BxH,QAAQgU,IAAI,gDACd,CAAE,MAAO7T,GACPH,QAAQG,MAAM,4BAA6BA,EAC7C,CACF,EAuBM2rC,GAAe,eAAAztC,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAusC,EAAAC,EAAAC,EAAArZ,EAAAxtB,EAAA7E,UAAA,OAAAhB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAiB,GAAVmsC,EAAK3mC,EAAAC,OAAA,QAAAC,IAAAF,EAAA,GAAAA,EAAA,GAAG,IACjCqlC,EAAc,CAAF/qC,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAUd,OARF4qC,GAAgB,GAAMhrC,EAAAC,KAAA,EAKpBK,QAAQgU,IAAI,oCACZhU,QAAQgU,IAAI,0BAA2B,CAAE+3B,MAAAA,EAAOG,mBAAoB3B,EAAallC,SAEjF3F,EAAAE,KAAA,EAC0BusC,EAAAA,SAASC,iBAAiBL,EAAO,IAAG,OAAxDC,EAAWtsC,EAAAmG,KAEjB7F,QAAQgU,IAAI,yCACZhU,QAAQgU,IAAI,4CAA4Cg4B,aAAW,EAAXA,EAAa3mC,SAAU,GAE3E2mC,GAAeA,EAAY3mC,OAAS,GAEtC2mC,EAAYtmB,QAAQ,SAAC2mB,EAASzmB,GAC5B5lB,QAAQgU,IAAI,cAADrO,OAAeigB,EAAQ,EAAC,KAAK,CACtC+T,GAAI0S,EAAQ1S,GACZ3yB,MAAOqlC,EAAQrlC,MACf8rB,IAAKuZ,EAAQvZ,IACb7sB,OAAQomC,EAAQpmC,OAChB65B,KAAMuM,EAAQvM,KACdwM,SAAUD,EAAQC,SAClBC,IAAKF,EAAQE,IACbC,QAASH,EAAQG,QACjBC,SAAUJ,EAAQI,SAClBn2B,OAAQ+1B,EAAQ/1B,OAChBiwB,OAAQ8F,EAAQ9F,OAChBG,QAAS2F,EAAQ3F,QACjBG,KAAMwF,EAAQxF,MAElB,GAE4B,IAAxB0D,EAAallC,QAAiBwkC,GAQhC7pC,QAAQgU,IAAI,+CACNi4B,EAAiB1B,EAAallC,OACpCmlC,EAAgB,SAAA7qC,GAAI,SAAAgG,QAAA40B,EAAAA,GAAAA,GAAQ56B,IAAI46B,EAAAA,GAAAA,GAAKyR,GAAW,GAChDhsC,QAAQgU,IAAI,sBAADrO,OAAuBsmC,EAAc,OAAAtmC,OAAMsmC,EAAiBD,EAAY3mC,WATnFrF,QAAQgU,IAAI,+CAAgDg4B,EAAY,GAAGhlC,OAC3E8iC,EAAkBkC,EAAY,IAC9BxB,EAAgBwB,EAAYrE,MAAM,IAClC3nC,QAAQgU,IAAI,4CAA6Cg4B,EAAYrE,MAAM,GAAG7oB,IAAI,SAAAxG,GAAC,OAAIA,EAAEtR,KAAK,MAShGhH,QAAQC,KAAK,8CAGfD,QAAQgU,IAAI,oCAAoCtU,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAIhDM,QAAQG,MAAM,kCAAiCyyB,GAAS,OAEjC,OAFiClzB,EAAAC,KAAA,EAExD+qC,GAAgB,GAAOhrC,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAE1B,kBA9DoB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAiEfmsC,GAAiB,WASrB,GARA1sC,QAAQgU,IAAI,2CACZhU,QAAQgU,IAAI,wBAAyB,CACnC61B,gBAAgBA,aAAc,EAAdA,EAAgB7iC,QAAS,OACzC2lC,mBAAoBpC,EAAallC,OACjCunC,cAAejC,EAAetlC,OAC9BwlC,aAAAA,IAGEN,EAAallC,OAAS,EAAG,CAEvBwkC,IACF7pC,QAAQgU,IAAI,0BAA2B61B,EAAe7iC,QA/FtCqlC,EAgGHxC,KA7FjBe,EAAkB,SAAAjrC,GAChB,IAAMktC,EAAa,GAAHlnC,QAAA40B,EAAAA,GAAAA,GAAO56B,GAAI,CAAE0sC,IAE7B,OAAIQ,EAAWxnC,OAAS,EACfwnC,EAAWlF,OAAO,GAEpBkF,CACT,GACA/B,EAAgB,SAAAnrC,GAAI,OAAIsjB,KAAKrE,IAAIjf,EAAO,EAAG,EAAE,GAG7CK,QAAQgU,IAAI,sBAAuBq4B,EAAQrlC,MAAO,WAAY2jC,EAAetlC,OAAS,KAsFpF,IAAMynC,EAAcvC,EAAa,GAuBjC,OAtBAvqC,QAAQgU,IAAI,mCAAoC84B,EAAY9lC,OAG5DwjC,EAAgB,SAAA7qC,GAAI,OAAIA,EAAKgoC,MAAM,EAAE,GACrCmC,EAAkBgD,GAGlB5B,EAAkB,SAAAvrC,GAAI,OAAIA,EAAO,CAAC,GAElCK,QAAQgU,IAAI,4BAA6B,CACvC+4B,kBAAmBD,EAAY9lC,MAC/BgmC,eAAgBzC,EAAallC,OAAS,EACtC4nC,kBAAmBhC,EAAiB,IAIlCV,EAAallC,QAAU,IACzBrF,QAAQgU,IAAI,4CACZ83B,GAAgB,KAGlB9rC,QAAQgU,IAAI,qCACL84B,CACT,CASE,OAPA9sC,QAAQgU,IAAI,4CACZ83B,GAAgB,IAIhB9rC,QAAQgU,IAAI,6DAA8D61B,aAAc,EAAdA,EAAgB7iC,OAC1FhH,QAAQgU,IAAI,8CACL61B,EArIU,IAACwC,CAuItB,EAGAa,IAAsD/b,EAAAA,EAAAA,UACpD,mBACA,kBAAMgb,EAAAA,SAASC,iBAAiB,GAAI,GAAG,EACvC,CACE5a,SAAUqY,GAA0C,IAAxBU,EAAallC,OACzC8W,UAAW,SAACwV,GACNA,GAAQA,EAAKtsB,OAAS,GAExBykC,EAAkBnY,EAAK,IAEvB6Y,EAAgB7Y,EAAKgW,MAAM,IAE3BuD,EAAkB,GAElBY,GAAgB,KAEhBhC,EAAkB,MAEpBQ,EAAkB,KACpB,EACA7Y,QAAS,SAACtxB,GAAU,IAAAuxB,EAClB1xB,QAAQG,MAAM,kCAAmCA,GACb,iBAAlB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsBvxB,OACxB2pC,EAAkB,MAElBxW,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,IAEnCmqC,EAAkB,KACpB,IA5B2B5O,IAAFwR,GAArBvb,KAAgCub,GAATxR,WAAWyR,GAAOD,GAAPC,QAiCpCC,IAAe3H,EAAAA,EAAAA,aACnB,SAAApmC,GAAA,IAAGguC,EAAUhuC,EAAVguC,WAAYC,EAAMjuC,EAANiuC,OAAM,OAAOnB,EAAAA,SAASoB,KAAKF,EAAYC,EAAO,EAC7D,CACEnxB,WAASoc,GAAAj5B,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiH,EAAOmrB,GAAI,IAAAlyB,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,UACA,oBAAhB+xB,EAAK9d,SAAgC8d,EAAK6b,cAAa,CAAA9mC,EAAA9G,KAAA,YAErDiqC,EAAgB,CAAFnjC,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEYusC,EAAAA,SAASsB,mBAAmB5D,EAAe7iC,OAAM,OAA1DN,EAAAb,KAGAo0B,SAUf3G,EAAAA,GAAMC,QAAQ,uBATd2G,GAAe,CACbgB,SAAU2O,EAAe7iC,MACzBwvB,SAAU,CACRe,OAAQsS,EAAe/W,IACvB9rB,MAAO6iC,EAAe7iC,SAG1BssB,EAAAA,GAAMC,QAAQ,wBAAyB,CAAE8D,SAAU,OAGpD3wB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAED1G,QAAQG,MAAM,iCAAgCV,GAE9Cy6B,GAAe,CACbgB,SAAU2O,EAAe7iC,MACzBwvB,SAAU,CACRe,OAAQsS,EAAe/W,IACvB9rB,MAAO6iC,EAAe7iC,SAG1BssB,EAAAA,GAAMC,QAAQ,wBAAyB,CAAE8D,SAAU,MAAQ,OAAA3wB,EAAA9G,KAAA,eAI/D0zB,EAAAA,GAAMC,QAAQ,sBAAsB,OAGtC+W,EAAkB,MAClBoC,KAEK7C,GAEHC,EAAkB,MAEnB,wBAAApjC,EAAArG,OAAA,EAAAmG,EAAA,iBACF,SA7CQJ,GAAA,OAAAmyB,EAAAj4B,MAAA,KAAAC,UAAA,GA8CTkxB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,IACjCmqC,EAAkB,KACpB,IAIEoD,IAAkBjI,EAAAA,EAAAA,aACtB,SAAArL,GAAA,IAAGiT,EAAUjT,EAAViT,WAAYC,EAAMlT,EAANkT,OAAM,OAAOnB,EAAAA,SAASwB,QAAQN,EAAYC,EAAO,EAChE,CACEnxB,UAAW,WAETmuB,EAAkB,MAClBoC,IACF,EACAjb,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,IACjCmqC,EAAkB,KACpB,IAIEsD,IAAoBnI,EAAAA,EAAAA,aACxB,SAAA9K,GAAA,IAAG0S,EAAU1S,EAAV0S,WAAYrnC,EAAO20B,EAAP30B,QAAO,OAAOmmC,EAAAA,SAAS0B,UAAU,CAAER,WAAAA,EAAYrnC,QAAAA,GAAU,EACxE,CACEmW,WAASytB,GAAAtqC,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0H,EAAO0qB,GAAI,IAAA7d,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,OAIpB,GAHAsqC,GAAsB,GACtBE,EAAoB,KAGhBP,GAAmC,oBAAhBlY,EAAK9d,SAAgC8d,EAAK6b,cAAc,CAAArmC,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAEjDusC,EAAAA,SAASsB,mBAAmB5D,EAAe7iC,OAAM,OAA1DG,EAAAtB,KAGAo0B,SAUf3G,EAAAA,GAAMC,QAAQ,2BATd2G,GAAe,CACbgB,SAAU2O,EAAe7iC,MACzBwvB,SAAU,CACRe,OAAQsS,EAAe/W,IACvB9rB,MAAO6iC,EAAe7iC,SAG1BssB,EAAAA,GAAMC,QAAQ,wBAAyB,CAAE8D,SAAU,OAGpDlwB,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAEDnH,QAAQG,MAAM,iCAAgC2T,GAE9ComB,GAAe,CACbgB,SAAU2O,EAAe7iC,MACzBwvB,SAAU,CACRe,OAAQsS,EAAe/W,IACvB9rB,MAAO6iC,EAAe7iC,SAG1BssB,EAAAA,GAAMC,QAAQ,wBAAyB,CAAE8D,SAAU,MAAQ,OAAAlwB,EAAAvH,KAAA,eAG7D0zB,EAAAA,GAAMC,QAAQ,0BAA0B,OAI1C+W,EAAkB,MAClBoC,KAAkB,wBAAAvlC,EAAA9G,OAAA,EAAA4G,EAAA,iBACnB,SAzCQF,GAAA,OAAA6iC,EAAAtpC,MAAA,KAAAC,UAAA,GA0CTkxB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,KAKJhB,EAAAA,EAAAA,WAAU,YACYoG,aAAaC,QAAQ,oBACrBqkC,IAClBG,GAAY,GACZ7rB,WAAW,WACT6rB,GAAY,GACZzkC,aAAa6B,QAAQ,kBAAmB,OAC1C,EAAG,KAEP,EAAG,CAACyiC,KAGJ1qC,EAAAA,EAAAA,WAAU,WACJ0qC,GAA0C,IAAxBU,EAAallC,QACjCymC,GAAgB,EAEpB,EAAG,CAACjC,KAGJ1qC,EAAAA,EAAAA,WAAU,YACJ0qC,GAAkBU,EAAallC,OAAS,GAAKslC,EAAetlC,OAAS,IACvEqmC,IAEJ,EAAG,CAAC7B,EAAgBU,EAAcI,EAAgBE,EAAcI,KAGhE9rC,EAAAA,EAAAA,WAAU,WAiBR,OA7X2B,WAC3B,IACE,IAAM2uC,EAAalC,eAAepmC,QAAQ,uBAC1C,GAAIsoC,EAAY,CACd,IAAMC,EAAclnC,KAAKmnC,MAAMF,GAK/B,GAJYjW,KAAKC,MACMiW,EAAYzT,UAGpB,KAOb,OANAwP,EAAkBiE,EAAYlE,gBAC9BW,EAAgBuD,EAAYxD,cAAgB,IAC5CK,EAAkBmD,EAAYpD,gBAAkB,IAChDG,EAAgBiD,EAAYlD,eAAiB,GAC7CK,EAAkB6C,EAAY9C,gBAAkB,GAChDjrC,QAAQgU,IAAI,uDACL,EAEPhU,QAAQgU,IAAI,6CACZ43B,eAAepkC,WAAW,sBAE9B,CACF,CAAE,MAAOrH,GACPH,QAAQG,MAAM,mCAAoCA,GAClDyrC,eAAepkC,WAAW,sBAC5B,CAIA,OADA8jC,IAAe,IACR,CACT,CA+UwB2C,IAOpBjuC,QAAQgU,IAAI,mEAERu2B,EAAallC,QAAU,GACzBymC,GAAgB,IAElBR,IAAe,KARftrC,QAAQgU,IAAI,8DACZs3B,IAAe,IAWV,WAELI,IACF,CACF,EAAG,KAGHvsC,EAAAA,EAAAA,WAAU,WACR,IAAMqB,EAAmB,WACvBR,QAAQgU,IAAI,kDACZ63B,IACF,EAEMqC,EAAkB,WACtBluC,QAAQgU,IAAI,kDACZ63B,IACF,EAEMsC,EAAsB,WAC1BnuC,QAAQgU,IAAI,gDACZ63B,IACF,EAEMuC,EAAuB,WAC3BpuC,QAAQgU,IAAI,yDACZ63B,IACF,EAEMwC,EAAsB,WAC1BruC,QAAQgU,IAAI,kDACZ63B,IACF,EAEMyC,EAA2B,WAC/BtuC,QAAQgU,IAAI,mDACZ63B,IACF,EAEM0C,EAAsB,WAC1BvuC,QAAQgU,IAAI,gEACZ63B,IACF,EAEM2C,EAA4B,WAChCxuC,QAAQgU,IAAI,gEACZ63B,IACF,EAEM4C,EAAuB,WAC3BzuC,QAAQgU,IAAI,8CACZ63B,IACF,EAEM6C,EAAoB,WACxB1uC,QAAQgU,IAAI,+CACZ63B,IACF,EAEM8C,EAAmC,WACvC3uC,QAAQgU,IAAI,6EACZ63B,IACF,EAEM+C,EAAgC,WACpC5uC,QAAQgU,IAAI,yEACZ63B,IACF,EAEMgD,EAAiC,WACrC7uC,QAAQgU,IAAI,yEACZ63B,IACF,EAEMiD,EAAiC,WACrC9uC,QAAQgU,IAAI,8EACZ63B,IACF,EAEMkD,EAAmC,WACvC/uC,QAAQgU,IAAI,+EACZ63B,IACF,EAEMmD,EAAgC,WACpChvC,QAAQgU,IAAI,2EACZ63B,IACF,EAEMoD,EAAiC,WACrCjvC,QAAQgU,IAAI,2EACZ63B,IACF,EAEMqD,EAAgC,WACpClvC,QAAQgU,IAAI,yEACZ63B,IACF,EAEMsD,EAAkC,WACtCnvC,QAAQgU,IAAI,2EACZ63B,IACF,EAEMuD,EAAkC,WACtCpvC,QAAQgU,IAAI,2EACZ63B,IACF,EAEMwD,EAAsC,WAC1CrvC,QAAQgU,IAAI,6EACZ63B,IACF,EAEMyD,EAAkC,WACtCtvC,QAAQgU,IAAI,qFACZ63B,IACF,EAyBA,OAvBAnrC,OAAOC,iBAAiB,cAAeH,GACvCE,OAAOC,iBAAiB,aAAcutC,GACtCxtC,OAAOC,iBAAiB,kBAAmBwtC,GAC3CztC,OAAOC,iBAAiB,mBAAoBytC,GAC5C1tC,OAAOC,iBAAiB,kBAAmB0tC,GAC3C3tC,OAAOC,iBAAiB,uBAAwB2tC,GAChD5tC,OAAOC,iBAAiB,kBAAmB4tC,GAC3C7tC,OAAOC,iBAAiB,wBAAyB6tC,GACjD9tC,OAAOC,iBAAiB,mBAAoB8tC,GAC5C/tC,OAAOC,iBAAiB,gBAAiB+tC,GACzChuC,OAAOC,iBAAiB,gCAAiCguC,GACzDjuC,OAAOC,iBAAiB,6BAA8BiuC,GACtDluC,OAAOC,iBAAiB,8BAA+BkuC,GACvDnuC,OAAOC,iBAAiB,8BAA+BmuC,GACvDpuC,OAAOC,iBAAiB,gCAAiCouC,GACzDruC,OAAOC,iBAAiB,6BAA8BquC,GACtDtuC,OAAOC,iBAAiB,8BAA+BsuC,GACvDvuC,OAAOC,iBAAiB,6BAA8BuuC,GACtDxuC,OAAOC,iBAAiB,+BAAgCwuC,GACxDzuC,OAAOC,iBAAiB,+BAAgCyuC,GACxD1uC,OAAOC,iBAAiB,mCAAoC0uC,GAC5D3uC,OAAOC,iBAAiB,+BAAgC2uC,GAEjD,WACL5uC,OAAOE,oBAAoB,cAAeJ,GAC1CE,OAAOE,oBAAoB,aAAcstC,GACzCxtC,OAAOE,oBAAoB,kBAAmButC,GAC9CztC,OAAOE,oBAAoB,mBAAoBwtC,GAC/C1tC,OAAOE,oBAAoB,kBAAmBytC,GAC9C3tC,OAAOE,oBAAoB,uBAAwB0tC,GACnD5tC,OAAOE,oBAAoB,kBAAmB2tC,GAC9C7tC,OAAOE,oBAAoB,wBAAyB4tC,GACpD9tC,OAAOE,oBAAoB,mBAAoB6tC,GAC/C/tC,OAAOE,oBAAoB,gBAAiB8tC,GAC5ChuC,OAAOE,oBAAoB,gCAAiC+tC,GAC5DjuC,OAAOE,oBAAoB,6BAA8BguC,GACzDluC,OAAOE,oBAAoB,8BAA+BiuC,GAC1DnuC,OAAOE,oBAAoB,8BAA+BkuC,GAC1DpuC,OAAOE,oBAAoB,gCAAiCmuC,GAC5DruC,OAAOE,oBAAoB,6BAA8BouC,GACzDtuC,OAAOE,oBAAoB,8BAA+BquC,GAC1DvuC,OAAOE,oBAAoB,6BAA8BsuC,GACzDxuC,OAAOE,oBAAoB,+BAAgCuuC,GAC3DzuC,OAAOE,oBAAoB,+BAAgCwuC,GAC3D1uC,OAAOE,oBAAoB,mCAAoCyuC,GAC/D3uC,OAAOE,oBAAoB,+BAAgC0uC,EAC7D,CACF,EAAG,IAGH,IAkDMC,GAA4B,WAChCrF,GAAsB,GACtBE,EAAoB,GACtB,EAsDA,OAAI1O,IAAa2P,GAEbp1B,EAAAA,EAAAA,MAAC4yB,GAAa,CAAAvqC,SAAA,EACZwC,EAAAA,EAAAA,KAACgoC,GAAM,CAAAxqC,UACLwC,EAAAA,EAAAA,KAACioC,GAAa,CAAAzqC,UACZ2X,EAAAA,EAAAA,MAAC+yB,GAAW,CAAA1qC,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,cACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAI+sC,EAAc,+BAAiC,iCAIzDvqC,EAAAA,EAAAA,KAAC+rB,GAAc,QAMnB5W,EAAAA,EAAAA,MAAC4yB,GAAa,CAAAvqC,SAAA,EACZwC,EAAAA,EAAAA,KAACgoC,GAAM,CAAAxqC,UACL2X,EAAAA,EAAAA,MAAC8yB,GAAa,CAAAzqC,SAAA,EACZ2X,EAAAA,EAAAA,MAAC+yB,GAAW,CAAA1qC,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,qDAEL2X,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,WAAUzC,SAAA,CAAC,IAAEg0B,cAAW,EAAXA,GAAatrB,UACvClG,EAAAA,EAAAA,KAAA,KAAGC,UAAU,SAAQzC,SAAC,eAExBwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAMyG,UAAAA,GAAaQ,IAAM,YAAHntB,OAAe2sB,GAAYQ,KAAQ,GACzDzI,MAAM,OACNC,UAAU,OAAMhsB,WAEdg0B,UAAAA,GAAaQ,OAAOR,UAAkB,QAAPqX,EAAXrX,GAAatrB,aAAK,IAAA2iC,OAAA,EAAlBA,EAAoBxV,OAAO,GAAGC,0BAM5Dne,EAAAA,EAAAA,MAACgzB,GAAc,CAAA3qC,SAAA,EACbwC,EAAAA,EAAAA,KAAC2oC,GAAS,CAAC/Y,MAAOqZ,EAASzrC,SAAC,wDAI5BwC,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAC0Y,KAAK,OAAMlxC,SACzBurC,GACC5zB,EAAAA,EAAAA,MAACizB,GACC,CAEAuG,KAAK,IACLC,gBAAiB,CAAEhoB,KAAM,EAAGiV,MAAO,GACnCgT,UA9EU,SAAC5c,EAAOuU,GAGxBA,EAAKsI,OAAO/uB,EAFE,IAIZgpB,IACFS,EAAkB,SAElB8C,GAAa5F,OAAO,CAClB6F,WAAYxD,EAAe7iC,MAC3BsmC,OAAQ,aAGHhG,EAAKsI,OAAO/uB,GAZL,KAcZgpB,IACFS,EAAkB,QAElBoD,GAAgBlG,OAAO,CACrB6F,WAAYxD,EAAe7iC,MAC3BsmC,OAAQ,YAIhB,EAuDYvW,QAAS,CAAEE,MAAO,EAAGD,QAAS,EAAG6Y,QAAS,IAC1C3Y,QAAS,CACPD,MAAO,EACPD,QAAS,EACT6Y,QAAS,EACThvB,EAAsB,SAAnBwpB,GAA6B,IAAyB,UAAnBA,EAA6B,IAAM,EACzEyF,OAA2B,SAAnBzF,GAA6B,GAAwB,UAAnBA,EAA6B,GAAK,GAE9ElT,KAAM,CACJF,MAAO,EACPD,QAAS,EACT6Y,QAA4B,SAAnBxF,GAA6B,GAAK,GAC3CxpB,EAAsB,SAAnBwpB,GAA6B,IAAM,IACtCyF,OAA2B,SAAnBzF,GAA6B,GAAK,IAE5CjT,WAAY,CACVC,SAAUgT,EAAiB,GAAM,GACjC77B,KAAM67B,EAAiB,QAAU,SACjC0F,UAAW1F,OAAiB/kC,EAAY,KAE1C0qC,UAAW,CAAE/Y,MAAO,KAAM6Y,OAAQ,GAClCG,OAAQ,WAwBN,GAvBAjwC,QAAQgU,IAAI,4BACZhU,QAAQgU,IAAI,mBAAoB,CAC9BhN,MAAO6iC,EAAe7iC,MACtBo/B,KAAMyD,EAAezD,KACrBmG,IAAK1C,EAAe0C,IACpBD,SAAUzC,EAAeyC,SACzBxM,KAAM+J,EAAe/J,KACrBxpB,OAAQuzB,EAAevzB,OACvBiwB,OAAQsD,EAAetD,OACvBG,QAASmD,EAAenD,QACxBG,KAAMgD,EAAehD,KACrB4F,SAAU5C,EAAe4C,SACzByD,YAAarG,EAAeqG,cAI9BlwC,QAAQgU,IAAI,eAAgB,CAC1B8xB,aAAc+D,EAAe/D,aAC7BC,UAAW8D,EAAe9D,UAC1B9mC,SAAU4qC,EAAe5qC,WAIvB4qC,EAAezD,MAAQyD,EAAezD,KAAKxH,SAAS,KAAM,CAC5D,IAAMuR,EAAOC,eAAevG,EAAezD,MAC3CpmC,QAAQgU,IAAI,mBAAoBm8B,EAClC,CAEAnwC,QAAQgU,IAAI,wBACd,EAAE1V,SAAA,EAEF2X,EAAAA,EAAAA,MAACkzB,GAAY,CAACtd,KAAMge,EAAe/W,IAAM,YAAHntB,OAAekkC,EAAe/W,KAAQ,GAAGx0B,SAAA,EAC3EurC,EAAe/W,KAAO,MACxB7c,EAAAA,EAAAA,MAACmzB,GAAc,CAAA9qC,SAAA,EACb2X,EAAAA,EAAAA,MAACyzB,GAAiB,CAACzoC,GAAE,YAAA0E,OAAckkC,EAAe7iC,OAAQ1I,SAAA,CAAC,IACvDurC,EAAe7iC,UAEnBiP,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvBwC,EAAAA,EAAAA,KAAC6nC,GAAY,IACZkB,EAAe/J,KAAK,KAAG+J,EAAeyC,SAAS,SAElDxrC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKzC,SACjBurC,EAAe0C,KAAO,6BAK7BzrC,EAAAA,EAAAA,KAACuoC,GAAc,CAAA/qC,UACb2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAC8nC,GAAQ,IACRiB,EAAe5jC,UAIjB4jC,EAAewG,gBACdp6B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnCwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,oBACN2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,aAAYzC,SAAA,CACzB2kB,KAAKqtB,MAAgD,IAA1CzG,EAAewG,cAAcE,YAAkB,QAE7DzvC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3BwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,gBACVmV,MAAO,CACLM,MAAO,GAAF7Q,OAAKsd,KAAKqtB,MAAgD,IAA1CzG,EAAewG,cAAcE,YAAiB,aAQ5E1G,EAAe/D,eACd7vB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,2BAA0BzC,SAAA,EACvCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,kBACvBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASzC,UACtB2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,UAAc,IAAEurC,EAAe/D,qBAO9C+D,EAAe5qC,WACdgX,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,6BAA4BzC,SAAA,EACzCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,wBACvBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASzC,UACtB2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBACRwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE2mB,UAAW,MAAO2T,WAAY,OAAQlyC,SACjDurC,EAAe5qC,SAASwxC,MAAM,MAAM3xB,IAAI,SAAC4xB,EAAO9qB,GAAK,OACpD3P,EAAAA,EAAAA,MAAA,OAAiBC,MAAO,CAAE+mB,aAAc,OAAQ3+B,SAAA,CAAC,KAC5CoyC,EAAMC,SADD/qB,EAEJ,cAYlB9kB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAClBurC,EAAevC,KACbuC,EAAevC,KAAKjiC,OAAS,IAAMwkC,EAAevC,KAAK5nB,UAAU,EAAG,KAAO,MAAQmqB,EAAevC,KACjG,iCAIO,GAAA3hC,OA7ITkkC,EAAe7iC,MAAK,KAAArB,OAAIslC,KAgJlCh1B,EAAAA,EAAAA,MAACuzB,GAAc,CAAAlrC,SAAA,EACbwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,0BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,iEACHwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAhTU,WAC5Bhf,QAAQgU,IAAI,2CACZ63B,KACA/B,EAAkB,MAClBU,EAAgB,IAChBI,EAAkB,IAClBE,GAAiB,GACjBI,EAAkB,GAClBI,IAAe,GACf6B,IACF,EAsSmD7uC,SAAC,qBAQ/CurC,IACC5zB,EAAAA,EAAAA,MAACqzB,GAAa,CAAAhrC,SAAA,EACZwC,EAAAA,EAAAA,KAACyoC,GAAY,CACXxoC,UAAU,OACVie,QArQS,WACjB,GAAI6rB,GAAgB,GAAKF,EAAetlC,OAAS,EAAG,CAE9CwkC,GACFW,EAAgB,SAAA7qC,GAAI,OAAKkqC,GAAclkC,QAAA40B,EAAAA,GAAAA,GAAK56B,GAAI,GAIlD,IAAMixC,EAAkBjG,EAAeE,GACvCf,EAAkB8G,GAGlB9F,EAAgB,SAAAnrC,GAAI,OAAIA,EAAO,CAAC,GAGhCirC,EAAkB,SAAAjrC,GAAI,OAAIA,EAAKgoC,MAAM,EAAGkD,EAAa,GAGrD7qC,QAAQgU,IAAI,qBAAsB48B,EAAgB5pC,MAAO,kBAAmB6jC,EAAe,EAC7F,MACEvX,EAAAA,GAAMnzB,MAAM,2BACZH,QAAQgU,IAAI,qDAAsD62B,EAAc,WAAYF,EAAetlC,OAE/G,EA+OU81B,MAAM,kCACNxjB,SAAUkzB,EAAe,EAAGvsC,UAE5BwC,EAAAA,EAAAA,KAAC4nC,GAAQ,OAGX5nC,EAAAA,EAAAA,KAACyoC,GAAY,CACXxoC,UAAU,UACVie,QA7SY,WAChB6qB,IACFS,EAAkB,QAElBoD,GAAgBlG,OAAO,CACrB6F,WAAYxD,EAAe7iC,MAC3BsmC,OAAQ,WAGd,EAqSUnS,MAAM,cACNxjB,SAAU+1B,GAAgBhS,UAAUp9B,UAEpCwC,EAAAA,EAAAA,KAAC0nC,GAAW,OAGd1nC,EAAAA,EAAAA,KAACyoC,GAAY,CACXxoC,UAAU,YACVie,QA3Sc,WAClB6qB,GACFK,GAAsB,EAE1B,EAwSU/O,MAAM,yBACNxjB,SAAUi2B,GAAkBlS,UAAUp9B,UAEtCwC,EAAAA,EAAAA,KAAC2nC,GAAa,OAGhB3nC,EAAAA,EAAAA,KAACyoC,GAAY,CACXxoC,UAAU,OACVie,QA1US,WACb6qB,IACFS,EAAkB,SAElB8C,GAAa5F,OAAO,CAClB6F,WAAYxD,EAAe7iC,MAC3BsmC,OAAQ,WAGd,EAkUUnS,MAAM,WACNxjB,SAAUy1B,GAAa1R,UAAUp9B,UAEjCwC,EAAAA,EAAAA,KAACgoB,GAAS,SAMfmhB,IACCnpC,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAASuwB,GAA0BjxC,UACxC2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpE,SAAS,YACTrI,QAASuwB,GAA0BjxC,UAEnCwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE6Y,QAAS,QAASzwB,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,KAAGC,MAAO,CACR+mB,aAAc,OACdL,MAAO,UACPiU,WAAY,OACZvyC,SAAA,CAAC,oFAEsB2X,EAAAA,EAAAA,MAAA,UAAA3X,SAAA,CAAQ,IAAEurC,aAAc,EAAdA,EAAgB7iC,SAAe,QAGlElG,EAAAA,EAAAA,KAACwqB,GAAQ,CACP/M,MAAO4rB,EACP1yB,SAAU,SAACuG,GAAC,OAAKosB,EAAoBpsB,EAAEW,OAAOJ,MAAM,EACpDD,YAAY,2CACZkN,WAAW,QACXtV,MAAO,CAAE+mB,aAAc,QACvBpd,UAAW,OAGb5J,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACT8Y,IAAK,OACL7Y,eAAgB,YAChB9X,SAAA,EACAwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,YACTrI,QAASuwB,GAA0BjxC,SACpC,YAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QApWY,WACtB6qB,GAAkBM,EAAiBwG,QACrC/C,GAAkBpG,OAAO,CACvB6F,WAAYxD,EAAe7iC,MAC3BhB,QAASmkC,EAAiBwG,QAGhC,EA8VgBh5B,UAAWwyB,EAAiBwG,QAAU/C,GAAkBlS,UAAUp9B,SAEjEsvC,GAAkBlS,UAAY,gBAAkB,4BAIrD56B,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CACR2mB,UAAW,OACX7N,SAAU,OACV4N,MAAO,UACPI,UAAW,UACX1+B,SAAC,4CASjB,E,0nBCnrEA,IAAMwyC,IAAmBh6B,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kGAKxC6xB,GAAShyB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,8JAQnB8xB,GAAgBjyB,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,sbAuB1B85B,GAAmBj6B,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,0KAS7B+5B,GAAgBl6B,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,oFAQ1Bg6B,GAAcn6B,EAAAA,GAAOyE,GAAE5C,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,6FAOvBi6B,GAAgBp6B,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,kIAO1Bk6B,GAAer6B,EAAAA,GAAOC,MAAKgC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,6VAuB3Bm6B,GAAat6B,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,sJAUvBo6B,GAAav6B,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,kcA0BvBq6B,GAAgBx6B,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,2FAO1Bs6B,GAAez6B,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,wKASzBiyB,IAAcpyB,EAAAA,EAAAA,IAAO6U,GAAP7U,CAAY4C,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,6MAW1Bu6B,IAAgB16B,EAAAA,EAAAA,IAAO8U,GAAP9U,CAAc8C,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,uCAI9Bw6B,GAAc36B,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,inBAoCxBy6B,GAAY56B,EAAAA,GAAOmB,IAAG+B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,yjDAqFtB06B,GAAa76B,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,qLA8T7B,SAjTgB,WACd,IAAA1Y,GAA8BC,EAAAA,EAAAA,UAAS,CACrCyH,OAAQ,GACRy4B,QAAS,GACToB,KAAM,GACNnH,MAAO,GACPiX,OAAQ,IACRnxC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GANKqzC,EAAOnzC,EAAA,GAAEozC,EAAUpzC,EAAA,GAQ1BI,GAAgDL,EAAAA,EAAAA,UAAS,CACvDszC,SAAU,GACV9T,UAAW,GACXyB,OAAQ,CAAC,IACT3gC,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAJKkzC,EAAgBjzC,EAAA,GAAEkzC,EAAmBlzC,EAAA,GA0C5C05B,IAnC8BrH,EAAAA,EAAAA,UAC5B,kBACA8gB,EAAAA,WAAWC,WACX,CACE/1B,UAAW,SAACwV,GACVqgB,EAAoBrgB,EACtB,EACAF,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IATIwxB,MAmC2CR,EAAAA,EAAAA,UACjD,CAAC,mBAAoBygB,GACrB,kBAAMK,EAAAA,WAAWE,YATE1sC,GAAA,GAAQmsC,GASqB,EAChD,CACEngB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,KANUiyC,EAAY5Z,EAAlB7G,KAAoB+J,EAASlD,EAATkD,UAAWyR,EAAO3U,EAAP2U,QAqCjCkF,EAAmB,SAACC,GACxBT,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GACV9F,GAAI,IACPiwC,OAAQ0C,GAAS,GAGnB5xC,OAAO6xC,SAAS,CAAE5qB,IAAK,EAAGsX,SAAU,UACtC,EAGMuT,EAAkBZ,EAAQlT,SAAWqT,EAAiBtS,OAAOmS,EAAQlT,SACvEqT,EAAiBtS,OAAOmS,EAAQlT,SAChC,GAEJ,OACEzoB,EAAAA,EAAAA,MAAC66B,GAAgB,CAAAxyC,SAAA,EACfwC,EAAAA,EAAAA,KAACgoC,GAAM,CAAAxqC,UACL2X,EAAAA,EAAAA,MAAC8yB,GAAa,CAAAzqC,SAAA,EACZwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,mBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wDACHwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8Y,SAAU,OAAQ6N,UAAW,MAAO7F,QAAS,IAAM14B,SAAC,qEAMpE2X,EAAAA,EAAAA,MAAC86B,GAAgB,CAAAzyC,SAAA,EACf2X,EAAAA,EAAAA,MAAC+6B,GAAa,CAAA1yC,SAAA,EACZwC,EAAAA,EAAAA,KAACmwC,GAAW,CAAA3yC,SAAC,iCACbwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,OAAQK,aAAc,OAAQwV,UAAW,UAAWn0C,SAAC,uEAG1FwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,OAAQK,aAAc,OAAQwV,UAAW,UAAWn0C,SAAC,0EAG1FwC,EAAAA,EAAAA,KAACowC,GAAa,CAAA5yC,SACXyzC,EAAiBD,SAAShzB,IAAI,SAAA7Y,GAAM,OACnCgQ,EAAAA,EAAAA,MAACk7B,GAAY,CAAA7yC,SAAA,EACXwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLgJ,QAASo6B,EAAQ3rC,OAAO24B,SAAS34B,GACjCwR,SAAU,SAACuG,GAAC,OAnGD,SAAC/X,EAAQuR,GAClCq6B,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GACV9F,GAAI,IACPsG,OAAQuR,EAAO,GAAA7R,QAAA40B,EAAAA,GAAAA,GACP56B,EAAKsG,QAAM,CAAEA,IACjBtG,EAAKsG,OAAOozB,OAAO,SAAAQ,GAAC,OAAIA,IAAM5zB,CAAM,GACxC2pC,OAAQ,GAAE,EAEd,CA2FiC8C,CAAmBzsC,EAAQ+X,EAAEW,OAAOnH,QAAQ,KAE/D1W,EAAAA,EAAAA,KAAA,QAAAxC,SAAO2H,MANUA,EAOJ,SAOrBgQ,EAAAA,EAAAA,MAAC+6B,GAAa,CAAA1yC,SAAA,EACZwC,EAAAA,EAAAA,KAACmwC,GAAW,CAAA3yC,SAAC,oBACbwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,OAAQK,aAAc,OAAQwV,UAAW,UAAWn0C,SAAC,wDAG1F2X,EAAAA,EAAAA,MAACm7B,GAAU,CAAA9yC,SAAA,EACT2X,EAAAA,EAAAA,MAACo7B,GAAU,CAAA/yC,SAAA,EACTwC,EAAAA,EAAAA,KAAA,SAAAxC,SAAO,YACP2X,EAAAA,EAAAA,MAAA,UACEsI,MAAOqzB,EAAQlT,QACfjnB,SAAU,SAACuG,GAAC,OAxFG0gB,EAwFsB1gB,EAAEW,OAAOJ,WAvF1DszB,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GACV9F,GAAI,IACP++B,QAAAA,EACAoB,KAAM,GACN8P,OAAQ,GAAC,GALe,IAAClR,CAwFqC,EAACpgC,SAAA,EAErDwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,eAChByzC,EAAiB/T,UAAUlf,IAAI,SAAA4f,GAAO,OACrC59B,EAAAA,EAAAA,KAAA,UAAsByd,MAAOmgB,EAAQpgC,SAClCogC,GADUA,EAEJ,UAKfzoB,EAAAA,EAAAA,MAACo7B,GAAU,CAAA/yC,SAAA,EACTwC,EAAAA,EAAAA,KAAA,SAAAxC,SAAO,WACP2X,EAAAA,EAAAA,MAAA,UACEsI,MAAOqzB,EAAQ9R,KACfroB,SAAU,SAACuG,GAAC,OA9FA8hB,EA8FsB9hB,EAAEW,OAAOJ,WA7FvDszB,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GACV9F,GAAI,IACPmgC,KAAAA,EACA8P,OAAQ,GAAC,GAJY,IAAC9P,CA8FqC,EACjDnoB,UAAWi6B,EAAQlT,QAAQpgC,SAAA,EAE3BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,eAChBk0C,EAAgB1zB,IAAI,SAAAghB,GAAI,OACvBh/B,EAAAA,EAAAA,KAAA,UAAmByd,MAAOuhB,EAAKxhC,SAC5BwhC,GADUA,EAEJ,gBAOnB7pB,EAAAA,EAAAA,MAACq7B,GAAa,CAAAhzC,SAAA,EACZwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAAS,WAAF,OAAQmuB,GAAS,EAAC7uC,SAAC,yBAGlCwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACurB,QAAQ,YAAY3zB,QAxGT,WACzB6yB,EAAW,CACT5rC,OAAQ,GACRy4B,QAAS,GACToB,KAAM,GACNnH,MAAO,GACPiX,OAAQ,GAEZ,EAgGgEtxC,SAAC,2BAM5Do9B,GACC56B,EAAAA,EAAAA,KAAC+rB,GAAc,KAEf/rB,EAAAA,EAAAA,KAAAs/B,EAAAA,SAAA,CAAA9hC,SACG8zC,SAAAA,EAAcQ,OAASR,EAAaQ,MAAMvtC,OAAS,GAClD4Q,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACywC,GAAY,CAAAjzC,SACV8zC,EAAaQ,MAAM9zB,IAAI,SAAA4T,GAAI,IAAAmgB,EAAA,OAC1B58B,EAAAA,EAAAA,MAACizB,GAAW,CAAA5qC,SAAA,EACVwC,EAAAA,EAAAA,KAAC0wC,GAAa,CACZ3lB,KAAM6G,EAAKI,IAAM,YAAHntB,OAAe+sB,EAAKI,KAAQ,GAC1CzI,MAAM,OACNC,UAAU,OAAMhsB,UAEdo0B,EAAKI,MAAiB,QAAd+f,EAAIngB,EAAK1rB,aAAK,IAAA6rC,OAAA,EAAVA,EAAY1e,OAAO,GAAGC,kBAGtCne,EAAAA,EAAAA,MAACw7B,GAAW,CAAAnzC,SAAA,EACIwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAEo0B,EAAKzsB,UACpDnF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKzC,SAAEo0B,EAAK6Z,MAC1B7Z,EAAK2d,gBACJp6B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAgBmV,MAAO,CACpCK,WAAY,kCAAF5Q,OAAoC+sB,EAAK2d,cAAcyC,WAAU,eAAAntC,OAAc+sB,EAAK2d,cAAcyC,WAAU,MACtHlW,MAAO,QACP7N,QAAS,UACTpY,aAAc,OACdqY,SAAU,OACV8N,WAAY,OACZE,UAAW,SACXH,UAAW,OACXv+B,SAAA,CAAC,kBACeo0B,EAAK2d,cAAcyC,WAAW,QAI1C78B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,CACtBo0B,EAAKoN,KAAK,KAAGpN,EAAK4Z,SAAS,SAI9Br2B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAkBmV,MAAO,CAAE8Y,SAAU,OAAQ6N,UAAW,MAAOD,MAAO,QAASt+B,SAAA,CAC3Fo0B,EAAKpc,SAAUL,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,MAAIo0B,EAAKpc,OAAO,SACrCoc,EAAKgU,UAAWzwB,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,MAAIo0B,EAAKgU,QAAQrhC,OAAS,GAAKqtB,EAAKgU,QAAQhnB,UAAU,EAAG,IAAM,MAAQgT,EAAKgU,QAAQ,UAI5GhU,EAAKoT,eACJ7vB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAcmV,MAAO,CAClC8Y,SAAU,OACV6N,UAAW,MACX9N,QAAS,MACTxY,WAAY,yBACZI,aAAc,MACdF,OAAQ,mCACRmmB,MAAO,WACPt+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE4mB,WAAY,OAAQG,aAAc,OAAQ3+B,SAAC,cACzDwC,EAAAA,EAAAA,KAAA,OAAAxC,SAAMo0B,EAAKoT,eACVpT,EAAKqT,YACJ9vB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ6N,UAAW,MAAO7F,QAAS,IAAM14B,SAAA,CAAC,YACtDo0B,EAAKqT,cAGnBjlC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ6N,UAAW,MAAO7F,QAAS,GAAKyb,UAAW,UAAWn0C,SAAC,6BAM3F2X,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CACHnvB,GAAE,YAAA0E,OAAc+sB,EAAK1rB,OACrBjG,UAAU,WAAUzC,SAAA,CACrB,IACGo0B,EAAK1rB,cAjEK0rB,EAAK1rB,MAoET,KAIjBorC,EAAaW,aACZ98B,EAAAA,EAAAA,MAAC07B,GAAU,CAAArzC,SAAA,EACTwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLurB,QAAQ,YACRh7B,SAA6C,IAAnCy6B,EAAaW,WAAWnD,OAClC5wB,QAAS,WAAF,OAAQqzB,EAAiBpvB,KAAKC,IAAI,EAAGkvB,EAAaW,WAAWnD,OAASwC,EAAaW,WAAWpa,OAAO,EAACr6B,SAC9G,aAID2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,CACvB8zC,EAAaW,WAAWnD,OAAS,EAAE,MAAI3sB,KAAKrE,IAAIwzB,EAAaW,WAAWnD,OAASwC,EAAaW,WAAWpa,MAAOyZ,EAAaW,WAAWC,OAAO,OAAKZ,EAAaW,WAAWC,UAG/KlyC,EAAAA,EAAAA,KAACsmB,GAAM,CACLurB,QAAQ,YACRh7B,UAAWy6B,EAAaW,WAAWE,QACnCj0B,QAAS,WAAF,OAAQqzB,EAAiBD,EAAaW,WAAWnD,OAASwC,EAAaW,WAAWpa,MAAM,EAACr6B,SACjG,oBAOP2X,EAAAA,EAAAA,MAACy7B,GAAS,CAAApzC,SAAA,EACRwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,oEAOjB,E,sBC1lBM40C,GAAkBp8B,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,iRAc5Bk8B,GAAer8B,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,8ZAyBzBm8B,GAAct8B,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,0fA4BxBo8B,GAAgBv8B,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,q4BAiBZ,SAAAY,GAAK,OAAwB,IAApBA,EAAMy7B,UAAkB,UAAY,mDAAmD,EACrG,SAAAz7B,GAAK,OAAwB,IAApBA,EAAMy7B,UAAkB,QAAU,SAAS,EAW/C,SAAAz7B,GAAK,OAAyB,IAArBA,EAAMy7B,UAAmB,UAAY,mDAAmD,EACtG,SAAAz7B,GAAK,OAAyB,IAArBA,EAAMy7B,UAAmB,QAAU,SAAS,GAkB9D3d,GAAc7e,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,oUAajB,SAAAY,GAAK,OAAIA,EAAM07B,WAAW,GAIjCC,GAAkB18B,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,6IAkJlC,SAzIsB,SAAH5Y,GAAkD,IAA5CgvC,EAAUhvC,EAAVgvC,WAAYoG,EAAMp1C,EAANo1C,OAAQC,EAAQr1C,EAARq1C,SAAUC,EAAOt1C,EAAPs1C,QACrDp1C,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCq1C,EAAQn1C,EAAA,GAAEo1C,EAAWp1C,EAAA,GACtBuzB,GAAcC,EAAAA,EAAAA,kBAEd6hB,GAAerO,EAAAA,EAAAA,aACnB,SAAClnB,GAAK,OAAKw1B,EAAAA,UAAUC,SAAS3G,EAAY9uB,EAAM,EAChD,CACE01B,SAAU,WACRJ,GAAY,EACd,EACA13B,UAAW,SAACwV,GACV2B,EAAAA,GAAMC,QAAQ5B,EAAK3rB,SAAW,qBAE9BgsB,EAAYkiB,kBAAkB,CAAC,UAAW7G,IAC1Crb,EAAYkiB,kBAAkB,CAAC,gBAC/BliB,EAAYkiB,kBAAkB,CAAC,mBACjC,EACAziB,QAAS,SAACtxB,GAAU,IAAAuxB,EAClB4B,EAAAA,GAAMnzB,OAAoB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsB1rB,UAAW,oBAC/C,EACAmuC,UAAW,WACTN,GAAY,EACd,IAIEO,GAAqB3O,EAAAA,EAAAA,aACzB,kBAAMsO,EAAAA,UAAUM,aAAahH,EAAW,EACxC,CACElxB,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,kBACdvB,EAAYkiB,kBAAkB,CAAC,UAAW7G,IAC1Crb,EAAYkiB,kBAAkB,CAAC,gBAC/BliB,EAAYkiB,kBAAkB,CAAC,mBACjC,EACAziB,QAAS,SAACtxB,GAAU,IAAA24B,EAClBxF,EAAAA,GAAMnzB,OAAoB,QAAd24B,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,GAAM,QAANA,EAAdA,EAAgBnH,YAAI,IAAAmH,OAAA,EAApBA,EAAsB9yB,UAAW,6BAC/C,IAIEsuC,EAAa,SAAC/1B,GACdm1B,IAAan1B,EAEf61B,EAAmB5M,SAGnBsM,EAAatM,OAAOjpB,EAExB,EAEA,IAAKk1B,EACH,OAAO,KAGT,IAAAc,EAMId,EALFe,aAAAA,OAAY,IAAAD,EAAG,EAACA,EAAAE,EAKdhB,EAJFiB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAIblB,EAHFmB,eAAAA,OAAc,IAAAD,EAAG,EAACA,EAAAE,EAGhBpB,EAFFqB,eAAAA,OAAc,IAAAD,EAAG,EAACA,EAAAE,EAEhBtB,EADFuB,oBAAAA,OAAmB,IAAAD,EAAG,EAACA,EAGzB,OACE9+B,EAAAA,EAAAA,MAACi9B,GAAe,CAAA50C,SAAA,EACd2X,EAAAA,EAAAA,MAACk9B,GAAY,CAAA70C,SAAA,EACX2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,EACpBwC,EAAAA,EAAAA,KAACuoB,GAAQ,IAAG,2BAGdpT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACuoB,GAAQ,IACRmrB,SAILv+B,EAAAA,EAAAA,MAACm9B,GAAW,CAAA90C,SAAA,EACV2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,EACnBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAEo2C,KACxB5zC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,qBAEzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,EACnBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAEs2C,KACxB9zC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,sBAEzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,EACnBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAEw2C,KACxBh0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,sBAEzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,EACnB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,CAAE02C,EAAoB,QAC5Cl0C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,uBAI1Bo2C,EAAc,IACb5zC,EAAAA,EAAAA,KAAC60B,GAAW,CAAC4d,YAAayB,EAAoB12C,UAC5CwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAIlB4yC,GACC19B,EAAAA,EAAAA,MAACo9B,GAAa,CAACC,UAAWI,EAASp1C,SAAA,EACjC2X,EAAAA,EAAAA,MAAC6e,GAAAA,EAAO7b,OAAM,CACZlY,UAAU,oBACVie,QAAS,WAAF,OAAQs1B,EAAW,EAAE,EAC5B38B,SAAUi8B,EACVqB,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAACgsB,GAAY,IACC,IAAb4mB,EAAiB,cAAgB,eAGpCz9B,EAAAA,EAAAA,MAAC6e,GAAAA,EAAO7b,OAAM,CACZlY,UAAU,oBACVie,QAAS,WAAF,OAAQs1B,GAAY,EAAE,EAC7B38B,SAAUi8B,EACVqB,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAACksB,GAAc,KACA,IAAd0mB,EAAkB,iBAAmB,qBAI1C5yC,EAAAA,EAAAA,KAAC0yC,GAAe,CAAAl1C,SACE,SAAf+uC,EACG,uCACA,oDAMd,E,uCCvQM8H,GAAoBr+B,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4IAQ9Bm+B,GAAiBt+B,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,uWAsB3Bo+B,IAAcv+B,EAAAA,EAAAA,IAAO+T,GAAP/T,CAAYS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,qKAc1Bq+B,GAAex+B,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,qDAKzBs+B,IAAcz+B,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB2B,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,q5BA4DhCu+B,GAAW1+B,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,8JAcrBw+B,GAAa3+B,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,4SAuBvBy+B,IAAiB5+B,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAciC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,+CAgUrC,SA3TsB,SAAH5Y,GAAkC,IAAAs3C,EAA5B5oC,EAAQ1O,EAAR0O,SAAUulB,EAAWj0B,EAAXi0B,YAEjC,IAAKvlB,EACH,OACEjM,EAAAA,EAAAA,KAACq0C,GAAiB,CAAA72C,UAChBwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,OAAQ6N,MAAO,WAAYt+B,SAAC,oDAM9E,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3Cq3C,EAAWn3C,EAAA,GAAEo3C,EAAcp3C,EAAA,GAClCI,GAA4CL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDi3C,EAAch3C,EAAA,GAAEi3C,EAAiBj3C,EAAA,GACxC0d,GAAgChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAArCw5B,EAAQv5B,EAAA,GAAEw5B,EAAWx5B,EAAA,GAC5BG,GAAwBpe,EAAAA,EAAAA,UAAS,GAAEqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA5Bs5B,EAAIr5B,EAAA,GAAEs5B,EAAOt5B,EAAA,GACdmV,GAAcC,EAAAA,EAAAA,kBAGpBib,GAAiD/b,EAAAA,EAAAA,UAC/C,CAAC,iBAAkBpkB,EAAUmpC,GAC7B,kBAAME,EAAAA,SAASC,iBAAiBtpC,EAAUmpC,EAAM,GAAG,EACnD,CACEI,kBAAkB,EAClB9kB,UAAWzkB,EACX0kB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAM,mCACd,IARUo2C,EAAYrJ,EAAlBvb,KAAoB+J,EAASwR,EAATxR,UAatB8a,GAbsCtJ,EAAL/sC,OAaTslC,EAAAA,EAAAA,aAAW,eAAApmC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KACvC,SAAAC,EAAOmyB,GAAI,OAAApyB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKN,GAJHI,QAAQgU,IAAI,sCAAuC2d,GACnD3xB,QAAQgU,IAAI,cAAe,CACzBjH,UAAQ0pC,EAAAA,GAAAA,GAAS9kB,EAAK5kB,UACtB6oC,aAAWa,EAAAA,GAAAA,GAAS9kB,EAAKikB,eAGE,iBAAlBjkB,EAAK5kB,SAAqB,CAAArN,EAAAE,KAAA,cAC7B,IAAIuG,MAAM,gCAADR,QAAA8wC,EAAAA,GAAAA,GAAwC9kB,EAAK5kB,UAAQ,MAAApH,OAAKgsB,EAAK5kB,WAAW,cAAArN,EAAAE,KAAA,EAG9Ew2C,EAAAA,SAASM,mBAAmB/kB,EAAK5kB,SAAU4kB,EAAKikB,aAAY,cAAAl2C,EAAAI,OAAA,SAAAJ,EAAAmG,MAAA,wBAAAnG,EAAAW,OAAA,EAAAb,EAAA,IAC1E,gBAAA4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,EAbsC,GAcvC,CACA4b,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,wBACdsiB,EAAe,IACf7jB,EAAYkiB,kBAAkB,CAAC,iBAAkBnnC,IACjDopC,EAAQ,EACV,EACA1kB,QAAS,SAACtxB,GAAU,IAAAuxB,EAClB4B,EAAAA,GAAMnzB,OAAoB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsB1rB,UAAW,oCAC/C,KAGI2wC,GAAwBlR,EAAAA,EAAAA,aAC5B,SAAC9T,GAAI,OAAKykB,EAAAA,SAASQ,mBAAmBjlB,EAAKklB,UAAWllB,EAAKikB,YAAY,EACvE,CACAz5B,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,wBACdwiB,EAAkB,MAClBE,EAAY,IACZjkB,EAAYkiB,kBAAkB,CAAC,iBAAkBnnC,GACnD,EACA0kB,QAAS,SAACtxB,GAAU,IAAA24B,EAClBxF,EAAAA,GAAMnzB,OAAoB,QAAd24B,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,GAAM,QAANA,EAAdA,EAAgBnH,YAAI,IAAAmH,OAAA,EAApBA,EAAsB9yB,UAAW,oCAC/C,IAGI8wC,GAAwBrR,EAAAA,EAAAA,aAC5B,SAAC9T,GAAI,OAAKykB,EAAAA,SAASW,mBAAmBplB,EAAKklB,UAAU,EACrD,CACA16B,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,sBACdvB,EAAYkiB,kBAAkB,CAAC,iBAAkBnnC,GACnD,EACA0kB,QAAS,SAACtxB,GAAU,IAAA62C,EAClB1jB,EAAAA,GAAMnzB,OAAoB,QAAd62C,EAAA72C,EAAM+E,gBAAQ,IAAA8xC,GAAM,QAANA,EAAdA,EAAgBrlB,YAAI,IAAAqlB,OAAA,EAApBA,EAAsBhxC,UAAW,kCAC/C,IA+CIixC,EAAsB,WACrBjB,EAASrF,OAIdgG,EAAsBnP,OAAO,CAAEqP,UAAWf,EAAgBF,YAAaI,EAASrF,SAH9Erd,EAAAA,GAAMnzB,MAAM,4BAIhB,EAYM+2C,EAAiB,SAACC,GAAY,IAAAC,EAClC,OAAO9kB,IAA2B,QAAZ8kB,EAAAD,EAAQzkB,YAAI,IAAA0kB,OAAA,EAAZA,EAAcpwC,SAAUsrB,CAChD,EAEM+kB,EAAmB,SAACF,GAAY,IAAAG,EACpC,OAAOhlB,IAA2B,QAAZglB,EAAAH,EAAQzkB,YAAI,IAAA4kB,OAAA,EAAZA,EAActwC,SAAUsrB,CAChD,EAEA,GAAIoJ,GAAsB,IAATwa,EACf,OACEp1C,EAAAA,EAAAA,KAACq0C,GAAiB,CAAA72C,UAChBwC,EAAAA,EAAAA,KAAC+rB,GAAc,MAKrB,IAAM0qB,GAAWhB,aAAY,EAAZA,EAAcgB,WAAY,GACrCC,GAAgBjB,SAAwB,QAAZZ,EAAZY,EAAcxD,kBAAU,IAAA4C,OAAA,EAAxBA,EAA0B3C,SAASuD,aAAY,EAAZA,EAAcvD,QAAS,EAC1EC,EAAUsE,EAASlyC,OAASmyC,EAElC,OACEvhC,EAAAA,EAAAA,MAACk/B,GAAiB,CAAA72C,SAAA,EAChB2X,EAAAA,EAAAA,MAACm/B,GAAc,CAAA92C,SAAA,EACbwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,iBACvBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAEk5C,OAIzBllB,IACCrc,EAAAA,EAAAA,MAACo/B,GAAW,CAACh3B,SA1FS,SAACL,GAW3B,GAVAA,EAAEC,iBAGFje,QAAQgU,IAAI,sBAAuB,CACjC4hC,YAAAA,EACA6B,QAAS7B,EAAYjF,OACrBtrC,OAAQuwC,EAAYvwC,OACpBqyC,cAAe9B,EAAYjF,OAAOtrC,SAG/BuwC,GAA6C,IAA9BA,EAAYjF,OAAOtrC,OAAvC,CAKA,IAAMsyC,EAAc,CAClB5qC,SAAAA,EACA6oC,YAAaA,EAAYjF,QAW3B,GARA3wC,QAAQgU,IAAI,sCAAuC2jC,GACnD33C,QAAQgU,IAAI,qBAAsB,CAChCjH,UAAQ0pC,EAAAA,GAAAA,GAASkB,EAAY5qC,UAC7B6oC,aAAWa,EAAAA,GAAAA,GAASkB,EAAY/B,eAElC51C,QAAQgU,IAAI,kBAAmB2jC,EAAY5qC,UAGP,iBAAzB4qC,EAAY5qC,SAGrB,OAFA/M,QAAQG,MAAM,2CAA4Cw3C,EAAY5qC,eACtEumB,EAAAA,GAAMnzB,MAAM,2CAIdq2C,EAAsBhP,OAAOmQ,EArB7B,MAFErkB,EAAAA,GAAMnzB,MAAM,4BAwBhB,EAsDiD7B,SAAA,EACzC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAChqB,UAAU,gBAAezC,SAAA,EAClCwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,0BACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACPhN,YAAY,8BACZC,MAAOq3B,EACPn+B,SAAU,SAACuG,GAAC,OAAK63B,EAAe73B,EAAEW,OAAOJ,MAAM,EAC/CiN,WAAW,OACX3L,UAAW,UAGf5J,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAChDs3C,EAAYvwC,OAAO,qBAEtB4Q,EAAAA,EAAAA,MAACmR,GAAM,CACL5Y,KAAK,SACLmJ,SAAU6+B,EAAsB9a,YAAcka,EAAYjF,OAC1DtmB,MAAM,QAAO/rB,SAAA,EAEbwC,EAAAA,EAAAA,KAAC8nB,GAAQ,IACR4tB,EAAsB9a,UAAY,cAAgB,sBAO3D56B,EAAAA,EAAAA,KAACw0C,GAAY,CAAAh3C,SACVi5C,EAASlyC,OAAS,GACjBvE,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACbi5C,EAASz4B,IAAI,SAACq4B,GAAO,IAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACpBjiC,EAAAA,EAAAA,MAACs/B,GAAW,CAEVxe,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BqW,KAAM,CAAEH,QAAS,EAAGlW,GAAI,IACxBsW,WAAY,CAAEC,SAAU,IAAM/4B,SAAA,EAE9BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBzC,UAC7BwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLxI,IAAiB,QAAZw0B,EAAAT,EAAQzkB,YAAI,IAAAklB,GAAZA,EAAcrgB,OAAS,YAAH5xB,OAAewxC,EAAQzkB,KAAK6E,QAAW,KAChE/P,KAAiB,QAAZqwB,EAAAV,EAAQzkB,YAAI,IAAAmlB,OAAA,EAAZA,EAAcjgC,QAAoB,QAAhBkgC,EAAIX,EAAQzkB,YAAI,IAAAolB,OAAA,EAAZA,EAAc9wC,OACzCud,KAAK,YAITtO,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,UACjB,QAAZy5C,EAAAZ,EAAQzkB,YAAI,IAAAqlB,OAAA,EAAZA,EAAcngC,QAAoB,QAAhBogC,EAAIb,EAAQzkB,YAAI,IAAAslB,OAAA,EAAZA,EAAchxC,UAEvClG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACb,QAAd25C,EAAA7B,EAAAA,SAAS+B,aAAK,IAAAF,GAAe,QAAfC,EAAdD,EAAgBG,qBAAa,IAAAF,OAAA,EAA7BA,EAAAG,KAAAJ,EAAgCd,EAAQ5d,cACxC,IAAI1B,KAAKsf,EAAQ5d,YAAY+e,uBAE/BnB,EAAQoB,YACPz3C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAAC,yBAIpCw3C,IAAmBqB,EAAQxd,IAC1B1jB,EAAAA,EAAAA,MAACu/B,GAAQ,CAAAl3C,SAAA,EACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACP/M,MAAOy3B,EACPv+B,SAAU,SAACuG,GAAC,OAAKi4B,EAAYj4B,EAAEW,OAAOJ,MAAM,EAC5CiN,WAAW,OACX3L,UAAW,OAEb5J,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAChD03C,EAAS3wC,OAAO,qBAEnBvE,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAASi4B,EACTt/B,SAAUg/B,EAAsBjb,YAAcsa,EAASrF,OACvDtmB,MAAM,QAAO/rB,SACd,eAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAAS,WAAF,OAAQ+2B,EAAkB,KAAK,EACtC1uB,SAAS,YACTgD,MAAM,QAAO/rB,SACd,kBAMLwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAAE64C,EAAQqB,QAGzCviC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,CAC7B44C,EAAeC,IAAYrB,IAAmBqB,EAAQxd,KACrD74B,EAAAA,EAAAA,KAAC2qB,GAAU,CACTzM,QAAS,WAAF,OApJH,SAACm4B,GACzBpB,EAAkBoB,EAAQxd,IAC1Bsc,EAAYkB,EAAQqB,KACtB,CAiJqCC,CAAkBtB,EAAQ,EACzC9sB,MAAM,QACNhD,SAAS,YAAW/oB,UAEpBwC,EAAAA,EAAAA,KAACmoB,GAAQ,MAIZouB,EAAiBF,KAChBr2C,EAAAA,EAAAA,KAAC2qB,GAAU,CACTzM,QAAS,WAAF,OAjJA63B,EAiJ4BM,EAAQxd,QAhJ3Dj5B,OAAO0yB,QAAQ,qDACjB0jB,EAAsBtP,OAAOqP,IAFL,IAACA,CAiJuC,EAC9CxsB,MAAM,QACNhD,SAAS,SAAQ/oB,UAEjBwC,EAAAA,EAAAA,KAACqoB,GAAS,cA7EbguB,EAAQxd,GAkFD,MAIlB1jB,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,kEAMR20C,IACCnyC,EAAAA,EAAAA,KAAC40C,GAAc,CACb12B,QAnKe,WACrBm3B,EAAQ,SAAAx2C,GAAI,OAAIA,EAAO,CAAC,EAC1B,EAkKQgY,SAAU+jB,EACVrU,SAAS,YAAW/oB,SAEnBo9B,EAAY,cAAgB,oBAKvC,E,4BC9cMyZ,GAAoBr+B,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4IAQ9Bm+B,GAAiBt+B,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,uWAsB3Bo+B,IAAcv+B,EAAAA,EAAAA,IAAO+T,GAAP/T,CAAYS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,qhBAqC1Bq+B,GAAex+B,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,qDAKzBs+B,IAAcz+B,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB2B,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,2nCAQX,SAAAY,GAAK,OAAIA,EAAM6gC,UAAY,UAAY,SAAS,EA2DzD,SAAA7gC,GAAK,OAAIA,EAAM6gC,UAAY,UAAY,SAAS,EACrD,SAAA7gC,GAAK,OAAIA,EAAM6gC,UAAY,UAAY,SAAS,GAIvDlD,GAAW1+B,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,8JAcrBw+B,GAAa3+B,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,4SAuBvBy+B,IAAiB5+B,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAciC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,+CAwXrC,SAnXwB,SAAH5Y,GAAwD,IAAAs3C,EAAlDza,EAAQ78B,EAAR68B,SAAU5I,EAAWj0B,EAAXi0B,YAAWqmB,EAAAt6C,EAAEu6C,aAAAA,OAAY,IAAAD,GAAQA,EAEpE,IAAKzd,EACH,OACEp6B,EAAAA,EAAAA,KAACq0C,GAAiB,CAAA72C,UAChBwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,OAAQ6N,MAAO,WAAYt+B,SAAC,sDAM9E,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3Cq3C,EAAWn3C,EAAA,GAAEo3C,EAAcp3C,EAAA,GAClCI,GAAgCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCg6C,EAAQ/5C,EAAA,GAAEg6C,EAAWh6C,EAAA,GAC5B0d,GAA4Che,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAnDs5B,EAAcr5B,EAAA,GAAEs5B,EAAiBt5B,EAAA,GACxCG,GAAgCpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAArCo5B,EAAQn5B,EAAA,GAAEo5B,EAAWp5B,EAAA,GAC5BG,GAAwBxe,EAAAA,EAAAA,UAAS,GAAEye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA5Bk5B,EAAIj5B,EAAA,GAAEk5B,EAAOl5B,EAAA,GACpBG,GAA4C5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAApD27B,EAAc17B,EAAA,GAAE27B,EAAiB37B,EAAA,GAClC2U,GAAcC,EAAAA,EAAAA,kBAGpBib,GAAiD/b,EAAAA,EAAAA,UAC/C,CAAC,mBAAoB+J,EAAUgb,EAAM6C,GACrC,kBAAM3C,EAAAA,SAAS6C,mBAAmB/d,EAAUgb,EAAM,GAAI6C,EAAe,EACrE,CACEzC,kBAAkB,EAClB9kB,UAAW0J,EACXzJ,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAM,mCACd,IARUo2C,EAAYrJ,EAAlBvb,KAAoB+J,EAASwR,EAATxR,UAatB8a,GAbsCtJ,EAAL/sC,OAaTslC,EAAAA,EAAAA,aAAW,eAAApmC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KACvC,SAAAC,EAAOmyB,GAAI,OAAApyB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMN,GALHI,QAAQgU,IAAI,sCAAuC2d,GACnD3xB,QAAQgU,IAAI,cAAe,CACzBknB,UAAQub,EAAAA,GAAAA,GAAS9kB,EAAKuJ,UACtB0a,aAAWa,EAAAA,GAAAA,GAAS9kB,EAAKikB,aACzBiD,UAAQpC,EAAAA,GAAAA,GAAS9kB,EAAKknB,YAGK,iBAAlBlnB,EAAKuJ,SAAqB,CAAAx7B,EAAAE,KAAA,cAC7B,IAAIuG,MAAM,gCAADR,QAAA8wC,EAAAA,GAAAA,GAAwC9kB,EAAKuJ,UAAQ,MAAAv1B,OAAKgsB,EAAKuJ,WAAW,cAAAx7B,EAAAE,KAAA,EAG9Ew2C,EAAAA,SAAS8C,qBAAqBvnB,EAAKuJ,SAAUvJ,EAAKikB,YAAajkB,EAAKknB,UAAS,cAAAn5C,EAAAI,OAAA,SAAAJ,EAAAmG,MAAA,wBAAAnG,EAAAW,OAAA,EAAAb,EAAA,IAC3F,gBAAA4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,EAdsC,GAevC,CACA4b,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,wBACdsiB,EAAe,IACf7jB,EAAYkiB,kBAAkB,CAAC,mBAAoBhZ,IACnDib,EAAQ,EACV,EACA1kB,QAAS,SAACtxB,GAAU,IAAAuxB,EAClB4B,EAAAA,GAAMnzB,OAAoB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsB1rB,UAAW,oCAC/C,KAGI2wC,GAAwBlR,EAAAA,EAAAA,aAC5B,SAAC9T,GAAI,OAAKykB,EAAAA,SAAS+C,qBAAqBxnB,EAAKklB,UAAWllB,EAAKikB,YAAY,EACzE,CACAz5B,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,wBACdwiB,EAAkB,MAClBE,EAAY,IACZjkB,EAAYkiB,kBAAkB,CAAC,mBAAoBhZ,GACrD,EACAzJ,QAAS,SAACtxB,GAAU,IAAA24B,EAClBxF,EAAAA,GAAMnzB,OAAoB,QAAd24B,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,GAAM,QAANA,EAAdA,EAAgBnH,YAAI,IAAAmH,OAAA,EAApBA,EAAsB9yB,UAAW,oCAC/C,IAGI8wC,GAAwBrR,EAAAA,EAAAA,aAC5B,SAAC9T,GAAI,OAAKykB,EAAAA,SAASgD,qBAAqBznB,EAAKklB,UAAU,EACvD,CACA16B,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,sBACdvB,EAAYkiB,kBAAkB,CAAC,mBAAoBhZ,GACrD,EACAzJ,QAAS,SAACtxB,GAAU,IAAA62C,EAClB1jB,EAAAA,GAAMnzB,OAAoB,QAAd62C,EAAA72C,EAAM+E,gBAAQ,IAAA8xC,GAAM,QAANA,EAAdA,EAAgBrlB,YAAI,IAAAqlB,OAAA,EAApBA,EAAsBhxC,UAAW,kCAC/C,IAmDIixC,EAAsB,WACrBjB,EAASrF,OAIdgG,EAAsBnP,OAAO,CAC3BqP,UAAWf,EACXF,YAAaI,EAASrF,SALtBrd,EAAAA,GAAMnzB,MAAM,4BAOhB,EAYM+2C,EAAiB,SAACC,GAAY,IAAAkC,EAClC,OAAO/mB,IAA6B,QAAd+mB,EAAAlC,EAAQmC,cAAM,IAAAD,OAAA,EAAdA,EAAgBryC,SAAUsrB,CAClD,EAEM+kB,EAAmB,SAACF,GAAY,IAAAoC,EACpC,OAAOjnB,KAA8B,QAAdinB,EAAApC,EAAQmC,cAAM,IAAAC,OAAA,EAAdA,EAAgBvyC,SAAUsrB,GAAe4I,IAAa5I,EAC/E,EAEA,GAAIoJ,GAAsB,IAATwa,EACf,OACEp1C,EAAAA,EAAAA,KAACq0C,GAAiB,CAAA72C,UAChBwC,EAAAA,EAAAA,KAAC+rB,GAAc,MAKrB,IAAM0qB,GAAWhB,aAAY,EAAZA,EAAcgB,WAAY,GACrCC,GAAgBjB,SAAwB,QAAZZ,EAAZY,EAAcxD,kBAAU,IAAA4C,OAAA,EAAxBA,EAA0B3C,SAASuD,aAAY,EAAZA,EAAcvD,QAAS,EAC1EC,EAAUsE,EAASlyC,OAASmyC,EAElC,OACEvhC,EAAAA,EAAAA,MAACk/B,GAAiB,CAAA72C,SAAA,EAChB2X,EAAAA,EAAAA,MAACm/B,GAAc,CAAA92C,SAAA,EACbwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,2BACvBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAEk5C,OAIzBllB,IAAgBsmB,IACf3iC,EAAAA,EAAAA,MAACo/B,GAAW,CAACh3B,SAjGS,SAACL,GAa3B,GAZAA,EAAEC,iBAGFje,QAAQgU,IAAI,8BAA+B,CACzC4hC,YAAAA,EACA6B,QAAS7B,EAAYjF,OACrBtrC,OAAQuwC,EAAYvwC,OACpBqyC,cAAe9B,EAAYjF,OAAOtrC,OAClC61B,SAAAA,EACA2d,SAAAA,IAGGjD,GAA6C,IAA9BA,EAAYjF,OAAOtrC,OAAvC,CAKA,IAAMsyC,EAAc,CAClBzc,SAAAA,EACA0a,YAAaA,EAAYjF,OACzBkI,SAAAA,GAYF,GATA74C,QAAQgU,IAAI,6CAA8C2jC,GAC1D33C,QAAQgU,IAAI,qBAAsB,CAChCknB,UAAQub,EAAAA,GAAAA,GAASkB,EAAYzc,UAC7B0a,aAAWa,EAAAA,GAAAA,GAASkB,EAAY/B,aAChCiD,UAAQpC,EAAAA,GAAAA,GAASkB,EAAYkB,YAE/B74C,QAAQgU,IAAI,kBAAmB2jC,EAAYzc,UAGP,iBAAzByc,EAAYzc,SAGrB,OAFAl7B,QAAQG,MAAM,2CAA4Cw3C,EAAYzc,eACtE5H,EAAAA,GAAMnzB,MAAM,kDAIdq2C,EAAsBhP,OAAOmQ,EAvB7B,MAFErkB,EAAAA,GAAMnzB,MAAM,4BA0BhB,EAyDiD7B,SAAA,EACzC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAChqB,UAAU,gBAAezC,SAAA,EAClCwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,0BACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACPhN,YAAY,wCACZC,MAAOq3B,EACPn+B,SAAU,SAACuG,GAAC,OAAK63B,EAAe73B,EAAEW,OAAOJ,MAAM,EAC/CiN,WAAW,OACX3L,UAAW,UAIf5J,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLmrB,GAAG,kBACHniB,QAASqhC,EACTphC,SAAU,SAACuG,GAAC,OAAK86B,EAAY96B,EAAEW,OAAOnH,QAAQ,KAEhD1W,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,kBAAkBx7B,UAAU,eAAczC,SACtDu6C,EAAW,wBAA0B,8BAI1C5iC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAChDs3C,EAAYvwC,OAAO,wBAIxBvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,UACvB2X,EAAAA,EAAAA,MAACmR,GAAM,CACL5Y,KAAK,SACLmJ,SAAU6+B,EAAsB9a,YAAcka,EAAYjF,OAC1DtmB,MAAM,QAAO/rB,SAAA,EAEbwC,EAAAA,EAAAA,KAAC8nB,GAAQ,IACR4tB,EAAsB9a,UAAY,cAAgB,oBAO1Dkd,IACC93C,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE+mB,aAAc,QAAS3+B,UACnC2X,EAAAA,EAAAA,MAAA,SAAOC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,MAAOuqB,OAAQ,WAAYl7C,SAAA,EACrFwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLgJ,QAASuhC,EACTthC,SAAU,SAACuG,GAAC,OAAKg7B,EAAkBh7B,EAAEW,OAAOnH,QAAQ,KAEtD1W,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAC,yCAQ3DwC,EAAAA,EAAAA,KAACw0C,GAAY,CAAAh3C,SACVi5C,EAASlyC,OAAS,GACjBvE,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACbi5C,EAASz4B,IAAI,SAACq4B,GAAO,IAAAsC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5B,EAAAC,EAAA,OACpBjiC,EAAAA,EAAAA,MAACs/B,GAAW,CAEVmD,UAAWvB,EAAQ2C,UACnB/iB,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BqW,KAAM,CAAEH,QAAS,EAAGlW,GAAI,IACxBsW,WAAY,CAAEC,SAAU,IAAM/4B,SAAA,EAE9BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBzC,UAC7BwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLxI,IAAmB,QAAdq2B,EAAAtC,EAAQmC,cAAM,IAAAG,GAAdA,EAAgBliB,OAAS,YAAH5xB,OAAewxC,EAAQmC,OAAO/hB,QAAW,KACpE/P,KAAmB,QAAdkyB,EAAAvC,EAAQmC,cAAM,IAAAI,OAAA,EAAdA,EAAgB9hC,QAAsB,QAAlB+hC,EAAIxC,EAAQmC,cAAM,IAAAK,OAAA,EAAdA,EAAgB3yC,OAC7Cud,KAAK,YAITtO,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,UACf,QAAds7C,EAAAzC,EAAQmC,cAAM,IAAAM,OAAA,EAAdA,EAAgBhiC,QAAsB,QAAlBiiC,EAAI1C,EAAQmC,cAAM,IAAAO,OAAA,EAAdA,EAAgB7yC,UAE3ClG,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACb,QAAd25C,EAAA7B,EAAAA,SAAS+B,aAAK,IAAAF,GAAe,QAAfC,EAAdD,EAAgBG,qBAAa,IAAAF,OAAA,EAA7BA,EAAAG,KAAAJ,EAAgCd,EAAQ5d,cACxC,IAAI1B,KAAKsf,EAAQ5d,YAAY+e,uBAE/BnB,EAAQoB,YACPz3C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAAC,uBAEnCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3B64C,EAAQ2C,WACP7jC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAAC+mB,GAAO,IAAG,gBAIb5R,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACosB,GAAQ,IAAG,oBAOnB4oB,IAAmBqB,EAAQxd,IAC1B1jB,EAAAA,EAAAA,MAACu/B,GAAQ,CAAAl3C,SAAA,EACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACP/M,MAAOy3B,EACPv+B,SAAU,SAACuG,GAAC,OAAKi4B,EAAYj4B,EAAEW,OAAOJ,MAAM,EAC5CiN,WAAW,OACX3L,UAAW,OAEb5J,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAChD03C,EAAS3wC,OAAO,qBAEnBvE,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAASi4B,EACTt/B,SAAUg/B,EAAsBjb,YAAcsa,EAASrF,OACvDtmB,MAAM,QAAO/rB,SACd,eAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAAS,WAAF,OAAQ+2B,EAAkB,KAAK,EACtC1uB,SAAS,YACTgD,MAAM,QAAO/rB,SACd,kBAMLwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAAE64C,EAAQqB,QAGzCviC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,CAC7B44C,EAAeC,IAAYrB,IAAmBqB,EAAQxd,KACrD74B,EAAAA,EAAAA,KAAC2qB,GAAU,CACTzM,QAAS,WAAF,OArMH,SAACm4B,GACzBpB,EAAkBoB,EAAQxd,IAC1Bsc,EAAYkB,EAAQqB,KACtB,CAkMqCC,CAAkBtB,EAAQ,EACzC9sB,MAAM,QACNhD,SAAS,YAAW/oB,UAEpBwC,EAAAA,EAAAA,KAACmoB,GAAQ,MAIZouB,EAAiBF,KAChBr2C,EAAAA,EAAAA,KAAC2qB,GAAU,CACTzM,QAAS,WAAF,OA/LA63B,EA+L4BM,EAAQxd,QA9L3Dj5B,OAAO0yB,QAAQ,qDACjB0jB,EAAsBtP,OAAOqP,IAFL,IAACA,CA+LuC,EAC9CxsB,MAAM,QACNhD,SAAS,SAAQ/oB,UAEjBwC,EAAAA,EAAAA,KAACqoB,GAAS,cA3FbguB,EAAQxd,GAgGD,MAIlB1jB,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,gEAMR20C,IACCnyC,EAAAA,EAAAA,KAAC40C,GAAc,CACb12B,QAjNe,WACrBm3B,EAAQ,SAAAx2C,GAAI,OAAIA,EAAO,CAAC,EAC1B,EAgNQgY,SAAU+jB,EACVrU,SAAS,YAAW/oB,SAEnBo9B,EAAY,cAAgB,oBAKvC,E,+BC3jBMqe,GAAqBjjC,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qEAM/B+iC,GAAeljC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,iEAMzBgjC,IAAiBnjC,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7b,OAAdnC,CAAqBS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,8gBAKtB,SAAAY,GAAK,OAAIA,EAAMqiC,UAAYriC,EAAMsiC,aAAe,SAAS,EAE/D,SAAAtiC,GAAK,OAAIA,EAAMqiC,UAAYriC,EAAMsiC,aAAe,OAAO,EAC5D,SAAAtiC,GAAK,OAAIA,EAAMqiC,UAAY,QAAUriC,EAAMuiC,UAAU,GAyB1DC,GAAiBvjC,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,oVAsB3BqjC,IAAiBxjC,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB2B,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,2MAanCsjC,GAAwBzjC,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,oLAUlCujC,GAAgB1jC,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,uGAO1BwjC,IAAiB3jC,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7b,OAAdnC,CAAqBiC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,kfAaxB,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,GAgBnCkF,GAAc5e,EAAAA,GAAOmC,OAAMC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,2MAgB3ByjC,GAAkB,CACtBnN,KAAM,CACJoN,MAAO,KACP5jC,MAAO,WACP6lB,MAAO,UACPge,UAAW,WAEbC,KAAM,CACJF,MAAO,KACP5jC,MAAO,SACP6lB,MAAO,UACPge,UAAW,WAEbE,MAAO,CACLH,MAAO,KACP5jC,MAAO,OACP6lB,MAAO,UACPge,UAAW,WAEbG,IAAK,CACHJ,MAAO,KACP5jC,MAAO,YACP6lB,MAAO,UACPge,UAAW,WAEbI,IAAK,CACHL,MAAO,KACP5jC,MAAO,SACP6lB,MAAO,UACPge,UAAW,WAEbK,MAAO,CACLN,MAAO,KACP5jC,MAAO,OACP6lB,MAAO,UACPge,UAAW,YA8Mf,SA1MkB,SAAHv8C,GAAgE,IAAA68C,EAAAC,EAAAC,EAA1DC,EAAUh9C,EAAVg9C,WAAYC,EAAQj9C,EAARi9C,SAAUhpB,EAAWj0B,EAAXi0B,YAAWipB,EAAAl9C,EAAEm9C,UAAAA,OAAS,IAAAD,GAAOA,EAEtE,IAAKF,IAAeC,EAClB,OACEx6C,EAAAA,EAAAA,KAACi5C,GAAkB,CAAAz7C,UACjBwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,OAAQ6N,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,+CAMhG,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1Ck9C,EAASh9C,EAAA,GAAEi9C,EAAYj9C,EAAA,GAC9BI,GAAgDL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GACxDmzB,GADiBlzB,EAAA,GAAqBA,EAAA,IACxBmzB,EAAAA,EAAAA,mBAGpBib,GAA2C/b,EAAAA,EAAAA,UACzC,CAAC,YAAakqB,EAAYC,GAC1B,kBAAMK,EAAAA,aAAaC,mBAAmBP,EAAYC,EAAS,EAC3D,CACE9pB,WAAY6pB,IAAcC,GAC1B7pB,QAAS,SAACtxB,GACRH,QAAQG,MAAM,4BAA6BA,EAC7C,IAPU07C,EAAa3O,EAAnBvb,KAAqB+J,EAASwR,EAATxR,UAYvBogB,GAAsBrW,EAAAA,EAAAA,aAC1B,SAAC9T,GAAI,OAAKgqB,EAAAA,aAAaI,YAAYV,EAAYC,EAAU3pB,EAAKqqB,aAAcrqB,EAAKpT,MAAM,EACvF,CACEpC,UAAW,WACT6V,EAAYkiB,kBAAkB,CAAC,YAAamH,EAAYC,IACxDhoB,EAAAA,GAAMC,QAAQ,oBAChB,EACA9B,QAAS,SAACtxB,GAAU,IAAAuxB,EAClB4B,EAAAA,GAAMnzB,OAAoB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsB1rB,UAAW,+BAC/C,IAIEi2C,GAAyBxW,EAAAA,EAAAA,aAC7B,kBAAMkW,EAAAA,aAAaO,eAAeb,EAAYC,EAAS,EACvD,CACEn/B,UAAW,WACT6V,EAAYkiB,kBAAkB,CAAC,YAAamH,EAAYC,IACxDhoB,EAAAA,GAAMC,QAAQ,kBAChB,EACA9B,QAAS,SAACtxB,GAAU,IAAA24B,EAClBxF,EAAAA,GAAMnzB,OAAoB,QAAd24B,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,GAAM,QAANA,EAAdA,EAAgBnH,YAAI,IAAAmH,OAAA,EAApBA,EAAsB9yB,UAAW,8BAC/C,IAKEm2C,EAAsB,SAACH,GAC3B,GAAK1pB,EAAL,CAKA,IAAM8pB,EAAeP,aAAa,EAAbA,EAAeQ,cAEhCD,GAAgBA,EAAa5tC,OAASwtC,EAExCC,EAAuBzU,SAGvBsU,EAAoBtU,OAAO,CACzBwU,aAAAA,EACAz9B,MAAO,IAIXm9B,GAAa,EAfb,MAFEpoB,EAAAA,GAAMnzB,MAAM,4CAkBhB,EAUMm8C,EAAa,WACjBZ,GAAa,EACf,EAEA,GAAIhgB,EACF,OAAO56B,EAAAA,EAAAA,KAACi5C,GAAkB,CAAAz7C,SAAC,wBAG7B,IAAMi+C,GAAYV,aAAa,EAAbA,EAAeU,YAAa,CAAC,EACzCH,EAAeP,aAAa,EAAbA,EAAeQ,cAC9BG,EAAiBD,EAAUvJ,OAAS,EAGpCyJ,EAAeC,OAAOC,QAAQJ,GACjCljB,OAAO,SAAAh6B,GAAA,IAAA+6B,GAAA17B,EAAAA,EAAAA,GAAAW,EAAA,GAAE2zB,EAAGoH,EAAA,GAAE7b,EAAK6b,EAAA,SAAc,UAARpH,GAA2B,UAARA,GAAmBzU,EAAQ,CAAC,GACxEq+B,KAAK,SAAAjiB,EAAAG,GAAA,IAAI+hB,GAAJn+C,EAAAA,EAAAA,GAAAi8B,EAAA,GAAK,GAAO,OAAPj8B,EAAAA,EAAAA,GAAAo8B,EAAA,GAAO,GAAU+hB,CAAC,GAC5BlV,MAAM,EAAG,GAEZ,OACE1xB,EAAAA,EAAAA,MAAC8jC,GAAkB,CAAAz7C,SAAA,EAEjB2X,EAAAA,EAAAA,MAAC+jC,GAAY,CAAA17C,SAAA,EAEX2X,EAAAA,EAAAA,MAACgkC,GAAc,CACbj7B,QAhCmB,WACpBsT,EAILopB,GAAa,GAHXpoB,EAAAA,GAAMnzB,MAAM,4CAIhB,EA2BQ+5C,YAAakC,EACbjC,aAAciC,EAAiD,QAArClB,EAAGR,GAAgB0B,EAAa5tC,aAAK,IAAA0sC,OAAA,EAAlCA,EAAoCte,MAAQ,UACzEwd,WAAYgC,EAAe,QAAU,UACrCnH,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SACpB89C,EAAiD,QAArCjB,EAAGT,GAAgB0B,EAAa5tC,aAAK,IAAA2sC,OAAA,EAAlCA,EAAoCR,MAAQ,QAE9D75C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SACpB89C,EAAiD,QAArChB,EAAGV,GAAgB0B,EAAa5tC,aAAK,IAAA4sC,OAAA,EAAlCA,EAAoCrkC,MAAQ,gBAE7DylC,EAAiB,IAChB17C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SAAEk+C,OAK5BC,EAAa39B,IAAI,SAAAg+B,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,GAAAx+C,EAAAA,EAAAA,GAAAo+C,EAAA,GAAEd,EAAYkB,EAAA,GAAEnR,EAAKmR,EAAA,UACrCjnC,EAAAA,EAAAA,MAACgkC,GAAc,CAEbj7B,QAAS,WAAF,OAAQm9B,EAAoBH,EAAa,EAChD9B,WAAWkC,aAAY,EAAZA,EAAc5tC,QAASwtC,EAClC7B,aAA2C,QAA/B4C,EAAErC,GAAgBsB,UAAa,IAAAe,OAAA,EAA7BA,EAA+BngB,MAC7Cwd,WAAyC,QAA/B4C,EAAEtC,GAAgBsB,UAAa,IAAAgB,OAAA,EAA7BA,EAA+BpC,UAC3C3F,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SAA+B,QAA/B2+C,EAAEvC,GAAgBsB,UAAa,IAAAiB,OAAA,EAA7BA,EAA+BtC,SACxD75C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SAAEytC,MATpBiQ,EAUU,MAKpBR,GAAagB,EAAiB,IAC7B17C,EAAAA,EAAAA,KAACu5C,GAAc,CAAA/7C,SACZo+C,OAAOC,QAAQJ,GAAWz9B,IAAI,SAAAq+B,GAA2B,IAAAC,EAAAC,GAAA3+C,EAAAA,EAAAA,GAAAy+C,EAAA,GAAzBnB,EAAYqB,EAAA,GAAEtR,EAAKsR,EAAA,GAClD,MAAqB,UAAjBrB,GAA6C,UAAjBA,GAAsC,IAAVjQ,EAAoB,MAG9E91B,EAAAA,EAAAA,MAAA,OAAwBlV,UAAU,YAAWzC,SAAA,EAC3CwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,QAAOzC,SAA+B,QAA/B8+C,EAAE1C,GAAgBsB,UAAa,IAAAoB,OAAA,EAA7BA,EAA+BzC,SACxD75C,EAAAA,EAAAA,KAAA,QAAAxC,SAAOytC,MAFCiQ,EAKd,MAKJl7C,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACbm9C,IACC36C,EAAAA,EAAAA,KAACw5C,GAAc,CACbvjB,QAAS,CAAEC,QAAS,GACpBE,QAAS,CAAEF,QAAS,GACpBG,KAAM,CAAEH,QAAS,GACjBhY,QAASs9B,EAAWh+C,UAEpB2X,EAAAA,EAAAA,MAACskC,GAAqB,CAACv7B,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EACzDwC,EAAAA,EAAAA,KAAC40B,GAAW,CAAC1W,QAASs9B,EAAWh+C,SAAC,OAElCwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,WAAYt+B,SAAC,sBAIvDwC,EAAAA,EAAAA,KAAC05C,GAAa,CAAAl8C,SACXo+C,OAAOC,QAAQjC,IAAiB57B,IAAI,SAAAy+B,GAAA,IAAAC,GAAA9+C,EAAAA,EAAAA,GAAA6+C,EAAA,GAAE/uC,EAAIgvC,EAAA,GAAEv4C,EAAMu4C,EAAA,UACjDvnC,EAAAA,EAAAA,MAACwkC,GAAc,CAEbz7B,QAAS,WAAF,OAAQm9B,EAAoB3tC,EAAK,EACxCgiB,OAAQvrB,EAAO23B,MACfqY,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAE2G,EAAO01C,SAC/B75C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAE2G,EAAO8R,UAP1BvI,EAQU,MAIrB1N,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,aAActuB,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAC,oDAStF,E,6qBCrVA,IAAMm/C,GAAa,WAAH,OACdxnC,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,uFACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFc,GAAY,WAAH,OACblT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kBACjB/nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oFACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EAIFg1B,GAAc,CAClB,EAAK,CAAE/C,MAAO,KAAM/iC,KAAM,OAAQ+lC,KAAM,IACxC,EAAK,CAAEhD,MAAO,KAAM/iC,KAAM,eAAgB+lC,KAAM,KAChD,EAAK,CAAEhD,MAAO,KAAM/iC,KAAM,aAAc+lC,KAAM,KAC9C,EAAK,CAAEhD,MAAO,KAAM/iC,KAAM,UAAW+lC,KAAM,KAC3C,EAAK,CAAEhD,MAAO,MAAO/iC,KAAM,qBAAsB+lC,KAAM,KACvD,EAAK,CAAEhD,MAAO,KAAM/iC,KAAM,cAAe+lC,KAAM,KAC/C,EAAK,CAAEhD,MAAO,KAAM/iC,KAAM,YAAa+lC,KAAM,KAC7C,GAAM,CAAEhD,MAAO,KAAM/iC,KAAM,uBAAwB+lC,KAAM,MAIrDC,IAAmB9mC,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAIxC4mC,GAAgB/mC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,+sBAyB1B6mC,GAAgBhnC,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,uRAgB1B8mC,GAAgBjnC,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,giBAmC1Bke,GAAWre,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,2XA4BrB+mC,GAAmBlnC,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,qNAc7BsyB,IAAezyB,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,gsBAoC7BgnC,GAAgBnnC,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,4MAY1BinC,GAAMpnC,EAAAA,GAAOmC,OAAMC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,2WAIT,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,OAAO,EAC3F,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAKpC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,OAAS,mBAAmB,EAGtD,SAAAjrB,GAAK,OAAIA,EAAMirB,QAC3B,oDACA,kFAAkF,EAE3E,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,GASnDqb,GAAarnC,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,0KAWvBmnC,GAAgBtnC,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,0OAY1BonC,GAAcvnC,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,+MAaxBqnC,GAAWxnC,EAAAA,GAAOwB,EAACoB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,wIAWnBsnC,IAAeznC,EAAAA,EAAAA,IAAO4V,GAAP5V,CAAY8C,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,+BAI3BunC,IAAY1nC,EAAAA,EAAAA,IAAO6U,GAAP7U,CAAYgD,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,sOAaxB2L,GAAQ9L,EAAAA,GAAO6L,IAAG3I,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,0JAMpBunC,IAKEC,GAAe3nC,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,qVAa3BunC,IAKEE,GAAa5nC,EAAAA,GAAOmB,IAAGmC,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,0XAevB0nC,GAAc7nC,EAAAA,GAAOK,MAAKmD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,4BAI1B2nC,IAAW9nC,EAAAA,EAAAA,IAAO4V,GAAP5V,CAAY0D,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,kCAIvB4nC,IAAa/nC,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB4D,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,8hBAEf,SAAAY,GAAK,OAAIA,EAAMinC,UAAY,UAAY,SAAS,GAgChEC,IAAWjoC,EAAAA,EAAAA,IAAO6U,GAAP7U,CAAY8D,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,iRAYvB+nC,GAAiBloC,EAAAA,GAAOmB,IAAG6C,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,4TAe3BgoC,GAAenoC,EAAAA,GAAOyE,GAAEP,KAAAA,IAAA/D,EAAAA,EAAAA,GAAA,2FAOxBioC,GAAgBpoC,EAAAA,GAAOmB,IAAGiD,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,0HAO1BkoC,IAAgBroC,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAcsE,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,+VAe9BmoC,GAAetoC,EAAAA,GAAOmB,IAAGqD,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,uUAezBooC,GAAavoC,EAAAA,GAAOyE,GAAEC,KAAAA,IAAAvE,EAAAA,EAAAA,GAAA,iLAWtBqoC,GAAYxoC,EAAAA,GAAOwB,EAACmD,KAAAA,IAAAxE,EAAAA,EAAAA,GAAA,6FAOpBsoC,IAAczoC,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc4E,KAAAA,IAAAzE,EAAAA,EAAAA,GAAA,2VAe5BuoC,GAAY1oC,EAAAA,GAAOmB,IAAG0D,KAAAA,IAAA1E,EAAAA,EAAAA,GAAA,6EAMtBwoC,GAAa3oC,EAAAA,GAAOmB,IAAG4D,KAAAA,IAAA5E,EAAAA,EAAAA,GAAA,0XAkBvByoC,GAAc5oC,EAAAA,GAAOmB,IAAG8D,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,gQAcxB0oC,GAAa7oC,EAAAA,GAAOmB,IAAG2nC,KAAAA,IAAA3oC,EAAAA,EAAAA,GAAA,kcAezB6mC,IAq8CJ,SA17CgB,WAAM,IAAA+B,EAAApc,EAAAC,EAAAoc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACZz5C,GAAU05C,EAAAA,EAAAA,KAAV15C,MACF8qB,GAAWC,EAAAA,EAAAA,MACX9yB,GAAWC,EAAAA,EAAAA,MACX8yB,GAAcC,EAAAA,EAAAA,kBAId0uB,EADe,IAAIr4C,gBAAgBrJ,EAAS2hD,QAClBC,IAAI,OAEpCtiD,GAAkCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CuiD,EAASriD,EAAA,GAAEsiD,EAAYtiD,EAAA,GAC9BI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDmiD,EAAcliD,EAAA,GAAEmiD,EAAiBniD,EAAA,GACxC0d,GAA0Che,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjD0kC,EAAazkC,EAAA,GAAE0kC,EAAgB1kC,EAAA,GACtCG,GAA0Cpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAlDwkC,EAAavkC,EAAA,GAAEwkC,EAAgBxkC,EAAA,GACtCG,GAAwCxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA/CskC,EAAYrkC,EAAA,GAAEskC,EAAetkC,EAAA,GACpCG,GAAsC5e,EAAAA,EAAAA,UAAS,IAAG6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA3CokC,EAAWnkC,EAAA,GAAEokC,EAAcpkC,EAAA,GAClCG,GAAoDhf,EAAAA,EAAAA,WAAS,GAAMif,IAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAA5DysB,GAAkBxsB,GAAA,GAAEysB,GAAqBzsB,GAAA,GAChDG,IAAgDpf,EAAAA,EAAAA,UAAS,IAAGqf,IAAAnf,EAAAA,EAAAA,GAAAkf,GAAA,GAArDusB,GAAgBtsB,GAAA,GAAEusB,GAAmBvsB,GAAA,IAG5C1e,EAAAA,EAAAA,WAAU,WACJwhD,GAAc,CAAC,UAAW,SAAU,QAAS,YAAY/hB,SAAS+hB,IACpEI,EAAaJ,EAEjB,EAAG,CAACA,IAEJ,IAAMruB,GAAczyB,EAAAA,SAASgzB,iBAGvB+lB,IAAgB5xC,GAAUsrB,IAAeA,GAAYtrB,QAAUA,EAC/D06C,GAAc9I,GAAetmB,cAAW,EAAXA,GAAatrB,MAAQA,GAGxD7H,EAAAA,EAAAA,WAAU,WACRa,QAAQgU,IAAI,2BAA4B,CACtChN,MAAAA,EACAsrB,YAAazyB,EAAAA,SAASgzB,iBAAmB,CAAE7rB,MAAOnH,EAAAA,SAASgzB,iBAAiB7rB,MAAO26C,WAAY9hD,EAAAA,SAASgzB,iBAAiB7rB,OAAU,KACnI4xC,aAAAA,GACA8I,YAAAA,GACAE,iBAAkBF,IAEtB,EAAG,CAAC16C,EAAOsrB,GAAasmB,GAAc8I,KAatC,IAAAxU,IAAoD/b,EAAAA,EAAAA,UAClD,CAAC,gBAAiBuwB,IAClB,kBAAMG,EAAAA,SAASC,iBAAiB,GAAI,EAAGJ,GAAY,EACnD,CACElwB,UAAWkwB,GACXjwB,QAAS,SAACtxB,GACRH,QAAQG,MAAM,iCAAkCA,EAClD,IAEH4hD,GAAA7U,GATOvb,KAAMqwB,QAAiB,IAAAD,GAAG,CAAEE,MAAO,IAAIF,GAY/CvpB,IAAkCrH,EAAAA,EAAAA,UAChC,CAAC,mBACD,kBAAM+wB,EAAAA,WAAWC,aAAa,EAC9B,CACE3wB,QAASonB,GACTnnB,QAAS,SAACtxB,GACRH,QAAQG,MAAM,6CAA8CA,EAC9D,IAPUiiD,GAAe5pB,GAArB7G,MAYRxyB,EAAAA,EAAAA,WAAU,WACJ6iD,KACFhiD,QAAQgU,IAAI,uBAAwBguC,IACpChiD,QAAQgU,IAAI,kBAAmBguC,GAAkBC,OAErD,EAAG,CAACD,MAGJ7iD,EAAAA,EAAAA,WAAU,WACJkjD,IACFriD,QAAQgU,IAAI,uBAAwBquC,GAExC,EAAG,CAACA,KAEJ,IAAMC,IAAiBlgC,EAAAA,EAAAA,UACjBmgC,IAAiBngC,EAAAA,EAAAA,UAGvBL,IAAkDvjB,EAAAA,EAAAA,WAAS,GAAMwjB,IAAAtjB,EAAAA,EAAAA,GAAAqjB,GAAA,GAA1DygC,GAAiBxgC,GAAA,GAAEygC,GAAoBzgC,GAAA,GAC9C+oB,IAAgDvsC,EAAAA,EAAAA,UAAS,MAAKwsC,IAAAtsC,EAAAA,EAAAA,GAAAqsC,GAAA,GAAvD2X,GAAgB1X,GAAA,GAAE2X,GAAmB3X,GAAA,GAU5C,IAAK1Y,GACH,OAAOxxB,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,SAASC,SAAO,IAItC,IAAKwgD,GAEH,OADA1hD,QAAQC,KAAK,oCAAqC,CAAE+G,MAAAA,EAAOsrB,YAAAA,GAAasmB,aAAAA,MAEtE93C,EAAAA,EAAAA,KAAC88C,GAAgB,CAAAt/C,UACfwC,EAAAA,EAAAA,KAACkpB,GAAW,CAAC9C,UAAU,QAAO5oB,UAC5B2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,aAAczwB,SAAA,EACxDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,iDACH2X,EAAAA,EAAAA,MAAA,KAAGC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,UAAWC,UAAW,QAASv+B,SAAA,CAAC,gBACrDskD,OAAO57C,GAAO,iBAAesrB,GAAc,SAAW,OAAO,kBAAgBswB,OAAOhK,QAEpG93C,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAAS,WAAF,OAAQ8S,EAAS,WAAW,EAACxzB,SAAC,gCAUvD,IAAAukD,IAA4C1xB,EAAAA,EAAAA,UAC1C,CAAC,UAAWuwB,IACZ,kBAAMtL,EAAAA,SAAS3uC,WAAWi6C,GAAY,EACtC,CACElwB,UAAWkwB,GACXjwB,QAAS,SAACtxB,GAAU,IAAAuxB,EAAAoH,EAAAke,EAClBh3C,QAAQG,MAAM,qBAAsB,CAClCuhD,YAAAA,GACAvhD,MAAOA,EAAM6F,QACbC,OAAsB,QAAhByrB,EAAEvxB,EAAM+E,gBAAQ,IAAAwsB,OAAA,EAAdA,EAAgBzrB,OACxB0rB,KAAoB,QAAhBmH,EAAE34B,EAAM+E,gBAAQ,IAAA4zB,OAAA,EAAdA,EAAgBnH,OAGO,OAAb,QAAdqlB,EAAA72C,EAAM+E,gBAAQ,IAAA8xC,OAAA,EAAdA,EAAgB/wC,SAClBqtB,EAAAA,GAAMnzB,MAAM,0BACZ2xB,EAAS,aAETwB,EAAAA,GAAMnzB,MAAM,4BAADwF,OAA6BxF,EAAM6F,SAElD,IAnBUqmC,GAAOwW,GAAblxB,KAAe+J,GAASmnB,GAATnnB,UAAWv7B,GAAK0iD,GAAL1iD,MAwBlC2iD,IAA8B3xB,EAAAA,EAAAA,UAC5B,CAAC,eAAgBuwB,IACjB,kBAAMtoB,EAAAA,QAAQY,eAAe0nB,GAAY,EACzC,CACElwB,SAAUonB,MAAkB8I,GAC5BnwB,OAAO,EACPE,QAAS,SAACtxB,GAAU,IAAA4iD,EAAAC,EAClBhjD,QAAQG,MAAM,0BAA2B,CACvCuhD,YAAAA,GACAvhD,MAAOA,EAAM6F,QACbC,OAAsB,QAAhB88C,EAAE5iD,EAAM+E,gBAAQ,IAAA69C,OAAA,EAAdA,EAAgB98C,OACxB0rB,KAAoB,QAAhBqxB,EAAE7iD,EAAM+E,gBAAQ,IAAA89C,OAAA,EAAdA,EAAgBrxB,MAE1B,IAbUsxB,GAAWH,GAAjBnxB,KAkBRuxB,IAAuE/xB,EAAAA,EAAAA,UACrE,CAAC,uBACDgyB,EAAAA,iBAAiBC,UACjB,CACE5xB,QAASonB,GACTnnB,QAAS,SAACtxB,GAAU,IAAAkjD,EAAAC,EAClBtjD,QAAQG,MAAM,iCAAkC,CAC9CA,MAAOA,EAAM6F,QACbC,OAAsB,QAAhBo9C,EAAEljD,EAAM+E,gBAAQ,IAAAm+C,OAAA,EAAdA,EAAgBp9C,OACxB0rB,KAAoB,QAAhB2xB,EAAEnjD,EAAM+E,gBAAQ,IAAAo+C,OAAA,EAAdA,EAAgB3xB,MAE1B,IAXU0wB,GAAkBa,GAAxBvxB,KAAqC4xB,GAAqBL,GAAhCxnB,UAgBlCI,IAOIC,EAAAA,GAAAA,IAAQ,CACVynB,OAAQnX,KAPR9lC,GAAQu1B,GAARv1B,SACAwX,GAAY+d,GAAZ/d,aACA2mB,GAAK5I,GAAL4I,MACAC,GAAQ7I,GAAR6I,SACAE,GAAW/I,GAAX+I,YACa7I,GAAMF,GAAnBG,UAAaD,OAMTynB,IAAwBhe,EAAAA,EAAAA,aAAY2Q,EAAAA,SAASxuC,cAAe,CAChEuU,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,qBACdvB,EAAYkiB,kBAAkB,CAAC,YAC3BwN,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,KAGxChhD,OAAOwyB,mBACTxyB,OAAOwyB,mBAEX,EACAzB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIujD,IAAuBje,EAAAA,EAAAA,aAAY2Q,EAAAA,SAASuN,aAAc,CAC9DxnC,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,oBACdvB,EAAYkiB,kBAAkB,CAAC,YAC3BwN,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,KAGxChhD,OAAOwyB,mBACTxyB,OAAOwyB,mBAEX,EACAzB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIyjD,IAAsBne,EAAAA,EAAAA,aAAY2Q,EAAAA,SAASyN,aAAc,CAC7D1nC,UAAW,SAACwV,GACV3xB,QAAQgU,IAAI,kBAAmB2d,GAC/B2B,EAAAA,GAAMC,QAAQ,mBACdvB,EAAYkiB,kBAAkB,CAAC,YAC3BwN,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,KAGxC9I,IACF5mB,EAAYkiB,kBAAkB,CAAC,UAAW5hB,cAAW,EAAXA,GAAatrB,OAE3D,EACAyqB,QAAS,SAACtxB,GACRH,QAAQG,MAAM,gBAAiBA,GAC/BmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGI2jD,IAAsBre,EAAAA,EAAAA,aAAY2Q,EAAAA,SAAS2N,YAAa,CAC5D5nC,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,iBACdvB,EAAYkiB,kBAAkB,CAAC,YAC3BwN,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,IAE9C,EACAjwB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIitC,IAAe3H,EAAAA,EAAAA,aAAY0G,EAAAA,SAASoB,KAAM,CAC9CpxB,UAAW,SAACwV,GACU,oBAAhBA,EAAK9d,QACPyf,EAAAA,GAAMC,QAAQ,gDACVmuB,IACF1vB,EAAYkiB,kBAAkB,CAAC,eAAgBwN,MAGjDpuB,EAAAA,GAAMC,QAAQ,kBAElB,EACA9B,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIytC,IAAoBnI,EAAAA,EAAAA,aAAY0G,EAAAA,SAAS0B,UAAW,CACxD1xB,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,wBACd2W,IAAsB,GACtBE,GAAoB,IAChBsX,IACF1vB,EAAYkiB,kBAAkB,CAAC,eAAgBwN,IAEnD,EACAjwB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAII6jD,IAAmBve,EAAAA,EAAAA,aAAYoc,EAAAA,SAASoC,SAAU,CACtD9nC,UAAW,SAACwV,GACV2B,EAAAA,GAAMC,QAAQ,8BACd8tB,GAAiB,GACjBE,EAAgB,MAChBE,EAAe,IAGXC,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,IAE9C,EACAjwB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAII+jD,IAAkBze,EAAAA,EAAAA,aAAYyc,EAAAA,WAAWiC,eAAgB,CAC7DhoC,UAAW,SAACwV,GACV2B,EAAAA,GAAMC,QAAQ,mCAGdvB,EAAYkiB,kBAAkB,CAAC,eACjC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIIikD,IAAgB3e,EAAAA,EAAAA,aAAY2Q,EAAAA,SAASiO,cAAe,CACxDloC,UAAW,WACLulC,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,IAE9C,EACAjwB,QAAS,SAACtxB,GACRH,QAAQC,KAAK,6BAA8BE,EAC7C,KAIFhB,EAAAA,EAAAA,WAAU,YACHy5C,IAAgB8I,IAAerV,IAClC+X,GAAc5c,OAAOka,GAEzB,EAAG,CAACA,GAAarV,GAASuM,KAG1B,IAoFM0L,GAAc,eAAAjmD,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAozB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAChB0hD,EAAc,CAAF5hD,EAAAE,KAAA,QACiB,OAAhC0zB,EAAAA,GAAMnzB,MAAM,oBAAoBT,EAAAI,OAAA,wBAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAK1BokD,GAAiBO,YAAY,CACjCC,QAAS9C,GACT+C,UAAWnD,EACXt7C,QAASw7C,IACT,OAAA9hD,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEFM,QAAQG,MAAM,+BAA8ByyB,GAAS,wBAAAlzB,EAAAW,OAAA,EAAAb,EAAA,iBAExD,kBAfmB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAkBdmkD,GAAmB,eAAArlD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOwX,GAAC,IAAA2mC,EAAAllD,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OAIqC,GAHvEoe,EAAEC,iBAAiBvX,EAAA/G,KAAA,IAGXglD,EAAkB3yB,EAAY4yB,aAAa,CAAC,qBAC7B,CAAFl+C,EAAA9G,KAAA,eAAA8G,EAAA9G,KAAA,EACXskD,GAAgBK,YAAY,CAChCM,QAASF,EAAgBE,QACzBjsB,cAAe+rB,EAAgB/rB,gBAC/B,OAAAlyB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAGJ1G,QAAQG,MAAM,kCAAiCV,GAAS,wBAAAiH,EAAArG,OAAA,EAAAmG,EAAA,iBAE3D,gBAdwBJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAyBzB,GAAIm7B,GACF,OACE56B,EAAAA,EAAAA,KAAC88C,GAAgB,CAAAt/C,UACfwC,EAAAA,EAAAA,KAAC+rB,GAAc,MAKrB,GAAI1sB,KAAUksC,GACZ,OACEvrC,EAAAA,EAAAA,KAAC88C,GAAgB,CAAAt/C,UACfwC,EAAAA,EAAAA,KAACkpB,GAAW,CAAC9C,UAAU,QAAO5oB,UAC5B2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,aAAczwB,SAAA,EACxDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJ2X,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAG,gBAAcojD,GAAY,oCAC7B5gD,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAAS,WAAF,OAAQ8S,EAAS,WAAW,EAACxzB,SAAC,gCAUvD,IAAM27B,IAAWgpB,cAAW,EAAXA,GAAahpB,YAAY,EACpC6qB,IAAe7B,cAAW,EAAXA,GAAa8B,gBAAgB,EAElD,OACE9uC,EAAAA,EAAAA,MAAC2nC,GAAgB,CAAAt/C,SAAA,EACf2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAS+C,SAAS,IAAG3rB,SAAA,EAC1C2X,EAAAA,EAAAA,MAAC4nC,GAAa,CAAAv/C,SAAA,EACZwC,EAAAA,EAAAA,KAACg9C,GAAa,CAAAx/C,UACZ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAMwgB,GAAQvZ,IAAM,YAAHntB,OAAe0mC,GAAQvZ,KAAQ,GAChDzI,MAAM,QACNC,UAAU,OACV0B,WAAY4sB,GAAat6C,UAEvB+tC,GAAQvZ,MAAoB,QAAjB+sB,EAAIxT,GAAQrlC,aAAK,IAAA64C,OAAA,EAAbA,EAAe1rB,OAAO,GAAGC,iBAE3CwkB,KACC3iC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACi9C,GAAa,CAAC/+B,QAAS,WAAF,IAAAgmC,EAAA,OAA8B,QAA9BA,EAAQ1C,GAAep9B,eAAO,IAAA8/B,OAAA,EAAtBA,EAAwBC,OAAO,EAAC3mD,UAC5DwC,EAAAA,EAAAA,KAAC28C,GAAU,OAEb38C,EAAAA,EAAAA,KAAC69C,GAAW,CACVp3B,IAAK+6B,GACL9zC,KAAK,OACL02C,OAAO,UACPztC,SA7KS,SAACsb,GAC1B,IAAMoyB,EAAOpyB,EAAMpU,OAAOymC,MAAM,GAChC,GAAID,EAAM,CAER,IAAKA,EAAK32C,KAAKwlB,WAAW,UAExB,YADAV,EAAAA,GAAMnzB,MAAM,yCAKdwiD,GAAoBwC,GACpB1C,IAAqB,GAGrB1vB,EAAMpU,OAAOJ,MAAQ,EACvB,CACF,KA+JgBzd,EAAAA,EAAAA,KAAC6+C,GAAU,CAAArhD,SAAC,2CAQpB2X,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACP2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAE+tC,GAAQrlC,UACdiP,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAI+tC,GAAQvM,KAAK,MAAIuM,GAAQpmC,OAAO,IAAEomC,GAAQC,SAAW,GAAK,KAAJ3mC,OAAS0mC,GAAQC,SAAQ,sBAKtFsM,KACC3iC,EAAAA,EAAAA,MAAC+oC,GAAc,CAAA1gD,SAAA,EACbwC,EAAAA,EAAAA,KAACm+C,GAAY,CAAA3gD,SAAC,mBACd2X,EAAAA,EAAAA,MAACipC,GAAa,CAAA5gD,SAAA,CAAE+tC,GAAQgZ,SAAW,EAAE,UACrCvkD,EAAAA,EAAAA,KAACq+C,GAAa,CAACngC,QAAS,WAAF,OAAQ8S,EAAS,iBAAiB,EAACxzB,SAAC,yBAO5Ds6C,KACA3iC,EAAAA,EAAAA,MAAC+nC,GAAgB,CAAA1/C,SAAA,EACf2X,EAAAA,EAAAA,MAACszB,GAAY,CACXxoC,UAAU,OACVie,QAAS,WAAF,OAAQqiC,GAAiB,EAAK,EAAC/iD,SAAA,EAEtCwC,EAAAA,EAAAA,KAACsoB,GAAQ,IAAG,aAIb6Q,IACChkB,EAAAA,EAAAA,MAACszB,GAAY,CACXxoC,UAAU,OACVie,QArGS,WAChB0iC,GAKL5vB,EAAS,SAADnsB,OAAU+7C,KAJhBpuB,EAAAA,GAAMnzB,MAAM,0CAKhB,EA8FsC7B,SAAA,EAExBwC,EAAAA,EAAAA,KAACioB,GAAW,IAAG,cAGd+7B,GAmBD,MAlBF7uC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACszB,GAAY,CACXxoC,UAAU,OACVie,QA7KG,WACbouB,GAAa1R,YAEZgmB,GAKLtU,GAAa5F,OAAOka,IAJlBpuB,EAAAA,GAAMnzB,MAAM,sCAKhB,EAqKgBwX,SAAUy1B,GAAa1R,UAAUp9B,SAAA,EAEjCwC,EAAAA,EAAAA,KAACgoB,GAAS,IACTskB,GAAa1R,UAAY,gBAAkB,WAG9CzlB,EAAAA,EAAAA,MAACszB,GAAY,CACXxoC,UAAU,YACVie,QAAS,WAAF,OAAQkrB,IAAsB,EAAK,EAAC5rC,SAAA,EAE3CwC,EAAAA,EAAAA,KAACuoB,GAAQ,IAAG,sBASpBuvB,KACA93C,EAAAA,EAAAA,KAACs9C,GAAa,CAAA9/C,UACAwC,EAAAA,EAAAA,KAACwkD,GAAa,CACxBjY,WAAYqU,GACZ6D,eAAgB,WACV7D,IACF1vB,EAAYkiB,kBAAkB,CAAC,UAAWwN,IAE9C,OAKNzrC,EAAAA,EAAAA,MAACgoC,GAAa,CAAA3/C,SAAA,EACZwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFpb,QAAuB,YAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,UAAU,EAACziD,SACxC,aAGDwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFpb,QAAuB,WAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,SAAS,EAACziD,SACvC,gBAGD2X,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,UAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,SAAA,CACtC,cAC+B0jD,GAAkBC,OAASD,GAAkBC,MAAM58C,OAAS,GAAK,IAAJM,OAAQq8C,GAAkBC,MAAM58C,OAAM,QAElIuzC,KACC93C,EAAAA,EAAAA,KAACo9C,GAAG,CACFpb,QAAuB,aAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,WAAW,EAACziD,SACzC,kBAML2X,EAAAA,EAAAA,MAACkoC,GAAU,CAAA7/C,SAAA,CACM,YAAdwiD,IACChgD,EAAAA,EAAAA,KAAA,OAAAxC,SACGs6C,IACC3iC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,GAvSf,SAAC4T,GAChB8xB,GAAsBjc,OAAO7V,EAC/B,GAqSuDrzB,SAAA,EACrC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,SACPwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,GACAc,GAAS,SAAO,IACpB+X,YAAY,kBAIhBxd,EAAAA,EAAAA,KAACsnC,GAAgB,CACfxH,aAAc8D,GAAM,WACpB5D,UAAW4D,GAAM,QACjB3D,gBAAiB,SAACxiB,GAChBomB,GAAS,UAAWpmB,GACpBsmB,GAAY,WACRH,GAAM,UACRC,GAAS,OAAQ,IACjBE,GAAY,QAEhB,EACA7D,aAAc,SAACziB,GACbomB,GAAS,OAAQpmB,GACjBsmB,GAAY,OACd,EACAzD,aAA4B,QAAhBqC,EAAEzH,GAAO0C,eAAO,IAAA+E,OAAA,EAAdA,EAAgBz9B,QAC9Bq7B,UAAsB,QAAbqC,EAAE1H,GAAO8D,YAAI,IAAA4D,OAAA,EAAXA,EAAa19B,QACxBy2B,UAAU,EACVwF,gBAAgB,EAChBV,OAAO,kBAGTtrB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,YACPwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,GACHc,GAAS,SAAO,IACpB+X,YAAY,uBACZkN,WAAW,eAIfvV,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,eACPwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,GACHc,GAAS,gBAAc,IAC3B+X,YAAY,oCACZkN,WAAW,eAIf1qB,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACLmJ,SAAU8rC,GAAsB/nB,UAAUp9B,SAEzCmlD,GAAsB/nB,UAAY,gBAAkB,4BAKvD6nB,OAA2BlB,UAAAA,GAAoBmD,mBAAiD,UAA7BnD,cAAkB,EAAlBA,GAAoBoD,SACvFxvC,EAAAA,EAAAA,MAACmpC,GAAY,CAAA9gD,SAAA,EACXwC,EAAAA,EAAAA,KAACu+C,GAAU,CAAA/gD,SAAC,gCAIZwC,EAAAA,EAAAA,KAACw+C,GAAS,CAAAhhD,SAAC,iJAKXwC,EAAAA,EAAAA,KAACy+C,GAAW,CAACvgC,QAAS,WAAF,OAAQ8S,EAAS,iBAAiB,EAACxzB,SAAC,2BAO1DilD,KAAyBlB,cAAkB,EAAlBA,GAAoBmD,mBAAiD,UAA7BnD,cAAkB,EAAlBA,GAAoBoD,QACrFxvC,EAAAA,EAAAA,MAACmpC,GAAY,CAAClpC,MAAO,CACnBK,WAAY,oDACZmvC,YAAa,WACbpnD,SAAA,EACA2X,EAAAA,EAAAA,MAACopC,GAAU,CAACnpC,MAAO,CAAE0mB,MAAO,SAAUt+B,SAAA,CAAC,oBAEM,QAA5B+jD,GAAmBoD,KAAiB,MAAQ,UAAU,iBAEvExvC,EAAAA,EAAAA,MAACqpC,GAAS,CAACppC,MAAO,CAAE0mB,MAAO,SAAUt+B,SAAA,CAAC,4BACV,IAAIu5B,KAAKwqB,GAAmBsD,YAAYrN,mBAAmB,SAAS,IAC7F+J,GAAmBuD,YAAc,+BAEpC9kD,EAAAA,EAAAA,KAACy+C,GAAW,CACVvgC,QAAS,WAAF,OAAQ8S,EAAS,iBAAiB,EACzC5b,MAAO,CACLK,WAAY,oDACZqmB,MAAO,SACPt+B,SACH,4BAOJilD,KACCttC,EAAAA,EAAAA,MAACmpC,GAAY,CAAClpC,MAAO,CACnBK,WAAY,oDACZmvC,YAAa,WACbpnD,SAAA,EACAwC,EAAAA,EAAAA,KAACu+C,GAAU,CAACnpC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAC,oCAIzCwC,EAAAA,EAAAA,KAACw+C,GAAS,CAACppC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAC,iDAO9C2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJ2X,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,YAAgB,IAAE+tC,GAAQ3N,YAC5CzoB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,WAAe,IAAE+tC,GAAQvM,SAC3C7pB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,YAAgB,IAAE+tC,GAAQpmC,UAC3ComC,GAAQC,SAAW,IAClBr2B,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,gBAAoB,IAAE+tC,GAAQC,SAAS,mBAK5DD,GAAQI,UAAYJ,GAAQ6D,cAC3Bj6B,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,oBACJ2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACT0vC,oBAAqB,UACrB52B,IAAK,OACLF,QAAS,OACTxY,WAAY,0BACZI,aAAc,OACdF,OAAQ,oCACRnY,SAAA,EACA2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,eACxE+tC,GAAQ6D,YAAY4V,UACnB7vC,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBAAuB,IAAE,IAAIu5B,KAAKwU,GAAQ6D,YAAY4V,SAASxN,mBAAmB,YAErGjM,GAAQ6D,YAAY7J,YACnBpwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,UAAc,IAAE+tC,GAAQ6D,YAAY7J,UAAU,SAEjEgG,GAAQ6D,YAAY1J,YACnBvwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,SAAa,IAAE+tC,GAAQ6D,YAAY1J,UAAU,SAEhE6F,GAAQ6D,YAAYvJ,aACnB1wB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,aAAiB,IAAE+tC,GAAQ6D,YAAYvJ,cAE1D0F,GAAQ6D,YAAYpJ,UACnB7wB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cAAkB,IAAE+tC,GAAQ6D,YAAYpJ,eAG9D7wB,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,eACxE+tC,GAAQ6D,YAAY6V,YACnB9vC,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBAAuB,IAAE,IAAIu5B,KAAKwU,GAAQ6D,YAAY6V,WAAWzN,mBAAmB,YAEvGjM,GAAQ6D,YAAY5J,cACnBrwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,UAAc,IAAE+tC,GAAQ6D,YAAY5J,YAAY,SAEnE+F,GAAQ6D,YAAYzJ,cACnBxwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,SAAa,IAAE+tC,GAAQ6D,YAAYzJ,YAAY,SAElE4F,GAAQ6D,YAAYtJ,eACnB3wB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,aAAiB,IAAE+tC,GAAQ6D,YAAYtJ,gBAE1DyF,GAAQ6D,YAAYnJ,YACnB9wB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cAAkB,IAAE+tC,GAAQ6D,YAAYnJ,uBAQlEsF,GAAQ/1B,QAAU+1B,GAAQ9F,QAAU8F,GAAQ3F,SAAW2F,GAAQxF,QAC/D5wB,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,8BACH+tC,GAAQ/1B,SAAUL,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,UAAc,IAAE+tC,GAAQ/1B,OAAO,SACnE+1B,GAAQ9F,SAAUtwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,SAAa,IAAE+tC,GAAQ9F,OAAO,SAClE8F,GAAQ3F,UAAWzwB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,yBAA6B,IAAE+tC,GAAQ3F,WAC5E2F,GAAQxF,OAAQ5wB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,0BAA8B,IAAE+tC,GAAQxF,YAK7EwF,GAAQvG,cAAgBuG,GAAQtG,WAAasG,GAAQptC,YACrDgX,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACH+tC,GAAQvG,eAAgB7vB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,YAAgB,IAAE+tC,GAAQvG,gBACpEuG,GAAQtG,YAAa9vB,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,aAAiB,IAAE+tC,GAAQtG,aAClEsG,GAAQptC,WAAYgX,EAAAA,EAAAA,MAACqoC,GAAQ,CAAAhgD,SAAA,EAACwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,sBAA0B,IAAE+tC,GAAQptC,eAI9EotC,GAAQ/E,OACPrxB,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,oBACJwC,EAAAA,EAAAA,KAACw9C,GAAQ,CAAAhgD,SAAE+tC,GAAQ/E,UAKtB0a,GAAkBC,OAASD,GAAkBC,MAAM58C,OAAS,IAC3D4Q,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJ2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACT0vC,oBAAqB,uCACrB52B,IAAK,OACL4N,UAAW,QACXv+B,SAAA,CACC0jD,GAAkBC,MAAMta,MAAM,EAAG,GAAG7oB,IAAI,SAACknC,EAAMpgC,GAAK,IAAAqgC,EAAAC,EAAA,OACnDjwC,EAAAA,EAAAA,MAAA,OAAiBC,MAAO,CACtBK,WAAY,oDACZE,OAAQ,oBACRE,aAAc,OACdoY,QAAS,OACTiO,UAAW,SACX5F,WAAY,iBACZ94B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQiO,aAAc,OAAQ3+B,UACxB,QAA3B2nD,EAAAvI,GAAYsI,EAAKvB,kBAAU,IAAAwB,OAAA,EAA3BA,EAA6BtL,QAAS,QAEzC75C,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACV8Y,SAAU,OACV4N,MAAO,UACPE,WAAY,MACZG,aAAc,OACd3+B,UAC4B,QAA3B4nD,EAAAxI,GAAYsI,EAAKvB,kBAAU,IAAAyB,OAAA,EAA3BA,EAA6BtuC,OAAQ,YAEvCouC,EAAKhgD,UACJiQ,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV8Y,SAAU,OACV4N,MAAO,UACP6V,UAAW,SACXxV,aAAc,OACd3+B,SAAA,CAAC,IACC0nD,EAAKhgD,QAAQ,QAGnBlF,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACV8Y,SAAU,OACV4N,MAAO,WACPt+B,SACC,IAAIu5B,KAAKmuB,EAAKzsB,YAAY+e,mBAAmB,aAjCxC1yB,EAmCJ,GAEPo8B,GAAkBC,OAASD,GAAkBC,MAAM58C,OAAS,IAC3DvE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACVK,WAAY,yBACZE,OAAQ,qBACRE,aAAc,OACdoY,QAAS,OACTiO,UAAW,SACX7mB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBojC,OAAQ,WACPx6B,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,UACtC2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE0mB,MAAO,UAAW5N,SAAU,OAAQ8N,WAAY,OAAQx+B,SAAA,CAAC,IACnE0jD,GAAkBC,MAAM58C,OAAS,EAAE,mBASjDvE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE2mB,UAAW,QAASv+B,UAChCwC,EAAAA,EAAAA,KAACqlD,GAAe,CACdjrB,SAAUl0B,EACVsrB,YAAaA,cAAW,EAAXA,GAAatrB,MAC1B4xC,aAAcA,QAKlB93C,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE2mB,UAAW,QAASv+B,UAChCwC,EAAAA,EAAAA,KAACslD,GAAS,CACR/K,WAAW,UACXC,SAAUt0C,EACVsrB,YAAaA,cAAW,EAAXA,GAAatrB,eAQvB,WAAd85C,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,CACGs6C,KACC3iC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACyoC,GAAU,CAAC1/B,QAAS,WAAF,IAAAqnC,EAAA,OAA8B,QAA9BA,EAAQ9D,GAAer9B,eAAO,IAAAmhC,OAAA,EAAtBA,EAAwBpB,OAAO,EAAC3mD,SAAA,EACzDwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQiO,aAAc,OAAQjG,QAAS,IAAM14B,SAAC,QACtEwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,YAAa1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,0BACxEwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,EAAG1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,qFAK/DwC,EAAAA,EAAAA,KAAC69C,GAAW,CACVp3B,IAAKg7B,GACL/zC,KAAK,OACL02C,OAAO,UACPoB,UAAQ,EACR7uC,SAvkBQ,SAACsb,GACzB,IAAMqyB,EAAQngB,MAAM7jC,KAAK2xB,EAAMpU,OAAOymC,OACtC,GAAIA,EAAM//C,OAAS,EAAG,CACpB,IAAMiH,EAAW,IAAIi6C,SACrBnB,EAAM1/B,QAAQ,SAAAy/B,GACZ74C,EAASk6C,OAAO,SAAUrB,EAC5B,GACAvB,GAAoBpc,OAAOl7B,GAG3BymB,EAAMpU,OAAOJ,MAAQ,EACvB,CACF,QAkkBYzd,EAAAA,EAAAA,KAACy9C,GAAY,CAAC5xB,SAAS,wCAAwCN,KAAK,OAAM/tB,UACvE+tC,cAAO,EAAPA,GAASoa,SAAUxhB,MAAMC,QAAQmH,GAAQoa,SAAWpa,GAAQoa,OAAO3nC,IAAI,SAAC4nC,EAAO9gC,GAAK,OACnF3P,EAAAA,EAAAA,MAACuoC,GAAS,CAAax/B,QAAS,WAAF,OA5jBrB,SAAC0nC,GACxBvF,EAAiBuF,GACjBzF,GAAkB,EACpB,CAyjBsD0F,CAAiBD,EAAM,EAACpoD,SAAA,EAC5DwC,EAAAA,EAAAA,KAAC8hB,GAAK,CAACQ,IAAG,YAAAzd,OAAc+gD,GAASl/B,IAAG,QAAA7hB,OAAUigB,EAAQ,KACrDgzB,KACC93C,EAAAA,EAAAA,KAAC29C,GAAY,CAAAngD,UACXwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpE,SAAS,SACTrI,QAAS,SAAChB,GAxkBR,IAAC4oC,EAykBD5oC,EAAE4F,kBAzkBDgjC,EA0kBiBF,EAzkBtChmD,OAAO0yB,QAAQ,sBACjB0wB,GAAoBtc,OAAOof,EAykBP,EAAEtoD,UAEFwC,EAAAA,EAAAA,KAACqoB,GAAS,UAXFvD,EAeJ,MAKfymB,cAAO,EAAPA,GAASoa,SAAUxhB,MAAMC,QAAQmH,GAAQoa,SAAWpa,GAAQoa,OAAOphD,OAAS,IAC3E4Q,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE2mB,UAAW,QAASv+B,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAE+mB,aAAc,OAAQL,MAAO,WAAYt+B,SAAC,8BAGtD+tC,GAAQoa,OAAO3nC,IAAI,SAAC4nC,EAAO9gC,GAAK,OAC/B3P,EAAAA,EAAAA,MAAA,OAAiBC,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EAC/C2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACTE,WAAY,SACZ4Y,IAAK,OACLgO,aAAc,OACdlO,QAAS,OACTxY,WAAY,UACZI,aAAc,QACdrY,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAc+gD,GACjBl/B,IAAG,QAAA7hB,OAAUigB,EAAQ,GACrB1P,MAAO,CACLM,MAAO,OACPF,OAAQ,OACRuwC,UAAW,QACXlwC,aAAc,MACdF,OAAQ,wBAGZR,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAEonC,OAAQ,YAAa1gB,MAAO,WAAYt+B,SAAA,CAAC,QAC9CsnB,EAAQ,MAEhB9kB,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,EAAG1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,yCAMjEwC,EAAAA,EAAAA,KAACgmD,GAAa,CACZ/5C,SAAU25C,EACVp0B,YAAaA,cAAW,EAAXA,GAAatrB,SAI5BlG,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE2mB,UAAW,QAASv+B,UAChCwC,EAAAA,EAAAA,KAACslD,GAAS,CACR/K,WAAW,QACXC,SAAUoL,EACVp0B,YAAaA,cAAW,EAAXA,GAAatrB,YAzCtB4e,EA4CJ,SAOD,UAAdk7B,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAE+mB,aAAc,OAAQL,MAAO,WAAYt+B,SAAC,eAIpC0jD,GAAkBC,OAA4C,IAAnCD,GAAkBC,MAAM58C,QACpE4Q,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8mB,UAAW,SAAUjO,QAAS,YAAa6N,MAAO,WAAYt+B,SAAA,EAC1EwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQiO,aAAc,OAAQjG,QAAS,IAAM14B,SAAC,QACtEwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,WAAYt+B,SACnDs6C,GAAe,+BAAiC,2CAEnD93C,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,EAAGtuB,SAAU,QAAS1wB,SACvCs6C,GACG,uDACA,sEAKR3iC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EAEE2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,oDACZE,OAAQ,oBACRE,aAAc,OACdoY,QAAS,OACTkO,aAAc,OACdD,UAAW,UACX1+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,WAAYt+B,SAAC,4BAGvD2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVC,QAAS,OACT0vC,oBAAqB,uCACrB52B,IAAK,QACL3wB,SAAA,EACA2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ8N,WAAY,OAAQF,MAAO,WAAYt+B,SACpE0jD,GAAkBC,MAAQD,GAAkBC,MAAM58C,OAAS,KAE9DvE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAC,uBAEtD2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ8N,WAAY,OAAQF,MAAO,WAAYt+B,SACpE0jD,GAAkBC,MAAQD,GAAkBC,MAAM5oB,OAAO,SAAA0tB,GAAC,OAAIA,EAAE/gD,OAAO,GAAEX,OAAS,KAErFvE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAC,sBAEtD2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ8N,WAAY,OAAQF,MAAO,WAAYt+B,SACpE0jD,GAAkBC,MAAQ,IAAI+E,IAAIhF,GAAkBC,MAAMnjC,IAAI,SAAAioC,GAAC,OAAIA,EAAExwB,SAAS,IAAGhS,KAAO,KAE3FzjB,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAC,2BAM1DwC,EAAAA,EAAAA,KAAC4rB,GAAI,CAACC,SAAS,wCAAwCN,KAAK,OAAM/tB,SAC/D0jD,GAAkBC,OAASD,GAAkBC,MAAMnjC,IAAI,SAACknC,EAAMpgC,GAAK,IAAAqhC,EAAAC,EAAA,OAClEjxC,EAAAA,EAAAA,MAAC8oC,GAAQ,CAAAzgD,SAAA,EACPwC,EAAAA,EAAAA,KAAC0+C,GAAS,CAAAlhD,UAA6B,QAA3B2oD,EAAAvJ,GAAYsI,EAAKvB,kBAAU,IAAAwC,OAAA,EAA3BA,EAA6BtM,QAAS,QAClD75C,EAAAA,EAAAA,KAAC2+C,GAAU,CAACzgC,QAAS,WAr/Bb,IAACmoC,KAq/BwCnB,EAAKzvB,YAp/BvD4wB,KAAgB70B,cAAW,EAAXA,GAAatrB,QAC9C8qB,EAAS,YAADnsB,OAAawhD,GAm/B6D,EAAC7oD,SAC9D0nD,EAAKzvB,aAERz1B,EAAAA,EAAAA,KAAC4+C,GAAW,CAAAphD,SAAE0nD,EAAKhgD,SAAW,mBAC9BiQ,EAAAA,EAAAA,MAAA,KAAGC,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAA,CAAC,SACrC,QAA3B4oD,EAAAxJ,GAAYsI,EAAKvB,kBAAU,IAAAyC,OAAA,EAA3BA,EAA6BtvC,OAAQ,0BAE7C3B,EAAAA,EAAAA,MAAA,KAAGC,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAA,CAAC,SAC/D,IAAIu5B,KAAKmuB,EAAKzsB,YAAY+e,mBAAmB,cAVzC1yB,EAYJ,WAQR,aAAdk7B,GAA4BlI,KAC3B93C,EAAAA,EAAAA,KAAA,OAAAxC,UACE2X,EAAAA,EAAAA,MAACooC,GAAW,CAAA//C,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBAEJ2X,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUqmC,GAAoBpmD,SAAA,EAClC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,iBAEPwC,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,+BACNS,SAAS4qC,UAAwB,QAATtC,EAAfsC,GAAiByC,eAAO,IAAA/E,OAAA,EAAxBA,EAA0BuH,oBAAoB,EACvD5vC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3BwC,iBAAkBrpC,EAAEW,OAAOnH,YAI/Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,2BACNS,SAA0D,KAAjD4qC,UAAwB,QAATrC,EAAfqC,GAAiByC,eAAO,IAAA9E,OAAA,EAAxBA,EAA0ByH,oBACnC/vC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3B2C,mBAAoBxpC,EAAEW,OAAOnH,YAGjCwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,wCACNS,SAAsD,KAA7C4qC,UAAwB,QAATpC,EAAfoC,GAAiByC,eAAO,IAAA7E,OAAA,EAAxBA,EAA0ByH,gBACnChwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3B4C,eAAgBzpC,EAAEW,OAAOnH,YAG7Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,8BACNS,SAAsD,KAA7C4qC,UAAwB,QAATnC,EAAfmC,GAAiByC,eAAO,IAAA5E,OAAA,EAAxBA,EAA0ByH,gBACnCjwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3B6C,eAAgB1pC,EAAEW,OAAOnH,YAG7Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,4BACNS,SAAmD,KAA1C4qC,UAAwB,QAATlC,EAAfkC,GAAiByC,eAAO,IAAA3E,OAAA,EAAxBA,EAA0ByH,aACnClwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3B8C,YAAa3pC,EAAEW,OAAOnH,YAG1Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,2BACNS,SAAqD,KAA5C4qC,UAAwB,QAATjC,EAAfiC,GAAiByC,eAAO,IAAA1E,OAAA,EAAxBA,EAA0ByH,eACnCnwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3B+C,cAAe5pC,EAAEW,OAAOnH,YAG5Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,wBACNS,SAAsD,KAA7C4qC,UAAwB,QAAThC,EAAfgC,GAAiByC,eAAO,IAAAzE,OAAA,EAAxBA,EAA0ByH,gBACnCpwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClByC,QAAOp/C,GAAAA,GAAA,GACF28C,cAAe,EAAfA,GAAiByC,SAAO,IAC3BgD,eAAgB7pC,EAAEW,OAAOnH,YAG7Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,QAIJrxC,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,iBAEPwC,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,cACNS,SAAyD,KAAhD4qC,UAA8B,QAAf/B,EAAf+B,GAAiBxpB,qBAAa,IAAAynB,OAAA,EAA9BA,EAAgCyH,aACzCrwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClBxpB,cAAanzB,GAAAA,GAAA,GACR28C,cAAe,EAAfA,GAAiBxpB,eAAa,IACjCkvB,YAAa9pC,EAAEW,OAAOnH,YAG1Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,YACNS,SAAsD,KAA7C4qC,UAA8B,QAAf9B,EAAf8B,GAAiBxpB,qBAAa,IAAA0nB,OAAA,EAA9BA,EAAgCyH,UACzCtwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClBxpB,cAAanzB,GAAAA,GAAA,GACR28C,cAAe,EAAfA,GAAiBxpB,eAAa,IACjCmvB,SAAU/pC,EAAEW,OAAOnH,YAGvBwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,QACNS,SAAmD,KAA1C4qC,UAA8B,QAAf7B,EAAf6B,GAAiBxpB,qBAAa,IAAA2nB,OAAA,EAA9BA,EAAgCyH,OACzCvwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClBxpB,cAAanzB,GAAAA,GAAA,GACR28C,cAAe,EAAfA,GAAiBxpB,eAAa,IACjCovB,MAAOhqC,EAAEW,OAAOnH,YAGpBwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,UACNS,SAAmD,KAA1C4qC,UAA8B,QAAf5B,EAAf4B,GAAiBxpB,qBAAa,IAAA4nB,OAAA,EAA9BA,EAAgCyB,OACzCxqC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClBxpB,cAAanzB,GAAAA,GAAA,GACR28C,cAAe,EAAfA,GAAiBxpB,eAAa,IACjCqpB,MAAOjkC,EAAEW,OAAOnH,YAGpBwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,KAGFxmD,EAAAA,EAAAA,KAACsmD,GAAQ,CACPrwC,MAAM,oBACNS,SAA4D,KAAnD4qC,UAA8B,QAAf3B,EAAf2B,GAAiBxpB,qBAAa,IAAA6nB,OAAA,EAA9BA,EAAgCwH,gBACzCxwC,SAAU,SAACuG,GACT,IAAMspC,EAAW7hD,GAAAA,GAAA,GACZ28C,IAAe,IAClBxpB,cAAanzB,GAAAA,GAAA,GACR28C,cAAe,EAAfA,GAAiBxpB,eAAa,IACjCqvB,eAAgBjqC,EAAEW,OAAOnH,YAG7Bwa,EAAYu1B,aAAa,CAAC,mBAAoBD,EAChD,QAIJxmD,EAAAA,EAAAA,KAACsmB,GAAM,CAAC5Y,KAAK,SAASmJ,SAAUusC,GAAgBxoB,UAAUp9B,SACvD4lD,GAAgBxoB,UAAY,gBAAkB,sCAW5DslB,GAAkBE,IACjBpgD,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQiiC,GAAkB,EAAM,EAAC3iD,UAC7C2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpE,SAAS,YACTrI,QAAS,WAAF,OAAQiiC,GAAkB,EAAM,EAAC3iD,UAExCwC,EAAAA,EAAAA,KAACwmB,GAAS,UAGdxmB,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAcu7C,GACjB15B,IAAI,WACJtR,MAAO,CACLM,MAAO,OACPG,aAAc,OACduxC,UAAW,OACXrB,UAAW,kBAQpBzF,IACCtgD,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQqiC,GAAiB,EAAM,EAAC/iD,UAC5C2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpE,SAAS,YACTrI,QAAS,WAAF,OAAQqiC,GAAiB,EAAM,EAAC/iD,UAEvCwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdxmB,EAAAA,EAAAA,KAAC89C,GAAQ,CAACjyB,SAAS,uCAAuCN,KAAK,OAAM/tB,SAClEo+C,OAAOC,QAAQe,IAAa5+B,IAAI,SAAAsb,GAAA,IAAAO,GAAAj8B,EAAAA,EAAAA,GAAA07B,EAAA,GAAET,EAAEgB,EAAA,GAAEqrB,EAAIrrB,EAAA,UACzC1kB,EAAAA,EAAAA,MAAC4oC,GAAU,CAETC,UAAWwC,IAAiB3nB,EAC5B3a,QAAS,WAAF,OAAQuiC,EAAgB5nB,EAAG,EAClCsb,WAAY,CAAEhe,MAAO,MACrBie,SAAU,CAAEje,MAAO,KAAO34B,SAAA,EAE1BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAE0nD,EAAKrL,SAC7B75C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAE0nD,EAAKpuC,QAC5B3B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAE0nD,EAAKrI,KAAK,WAR5BhkB,EASM,MAIjB1jB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,+BACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACP/M,MAAOijC,EACP/pC,SAAU,SAACuG,GAAC,OAAKyjC,EAAezjC,EAAEW,OAAOJ,MAAM,EAC/CD,YAAY,yCACZkN,WAAW,aAIf1qB,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAASslC,GACT3sC,SAAUqsC,GAAiBtoB,YAAc4lB,EACzCprC,MAAO,CAAEM,MAAO,QAASlY,SAExB0lD,GAAiBtoB,UAAY,gBAAkB,2BAOvDuO,KACCnpC,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQkrB,IAAsB,EAAM,EAAC5rC,UACjD2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpE,SAAS,YACTrI,QAAS,WAAF,OAAQkrB,IAAsB,EAAM,EAAC5rC,UAE5CwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,iBACPwC,EAAAA,EAAAA,KAACwqB,GAAQ,CACP/M,MAAO4rB,GACP1yB,SAAU,SAACuG,GAAC,OAAKosB,GAAoBpsB,EAAEW,OAAOJ,MAAM,EACpDD,YAAY,uCACZkN,WAAW,QACXiR,UAAQ,QAIZ37B,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAjgCY,WACjBmrB,GAAiBwG,OAKjB+Q,GAKL9T,GAAkBpG,OAAO,CACvB6F,WAAYqU,GACZ17C,QAASmkC,GAAmBA,GAAiBwG,OAAS,KANtDrd,EAAAA,GAAMnzB,MAAM,2CALZmzB,EAAAA,GAAMnzB,MAAM,mCAahB,EAm/BYwX,SAAUi2B,GAAkBlS,YAAcyO,GAAiBwG,OAC3Dz6B,MAAO,CAAEM,MAAO,QAASlY,SAExBsvC,GAAkBlS,UAAY,gBAAkB,6BAOxD8mB,KACC1hD,EAAAA,EAAAA,KAACqnD,GAAa,CACZ5nC,OAAQiiC,GACRxmC,QAAS,WAAF,OAAQymC,IAAqB,EAAM,EAC1CjiC,UAAWkiC,GACXjiC,OA3jCiB,SAACoG,GACxB,IAAMva,EAAW,IAAIi6C,SACrBj6C,EAASk6C,OAAO,SAAU3/B,GAC1B68B,GAAqBlc,OAAOl7B,EAC9B,EAwjCQqU,YAAa,EACbC,QAAS,QAKnB,E,yECr/DM8nB,GAAW,WAAH,OACZ5nC,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,2BACJ,EAGFkgC,GAAa,WAAH,OACdtnD,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,uHACJ,EAGFmgC,GAAW,WAAH,OACZpyC,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,KAAKC,EAAE,QACrB,EAIFigC,IAAgBxxC,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,oJAQrCsxC,GAAczxC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,mYAUjB,SAAAY,GAAK,OAAIA,EAAM2wC,cAAgB,IAAM,MAAM,EACxC,SAAA3wC,GAAK,OAAIA,EAAM2wC,cAAgB,WAAa,UAAU,EAC1D,SAAA3wC,GAAK,OAAIA,EAAM2wC,cAAgB,QAAU,GAAG,GAMlDC,GAAa3xC,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,ieA6BvByxC,GAAkB5xC,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,2HAM5B0xC,GAAc7xC,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,iuBAsCxB2xC,GAAiB9xC,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,6VAuB3B4xC,GAAW/xC,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,imEAwGrB6xC,GAAahyC,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,0QAQhB,SAAAY,GAAK,OAAIA,EAAM2wC,cAAgB,OAAS,GAAG,EACxC,SAAA3wC,GAAK,OAAIA,EAAM2wC,cAAgB,WAAa,UAAU,EACzD,SAAA3wC,GAAK,OAAIA,EAAM2wC,cAAgB,IAAM,OAAO,GAKnDO,GAAmBjyC,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,6wBA2C7B+xC,GAAoBlyC,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,2ZAwB9BgyC,GAAenyC,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,4EAEV,SAAAY,GAAK,OAAIA,EAAMqxC,OAAS,WAAa,YAAY,GAIhEC,GAAUryC,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,4qBAIV,SAAAY,GAAK,OAAIA,EAAMqxC,OACzB,oDACA,OAAO,EACF,SAAArxC,GAAK,OAAIA,EAAMqxC,OAAS,QAAU,SAAS,GAqChDE,GAAkBtyC,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,gMAU5BoyC,GAAsBvyC,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,6IAIzB,SAAAY,GAAK,OAAIA,EAAMyxC,UAAY,GAAM,CAAC,EAC3B,SAAAzxC,GAAK,OAAIA,EAAMyxC,UAAY,OAAS,MAAM,GAGxDC,GAAezyC,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,iTAgBzBuyC,GAAiB1yC,EAAAA,GAAOmB,IAAG+B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,sBAI3BwyC,GAAY3yC,EAAAA,GAAOyU,SAAQrR,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,2QAiB3BsyB,GAAezyB,EAAAA,GAAOmC,OAAMmB,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,waAKlB,SAAAY,GAAK,OAAIA,EAAM6xC,SACzB,oDACA,wBAAwB,EACnB,SAAA7xC,GAAK,OAAIA,EAAM6xC,SAAW,QAAU,SAAS,GAkBlD/K,GAAc7nC,EAAAA,GAAOK,MAAKmD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,4BAI1Bw+B,GAAa3+B,EAAAA,GAAOmB,IAAGuC,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,o0DA+FvB6E,GAAehF,EAAAA,GAAOmB,IAAGyC,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,ogBA8BzB0yC,GAAiB7yC,EAAAA,GAAOmB,IAAG2C,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,ulEAsH3B2yC,GAAoB9yC,EAAAA,GAAOmB,IAAG6C,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,8SAUpB,SAAAY,GACZ,OAAQA,EAAMgyC,SACZ,IAAK,QACH,MAAO,oDACT,IAAK,QACH,MAAO,oDACT,IAAK,WACH,MAAO,oDACT,QACE,MAAO,oDAEb,GAimBF,SArlBa,WAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACCC,GAAW5J,EAAAA,EAAAA,KAArBxlB,SACFpJ,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAwCC,EAAAA,EAAAA,UAAS8rD,GAAU,MAAK7rD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzDgsD,EAAY9rD,EAAA,GAAE+rD,EAAe/rD,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3C4rD,EAAW3rD,EAAA,GAAE4rD,EAAc5rD,EAAA,GAClC0d,GAAgChe,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAxCmuC,EAAQluC,EAAA,GACfG,GAD4BH,EAAA,IACQje,EAAAA,EAAAA,UAAS,KAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAzCguC,EAAU/tC,EAAA,GAAEguC,EAAahuC,EAAA,GAChCG,GAAsCxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA7CimC,EAAWhmC,EAAA,GAAE6tC,EAAc7tC,EAAA,GAC5B8tC,GAAiB3oC,EAAAA,EAAAA,QAAO,MACxB4oC,GAAe5oC,EAAAA,EAAAA,QAAO,MACtB4P,GAAcC,EAAAA,EAAAA,kBACdg5B,GAAsB7oC,EAAAA,EAAAA,QAAO,MAE7BkQ,EAAczyB,EAAAA,SAASgzB,iBAG7Bqa,GAAyE/b,EAAAA,EAAAA,UACvE,gBACA,kBAAMiI,EAAAA,QAAQ8xB,iBAAiB,GAAI,EAAE,EACrC,CACE55B,gBAAiB,IACjB65B,sBAAsB,EACtBC,UAAW,IACX35B,QAAS,SAACtxB,GACRH,QAAQG,MAAM,qCAAsCA,GACpDmzB,EAAAA,GAAMnzB,MAAM,oCACd,IAEH4hD,EAAA7U,EAZOvb,KAAM05B,OAAK,IAAAtJ,EAAG,GAAEA,EAASuJ,EAAUpe,EAAjB/sC,MAA8BorD,EAAYre,EAAvBxR,UAevC8vB,EAAeH,SAAoB,QAAfvB,EAALuB,EAAOI,qBAAa,IAAA3B,OAAA,EAApBA,EAAsBrwB,KAAK,SAAAiyB,GAAI,OAAIA,EAAKC,YAAcrB,CAAM,GAC3EsB,GAActB,GAAWkB,GAAiBD,EAc5C,KAd2D,CAC7DI,UAAWrB,EACXuB,aAAc,KACdC,kBAAmB,KACnBC,gBAAiB,KACjBC,aAAc,EACdC,YAAY,EACZC,eAAgB,CACdllD,MAAOsjD,EACPx3B,IAAK,eACL7sB,OAAQ,aACRkmD,OAAQ,KACR3f,QAAS,SAKP4f,GAAmB9B,GAAWiB,GAAkBF,SAAAA,EAAOI,eAAgD,IAA/BJ,EAAMI,cAAcpmD,OAc9F,KAd8G,CAChHsmD,UAAWrB,EACXuB,aAAc,KACdC,kBAAmB,KACnBC,gBAAiB,KACjBC,aAAc,EACdC,YAAY,EACZC,eAAgB,CACdllD,MAAOsjD,EACPx3B,IAAK,eACL7sB,OAAQ,aACRkmD,OAAQ,KACR3f,QAAS,SAKP6f,EAAYT,GAAeQ,EAAgB,CAC3CR,GAAeQ,GAAgBzmD,QAAA40B,EAAAA,GAAAA,IAAO8wB,aAAK,EAALA,EAAOI,gBAAiB,MAC/DJ,aAAK,EAALA,EAAOI,gBAAiB,IAG7BtsD,EAAAA,EAAAA,WAAU,WACRa,QAAQgU,IAAI,cAAe,CACzBs2C,OAAAA,EACAe,MAAOA,aAAK,EAALA,EAAOI,cACdD,aAAAA,EACAI,YAAAA,EACAQ,iBAAAA,EACAC,SAAAA,EACA9B,aAAAA,EACAU,oBAAqBA,EAAoB/lC,QACzCqmC,aAAAA,EACAe,SAAAA,GACAhyB,WAAW,IAAIzC,MAAOuD,eAE1B,EAAG,CAACkvB,EAAQe,aAAK,EAALA,EAAOI,cAAelB,EAAcgB,EAAce,KAI9D,IAAA9zB,GAAkFrH,EAAAA,EAAAA,UAChF,CAAC,WAAYo5B,GACb,kBAAMnxB,EAAAA,QAAQmzB,YAAYhC,EAAc,IAAK,EAAE,EAC/C,CACE/4B,UAAW+4B,IAAiBgB,EAC5Bj6B,gBAAiB,IACjB65B,sBAAsB,EACtBC,UAAW,IACX35B,QAAS,SAACtxB,GACRH,QAAQG,MAAM,kCAAmCA,GACjDmzB,EAAAA,GAAMnzB,MAAM,iCACd,EACAgc,UAAW,SAACwV,GAENA,SAAAA,EAAM66B,cACR1B,EAAen5B,EAAK66B,aAExB,IAEHC,EAAAj0B,EAnBO7G,KAAMo2B,OAAQ,IAAA0E,EAAG,GAAEA,EAASC,EAAal0B,EAApBr4B,MAAiCwsD,GAAen0B,EAA1BkD,UAyCrC4wB,KAnBcn7B,EAAAA,EAAAA,UAC1B,CAAC,eAAgBo5B,GACjB,kBAAMnxB,EAAAA,QAAQY,eAAeuwB,EAAa,EAC1C,CACE/4B,UAAW+4B,IAAiBgB,EAC5BJ,sBAAsB,EACtBC,UAAW,IACX35B,QAAS,SAACtxB,GACRH,QAAQG,MAAM,sCAAuCA,EACvD,EACAgc,UAAW,SAACwV,GACNA,GACFm5B,EAAen5B,EAEnB,IAdIA,MAmBmBR,EAAAA,EAAAA,UACzB,CAAC,YAAam5B,GACd,kBAAMzqD,EAAAA,SAAS+sD,YAAYtC,EAAO,EAClC,CACE94B,UAAW84B,KAAYsB,IAAgBL,EACvCJ,sBAAsB,EACtBC,UAAW,IACX35B,QAAS,SAACtxB,GACRH,QAAQG,MAAM,kDAAmDA,EACnE,IATIwxB,OAcRxyB,EAAAA,EAAAA,WAAU,WACwD,IAAA0tD,EAAAC,EAAAC,EAA5DnB,GAAeU,IAAYA,GAAStlD,QAAUukD,KAElB,QAA1BsB,EAAAjB,EAAYM,sBAAc,IAAAW,OAAA,EAA1BA,EAA4B7lD,SAAUslD,GAAStlD,QACrB,QAA1B8lD,EAAAlB,EAAYM,sBAAc,IAAAY,OAAA,EAA1BA,EAA4Bh6B,OAAQw5B,GAASx5B,MACnB,QAA1Bi6B,EAAAnB,EAAYM,sBAAc,IAAAa,OAAA,EAA1BA,EAA4B9mD,UAAWqmD,GAASrmD,SAClD2lD,EAAYM,eAAiB,CAC3BllD,MAAOslD,GAAStlD,MAChB8rB,IAAKw5B,GAASx5B,KAAO,eACrB7sB,OAAQqmD,GAASrmD,QAAU,aAC3BkmD,OAAQG,GAASH,OACjB3f,QAAS8f,GAAS9f,SAAW,SAIrC,EAAG,CAACof,EAAaU,GAAUf,IAG3B,IAAMyB,IAAsBvnB,EAAAA,EAAAA,aAAYrM,EAAAA,QAAQ6zB,YAAa,CAC3D9wC,UAAW,SAACwV,GACV+4B,EAAe,IACf14B,EAAYkiB,kBAAkB,CAAC,WAAYqW,IAC3Cv4B,EAAYkiB,kBAAkB,iBAG1BviB,SAAAA,EAAMu7B,eACR55B,EAAAA,GAAM65B,QAAQx7B,EAAKu7B,cAEvB,EACAz7B,QAAS,SAACtxB,GAAU,IAAAuxB,EAAAoH,EAAAke,EAClBh3C,QAAQG,MAAM,6BAA8BA,GAER,cAAlB,QAAduxB,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsBvxB,OACxBmzB,EAAAA,GAAMnzB,MAAM,kDACwB,OAAb,QAAd24B,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,OAAA,EAAdA,EAAgB7yB,QACzBqtB,EAAAA,GAAMnzB,MAAM,6CACwB,OAAb,QAAd62C,EAAA72C,EAAM+E,gBAAQ,IAAA8xC,OAAA,EAAdA,EAAgB/wC,QACzBqtB,EAAAA,GAAMnzB,MAAM,oDAEZmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,IAAU,4BAE/C,IAGIitD,IAAmB3nB,EAAAA,EAAAA,aAAYrM,EAAAA,QAAQ6zB,YAAa,CACxD9wC,UAAW,WACT6V,EAAYkiB,kBAAkB,CAAC,WAAYqW,IAC3Cv4B,EAAYkiB,kBAAkB,iBAC9B5gB,EAAAA,GAAMC,QAAQ,yBAChB,EACA9B,QAAS,SAACtxB,GAAU,IAAA4iD,EAAAC,EAClBhjD,QAAQG,MAAM,yBAA0BA,GACJ,cAAlB,QAAd4iD,EAAA5iD,EAAM+E,gBAAQ,IAAA69C,GAAM,QAANA,EAAdA,EAAgBpxB,YAAI,IAAAoxB,OAAA,EAApBA,EAAsB5iD,OACxBmzB,EAAAA,GAAMnzB,MAAM,+CACwB,OAAb,QAAd6iD,EAAA7iD,EAAM+E,gBAAQ,IAAA89C,OAAA,EAAdA,EAAgB/8C,QACzBqtB,EAAAA,GAAMnzB,MAAM,wBAEZmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,IAAU,wBAE/C,KAIFhB,EAAAA,EAAAA,WAAU,WACJmrD,GAAUA,IAAWC,GAAgBD,IAAWW,EAAoB/lC,UAAYqmC,IAClFN,EAAoB/lC,QAAUolC,EAC9BE,EAAgBF,GAEpB,EAAG,CAACA,EAAQiB,KAGZpsD,EAAAA,EAAAA,WAAU,YACHysD,IAAeQ,GAAsB7B,IAAgBD,GAAUA,IAAWW,EAAoB/lC,SAAYqmC,IAC7GN,EAAoB/lC,QAAUolC,EAC9BE,EAAgBF,GAEpB,EAAG,CAACsB,EAAaQ,EAAkB9B,EAAQiB,KAE3CpsD,EAAAA,EAAAA,WAAU,WAAM,IAAAkuD,EACQ,QAAtBA,EAAAtC,EAAe7lC,eAAO,IAAAmoC,GAAtBA,EAAwBtuB,eAAe,CAAEE,SAAU,UACrD,EAAG,CAAC8oB,KAGJ5oD,EAAAA,EAAAA,WAAU,WACR,OAAO,WACL8rD,EAAoB/lC,QAAU,IAChC,CACF,EAAG,IAGH,IAAMooC,GAAgBjB,EAAShzB,OAAO,SAAAqyB,GAAI,OACxCA,EAAKC,UAAUhtB,cAAcC,SAASgsB,EAAWjsB,cAAc,GAI3D4uB,GAAmB,SAACC,GAEpBA,IAAajD,GAAgBiD,IAAavC,EAAoB/lC,SAAWqmC,IAI7EN,EAAoB/lC,QAAUsoC,EAC9BhD,EAAgBgD,GAEZA,IAAalD,GACfx4B,EAAS,SAADnsB,OAAU6nD,IAEtB,EAEMC,GAAoB,WACxB,GAAIhD,EAAY9Z,QAAU4Z,EAAc,CAEtC,GAAItH,IAAgBA,EAAYyK,SAAkC,YAAvBzK,EAAYh9C,OAErD,YADAqtB,EAAAA,GAAMnzB,MAAM,GAADwF,OAAIs9C,EAAYj9C,QAAO,KAAAL,OAAIs9C,EAAY0K,OAIpD,IAAMrhD,EAAW,IAAIi6C,SACrBj6C,EAASk6C,OAAO,UAAW+D,GAC3Bj+C,EAASk6C,OAAO,UAAWiE,EAAY9Z,QACvCqc,GAAoBxlB,OAAOl7B,EAC7B,CACF,EAyBMshD,GAAa,SAACtzB,GAElB,OADa,IAAIzC,KAAKyC,GACVuzB,mBAAmB,QAAS,CACtCC,KAAM,UACNC,OAAQ,WAEZ,EAEMC,GAAmB3B,EAAS5yB,KAAK,SAAAiyB,GAAI,OAAIA,EAAKC,YAAcpB,CAAY,GAE9E,OACEt0C,EAAAA,EAAAA,MAACqyC,GAAa,CAAAhqD,SAAA,EACZ2X,EAAAA,EAAAA,MAACsyC,GAAW,CAACC,cAAe+B,EAAajsD,SAAA,EACvC2X,EAAAA,EAAAA,MAACwyC,GAAU,CAAAnqD,SAAA,EACTwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,eACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wCAGLwC,EAAAA,EAAAA,KAAC4nD,GAAe,CAAApqD,UACdwC,EAAAA,EAAAA,KAAC6nD,GAAW,CAAArqD,UACVwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,iBACZC,MAAOqsC,EACPnzC,SAAU,SAACuG,GAAC,OAAK6sC,EAAc7sC,EAAEW,OAAOJ,MAAM,SAMpDzd,EAAAA,EAAAA,KAAC8nD,GAAc,CAAAtqD,SACZgtD,GACCr1C,EAAAA,EAAAA,MAAC6F,GAAY,CAAAxd,SAAA,EACXwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,2BACHwC,EAAAA,EAAAA,KAAA,UAAQke,QAAS,WAAF,OAAQte,OAAOzB,SAASgvD,QAAQ,EAAC3vD,SAAC,yBAEjDitD,GACFzqD,EAAAA,EAAAA,KAAC20C,GAAU,CAAAn3C,UACTwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wBAEFgvD,GAAcjoD,OAAS,GAAK+mD,GAC/Bn2C,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,CAEG8tD,IAAqBkB,GAAc7zB,KAAK,SAAAiyB,GAAI,OAAIA,EAAKC,YAAcS,EAAiBT,SAAS,KAC5F11C,EAAAA,EAAAA,MAAC4yC,GAAQ,CAEP9nD,UAAWwpD,IAAiB6B,EAAiBT,UAAY,SAAW,GACpE3sC,QAAS,WAAF,OAAQuuC,GAAiBnB,EAAiBT,UAAU,EAACrtD,SAAA,EAE5DwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAqC,QAA/Bk+B,EAAAqC,EAAiBF,sBAAc,IAAAnC,GAA/BA,EAAiCj3B,IAAM,YAAHntB,OAAeymD,EAAiBF,eAAep5B,KAAQ,GACjGzI,MAAM,OACNC,UAAU,OACV2B,QAAwC,QAAjC+9B,EAAEoC,EAAiBF,sBAAc,IAAAlC,OAAA,EAA/BA,EAAiCmC,OAAO7tD,WAEhB,QAAhC2rD,EAACmC,EAAiBF,sBAAc,IAAAjC,GAA/BA,EAAiCn3B,MAAOs5B,EAAiBT,UAAUx3B,OAAO,GAAGC,iBAGjFne,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,IAAE8tD,EAAiBT,cACzC7qD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBzC,SAAC,uCAExCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,eAGxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBzC,SAAC,SArB5B8tD,EAAiBT,WA0BzB2B,GAAcxuC,IAAI,SAAA4sC,GAAI,IAAAwC,EAAAC,EAAAC,EAAA,OACrBn4C,EAAAA,EAAAA,MAAC4yC,GAAQ,CAEP9nD,UAAWwpD,IAAiBmB,EAAKC,UAAY,SAAW,GACxD3sC,QAAS,WAAF,OAAQuuC,GAAiB7B,EAAKC,UAAU,EAACrtD,SAAA,EAEhDwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAyB,QAAnBqiC,EAAAxC,EAAKQ,sBAAc,IAAAgC,GAAnBA,EAAqBp7B,IAAM,YAAHntB,OAAe+lD,EAAKQ,eAAep5B,KAAQ,GACzEzI,MAAM,OACNC,UAAU,OACV2B,QAA4B,QAArBkiC,EAAEzC,EAAKQ,sBAAc,IAAAiC,OAAA,EAAnBA,EAAqBhC,OAAO7tD,WAEhB,QAApB8vD,EAAC1C,EAAKQ,sBAAc,IAAAkC,GAAnBA,EAAqBt7B,MAAO44B,EAAKC,UAAUx3B,OAAO,GAAGC,iBAGzDne,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,IAAEotD,EAAKC,cAC7B7qD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAC1BotD,EAAKG,aACJH,EAAKG,cAEL/qD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBzC,SAAC,uCAG1CwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAClBotD,EAAKI,kBAAoB8B,GAAWlC,EAAKI,mBAAqB,cAIlEJ,EAAKM,aAAe,GACnBlrD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAAEotD,EAAKM,gBACjCN,EAAKG,eACR/qD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBzC,SAAC,SA9B9BotD,EAAKC,UAgCD,OAIf11C,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wBACHwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wDAMXwC,EAAAA,EAAAA,KAACgoD,GAAU,CAACN,cAAe+B,EAAajsD,SACrCisD,GACCt0C,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAAC8yC,GAAgB,CAAAzqD,SAAA,EACfwC,EAAAA,EAAAA,KAAC2qB,GAAU,CACT1qB,UAAU,cACVsmB,SAAS,YACTrI,QAAS,WACPwrC,EAAgB,MAChB14B,EAAS,QACX,EAAExzB,UAEFwC,EAAAA,EAAAA,KAAC4nC,GAAQ,OAGX5nC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAMmiC,UAAgC,QAAhB9D,EAAhB8D,GAAkB9B,sBAAc,IAAAhC,GAAhCA,EAAkCp3B,IAAM,YAAHntB,OAAeqoD,GAAiB9B,eAAep5B,KAAQ,GAClGzI,MAAM,OACNC,UAAU,OAAMhsB,WAEd0vD,UAAgC,QAAhB7D,EAAhB6D,GAAkB9B,sBAAc,IAAA/B,GAAhCA,EAAkCr3B,MAAOy3B,EAAap2B,OAAO,GAAGC,iBAGpEne,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,IAAEisD,MACxBt0C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,SAAQzC,SAAA,EACpB0vD,UAAgC,QAAhB5D,EAAhB4D,GAAkB9B,sBAAc,IAAA9B,OAAA,EAAhCA,EAAkC+B,UAAUrrD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAC3DitD,UAAgC,QAAhB3D,EAAhB2D,GAAkB9B,sBAAc,IAAA7B,GAAhCA,EAAkC8B,OAAS,SAAW,mBAI3DrrD,EAAAA,EAAAA,KAAC2qB,GAAU,CAACpE,SAAS,YAAW/oB,UAC9BwC,EAAAA,EAAAA,KAACunD,GAAQ,SAKZpF,GAAsC,YAAvBA,EAAYh9C,SAC1BgQ,EAAAA,EAAAA,MAAC2zC,GAAiB,CAACC,QAAS5G,EAAYh9C,OAAO3H,SAAA,EAC7CwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAE2kD,EAAY0K,QACpC7sD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASzC,SAAE2kD,EAAYj9C,cAI3CiQ,EAAAA,EAAAA,MAAC+yC,GAAiB,CAAA1qD,SAAA,CACfouD,GACCz2C,EAAAA,EAAAA,MAAC6F,GAAY,CAAAxd,SAAA,EACXwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,+BACHwC,EAAAA,EAAAA,KAAA,UAAQke,QAAS,WAAF,OAAQte,OAAOzB,SAASgvD,QAAQ,EAAC3vD,SAAC,yBAEjDquD,IACF7rD,EAAAA,EAAAA,KAAC20C,GAAU,CAAAn3C,UACTwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,8BAEFypD,aAAQ,EAARA,EAAUA,WAAY,IAAI1iD,OAAS,IACrC0iD,aAAQ,EAARA,EAAUA,WAAY,IAAIjpC,IAAI,SAAC9Y,EAAS4f,GACvC,IAAMyoC,EAAQroD,EAAQsoD,UAAYh8B,EAAYtrB,MACxCunD,EAAcxG,EAASA,SAASniC,EAAQ,GAK9C,OAJoB2oC,GAClBA,EAAYD,UAAYtoD,EAAQsoD,UAC/B,IAAIz2B,KAAK7xB,EAAQogC,MAAQ,IAAIvO,KAAK02B,EAAYnoB,QAG/CtlC,EAAAA,EAAAA,KAACmoD,GAAY,CAAkBC,OAAQmF,EAAM/vD,UAC3C2X,EAAAA,EAAAA,MAACkzC,GAAO,CAACD,OAAQmF,EAAM/vD,SAAA,CACpB0H,EAAQA,UACPlF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAAE0H,EAAQA,UAExCA,EAAQygD,QAAUxhB,MAAMC,QAAQl/B,EAAQygD,SAAWzgD,EAAQygD,OAAOphD,OAAS,IAC1EvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAC1B0H,EAAQygD,OAAO3nC,IAAI,SAAC4nC,EAAO8H,GAAG,OAC7B1tD,EAAAA,EAAAA,KAAA,OAEEsiB,IAAG,YAAAzd,OAAc+gD,GACjBl/B,IAAI,WACJtR,MAAO,CAAEonC,OAAQ,MAAOmR,SAAU,UAH7BD,EAIL,MAIR1tD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAC1BsvD,GAAW5nD,EAAQogC,YAlBPpgC,EAAQ2zB,GAuB/B,IAEA74B,EAAAA,EAAAA,KAAC6oD,GAAc,CAAArrD,UACb2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,SAAC,QAC5BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJ2X,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAG,uBAAqBisD,MACxBzpD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUzC,SAAC,uCAExB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iCACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVie,QAAS,WAAF,OAAQ0rC,EAAe,mCAAmC,EAACpsD,SACnE,sCAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVie,QAAS,WAAF,OAAQ0rC,EAAe,oBAAoB,EAACpsD,SACpD,uBAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVie,QAAS,WAAF,OAAQ0rC,EAAe,0CAA0C,EAACpsD,SAC1E,qCAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVie,QAAS,WAAF,OAAQ0rC,EAAe,sCAAsC,EAACpsD,SACtE,2CASVqsD,IACC10C,EAAAA,EAAAA,MAACmzC,GAAe,CAAA9qD,SAAA,CAAC,IACbisD,EAAa,mBAInBzpD,EAAAA,EAAAA,KAAA,OAAKymB,IAAKwjC,QAGZjqD,EAAAA,EAAAA,KAACuoD,GAAmB,CAACC,UAAWrG,IAAgBA,EAAYyK,SAAkC,YAAvBzK,EAAYh9C,OAAqB3H,UACtG2X,EAAAA,EAAAA,MAACszC,GAAY,CAAAjrD,SAAA,EACbwC,EAAAA,EAAAA,KAAC0oD,GAAc,CAAAlrD,UACbwC,EAAAA,EAAAA,KAAC2oD,GAAS,CACRlrC,MAAOksC,EACPhzC,SAAU,SAACuG,GAAC,OAAK0sC,EAAe1sC,EAAEW,OAAOJ,MAAM,EAC/CmwC,WA3RO,SAAC1wC,GACR,UAAVA,EAAEgV,KAAoBhV,EAAE2wC,WAC1B3wC,EAAEC,iBACFwvC,KAEJ,EAuRgBnvC,YAAY,wBACZswC,KAAM,OAIV9tD,EAAAA,EAAAA,KAACyoC,GAAY,CACXxoC,UAAU,SACVie,QAAS,WAAF,IAAA6vC,EAAA,OAA4B,QAA5BA,EAAQ7D,EAAa9lC,eAAO,IAAA2pC,OAAA,EAApBA,EAAsB5J,OAAO,EAAC3mD,UAE7CwC,EAAAA,EAAAA,KAACsnD,GAAU,OAGbtnD,EAAAA,EAAAA,KAACyoC,GAAY,CACXvqB,QAASyuC,GACT91C,UACG8yC,EAAY9Z,QACbqc,GAAoBtxB,WACnBunB,IAAgBA,EAAYyK,SAAkC,YAAvBzK,EAAYh9C,OACrD3H,UAEDwC,EAAAA,EAAAA,KAAC8nB,GAAQ,OAGX9nB,EAAAA,EAAAA,KAAC69C,GAAW,CACVp3B,IAAKyjC,EACLx8C,KAAK,OACLiJ,SA/SW,SAACsb,GACxB,IAAMoyB,EAAOpyB,EAAMpU,OAAOymC,MAAM,GAChC,GAAID,GAAQoF,EAAc,CAExB,GAAItH,IAAgBA,EAAYyK,SAAkC,YAAvBzK,EAAYh9C,OAErD,YADAqtB,EAAAA,GAAMnzB,MAAM,GAADwF,OAAIs9C,EAAYj9C,QAAO,KAAAL,OAAIs9C,EAAY0K,OAIpD,IAAMrhD,EAAW,IAAIi6C,SACrBj6C,EAASk6C,OAAO,SAAUrB,GAC1B74C,EAASk6C,OAAO,UAAW+D,GAC3B6C,GAAiB5lB,OAAOl7B,EAC1B,CACF,aAuSQxL,EAAAA,EAAAA,KAAC20C,GAAU,CAAAn3C,UACT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,UAASzC,SAAA,EACtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,6FAOjB,E,goBCryCA,IAAMwwD,GAAa,WAAH,OACdhuD,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,iDACZ,EAGFM,GAAY,WAAH,OACblT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kBACjB/nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oFACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EAGFqmC,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFsmC,IAAel4C,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAIpC6xB,GAAShyB,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,kCAInB8xB,GAAgBjyB,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,+NAa1BwT,GAAQ3T,EAAAA,GAAO4T,GAAEnS,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,+TAejBg4C,IAAUn4C,EAAAA,EAAAA,IAAOkT,GAAPlT,CAAmB2B,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,gHAS7Bi4C,GAAep4C,EAAAA,GAAOyE,GAAE5C,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,mNAcxBk4C,IAAcr4C,EAAAA,EAAAA,IAAO4V,GAAP5V,CAAY+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,iLA2B1Bm4C,IAjBqBt4C,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,2OAiBrBH,EAAAA,EAAAA,IAAO4V,GAAP5V,CAAYoC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,8SAetBo4C,IAASv4C,EAAAA,EAAAA,IAAO6U,GAAP7U,CAAYsC,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,qOAYrBq4C,GAAUx4C,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,qMAGA,SAAAY,GAAK,OAAIA,EAAMgU,IAAI,EAMzC,SAAAhU,GAAK,OAAKA,EAAMgU,MAAQ,iMAOzB,GAGG0jC,GAAcz4C,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,kVAexBu4C,GAAY14C,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,wFAQtBw4C,GAAS34C,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,iYAwBnBy4C,GAAU54C,EAAAA,GAAOyE,GAAEzB,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,gLAYnB04C,GAAgB74C,EAAAA,GAAOwB,EAAC0B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,gSAgBxB24C,IAAY94C,EAAAA,EAAAA,IAAOoV,GAAPpV,CAAqBoD,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,2LAgBjC44C,GAAQ/4C,EAAAA,GAAOmB,IAAGmC,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,4wDAmFlB64C,IAAYh5C,EAAAA,EAAAA,IAAO6U,GAAP7U,CAAYwD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,geAgCxB84C,GAAc,SAAH1xD,GAAwC,IAAlCqoD,EAAKroD,EAALqoD,MAAOsJ,EAAa3xD,EAAb2xD,cAAe7vD,EAAK9B,EAAL8B,MACrC6qD,GAAe5oC,EAAAA,EAAAA,QAAO,MAC5B7jB,GAA8BC,EAAAA,EAAAA,UAASkoD,EAAQ,YAAH/gD,OAAe+gD,GAAU,MAAKjoD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnE0xD,EAAOxxD,EAAA,GAAEyxD,EAAUzxD,EAAA,GAsB1B,OACEwX,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,4BACPwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE+mB,aAAc,QAAS3+B,SAClC2xD,IACCh6C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV4P,SAAU,WACV3P,QAAS,eACT8mB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAK6sC,EACLzoC,IAAI,SACJtR,MAAO,CACLu4C,SAAU,QACVvG,UAAW,QACXvxC,aAAc,MACdF,OAAQ,wBAGZ3V,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACL6Y,SAAS,SACTgD,MAAM,QACNrL,QAhCc,WACxBkxC,EAAW,MACXF,EAAc,MACVhF,EAAa9lC,UACf8lC,EAAa9lC,QAAQ3G,MAAQ,GAEjC,EA2BYrI,MAAO,CACL4P,SAAU,WACV6B,IAAK,OACLgV,MAAO,OACPhmB,aAAc,MACdH,MAAO,OACPF,OAAQ,OACRyY,QAAS,IACTC,SAAU,QACV1wB,SACH,YAOPwC,EAAAA,EAAAA,KAAA,SACEymB,IAAKyjC,EACLx8C,KAAK,OACL02C,OAAO,UACPztC,SAlEmB,SAACsb,GACxB,IAAMoyB,EAAOpyB,EAAMpU,OAAOymC,MAAM,GAChC,GAAID,EAAM,CAER,IAAMgL,EAAS,IAAIC,WACnBD,EAAOttC,OAAS,SAAC7E,GAAC,OAAKkyC,EAAWlyC,EAAEW,OAAO9K,OAAO,EAClDs8C,EAAOE,cAAclL,GAErB6K,EAAc7K,EAChB,CACF,EAyDMjvC,MAAO,CAAEC,QAAS,WAGpBrV,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACL6Y,SAAS,YACTrI,QAAS,WAAF,IAAA6vC,EAAA,OAA4B,QAA5BA,EAAQ7D,EAAa9lC,eAAO,IAAA2pC,OAAA,EAApBA,EAAsB5J,OAAO,EAC5C/uC,MAAO,CAAEM,MAAO,QAASlY,SAExB2xD,EAAU,uBAAyB,wBAGrC9vD,IAASW,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE6B,KAEtBW,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACV8Y,SAAU,OACV4N,MAAO,UACPC,UAAW,OACXv+B,SAAC,yEAKT,EAqiBA,SAniBY,WAAM,IAAAmlC,EAAAC,EAAA4sB,EACVx+B,GAAWC,EAAAA,EAAAA,MACjBlzB,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1C48C,EAAS38C,EAAA,GAAE48C,EAAY58C,EAAA,GAC9B0d,GAAkChe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAzC+zC,EAAS9zC,EAAA,GAAE+zC,EAAY/zC,EAAA,GAC9BG,GAA0Cpe,EAAAA,EAAAA,UAAS,MAAKqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAjDskC,EAAarkC,EAAA,GAAEskC,EAAgBtkC,EAAA,GACtCG,GAA8Bxe,EAAAA,EAAAA,UAAS,CACrCgQ,KAAM,GACNkwB,QAAS,GACToB,KAAM,KACN7iB,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAJK40B,EAAO30B,EAAA,GAAE40B,EAAU50B,EAAA,GAMpB+U,GAAcC,EAAAA,EAAAA,kBACdK,EAAczyB,EAAAA,SAASgzB,iBAGf49B,GAAkBt/B,EAAAA,EAAAA,UAC9B,CAAC,kBACDu/B,EAAAA,SAASC,mBACT,CACEp/B,OAAO,EACPE,QAAS,SAACtxB,GAERH,QAAQgU,IAAI,+BAAgC7T,EAAM6F,QACpD,EACAmW,UAAW,SAACwV,GAEV3xB,QAAQgU,IAAI,mCAAoC2d,EAClD,IAZIA,KAgBRmK,GAQIC,EAAAA,GAAAA,IAAQ,CACV0I,cAAe,CACb/F,QAAS,GACToB,KAAM,MAVRv5B,EAAQu1B,EAARv1B,SACAwX,EAAY+d,EAAZ/d,aACA2mB,EAAK5I,EAAL4I,MACAC,EAAQ7I,EAAR6I,SACAE,EAAW/I,EAAX+I,YACa7I,EAAMF,EAAnBG,UAAaD,OACb40B,EAAK90B,EAAL80B,MA2BFp4B,GAAyCrH,EAAAA,EAAAA,UACvC,CAAC,MAAOygB,GACR,kBAAMif,EAAAA,OAAOC,OAAOlf,EAAQ,EAC5B,CACE0E,kBAAkB,IAJRya,EAAWv4B,EAAjB7G,KAAmB+J,EAASlD,EAATkD,UASrBs1B,GAAMC,EAAAA,EAAAA,SAAQ,WAClB,OAAKF,SAAAA,EAAaC,IAEXD,EAAYC,IAAIlyC,IAAI,SAAAoyC,GAAE,IAAAC,EAAAC,EAAA,OAAA3rD,GAAAA,GAAA,GACxByrD,GAAE,IAEL5X,QAAiB,QAAT6X,EAAAD,EAAG5X,cAAM,IAAA6X,OAAA,EAATA,EAAWnqD,QAASkqD,EAAG5X,OAC/B+X,eAAwB,QAATD,EAAAF,EAAG5X,cAAM,IAAA8X,OAAA,EAATA,EAAWt+B,MAAO,KACjCqI,MAAO+1B,EAAG/1B,OAAS+1B,EAAGI,YACtB/3B,WAAY23B,EAAG33B,YAAU,GARG,EAUhC,EAAG,CAACw3B,IAGEQ,GAAmB9rB,EAAAA,EAAAA,aAAYorB,EAAAA,OAAOW,SAAU,CACpDr1C,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,uBACdmoB,GAAa,GACbkV,IACA5+B,EAAYkiB,kBAAkB,MAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIsxD,GAAmBhsB,EAAAA,EAAAA,aACvB,SAAApmC,GAAA,IAAGs6B,EAAEt6B,EAAFs6B,GAAIhI,EAAItyB,EAAJsyB,KAAI,OAAOk/B,EAAAA,OAAOa,SAAS/3B,EAAIhI,EAAK,EAC3C,CACExV,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,yBACdmoB,GAAa,GACb8U,EAAa,MACbI,IACA5+B,EAAYkiB,kBAAkB,MAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIEwxD,GAAmBlsB,EAAAA,EAAAA,aAAYorB,EAAAA,OAAOe,SAAU,CACpDz1C,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,uBACdvB,EAAYkiB,kBAAkB,MAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IA0CI0xD,EAAmB,WACvBnW,GAAa,GACb8U,EAAa,MACbrP,EAAiB,MACjByP,GACF,EAOMkB,GAAUb,EAAAA,EAAAA,SAAQ,WACtB,IAAMc,EAAY,CAChB,CAAExzC,MAAO,UAAWxH,MAAO,UAAW42C,KAAM,MAC5C,CAAEpvC,MAAO,aAAcxH,MAAO,aAAc42C,KAAM,MAClD,CAAEpvC,MAAO,YAAaxH,MAAO,YAAa42C,KAAM,MAChD,CAAEpvC,MAAO,UAAWxH,MAAO,UAAW42C,KAAM,OAW9C,OAPI8C,SAAAA,EAAeuB,eACjBD,EAAUtyC,KAAK,CAAElB,MAAO,cAAexH,MAAO,cAAe42C,KAAM,OAIrEoE,EAAUtyC,KAAK,CAAElB,MAAO,MAAOxH,MAAO,MAAO42C,KAAM,OAE5CoE,CACT,EAAG,CAACtB,IAeEwB,EAAe,SAACzjD,GAAS,IAAA0jD,EAC7B,OAA0C,QAAnCA,EAAAJ,EAAQr4B,KAAK,SAAA04B,GAAC,OAAIA,EAAE5zC,QAAU/P,CAAI,UAAC,IAAA0jD,OAAA,EAAnCA,EAAqCn7C,QAAS,QACvD,EAGMq7C,EAAQ,CACZpf,MAAOge,EAAI3rD,OACXgtD,MAAOrB,EAAI33B,OAAO,SAAA63B,GAAE,OAAIA,EAAG5X,UAAWhnB,aAAW,EAAXA,EAAatrB,MAAK,GAAE3B,OAC1DitD,QAAStB,EAAI33B,OAAO,SAAA63B,GAAE,MAAgB,cAAZA,EAAG1iD,IAAoB,GAAEnJ,OACnDktD,SAAUvB,EAAI33B,OAAO,SAAA63B,GAAE,MAAgB,YAAZA,EAAG1iD,IAAkB,GAAEnJ,QAGpD,OAAIq2B,GAEA56B,EAAAA,EAAAA,KAACkuD,GAAY,CAAA1wD,UACXwC,EAAAA,EAAAA,KAAC+rB,GAAc,OAMnB5W,EAAAA,EAAAA,MAAC+4C,GAAY,CAAA1wD,SAAA,EACX2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAQ5oB,SAAA,EAC7B2X,EAAAA,EAAAA,MAAC6yB,GAAM,CAAAxqC,SAAA,EACL2X,EAAAA,EAAAA,MAAC8yB,GAAa,CAAAzqC,SAAA,EACZwC,EAAAA,EAAAA,KAAC2pB,GAAK,CAAAnsB,SAAC,gBACP2X,EAAAA,EAAAA,MAACmR,GAAM,CAACpI,QAAS,WAAF,OAAQ08B,GAAa,EAAK,EAACp9C,SAAA,EACxCwC,EAAAA,EAAAA,KAACkoB,GAAQ,IAAG,4BAMhB/S,EAAAA,EAAAA,MAACyW,GAAI,CAACC,SAAS,uCAAuCN,KAAK,OAAOnW,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EAChG2X,EAAAA,EAAAA,MAAC65C,GAAS,CAAAxxD,SAAA,EACRwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAE8zD,EAAMpf,SAC/BlyC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,cAEzB2X,EAAAA,EAAAA,MAAC65C,GAAS,CAAAxxD,SAAA,EACRwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAE8zD,EAAMC,SAC/BvxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,YAEzB2X,EAAAA,EAAAA,MAAC65C,GAAS,CAAAxxD,SAAA,EACRwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAE8zD,EAAME,WAC/BxxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,kBAEzB2X,EAAAA,EAAAA,MAAC65C,GAAS,CAAAxxD,SAAA,EACRwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAE8zD,EAAMG,YAC/BzxD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,sBAK7B2X,EAAAA,EAAAA,MAACg5C,GAAO,CAAA3wD,SAAA,EACN2X,EAAAA,EAAAA,MAACi5C,GAAY,CAAA5wD,SAAA,EACXwC,EAAAA,EAAAA,KAACguD,GAAU,IAAG,cAGhB74C,EAAAA,EAAAA,MAACk5C,GAAW,CAAA7wD,SAAA,EACV2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,oBACP2X,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOqzB,EAAQpjC,KACfiJ,SAAU,SAACuG,GAAC,OAAK6zB,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAE6O,KAAMwP,EAAEW,OAAOJ,OAAK,EAAI,EAACjgB,SAAA,EAEzEwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,aAChBwzD,EAAQhzC,IAAI,SAAAtQ,GAAI,OACfyH,EAAAA,EAAAA,MAAA,UAAyBsI,MAAO/P,EAAK+P,MAAMjgB,SAAA,CACxCkQ,EAAKm/C,KAAK,IAAEn/C,EAAKuI,QADPvI,EAAK+P,MAET,UAKftI,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,sBACPwC,EAAAA,EAAAA,KAACsnC,GAAgB,CACfxH,aAAcgR,EAAQlT,QACtBoC,UAAW8Q,EAAQ9R,KACnBiB,gBAAiB,SAACxiB,GAChBszB,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAE++B,QAASngB,GAAK,GAEzCqzB,EAAQ9R,MACV+R,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEmgC,KAAM,IAAE,EAE3C,EACAkB,aAAc,SAACziB,GACbszB,EAAW,SAAAlyC,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEmgC,KAAMvhB,GAAK,EAC5C,EACAke,UAAU,EACVwF,gBAAgB,EAChBV,OAAO,eACPM,mBAAmB,aACnBE,gBAAgB,wBAMvBivB,EAAI3rD,OAAS,GACZvE,EAAAA,EAAAA,KAACsuD,GAAO,CAAA9wD,SACL0yD,EAAIlyC,IAAI,SAAAoyC,GAAE,OACTj7C,EAAAA,EAAAA,MAACo5C,GAAM,CAAA/wD,SAAA,EACL2X,EAAAA,EAAAA,MAACq5C,GAAO,CAACzjC,KAAMqlC,EAAGxK,MAAQ,YAAH/gD,OAAeurD,EAAGxK,OAAU,GAAGpoD,SAAA,EAClD4yD,EAAGxK,OAAS,MACdzwC,EAAAA,EAAAA,MAACs5C,GAAW,CAAAjxD,SAAA,EA7GPkQ,EA8GU0iD,EAAG1iD,MA7GU,QAAnCgkD,EAAAV,EAAQr4B,KAAK,SAAA04B,GAAC,OAAIA,EAAE5zC,QAAU/P,CAAI,UAAC,IAAAgkD,OAAA,EAAnCA,EAAqC7E,OAAQ,MA6Gd,IAAEsE,EAAaf,EAAG1iD,aAI5CyH,EAAAA,EAAAA,MAACu5C,GAAS,CAAAlxD,SAAA,EACR2X,EAAAA,EAAAA,MAACw5C,GAAM,CAAAnxD,SAAA,EACL2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,SAAQzC,SAAA,EACrBwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLvB,MAAM,OACNC,UAAU,OACVuB,KAAMqlC,EAAGG,cAAgB,YAAH1rD,OAAeurD,EAAGG,eAAkB,GAAG/yD,UAE3D4yD,EAAGG,eAAiBH,EAAG5X,OAAOnlB,OAAO,GAAGC,gBACnC,IACP88B,EAAG5X,WAEPrjC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,EACnBwC,EAAAA,EAAAA,KAACiuD,GAAY,KAxIb0D,EAyIYvB,EAAG33B,WAxIpB,IAAI1B,KAAK46B,GACVna,mBAAmB,QAAS,CACtCoa,IAAK,UACLC,MAAO,UACPC,KAAM,oBAwIM9xD,EAAAA,EAAAA,KAAC4uD,GAAO,CAAApxD,SAAE4yD,EAAG/1B,SACbr6B,EAAAA,EAAAA,KAAC6uD,GAAa,CAAArxD,SAAE4yD,EAAGI,eAEnBxwD,EAAAA,EAAAA,KAAC8uD,GAAS,CAAAtxD,SACP4yD,EAAG5X,UAAWhnB,aAAW,EAAXA,EAAatrB,QAC1BiP,EAAAA,EAAAA,MAACmR,GAAM,CACLrmB,UAAU,cACVie,QAAS,WAAF,OAvLN6zC,EAuL4B3B,EAAG5X,YAtLpDxnB,EAAS,SAADnsB,OAAUktD,IADE,IAACA,CAuLsC,EAACv0D,SAAA,EAExCwC,EAAAA,EAAAA,KAACioB,GAAW,IAAG,eAIjB9S,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACmR,GAAM,CACLC,SAAS,YACTrI,QAAS,WAAF,OA7MZ,SAACkyC,GAClBV,EAAaU,GACb/P,EAAiB,MACjByP,EAAMM,GACNxV,GAAa,EACf,CAwMuCoX,CAAW5B,EAAG,EAC7Bh7C,MAAO,CAAE68C,KAAM,GAAIz0D,SAAA,EAEnBwC,EAAAA,EAAAA,KAACmoB,GAAQ,IAAG,eAGdhT,EAAAA,EAAAA,MAACmR,GAAM,CACLC,SAAS,SACTrI,QAAS,WAAF,OA9MTzR,EA8M8B2jD,EAAGv3B,QA7MjDj5B,OAAO0yB,QAAQ,wBACjBu+B,EAAiBnqB,OAAOj6B,IAFP,IAACA,CA8MoC,EAClC2I,MAAO,CAAE68C,KAAM,GAAIz0D,SAAA,EAEnBwC,EAAAA,EAAAA,KAACqoB,GAAS,IAAG,uBArDZ+nC,EAAGv3B,IAnHT,IAAC84B,EASCjkD,EAASgkD,CAsKT,MAIbv8C,EAAAA,EAAAA,MAAC45C,GAAK,CAAAvxD,SAAA,EACJwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SACGszC,EAAQpjC,MAAQojC,EAAQ9R,KACrB,6EACA,yEAGJ8R,EAAQpjC,OAASojC,EAAQ9R,OACzB7pB,EAAAA,EAAAA,MAACmR,GAAM,CAACpI,QAAS,WAAF,OAAQ08B,GAAa,EAAK,EAACp9C,SAAA,EACxCwC,EAAAA,EAAAA,KAACkoB,GAAQ,IAAG,qCASrByyB,IACC36C,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS6yC,EAAiBvzD,UAC/B2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKiyD,EAAY,2BAA6B,sBAC9CzvD,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYgD,MAAM,QAAQrL,QAAS6yC,EAAiBvzD,UACnEwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,EAtRT,SAAC4T,GAEhB,IAlFqBwzB,EAkFf6N,IAlFe7N,EAkFiBjE,KA5ElCiE,EAAK5gC,KAHO,QAIP,yCAHY,CAAC,aAAc,YAAa,YAAa,cAM5Cqa,SAASumB,EAAK32C,OACvB,kDAwET,IAAwB,IAApBwkD,EAAJ,CAMA,IAAM1mD,EAAQ7G,GAAAA,GAAA,GACTksB,GAAI,IACP+0B,MAAOxF,IAGLqP,EACFkB,EAAiBjqB,OAAO,CAAE7N,GAAI42B,EAAU52B,GAAIhI,KAAMrlB,IAElDilD,EAAiB/pB,OAAOl7B,EAX1B,MAFEgnB,EAAAA,GAAMnzB,MAAM6yD,EAehB,GAmQiD10D,SAAA,EACrC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,cAAUwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC5CwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,GACAc,EAAS,QAAS,CACpBk2B,SAAU,uBACVC,UAAW,CAAEne,MAAO,EAAGvY,QAAS,iDAChC6Z,UAAW,CAAEtB,MAAO,IAAKvY,QAAS,iDAClC,IACFjF,UAAWi7B,EAAOb,MAAQ,QAAU,GACpC7c,YAAY,kCAEb0d,EAAOb,QAASr6B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOb,MAAMn1B,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,mBAAewC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UACjD2X,EAAAA,EAAAA,MAACmV,GAAM3lB,GAAAA,GAAA,GACDc,EAAS,OAAQ,CAAEk2B,SAAU,kBAAiB,IAClD17B,UAAWi7B,EAAOxtB,KAAO,QAAU,GAAGlQ,SAAA,EAEtCwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,iBAChBwzD,EAAQhzC,IAAI,SAAAtQ,GAAI,OACfyH,EAAAA,EAAAA,MAAA,UAAyBsI,MAAO/P,EAAK+P,MAAMjgB,SAAA,CACxCkQ,EAAKm/C,KAAK,IAAEn/C,EAAKuI,QADPvI,EAAK+P,MAET,OAGZyd,EAAOxtB,OAAQ1N,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOxtB,KAAKxI,cAG1CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACR2X,EAAAA,EAAAA,MAAC+U,GAAK,CAAA1sB,SAAA,CAAC,aAASwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,UAC3CwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,GACHc,EAAS,cAAe,CAC1Bk2B,SAAU,uBACVC,UAAW,CAAEne,MAAO,GAAIvY,QAAS,iDACjC6Z,UAAW,CAAEtB,MAAO,IAAMvY,QAAS,iDACnC,IACFjF,UAAWi7B,EAAOs1B,YAAc,QAAU,GAC1ChzC,YAAY,sCACZkN,WAAW,WAEZwQ,EAAOs1B,cAAexwD,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOs1B,YAAYtrD,cAGxDiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,0BACPwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,GACAc,EAAS,QAAS,CACpBqY,IAAK,CAAEL,MAAO,EAAGvY,QAAS,oCAC1ByhC,QAAS,CAAElpB,MAAO,oBAAqBvY,QAAS,yDAChD,IACFwI,KAAK,SACLqQ,KAAK,OACLD,IAAI,IACJN,YAAY,OACZvd,UAAWi7B,EAAOi3B,MAAQ,QAAU,MAErCj3B,EAAOi3B,QAASnyD,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOi3B,MAAMjtD,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,2CACPwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,GACHc,EAAS,eAAgB,CAC3BsZ,UAAW,CAAEtB,MAAO,IAAMvY,QAAS,8DACnC,IACFsY,YAAY,6CACZkN,WAAW,OACXzqB,UAAWi7B,EAAOk3B,aAAe,QAAU,MAE5Cl3B,EAAOk3B,eAAgBpyD,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOk3B,aAAaltD,cAG1DlF,EAAAA,EAAAA,KAACsnC,GAAgB,CACfxH,aAAc8D,EAAM,WACpB5D,UAAW4D,EAAM,QACjB3D,gBAAiB,SAACxiB,GAChBomB,EAAS,UAAWpmB,GACpBsmB,EAAY,WAERH,EAAM,UACRC,EAAS,OAAQ,IACjBE,EAAY,QAEhB,EACA7D,aAAc,SAACziB,GACbomB,EAAS,OAAQpmB,GACjBsmB,EAAY,OACd,EACAzD,aAA4B,QAAhBqC,EAAEzH,EAAO0C,eAAO,IAAA+E,OAAA,EAAdA,EAAgBz9B,QAC9Bq7B,UAAsB,QAAbqC,EAAE1H,EAAO8D,YAAI,IAAA4D,OAAA,EAAXA,EAAa19B,QACxBy2B,UAAU,EACVwF,gBAAgB,EAChBV,OAAO,iBAIRvF,EAAO0C,UAAW59B,EAAAA,EAAAA,KAAC4qB,GAAS,CAACxV,MAAO,CAAE2mB,UAAW,QAASI,aAAc,QAAS3+B,SAAE09B,EAAO0C,QAAQ14B,UAClGg2B,EAAO8D,OAAQh/B,EAAAA,EAAAA,KAAC4qB,GAAS,CAACxV,MAAO,CAAE2mB,UAAW,QAASI,aAAc,QAAS3+B,SAAE09B,EAAO8D,KAAK95B,WAG7FlF,EAAAA,EAAAA,KAAA,QAAA2E,GAAA,CACE+I,KAAK,UACDjI,EAAS,UAAW,CAAEk2B,SAAU,0BAEtC37B,EAAAA,EAAAA,KAAA,QAAA2E,GAAA,CACE+I,KAAK,UACDjI,EAAS,OAAQ,CAAEk2B,SAAU,wBAInC37B,EAAAA,EAAAA,KAACivD,GAAW,CACVrJ,MAAO6J,aAAS,EAATA,EAAW7J,MAClBsJ,cA5VY,SAAC7K,GACzBhE,EAAiBgE,EACnB,EA2VchlD,MAAmB,QAAdmwD,EAAEt0B,EAAO0qB,aAAK,IAAA4J,OAAA,EAAZA,EAActqD,WAGvBiQ,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAOnW,MAAO,CAAE2mB,UAAW,QAASv+B,SAAA,EACtDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACLmJ,SAAU45C,EAAiB71B,WAAa+1B,EAAiB/1B,UACzDxlB,MAAO,CAAE68C,KAAM,GAAIz0D,SAElBiyD,EACIkB,EAAiB/1B,UAAY,gBAAkB,sBAC/C61B,EAAiB71B,UAAY,cAAgB,wBAGpD56B,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAY7Y,KAAK,SAASwQ,QAAS6yC,EAAiBvzD,SAAC,wBAUtF,E,onBCxgCA,IAAM60D,GAAiBr8C,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mDAEjB,SAAAY,GAAK,OAAIA,EAAMgS,MAAMC,OAAOvT,UAAU,GAGhD68C,GAAct8C,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,gLACd,SAAAY,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAEtC,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,EAI3B,SAAA17C,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMC,MAAM,EAI1C,SAAA77C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,GAKvCC,GAAe98C,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,mEAGlB,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,GAGtCtV,GAAgBnnC,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,wIAEb,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,EAE/B,SAAA17C,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EAEpC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMgqC,MAAM,GAGrC3V,GAAMpnC,EAAAA,GAAOmC,OAAMR,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,6QAEZ,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EAQ1B,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAKnC,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOvT,UAAU,GAIlDoV,GAAO7U,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,kHAEJ,SAAAY,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EACvC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,EAC5B,SAAA17C,GAAK,OAAIA,EAAMgS,MAAMgqC,MAAM,EACxB,SAAAh8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,GAG5CQ,GAAYj9C,EAAAA,GAAOyE,GAAE1C,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,iEACX,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EACpC,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAC/B,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMO,KAAK,GAG/CC,GAAYn9C,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,+HAGnB,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,EACrB,SAAA17C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,GAG5CW,GAAWp9C,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,2RAER,SAAAY,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EACvC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,EAC5B,SAAA17C,GAAK,OAAIA,EAAMgS,MAAMgqC,MAAM,EAM9B,SAAAh8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAC3B,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,EAIvC,SAAA97C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOqqC,SAAS,EACjC,SAAAt8C,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMW,KAAK,GAIjDC,GAAQv9C,EAAAA,GAAOw9C,MAAKl7C,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,sRAMX,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EACf,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EAI/C,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMC,OAAOvT,UAAU,EAE3C,SAAAsB,GAAK,OAAIA,EAAMgS,MAAMC,OAAO0uB,IAAI,EAI3B,SAAA3gC,GAAK,OAAIA,EAAMgS,MAAMC,OAAOvT,UAAU,GAIlD6Q,GAAStQ,EAAAA,GAAOmC,OAAMK,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,uuBACf,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,EAAI,SAAA97C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EAE5D,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EAErC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMW,KAAK,EAGnC,SAAAv8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,EAG/B,SAAA97C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAIjC,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMC,OAAO0qC,WAAW,EAKzC,SAAA38C,GAAK,OAAIA,EAAMgS,MAAMC,OAAO3pB,KAAK,EA2BjC,SAAA0X,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,GAK9Cg+C,GAAc39C,EAAAA,GAAOQ,KAAIkC,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,wSAClB,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,EAAI,SAAA97C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EAEhE,SAAA18C,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMW,KAAK,EASnC,SAAAv8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAO3pB,KAAK,GAU7CuoD,GAAkB5xC,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,uFAEzB,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EACrB,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQC,EAAE,GAI5CpoC,GAAQrU,EAAAA,GAAOK,MAAKyC,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,gKACb,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EACtB,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EACrC,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EACrC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMiB,MAAM,EAIlC,SAAA78C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,GAIjDjoC,GAAStU,EAAAA,GAAOuU,OAAMvR,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,sLACf,SAAAY,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EACtB,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EACrC,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EACrC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMiB,MAAM,EAKlC,SAAA78C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,GAqcvD,SAjcc,WAAM,IAAAsB,EAClBp2D,GAAkCC,EAAAA,EAAAA,UAAS,aAAYC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDuiD,EAASriD,EAAA,GAAEsiD,EAAYtiD,EAAA,GAC9BI,GAAsCL,EAAAA,EAAAA,UAAS,CAC7CoiD,OAAQ,GACR36C,OAAQ,KACRnH,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAHK+1D,EAAW91D,EAAA,GAAE+1D,EAAc/1D,EAAA,GAIlC0d,GAAoChe,EAAAA,EAAAA,UAAS,CAC3CoiD,OAAQ,GACR36C,OAAQ,KACRwW,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAHKs4C,EAAUr4C,EAAA,GAAEs4C,EAAat4C,EAAA,GAK1BuV,GAAcC,EAAAA,EAAAA,kBACdK,EAAczyB,EAAAA,SAASgzB,iBAG7B,GAAKP,UAAAA,EAAa2B,SAChB,OACEnzB,EAAAA,EAAAA,KAACqyD,GAAc,CAAA70D,UACbwC,EAAAA,EAAAA,KAAC8yD,GAAY,CAAAt1D,UACX2X,EAAAA,EAAAA,MAAC0V,GAAI,CAAArtB,SAAA,EACHwC,EAAAA,EAAAA,KAACizD,GAAS,CAAAz1D,SAAC,qBACXwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,iEAQb,IAAc8zD,GAAUjhC,EAAAA,EAAAA,UAAS,cAAe6jC,EAAAA,SAASC,UAAjDtjC,KAER6G,GAAsDrH,EAAAA,EAAAA,UACpD,CAAC,cAAeyjC,GAChB,kBAAMI,EAAAA,SAASE,SAASN,EAAY,EACpC,CACEpjC,QAAuB,UAAdsvB,EACTxK,kBAAkB,IAErBmW,EAAAj0B,EAPO7G,KAAMihB,OAAK,IAAA6Z,EAAG,GAAEA,EAAa0I,EAAY38B,EAAvBkD,UAS1BmnB,GAAkD1xB,EAAAA,EAAAA,UAChD,CAAC,YAAa2jC,GACd,kBAAME,EAAAA,SAASlE,OAAOgE,EAAW,EACjC,CACEtjC,QAAuB,QAAdsvB,EACTxK,kBAAkB,IAErB8e,EAAAvS,EAPOlxB,KAAMq/B,OAAG,IAAAoE,EAAG,GAAEA,EAAaC,EAAUxS,EAArBnnB,UAevB45B,GAN8BnkC,EAAAA,EAAAA,UAC7B,gBACA6jC,EAAAA,SAASO,WACT,CACE/jC,QAAuB,YAAdsvB,IAJLnvB,KAAM6jC,OAAO,IAAAF,EAAG,GAAEA,EASpBG,GAAqBhwB,EAAAA,EAAAA,aACzB,SAAApnC,GAAA,IAAG4N,EAAM5N,EAAN4N,OAAQypD,EAAMr3D,EAANq3D,OAAM,OAAOV,EAAAA,SAASW,WAAW1pD,EAAQypD,EAAO,EAC3D,CACEv5C,UAAW,SAACwV,EAAMikC,GAOhBtiC,EAAAA,GAAMC,QAAQ,gBAAD5tB,OANQ,CACnBkwD,IAAK,eACLC,MAAO,gBACPC,OAAQ,SACRC,OAAQ,iBAEiCJ,EAAUF,QAAO,MAC5D1jC,EAAYkiB,kBAAkB,eAC9BliB,EAAYkiB,kBAAkB,cAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIE81D,GAAmBxwB,EAAAA,EAAAA,aACvB,SAAApmC,GAAA,IAAGkO,EAAIlO,EAAJkO,KAAMmoD,EAAMr2D,EAANq2D,OAAM,OAAOV,EAAAA,SAASkB,SAAS3oD,EAAMmoD,EAAO,EACrD,CACEv5C,UAAW,SAACwV,EAAMikC,GAMhBtiC,EAAAA,GAAMC,QAAQ,cAAD5tB,OALQ,CACnBwwD,QAAS,WACTC,OAAQ,YACRL,OAAQ,WAE+BH,EAAUF,QAAO,MAC1D1jC,EAAYkiB,kBAAkB,aAC9BliB,EAAYkiB,kBAAkB,cAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIEk2D,GAAuB5wB,EAAAA,EAAAA,aAC3B,SAAArL,GAAA,IAAGk8B,EAAQl8B,EAARk8B,SAAUZ,EAAMt7B,EAANs7B,OAAM,OAAOV,EAAAA,SAASuB,aAAaD,EAAUZ,EAAO,EACjE,CACEv5C,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,sBACdvB,EAAYkiB,kBAAkB,gBAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAKEq2D,EAAmB,SAACvqD,EAAQypD,GAQ5Bh1D,OAAO0yB,QAPa,CACtByiC,IAAK,8BACLC,MAAO,+BACPC,OAAQ,iDACRC,OAAQ,gCAGyBN,KACjCD,EAAmBjuB,OAAO,CAAEv7B,OAAAA,EAAQypD,OAAAA,GAExC,EAEMe,EAAiB,SAAClpD,EAAMmoD,GAOxBh1D,OAAO0yB,QANa,CACtB+iC,QAAS,uBACTC,OAAQ,wBACRL,OAAQ,uBAGyBL,KACjCO,EAAiBzuB,OAAO,CAAEj6B,KAAAA,EAAMmoD,OAAAA,GAEpC,EAMMgB,EAAa,SAACjE,GAElB,OADa,IAAI56B,KAAK46B,GACVna,mBAAmB,QAAS,CACtCoa,IAAK,UACLC,MAAO,UACPC,KAAM,UACN9E,KAAM,UACNC,OAAQ,WAEZ,EAEA,OACE93C,EAAAA,EAAAA,MAACk9C,GAAc,CAAA70D,SAAA,EACb2X,EAAAA,EAAAA,MAACm9C,GAAW,CAAA90D,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,6BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,uCAGL2X,EAAAA,EAAAA,MAAC29C,GAAY,CAAAt1D,SAAA,EACX2X,EAAAA,EAAAA,MAACgoC,GAAa,CAAA3/C,SAAA,EACZwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFn9C,UAAyB,cAAd+/C,EAA4B,SAAW,GAClD9hC,QAAS,WAAF,OAAQ+hC,EAAa,YAAY,EAACziD,SAC1C,aAGDwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFn9C,UAAyB,UAAd+/C,EAAwB,SAAW,GAC9C9hC,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,SACtC,kBAGDwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFn9C,UAAyB,QAAd+/C,EAAsB,SAAW,GAC5C9hC,QAAS,WAAF,OAAQ+hC,EAAa,MAAM,EAACziD,SACpC,gBAGDwC,EAAAA,EAAAA,KAACo9C,GAAG,CACFn9C,UAAyB,YAAd+/C,EAA0B,SAAW,GAChD9hC,QAAS,WAAF,OAAQ+hC,EAAa,UAAU,EAACziD,SACxC,cAKY,cAAdwiD,IACC7qC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACg+C,GAAS,CAAA31D,SAAA,EACR2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAA51D,SAAA,EACPwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,UAAE8zD,aAAK,EAALA,EAAOuE,cAAe,KAC/C71D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,4BAEzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAA51D,SAAA,EACPwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,UAAE8zD,aAAK,EAALA,EAAOwE,eAAgB,KAChD91D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,+BAEzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAA51D,SAAA,EACPwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,UAAE8zD,aAAK,EAALA,EAAOyE,YAAa,KAC7C/1D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,yBAEzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAA51D,SAAA,EACPwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,UAAE8zD,aAAK,EAALA,EAAO0E,kBAAmB,KACnDh2D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,uBAI3B2X,EAAAA,EAAAA,MAAC0V,GAAI,CAAArtB,SAAA,EACHwC,EAAAA,EAAAA,KAACizD,GAAS,CAAAz1D,SAAC,0BACX2X,EAAAA,EAAAA,MAACo+C,GAAK,CAAA/1D,SAAA,EACJwC,EAAAA,EAAAA,KAAA,SAAAxC,UACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,WACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,mBAGRwC,EAAAA,EAAAA,KAAA,SAAAxC,SACG8zD,SAAsB,QAAjBuC,EAALvC,EAAO2E,uBAAe,IAAApC,OAAA,EAAtBA,EAAwB71C,IAAI,SAACk4C,EAAUpxC,GAAK,OAC3C3P,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo4D,EAAWM,EAAS18B,cACzBrkB,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAE04D,EAAStkC,SACf5xB,EAAAA,EAAAA,KAAA,MAAAxC,SAAK04D,EAAStB,WAHP9vC,EAIJ,cAQF,UAAdk7B,IACC7qC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACyyC,GAAe,CAAApqD,SAAA,EACdwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACL8P,YAAY,yBACZC,MAAOq2C,EAAYhU,OACnBnpC,SAAU,SAACuG,GAAC,OAAK62C,EAAe,SAAAl1D,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEihD,OAAQ5iC,EAAEW,OAAOJ,OAAK,EAAI,KAEhFtI,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOq2C,EAAY3uD,OACnBwR,SAAU,SAACuG,GAAC,OAAK62C,EAAe,SAAAl1D,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEsG,OAAQ+X,EAAEW,OAAOJ,OAAK,EAAI,EAACjgB,SAAA,EAE/EwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,iBACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,cACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,qBACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,4BAI7B2X,EAAAA,EAAAA,MAAC0V,GAAI,CAAArtB,SAAA,EACHwC,EAAAA,EAAAA,KAACizD,GAAS,CAAAz1D,SAAC,iBACV62D,GACCr0D,EAAAA,EAAAA,KAAA,OAAAxC,SAAK,iBAEL2X,EAAAA,EAAAA,MAACo+C,GAAK,CAAA/1D,SAAA,EACJwC,EAAAA,EAAAA,KAAA,SAAAxC,UACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,WACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,WACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,oBACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,mBAGRwC,EAAAA,EAAAA,KAAA,SAAAxC,SACGs0C,EAAM9zB,IAAI,SAAA4T,GAAI,OACbzc,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAEo0B,EAAK1rB,UACXlG,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo0B,EAAKoS,SACVhkC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo4D,EAAWhkC,EAAK6G,eACrBtjB,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAC2zD,GAAW,CAAC1zD,UAAW2xB,EAAKukC,OAAS,SAAW,SAAS34D,SACvDo0B,EAAKukC,OAAS,eAAiB,YAEjCvkC,EAAKwkC,WAAYp2D,EAAAA,EAAAA,KAAC2zD,GAAW,CAAC1zD,UAAU,UAASzC,SAAC,sBAErDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo0B,EAAKykC,UAAYT,EAAWhkC,EAAKykC,WAAa,aACnDlhD,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CACGo0B,EAAKukC,QACJn2D,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAAQw3C,EAAiB9jC,EAAKiH,GAAI,QAAQ,EAACr7B,SACnD,oBAIDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAAQw3C,EAAiB9jC,EAAKiH,GAAI,MAAM,EAACr7B,SACjD,mBAIDo0B,EAAKwkC,WACLp2D,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAAQw3C,EAAiB9jC,EAAKiH,GAAI,SAAS,EAACr7B,SACpD,oBAIHwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,SACVie,QAAS,WAAF,OAAQw3C,EAAiB9jC,EAAKiH,GAAI,SAAS,EAACr7B,SACpD,iBAtCIo0B,EAAKiH,GA0CT,cASJ,QAAdmnB,IACC7qC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAACyyC,GAAe,CAAApqD,SAAA,EACdwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACL8P,YAAY,sBACZC,MAAOu2C,EAAWlU,OAClBnpC,SAAU,SAACuG,GAAC,OAAK+2C,EAAc,SAAAp1D,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEihD,OAAQ5iC,EAAEW,OAAOJ,OAAK,EAAI,KAE/EtI,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOu2C,EAAW7uD,OAClBwR,SAAU,SAACuG,GAAC,OAAK+2C,EAAc,SAAAp1D,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAEsG,OAAQ+X,EAAEW,OAAOJ,OAAK,EAAI,EAACjgB,SAAA,EAE9EwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,iBACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,kBACxBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,gBACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,uBAI7B2X,EAAAA,EAAAA,MAAC0V,GAAI,CAAArtB,SAAA,EACHwC,EAAAA,EAAAA,KAACizD,GAAS,CAAAz1D,SAAC,eACV+2D,GACCv0D,EAAAA,EAAAA,KAAA,OAAAxC,SAAK,iBAEL2X,EAAAA,EAAAA,MAACo+C,GAAK,CAAA/1D,SAAA,EACJwC,EAAAA,EAAAA,KAAA,SAAAxC,UACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,eACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,WACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,SACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,mBAGRwC,EAAAA,EAAAA,KAAA,SAAAxC,SACG0yD,EAAIlyC,IAAI,SAAAoyC,GAAE,OACTj7C,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK4yD,EAAG/1B,SACRllB,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAE4yD,EAAG5X,WACTx4C,EAAAA,EAAAA,KAAA,MAAAxC,SAAK4yD,EAAG1iD,QACR1N,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo4D,EAAWxF,EAAG33B,eACnBz4B,EAAAA,EAAAA,KAAA,MAAAxC,UACEwC,EAAAA,EAAAA,KAAC2zD,GAAW,CAAC1zD,UAAWmwD,EAAGjrD,QAAU,UAAU3H,SAC9B,aAAd4yD,EAAGjrD,OAAwB,WACb,aAAdirD,EAAGjrD,OAAwB,YAAc,oBAG9CgQ,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,GACK4yD,EAAGjrD,QAAwB,YAAdirD,EAAGjrD,UACjBgQ,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAAQy3C,EAAevF,EAAGv3B,GAAI,UAAU,EAACr7B,SACjD,cAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAAQy3C,EAAevF,EAAGv3B,GAAI,SAAS,EAACr7B,SAChD,kBAKLwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,SACVie,QAAS,WAAF,OAAQy3C,EAAevF,EAAGv3B,GAAI,SAAS,EAACr7B,SAChD,iBA/BI4yD,EAAGv3B,GAmCP,cASJ,YAAdmnB,IACC7qC,EAAAA,EAAAA,MAAC0V,GAAI,CAAArtB,SAAA,EACHwC,EAAAA,EAAAA,KAACizD,GAAS,CAAAz1D,SAAC,0BACX2X,EAAAA,EAAAA,MAACo+C,GAAK,CAAA/1D,SAAA,EACJwC,EAAAA,EAAAA,KAAA,SAAAxC,UACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,WACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,mBAGRwC,EAAAA,EAAAA,KAAA,SAAAxC,SACGk3D,EAAQ12C,IAAI,SAAAs4C,GAAM,OACjBnhD,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAE84D,EAAO7gC,cACbtgB,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,IAAE84D,EAAOC,gBACbv2D,EAAAA,EAAAA,KAAA,MAAAxC,SAAK84D,EAAOE,UACZx2D,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo4D,EAAWU,EAAO79B,eACvBz4B,EAAAA,EAAAA,KAAA,MAAAxC,UACEwC,EAAAA,EAAAA,KAAC2zD,GAAW,CAAC1zD,UAAWq2D,EAAOnxD,QAAU,UAAU3H,SAC9B,aAAlB84D,EAAOnxD,OAAwB,SAAW,aAG/CnF,EAAAA,EAAAA,KAAA,MAAAxC,WACK84D,EAAOnxD,QAA4B,YAAlBmxD,EAAOnxD,UACzBnF,EAAAA,EAAAA,KAACsmB,GAAM,CACLrmB,UAAU,UACVie,QAAS,WAAF,OAxSHs3C,EAwS8Bc,EAAOz9B,QAvS/D08B,EAAqB7uB,OAAO,CAAE8uB,SAAAA,EAAUZ,OAuS2B,YAxS1C,IAACY,CAwSmD,EAACh4D,SACzD,gBAfE84D,EAAOz9B,GAoBX,gBASvB,E,iDC9pBM49B,IAAY7iC,EAAAA,EAAAA,IAAS1d,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4GAMrBugD,IAAU9iC,EAAAA,EAAAA,IAAStd,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,mIAKnBwgD,IAAiB3gD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkBS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,ygBAkBxBugD,IAIXE,GAAc5gD,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,+FAOxB0gD,GAAY7gD,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,+IAGbsgD,IAITK,GAAa9gD,EAAAA,GAAOyE,GAAE5C,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,sLAWtB4gD,GAAgB/gD,EAAAA,GAAOwB,EAACO,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,2HAUxB6gD,GAAehhD,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,4OAezBke,GAAWre,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,6CAKrBoe,GAAWve,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,qTAiBrB8gD,GAAiBjhD,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,qNAElBsgD,IASTS,GAAelhD,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,sMAazBue,IAAa1e,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc4C,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,4XAc3Bwe,IAAgB3e,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAc8C,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,uQAY9BghD,GAAYnhD,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,iIAyH5B,SAhH0B,SAAH5Y,GAKjB,IAAAw3B,EAkBgB48B,EACZrsB,EACAtO,EACAogC,EAzBRpiC,EAAYz3B,EAAZy3B,aACAqiC,EAAS95D,EAAT85D,UACApiC,EAAW13B,EAAX03B,YAAWqiC,EAAA/5D,EACXg6D,eAAAA,OAAc,IAAAD,GAAQA,EAEhBtmC,GAAWC,EAAAA,EAAAA,MAEXsE,GAAYP,SAAkB,QAAND,EAAZC,EAAcnE,YAAI,IAAAkE,OAAA,EAAlBA,EAAoBS,cAAcR,aAAY,EAAZA,EAAcS,WAC5DC,EAAWV,aAAY,EAAZA,EAAcW,eAUzB6hC,EAAoB,WACxBxmC,EAAS,YAADnsB,OAAa0wB,GACvB,EAaA,OACEpgB,EAAAA,EAAAA,MAACwhD,GAAc,CACb1gC,QAAS,CAAEE,MAAO,GAAKD,QAAS,GAChCE,QAAS,CACPD,MAAOohC,EAAiB,GAAM,EAC9BrhC,QAASqhC,EAAiB,EAAI,EAC9Bv3C,EAAGu3C,GAAkB,GAAK,GAE5BlhC,KAAM,CAAEF,MAAO,GAAKD,QAAS,GAC7BI,WAAY,CACV5oB,KAAM,SACN6oB,SAAUghC,EAAiB,GAAM,GACjC/gC,OAAQ+gC,EAAiB,EAAI,IAC7B/5D,SAAA,EAEF2X,EAAAA,EAAAA,MAACyhD,GAAW,CAAAp5D,SAAA,EACVwC,EAAAA,EAAAA,KAAC62D,GAAS,CAAAr5D,SAAC,QACXwC,EAAAA,EAAAA,KAAC82D,GAAU,CAAAt5D,SAAC,wBACZwC,EAAAA,EAAAA,KAAC+2D,GAAa,CAAAv5D,SAAC,uDAGjB2X,EAAAA,EAAAA,MAAC6hD,GAAY,CAAAx5D,SAAA,EACX2X,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACPwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAM2K,SAAAA,EAAUe,OAAS,YAAH5xB,OAAe6wB,EAASe,QAAW,GACzDlN,MAAM,OACNC,UAAU,OACV2B,SAAS,EAAK3tB,WAEZk4B,SAAAA,EAAUe,SAAU,OAExBz2B,EAAAA,EAAAA,KAACu0B,GAAQ,CAAA/2B,SAAC,WAGZwC,EAAAA,EAAAA,KAACi3D,GAAc,CAAAz5D,SAAC,QAEhB2X,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACPwC,EAAAA,EAAAA,KAAC8qB,GAAM,CACLC,KAAM2K,SAAAA,EAAUe,OAAS,YAAH5xB,OAAe6wB,EAASe,QAAW,GACzDlN,MAAM,OACNC,UAAU,OACV2B,SAAS,EAAK3tB,WAEZk4B,SAAAA,EAAUe,UAAWlB,EAAYA,EAAUlC,OAAO,GAAGC,cAAgB,QAEzEne,EAAAA,EAAAA,MAACof,GAAQ,CACPnf,MAAO,CAAEsjC,OAAQ,WACjBx6B,QAAS,WAAF,OAAQs5C,GAAmB,EAClCn9B,MAAM,oCAAmC78B,SAAA,CAC1C,IACG+3B,GAAa,yBAKrBpgB,EAAAA,EAAAA,MAAC+hD,GAAY,CAAA15D,SAAA,EACXwC,EAAAA,EAAAA,KAAC00B,GAAU,CAACxW,QA/EM,WAClB+W,EACFA,EAAYM,GAEZvE,EAAS,SAADnsB,OAAU0wB,GAEtB,EAyE2C/3B,SAAC,mBAItCwC,EAAAA,EAAAA,KAAC20B,GAAa,CAACpO,SAAS,YAAYrI,QAASs5C,EAAkBh6D,SAAC,eAI/D65D,IACCr3D,EAAAA,EAAAA,KAAC20B,GAAa,CAACpO,SAAS,YAAYrI,QAASm5C,EAAU75D,SAAC,kBAM5DwC,EAAAA,EAAAA,KAACm3D,GAAS,CAAA35D,UAlFMm0D,EAmFF38B,EAAayD,WAlFvB6M,EAAO,IAAIvO,KAAK46B,GAChB36B,EAAM,IAAID,KACVqgC,EAAcj1C,KAAKs1C,OAAOzgC,EAAMsO,GAAQ,KAE1C8xB,EAAc,EAAU,aACxBA,EAAc,GAAW,GAAPvyD,OAAUuyD,EAAW,cACvCA,EAAc,KAAa,GAAPvyD,OAAUsd,KAAKs1C,MAAML,EAAc,IAAG,YACvD9xB,EAAKkS,mBAAmB,cA+EnC,E,iqBCzPA,IA0BMkgB,GAAuB,SAAChqD,GAqB5B,MApBiB,CACfxI,QAAS,UACTunC,KAAM,UACNkrB,MAAO,UACPzS,KAAM,UACN3mC,MAAO,UACP0T,MAAO,UACP2lC,KAAM,UACNC,aAAc,UACdC,MAAO,UACPC,OAAQ,UACRplB,OAAQ,UACRqlB,MAAO,UACP3hB,QAAS,UACT4hB,WAAY,UACZC,SAAU,UACV7L,QAAS,UACT8L,UAAW,WAGGzqD,IAAS,SAC3B,EAEM0qD,IAAyBpiD,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAI9CkiD,GAAsBriD,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,iPAchCmiD,GAAatiD,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,uMAYvBoiD,GAAYviD,EAAAA,GAAOmC,OAAMV,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,0YAGf,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,aAAa,EACjG,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EASrC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAC3B,oDACA,kFAAkF,EAE3E,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAGrD,SAAAjrB,GAAK,OAAIA,EAAMyhD,OAAS,GAAK,qCAAJ3zD,OAEXkS,EAAMyhD,OAAM,0UAe3B,GAQGC,GAAcziD,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,4JAWxBuiD,GAAoB1iD,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,qEAM9BwiD,IAAmB3iD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,4XAKhB,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,EAI5C,SAAA3Y,GAAK,OAAKA,EAAM6hD,UAAWxlC,EAAAA,EAAAA,IAAGnb,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,kWAc/B,GAYG0iD,GAAsB7iD,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,sEAMhC2iD,GAAmB9iD,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,6QAInB,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,GAa/BqpC,GAAsB/iD,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,uCAKhC6iD,GAAoBhjD,EAAAA,GAAOme,GAAEzb,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,+KAY7B8iD,GAAsBjjD,EAAAA,GAAOwB,EAACoB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,2JAW9B+iD,GAAmBljD,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,sFAO7BgjD,GAAmBnjD,EAAAA,GAAOQ,KAAIwC,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,iDAK9BijD,GAAuBpjD,EAAAA,GAAOQ,KAAI0C,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,uIAOpC,SAAAY,GACA,OAAQA,EAAMsiD,WACZ,IAAK,OACH,MAAO,uCACT,IAAK,SACH,MAAO,uCAGT,QACE,MAAO,uCAEb,GAGIC,GAAsBtjD,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,iEAOhCojD,IAAgBvjD,EAAAA,EAAAA,IAAO2U,GAAP3U,CAAkBsD,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,+YAkBlCw+B,GAAa3+B,EAAAA,GAAOmB,IAAGqC,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,mwDAmFvBqjD,GAAaxjD,EAAAA,GAAOmB,IAAGuC,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,qEAMvBsjD,IAAYzjD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB4D,KAAAA,IAAAzD,EAAAA,EAAAA,GAAA,+VAkB9BujD,GAAe1jD,EAAAA,GAAOmB,IAAG2C,KAAAA,IAAA3D,EAAAA,EAAAA,GAAA,kEAMzBwjD,GAAc3jD,EAAAA,GAAOmB,IAAG6C,KAAAA,IAAA7D,EAAAA,EAAAA,GAAA,6cA0BxByjD,GAAe5jD,EAAAA,GAAOmB,IAAG+C,KAAAA,IAAA/D,EAAAA,EAAAA,GAAA,uCAKzB0jD,GAAY7jD,EAAAA,GAAOme,GAAE/Z,KAAAA,IAAAjE,EAAAA,EAAAA,GAAA,2LAarB2jD,GAAY9jD,EAAAA,GAAOmB,IAAGmD,KAAAA,IAAAnE,EAAAA,EAAAA,GAAA,6GAQtB4jD,GAAc/jD,EAAAA,GAAOQ,KAAIgE,KAAAA,IAAArE,EAAAA,EAAAA,GAAA,sHAQzB6jD,GAAgBhkD,EAAAA,GAAOQ,KAAIkE,KAAAA,IAAAvE,EAAAA,EAAAA,GAAA,iDAK3B8jD,GAAYjkD,EAAAA,GAAOQ,KAAImE,KAAAA,IAAAxE,EAAAA,EAAAA,GAAA,iDAKvB+jD,GAAelkD,EAAAA,GAAOmB,IAAGyD,KAAAA,IAAAzE,EAAAA,EAAAA,GAAA,iEAqvB/B,SA/uBsB,WACpB,IAAA1Y,GAA4BC,EAAAA,EAAAA,UAAS,OAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApC86B,EAAM56B,EAAA,GAAEw8D,EAASx8D,EAAA,GACxBI,GAA0DL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GACtE2d,GAD4B1d,EAAA,GAA0BA,EAAA,IACdN,EAAAA,EAAAA,UAAS,IAAIwoD,MAAMvqC,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAApD0+C,EAAYz+C,EAAA,GAAE0+C,EAAe1+C,EAAA,GAC9BuV,GAAcC,EAAAA,EAAAA,kBACdH,GAAWC,EAAAA,EAAAA,MAGjBmb,GAAwD/b,EAAAA,EAAAA,UACtD,CAAC,gBAAiBkI,GAClB,WAEE,GAAe,WAAXA,EACF,MAAO,CAAET,cAAe,GAAIozB,aAAc,GAG5C,IAAMpa,EAAU,CAAC,EAGjB,MAFe,WAAXvY,IAAqBuY,EAAQlZ,QAAS,GAC3B,QAAXW,GAA+B,WAAXA,IAAqBuY,EAAQpjC,KAAO6qB,GACrDjI,EAAAA,iBAAiBqH,iBAAiBmZ,EAC3C,EACA,CACEtgB,gBAAiB,IACjBE,QAAoB,WAAX6H,EACT5H,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAlBUi7D,EAAiBluB,EAAvBvb,KAAyB+J,EAASwR,EAATxR,UAAWyR,EAAOD,EAAPC,QAuB5C3U,GAAuDrH,EAAAA,EAAAA,UACrD,CAAC,SAAUkI,GACX,kBAAMjI,EAAAA,iBAAiBiqC,WAAW,EAClC,CACE7pC,QAAoB,WAAX6H,GAAuBx5B,EAAAA,SAASw0B,MAAM/B,GAC/Cb,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAPUm7D,EAAU9iC,EAAhB7G,KAA6B4pC,EAAa/iC,EAAxBkD,UAYZpJ,GAAgBnB,EAAAA,EAAAA,UAC5B,CAAC,eACD,WACE,IAAMnsB,EAAQO,aAAaC,QAAQ,kBACnC,IAAKR,EAAO,OAAO,KAEnB,IACE,IAAMw2D,EAAU30D,KAAKmnC,MAAMytB,KAAKz2D,EAAMyrC,MAAM,KAAK,KACjD,MAAO,CACLzpC,MAAOw0D,EAAQx0D,MACfutB,QAASinC,EAAQjnC,SAAW,OAEhC,CAAE,MAAOp0B,GAEP,OADAH,QAAQG,MAAM,0BAA2BA,GAClC,IACT,CACF,EACA,CACEirD,UAAW,IACXsQ,UAAW,MAnBP/pC,KAuBFiH,GAAgBwiC,aAAiB,EAAjBA,EAAmBxiC,gBAAiB,GACpDhH,GAAcwpC,aAAiB,EAAjBA,EAAmBpP,eAAgB,EACjD2P,GAASL,aAAU,EAAVA,EAAYK,SAAU,GAI/BC,GAAwB3K,EAAAA,EAAAA,SAAQ,WAEpC,MAAe,WAAX53B,EACK,GAGJT,GAA0C,IAAzBA,EAAcvzB,OAIrB,WAAXg0B,EACKT,EAAcS,OAAO,SAAAwiC,GAAK,OAAKA,EAAMC,OAAO,GAC/B,QAAXziC,EACFT,EAAcS,OAAO,SAAAwiC,GAAK,OAAIA,EAAMrtD,OAAS6qB,CAAM,GAErDT,EARE,EASX,EAAG,CAACA,EAAeS,IAGb0iC,GAAc9K,EAAAA,EAAAA,SAAQ,WAC1B,OAAKr4B,GAA0C,IAAzBA,EAAcvzB,OAI7BuzB,EAAcojC,OAAO,SAACC,EAAKJ,GAEhC,OADAI,EAAIJ,EAAMrtD,OAASytD,EAAIJ,EAAMrtD,OAAS,GAAK,EACpCytD,CACT,EAAG,CAAC,GANK,CAAC,CAOZ,EAAG,CAACrjC,IAGEsjC,GAAqBjL,EAAAA,EAAAA,SAAQ,WACjC,OAAKr4B,GAA0C,IAAzBA,EAAcvzB,OAI7BuzB,EAAcS,OAAO,SAAAwiC,GAAK,OAAKA,EAAMC,OAAO,GAAEz2D,OAH5C,CAIX,EAAG,CAACuzB,IAGEujC,GAAqB12B,EAAAA,EAAAA,aAAYrU,EAAAA,iBAAiBwJ,WAAY,CAClEze,UAAW,SAACwV,EAAMikC,GAEhB5jC,EAAYu1B,aAAa,CAAC,gBAAiBluB,GAAS,SAAC+iC,GACnD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAc9Z,IAAI,SAAA+8C,GAAK,OAC5CA,EAAMliC,KAAOi8B,EAASnwD,GAAAA,GAAA,GACbo2D,GAAK,IAAEC,SAAS,IACrBD,CAAK,GAEX7P,aAAc/oC,KAAKC,IAAI,GAAIk5C,EAAQpQ,cAAgB,GAAK,KARrCoQ,CAUvB,GAGApqC,EAAYu1B,aAAa,CAAC,gBAAiB,OAAQ,SAAC6U,GAClD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAc9Z,IAAI,SAAA+8C,GAAK,OAC5CA,EAAMliC,KAAOi8B,EAASnwD,GAAAA,GAAA,GACbo2D,GAAK,IAAEC,SAAS,IACrBD,CAAK,GAEX7P,aAAc/oC,KAAKC,IAAI,GAAIk5C,EAAQpQ,cAAgB,GAAK,KARrCoQ,CAUvB,GAEA9oC,EAAAA,GAAMC,QAAQ,uCAChB,EACA9B,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIk8D,GAAwB52B,EAAAA,EAAAA,aAAYrU,EAAAA,iBAAiBkrC,cAAe,CACxEngD,UAAW,WAET6V,EAAYu1B,aAAa,CAAC,gBAAiBluB,GAAS,SAAC+iC,GACnD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAc9Z,IAAI,SAAA+8C,GAAK,OAAAp2D,GAAAA,GAAA,GAAUo2D,GAAK,IAAEC,SAAS,GAAI,GAC5E9P,aAAc,IAJKoQ,CAMvB,GAGApqC,EAAYu1B,aAAa,CAAC,gBAAiB,OAAQ,SAAC6U,GAClD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAc9Z,IAAI,SAAA+8C,GAAK,OAAAp2D,GAAAA,GAAA,GAAUo2D,GAAK,IAAEC,SAAS,GAAI,GAC5E9P,aAAc,IAJKoQ,CAMvB,GAEA9oC,EAAAA,GAAMC,QAAQ,2CAChB,EACA9B,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIo8D,GAA6B92B,EAAAA,EAAAA,aAAYrU,EAAAA,iBAAiBorC,mBAAoB,CAClFrgD,UAAW,SAACwV,EAAMikC,GAEhB5jC,EAAYu1B,aAAa,CAAC,gBAAiBluB,GAAS,SAAC+iC,GACnD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAcS,OAAO,SAAAwiC,GAAK,OAAIA,EAAMliC,KAAOi8B,CAAS,KAHxDwG,CAKvB,GAGApqC,EAAYu1B,aAAa,CAAC,gBAAiB,OAAQ,SAAC6U,GAClD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAcS,OAAO,SAAAwiC,GAAK,OAAIA,EAAMliC,KAAOi8B,CAAS,KAHxDwG,CAKvB,GAEA9oC,EAAAA,GAAMC,QAAQ,sBAChB,EACA9B,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAGIs8D,GAAkCh3B,EAAAA,EAAAA,aAAYrU,EAAAA,iBAAiBsrC,wBAAyB,CAC5FvgD,UAAW,WAET6V,EAAYu1B,aAAa,CAAC,gBAAiBluB,GAAS,SAAC+iC,GACnD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAcS,OAAO,SAAAwiC,GAAK,OAAKA,EAAMC,OAAO,KAHhDM,CAKvB,GAGApqC,EAAYu1B,aAAa,CAAC,gBAAiB,OAAQ,SAAC6U,GAClD,OAAKA,EACL32D,GAAAA,GAAA,GACK22D,GAAO,IACVxjC,cAAewjC,EAAQxjC,cAAcS,OAAO,SAAAwiC,GAAK,OAAKA,EAAMC,OAAO,KAHhDM,CAKvB,GAEA9oC,EAAAA,GAAMC,QAAQ,kCAChB,EACA9B,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAIIm4D,EAAoB,SAACp9B,GACrBA,GACFpJ,EAAS,YAADnsB,OAAau1B,GAEzB,EAGMyhC,EAAiB,SAAC7mC,GAEtB,OAAOA,EAAaS,WACb,CAAC,OAAQ,YAAa,OAAQ,gBAAiB,aAAc,SAAU,WAAWqI,SAAS9I,EAAatnB,KACjH,EAGMouD,EAAmB,SAACjjC,GAExBwhC,EAAgB,SAAAx7D,GAAI,OAAI,IAAIqnD,IAAIrnD,GAAMk9D,IAAIljC,EAAG,GAG7CwiC,EAAmB30B,OAAO7N,GAGX,WAAXN,GACFlb,WAAW,WACTg9C,EAAgB,SAAAx7D,GACd,IAAMm9D,EAAS,IAAI9V,IAAIrnD,GAEvB,OADAm9D,EAAO/G,OAAOp8B,GACPmjC,CACT,EACF,EAAG,IAEP,EAqBMC,GAAa9L,EAAAA,EAAAA,SAAQ,WACzB,IAAM+L,EAAO,CACX,CAAEhqC,IAAK,MAAOjc,MAAO,MAAOg1B,MAAOnT,EAAcvzB,QACjD,CAAE2tB,IAAK,SAAUjc,MAAO,gBAAiBg1B,MAAOmwB,GAChD,CAAElpC,IAAK,QAASjc,MAAO,WAAYg1B,MAAOgwB,EAAY18C,OAAS,GAC/D,CAAE2T,IAAK,UAAWjc,MAAO,YAAag1B,MAAOgwB,EAAY/1D,SAAW,GACpE,CAAEgtB,IAAK,OAAQjc,MAAO,QAASg1B,MAAOgwB,EAAYxuB,MAAQ,GAC1D,CAAEva,IAAK,OAAQjc,MAAO,UAAWg1B,MAAOgwB,EAAY/V,MAAQ,GAC5D,CAAEhzB,IAAK,SAAUjc,MAAO,YAAag1B,MAAOgwB,EAAYlD,QAAU,IAQpE,OAJIh5D,EAAAA,SAASw0B,MAAM/B,IACjB0qC,EAAKC,OAAO,EAAG,EAAG,CAAEjqC,IAAK,SAAUjc,MAAO,WAAYg1B,MAAO4vB,EAAOt2D,OAAQ63D,SAAS,IAGhFF,CACT,EAAG,CAACpkC,EAAcvzB,OAAQ62D,EAAoBH,EAAaJ,EAAOt2D,OAAQitB,IAE1E,OAAIoJ,GAEA56B,EAAAA,EAAAA,KAACo4D,GAAsB,CAAA56D,UACrBwC,EAAAA,EAAAA,KAACkpB,GAAW,CAAA1rB,UACVwC,EAAAA,EAAAA,KAAC+rB,GAAc,SAOrB/rB,EAAAA,EAAAA,KAACo4D,GAAsB,CAAA56D,UACrB2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAQ5oB,SAAA,EAC7B2X,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,gBAAgBD,OAAO,SAASI,OAAK,EAAAjuB,SAAA,EAC3D2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAAtsB,SAAA,EACXwC,EAAAA,EAAAA,KAACooB,GAAQ,IAAG,kBAGdpoB,EAAAA,EAAAA,KAACsmB,GAAM,CAACiD,MAAM,QAAQrL,QAAS,WAAF,OAAQmuB,GAAS,EAAC7uC,SAAC,iBAKlD2X,EAAAA,EAAAA,MAACkjD,GAAmB,CAAA76D,SAAA,EAClBwC,EAAAA,EAAAA,KAACs4D,GAAU,CAAA96D,SACRy+D,EAAWj+C,IAAI,SAAAq+C,GAAG,OACjBr8D,EAAAA,EAAAA,KAACu4D,GAAS,CAERv2B,QAASzJ,IAAW8jC,EAAInqC,IACxBsmC,OAAoB,WAAZ6D,EAAInqC,IAAmBpB,EAAc,EAC7C5S,QAAS,WAAF,OAAQi8C,EAAUkC,EAAInqC,IAAI,EAAC10B,SAEjC6+D,EAAIpmD,OALAomD,EAAInqC,IAMC,MAIhB/c,EAAAA,EAAAA,MAACsjD,GAAW,CAAAj7D,SAAA,CACT49D,EAAqB,IACpBjmD,EAAAA,EAAAA,MAACmR,GAAM,CACLiD,MAAM,QACNhD,SAAS,YACTrI,QA1Ec,WACtBte,OAAO0yB,QAAQ,8CACjBipC,EAAsB70B,QAE1B,EAuEc7vB,SAAU0kD,EAAsB3gC,UAAUp9B,SAAA,EAE1CwC,EAAAA,EAAAA,KAACsd,GAAS,IAAG,mBAKjBnI,EAAAA,EAAAA,MAACmR,GAAM,CACLiD,MAAM,QACNhD,SAAS,SACTrI,QA/Ea,WACnBte,OAAO0yB,QAAQ,yCACjBqpC,EAAgCj1B,QAEpC,EA4EY7vB,SAAU8kD,EAAgC/gC,UAAUp9B,SAAA,EAEpDwC,EAAAA,EAAAA,KAACqoB,GAAS,IAAG,+BAMP,WAAXkQ,EACCkiC,GACEtlD,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,OACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,wDAEe,IAAlBq9D,EAAOt2D,QACT4Q,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,gBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,0CAGLwC,EAAAA,EAAAA,KAACw5D,GAAU,CAAAh8D,UACTwC,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACbq9D,EAAO78C,IAAI,SAACs+C,GAAK,OAChBt8D,EAAAA,EAAAA,KAACy5D,GAAS,CAERxjC,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BqW,KAAM,CAAEH,QAAS,EAAGlW,GAAI,IACxBsW,WAAY,CAAEC,SAAU,IAAM/4B,UAE9B2X,EAAAA,EAAAA,MAACukD,GAAY,CAAAl8D,SAAA,EACX2X,EAAAA,EAAAA,MAACwkD,GAAW,CAAAn8D,SAAA,CACT8+D,EAAM7lC,QAA2B,iBAAjB6lC,EAAM7lC,QACrBz2B,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAcy3D,EAAM7lC,QACvB/P,IAAK41C,EAAMC,QACX5rC,QAAS,SAACzT,GACRA,EAAEW,OAAOzI,MAAMC,QAAU,OACzB6H,EAAEW,OAAO2+C,YAAYpnD,MAAMC,QAAU,MACvC,IAEA,MACJrV,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAEC,QAASinD,EAAM7lC,QAA2B,iBAAjB6lC,EAAM7lC,OAA4B,OAAS,QAASj5B,SACzF8+D,EAAMC,QAAQlpC,OAAO,GAAGC,oBAI7Bne,EAAAA,EAAAA,MAACykD,GAAY,CAAAp8D,SAAA,EACXwC,EAAAA,EAAAA,KAAC65D,GAAS,CAAC37C,QAAS,WAAF,OAAQs5C,EAAkB8E,EAAMC,QAAQ,EAAC/+D,SACxD8+D,EAAMC,WAGTpnD,EAAAA,EAAAA,MAAC2kD,GAAS,CAAAt8D,SAAA,EACRwC,EAAAA,EAAAA,KAAC+5D,GAAW,CAAAv8D,SAAE8+D,EAAMn3D,UACpBgQ,EAAAA,EAAAA,MAAC6kD,GAAa,CAAAx8D,SAAA,CAAE8+D,EAAMt9B,KAAK,KAAGs9B,EAAM1+B,WACnC0+B,EAAMjR,SACLrrD,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,kBAIzD2X,EAAAA,EAAAA,MAAC8kD,GAAS,CAAAz8D,SAAA,CAAC,WACAuB,EAAAA,SAASu4C,cAAcglB,EAAMG,mBAI1Cz8D,EAAAA,EAAAA,KAACk6D,GAAY,CAAA18D,UACXwC,EAAAA,EAAAA,KAACu5D,GAAa,CACZhwC,MAAM,OACNhD,SAAS,YACTrI,QAAS,WAAF,OAAQs5C,EAAkB8E,EAAMC,QAAQ,EAC/CliC,MAAM,qBAAoB78B,SAC3B,aA/CA8+D,EAAMzjC,GAoDD,OAKe,IAAjCiiC,EAAsBv2D,QACxB4Q,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SACc,WAAX+6B,EACG,sCACA,kDAKRv4B,EAAAA,EAAAA,KAAC04D,GAAiB,CAAAl7D,UAChBwC,EAAAA,EAAAA,KAACg2B,GAAAA,EAAe,CAAAx4B,SACbs9D,EAAsB98C,IAAI,SAACgX,GAAiB,IAAAD,EAAA2nC,EAl6B9BhvD,EAqBrBivD,EA+4BQ,MAA0B,UAAtB3nC,EAAatnB,MAEb1N,EAAAA,EAAAA,KAAC48D,GAAiB,CAEhB5nC,aAAcA,EACdqiC,UAAW,WAAF,OAAQyE,EAAiB9mC,EAAa6D,GAAG,EAClD5D,YAAa,SAACmF,GAEZx6B,OAAOzB,SAASw8B,KAAO,SAAH91B,OAAYu1B,EAClC,EACAm9B,eAAgB6C,EAAayC,IAAI7nC,EAAa6D,KAPzC7D,EAAa6D,KActB74B,EAAAA,EAAAA,KAAC24D,GAAgB,CAEfjpC,OAAQgoC,GAAqB1iC,EAAatnB,MAC1CkrD,QAAS5jC,EAAagmC,QACtB/kC,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CACPF,QAASkkC,EAAayC,IAAI7nC,EAAa6D,IAAM,EAAI,EACjD7Y,EAAGo6C,EAAayC,IAAI7nC,EAAa6D,KAAO,GAAK,EAC7C1C,MAAOikC,EAAayC,IAAI7nC,EAAa6D,IAAM,GAAM,GAEnDxC,KAAM,CAAEH,QAAS,EAAGlW,GAAI,IACxBsW,WAAY,CAAEC,SAAU,IAAM/4B,UAE9B2X,EAAAA,EAAAA,MAAC0jD,GAAmB,CAAAr7D,SAAA,EAClBwC,EAAAA,EAAAA,KAAC84D,GAAgB,CAACppC,OAAQgoC,GAAqB1iC,EAAatnB,MAAMlQ,UAn8B3DkQ,EAo8BgBsnB,EAAatnB,KA/6BlDivD,EApBU,CACdz3D,QAAS+iB,GACTwkB,KAAMzkB,GACN2vC,MAAO5wC,GACPm+B,KAAM58B,GACN/J,MAAOyJ,GACPiK,MAAOzJ,GACPovC,KAAMpvC,GACNqvC,aAAcpvC,GACdqvC,MAAO1vC,GACP2vC,OAAQ3vC,GACRuqB,OAAQpqB,GACRyvC,MAAOjxC,GACPsvB,QAASpuB,GACTgwC,WAAYzvC,GACZ0vC,SAAU9vC,GACVikC,QAASjkC,GACT+vC,UAAW1vC,IAGiB/a,IAAS0a,IAChCpoB,EAAAA,EAAAA,KAAC28D,EAAa,QAi7BDxnD,EAAAA,EAAAA,MAAC4jD,GAAmB,CAAAv7D,SAAA,EAClBwC,EAAAA,EAAAA,KAACg5D,GAAiB,CAAAx7D,SACfw3B,EAAaqF,SAGhBllB,EAAAA,EAAAA,MAAC8jD,GAAmB,CAAAz7D,SAAA,CACK,SAAtBw3B,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,2BAGU,cAAtBT,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,2BACS,QAAjBV,EAAAC,EAAanE,YAAI,IAAAkE,OAAA,EAAjBA,EAAmB7vB,WAClBiQ,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,MAAE2X,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAG,IAAEw3B,EAAanE,KAAK3rB,QAAQ,aAItB,SAAtB8vB,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,yBACS,QAAjBinC,EAAA1nC,EAAanE,YAAI,IAAA6rC,OAAA,EAAjBA,EAAmB/Y,aAClBxuC,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,KAAGw3B,EAAanE,KAAK8yB,gBAIV,kBAAtB3uB,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,4BAGU,eAAtBT,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,wBAGU,WAAtBT,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,yBAGU,YAAtBT,EAAatnB,OACZyH,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEoV,MAAO,CACL0mB,MAAO,UACP4c,OAAQ,UACRpiB,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAEDw3B,EAAaS,YACP,2BAGX,CAAC,OAAQ,YAAa,OAAQ,gBAAiB,aAAc,SAAU,WAAWqI,SAAS9I,EAAatnB,OACxGsnB,EAAa9vB,YAIjBiQ,EAAAA,EAAAA,MAAC+jD,GAAgB,CAAA17D,SAAA,EACfwC,EAAAA,EAAAA,KAACm5D,GAAgB,CAAA37D,SACduB,EAAAA,SAASu4C,cAActiB,EAAayD,eAGvCz4B,EAAAA,EAAAA,KAACo5D,GAAoB,CAACC,UAAWrkC,EAAauF,SAAS/8B,SACpDw3B,EAAauF,WAGfvF,EAAaS,YACZtgB,EAAAA,EAAAA,MAAA,QACEC,MAAO,CACL8Y,SAAU,OACV4N,MAAO,UACP4c,OAAQ,UACRzlB,eAAgB,YAChB+I,WAAY,MACZ1F,WAAY,iBAEdpY,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,oCACNgC,aAAc,SAACnf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,cAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EACAQ,aAAc,SAACpf,GACbA,EAAEW,OAAOzI,MAAM+W,UAAY,WAC3BjP,EAAEW,OAAOzI,MAAM0mB,MAAQ,SACzB,EAAEt+B,SAAA,CACH,MACKw3B,EAAaS,oBAMzBtgB,EAAAA,EAAAA,MAACmkD,GAAmB,CAAA97D,SAAA,CAEjBq+D,EAAe7mC,KACdh1B,EAAAA,EAAAA,KAACu5D,GAAa,CACZhwC,MAAM,OACNhD,SAAS,YACTrI,QAAS,WAAF,OAAQs5C,EAAkBxiC,EAAaS,UAAU,EACxD4E,MAAM,qBAAoB78B,SAC3B,QAKDw3B,EAAagmC,UACbh7D,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpB,MAAM,OACNhD,SAAS,YACTrI,QAAS,WAAF,OAAQ49C,EAAiB9mC,EAAa6D,GAAG,EAChDwB,MAAM,2BAA0B78B,UAEhCwC,EAAAA,EAAAA,KAACsd,GAAS,OAIdtd,EAAAA,EAAAA,KAAC2qB,GAAU,CACTpB,MAAM,OACNhD,SAAS,YACTrI,QAAS,WAAF,OAndT2a,EAmd8B7D,EAAa6D,QAld3Dj5B,OAAO0yB,QAAQ,6BACjBmpC,EAA2B/0B,OAAO7N,IAFjB,IAACA,CAmd8C,EAC5CwB,MAAM,sBAAqB78B,UAE3BwC,EAAAA,EAAAA,KAACqoB,GAAS,aArQX2M,EAAa6D,GA2QxB,WAOd,E,uDCrsCMikC,IAAiB9mD,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAItCgnC,GAAgBnnC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,qPAc1BinC,GAAMpnC,EAAAA,GAAOmC,OAAM1B,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,wcAIT,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,aAAa,EACjG,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAYrC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAC3B,oDACA,kFAAkF,EAE3E,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,GASnDiO,GAAmBj6B,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,4MAY7B4mD,GAAY/mD,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,iMAYtB0xC,GAAc7xC,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,0eA2BxB6mD,IAAWhnD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkB+B,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,uRAc7B8mD,GAAajnD,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,onBAEb,SAAAY,GAAK,OAAIA,EAAMmmD,WAAa,OAAHr4D,OAAUkS,EAAMmmD,WAAU,KAAM,mDAAmD,EAe1G,SAAAnmD,GAAK,OAAIA,EAAMmmD,WAAa,qBAAuB,aAAa,GAqB5EC,GAAcnnD,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,4BAIxBinD,GAAYpnD,EAAAA,GAAOyE,GAAEnC,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,0JAWrBknD,GAAkBrnD,EAAAA,GAAOwB,EAACgB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,sMAW1BmnD,GAAWtnD,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,yHAQrBonD,GAAYvnD,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,iKAatBqnD,GAAWxnD,EAAAA,GAAOQ,KAAIsC,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,uIAOxB,SAAAY,GAAK,OAAIA,EAAM0mD,WAAa,sDAAH,qDAM1B,GAWG9oB,KARa3+B,EAAAA,EAAAA,IAAOgnD,GAAPhnD,CAAgBgD,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,6HAG/B8mD,IAKejnD,EAAAA,GAAOmB,IAAG+B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,2sDAmFLH,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,gtBA41BlC,SAhzBc,WAAM,IAAAunD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClBxgE,GAAkCC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CuiD,EAASriD,EAAA,GAAEsiD,EAAYtiD,EAAA,GAC9BI,GAAgDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxDmgE,EAAgBlgE,EAAA,GAAEmgE,EAAmBngE,EAAA,GAC5C0d,GAAwChe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA/C0iD,EAAYziD,EAAA,GAAE0iD,EAAe1iD,EAAA,GACpCG,GAA0Dpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAlEwiD,EAAqBviD,EAAA,GAAEwiD,EAAwBxiD,EAAA,GACtDG,GAAwDxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA/DsiD,EAAoBriD,EAAA,GAAEsiD,EAAuBtiD,EAAA,GACpDG,GAAoD5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA5DoiD,EAAkBniD,EAAA,GAAEoiD,EAAqBpiD,EAAA,GAChDG,GAA0Chf,EAAAA,EAAAA,UAAS,MAAKif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAAjDkiD,EAAajiD,EAAA,GAAEkiD,EAAgBliD,EAAA,GACtCG,GAAsCpf,EAAAA,EAAAA,UAAS,IAAGqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAA3CgiD,EAAW/hD,EAAA,GAAEgiD,EAAchiD,EAAA,GAClCkE,GAAoCvjB,EAAAA,EAAAA,UAAS,IAAGwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAAzC+9C,EAAU99C,EAAA,GAAE+9C,EAAa/9C,EAAA,GAChC+oB,GAAoCvsC,EAAAA,EAAAA,UAAS,IAAGwsC,GAAAtsC,EAAAA,EAAAA,GAAAqsC,EAAA,GAAzCi1B,GAAUh1B,EAAA,GAAEi1B,GAAaj1B,EAAA,GAC1BhZ,IAAcC,EAAAA,EAAAA,kBAIpBib,IAAuD/b,EAAAA,EAAAA,UACrD,CAAC,QAASyuC,EAAaE,EAAYE,IACnC,kBAAMtP,EAAAA,SAASwP,SAAS,CACtBtf,OAAQgf,EACR9/B,KAAMggC,EACNtxD,KAAMwxD,IACN,EACF,CACExuC,QAAuB,UAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAXUggE,GAASjzB,GAAfvb,KAA4ByuC,GAAclzB,GAAzBxR,UAezBlD,IAAyDrH,EAAAA,EAAAA,UACvD,CAAC,SAAUyuC,EAAaE,GACxB,kBAAMpP,EAAAA,SAASzoD,UAAU,CACvB24C,OAAQgf,EACR9/B,KAAMggC,GACN,EACF,CACEtuC,QAAuB,WAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAVUkgE,GAAU7nC,GAAhB7G,KAA6B2uC,GAAe9nC,GAA1BkD,UAiBpB6kC,IAAoB96B,EAAAA,EAAAA,aACxB,SAAC/8B,GAAO,OAAKgoD,EAAAA,SAAS8P,UAAU93D,EAAQ,EACxC,CACEyT,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,yCACdvB,GAAYkiB,kBAAkB,CAAC,UACjC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAkBEsgE,GAAkB,SAAC1tC,GACvB4sC,EAAiB5sC,GACjB0sC,GAAsB,EACxB,EAEMiB,GAAgB,eAAAriE,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAkyB,EAAAkB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEf2gE,GAAkBhc,YAAYmb,EAAc/lC,IAAG,OACrDrG,EAAAA,GAAMC,QAAQ,yCACdvB,GAAYkiB,kBAAkB,CAAC,WAC/BurB,GAAsB,GACtBE,EAAiB,MAAMjgE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEvBM,QAAQG,MAAM,oBAAmByyB,GACjCU,EAAAA,GAAMnzB,OAAoB,QAAduxB,EAAAkB,EAAM1tB,gBAAQ,IAAAwsB,GAAM,QAANA,EAAdA,EAAgBC,YAAI,IAAAD,OAAA,EAApBA,EAAsBvxB,QAAS,oCAAoC,wBAAAT,EAAAW,OAAA,EAAAb,EAAA,iBAElF,kBAXqB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAahBogE,IAAgBR,cAAS,EAATA,GAAWS,QAAS,GACpCC,IAAaR,cAAU,EAAVA,GAAYS,SAAU,GAEzC,OACEhgE,EAAAA,EAAAA,KAAC88D,GAAc,CAAAt/D,UACb2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAQ5oB,SAAA,EAC7BwC,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASD,OAAO,SAASI,OAAK,EAAAjuB,UACpD2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAAtsB,SAAA,EACXwC,EAAAA,EAAAA,KAACwoB,GAAS,IAAG,4BAKjBrT,EAAAA,EAAAA,MAACgoC,GAAa,CAAA3/C,SAAA,EACZ2X,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,UAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,SAAA,EAErCwC,EAAAA,EAAAA,KAACwoB,GAAS,IAAG,YAGfrT,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,WAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,SAAS,EAACziD,SAAA,EAEtCwC,EAAAA,EAAAA,KAAC6nB,GAAU,IAAG,oBAMH,UAAdm4B,IACChgD,EAAAA,EAAAA,KAACiwC,GAAgB,CAAAzyC,UACf2X,EAAAA,EAAAA,MAAC4nD,GAAS,CAAAv/D,SAAA,EACR2X,EAAAA,EAAAA,MAAC0yC,GAAW,CAAArqD,SAAA,EACVwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,UAC1BwC,EAAAA,EAAAA,KAAC6nB,GAAU,OAEb7nB,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,kBACZC,MAAOqhD,EACPnoD,SAAU,SAACuG,GAAC,OAAK6hD,EAAe7hD,EAAEW,OAAOJ,MAAM,QAInDtI,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOuhD,EACProD,SAAU,SAACuG,GAAC,OAAK+hD,EAAc/hD,EAAEW,OAAOJ,MAAM,EAC9CrI,MAAO,CAAEiZ,SAAU,SAAU7wB,SAAA,EAE7BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,gBACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,YACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,kBAAiBjgB,SAAC,qBAChCwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,eAAcjgB,SAAC,kBAC7BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,cAAajgB,SAAC,oBAG9B2X,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOyhD,GACPvoD,SAAU,SAACuG,GAAC,OAAKiiD,GAAcjiD,EAAEW,OAAOJ,MAAM,EAC9CrI,MAAO,CAAEiZ,SAAU,SAAU7wB,SAAA,EAE7BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,cACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,cACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,sBAOjB,WAAdwiD,IACChgD,EAAAA,EAAAA,KAACiwC,GAAgB,CAAAzyC,UACf2X,EAAAA,EAAAA,MAAC4nD,GAAS,CAAAv/D,SAAA,EACR2X,EAAAA,EAAAA,MAAC0yC,GAAW,CAAArqD,SAAA,EACVwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,UAC1BwC,EAAAA,EAAAA,KAAC6nB,GAAU,OAEb7nB,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,uBACZC,MAAOqhD,EACPnoD,SAAU,SAACuG,GAAC,OAAK6hD,EAAe7hD,EAAEW,OAAOJ,MAAM,QAInDtI,EAAAA,EAAAA,MAACmV,GAAM,CACL7M,MAAOuhD,EACProD,SAAU,SAACuG,GAAC,OAAK+hD,EAAc/hD,EAAEW,OAAOJ,MAAM,EAC9CrI,MAAO,CAAEiZ,SAAU,SAAU7wB,SAAA,EAE7BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,gBACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,YACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,kBAAiBjgB,SAAC,qBAChCwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,eAAcjgB,SAAC,kBAC7BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,cAAajgB,SAAC,wBAOrB,UAAdwiD,IACChgD,EAAAA,EAAAA,KAAA,OAAAxC,SACG8hE,IACCt/D,EAAAA,EAAAA,KAAC+rB,GAAc,IACb8zC,GAAct7D,OAAS,GACzBvE,EAAAA,EAAAA,KAAC4rB,GAAI,CAACC,SAAS,wCAAwCN,KAAK,OAAM/tB,SAC/DqiE,GAAc7hD,IAAI,SAAC45C,GAAI,OACtBziD,EAAAA,EAAAA,MAAC6nD,GAAQ,CAEP9+C,QAAS,WAAF,OA7ID,SAAC05C,GACvByG,EAAgBzG,GAChBuG,GAAoB,EACtB,CA0IiC8B,CAAgBrI,EAAK,EACpC3hC,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BsW,WAAY,CAAEC,SAAU,IAAM/4B,SAAA,EAE9BwC,EAAAA,EAAAA,KAACi9D,GAAU,CAACC,WAAYtF,EAAKnhC,OAAS,YAAH5xB,OAAe+yD,EAAKnhC,QAAW,KAAKj5B,UACrE2X,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,gBAAgBD,OAAO,aAAY7tB,SAAA,EACzD2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAACo9D,GAAS,CAAChoD,MAAO,CAAE0mB,MAAO,QAAS5N,SAAU,QAAS1wB,SACpDo6D,EAAK9gD,QAER9W,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQgI,QAAS,OAAQ14B,SAC9Co6D,EAAK54B,WAGVh/B,EAAAA,EAAAA,KAACw9D,GAAQ,CAACC,WAAY7F,EAAKsI,WAAW1iE,SACnCo6D,EAAKsI,WAAa,YAAc,mBAKvC/qD,EAAAA,EAAAA,MAACgoD,GAAW,CAAA3/D,SAAA,EACVwC,EAAAA,EAAAA,KAACq9D,GAAe,CAAA7/D,SACbo6D,EAAKpH,eAGRr7C,EAAAA,EAAAA,MAACmoD,GAAQ,CAAA9/D,SAAA,EACP2X,EAAAA,EAAAA,MAACooD,GAAS,CAAA//D,SAAA,EACR2X,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Co6D,EAAK54B,SAEX7pB,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Co6D,EAAKuI,iBAAmB,EAAE,iBAE/BvI,EAAKwI,iBACJjrD,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Co6D,EAAKwI,eAAe,WAI9BpgE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,UAAWC,UAAW,OAAQv+B,SAClEo6D,EAAKsI,WAAa,oBAAsB,6BA1C1CtI,EAAK/+B,GA8CD,MAIf1jB,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,SACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,8CAOI,WAAdwiD,IACChgD,EAAAA,EAAAA,KAAA,OAAAxC,SACGgiE,IACCx/D,EAAAA,EAAAA,KAAC+rB,GAAc,IACbg0C,GAAWx7D,OAAS,GACtBvE,EAAAA,EAAAA,KAAC4rB,GAAI,CAACC,SAAS,wCAAwCN,KAAK,OAAM/tB,SAC/DuiE,GAAW/hD,IAAI,SAACiU,GAAK,IAAAouC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACpBvrD,EAAAA,EAAAA,MAAC6nD,GAAQ,CAEP9+C,QAAS,WAAF,OA5MA,SAAC+T,GACxBwsC,EAAwBxsC,GACxBssC,GAAyB,EAC3B,CAyMiCoC,CAAiB1uC,EAAM,EACtCgE,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BsW,WAAY,CAAEC,SAAU,IAAM/4B,SAAA,EAE9BwC,EAAAA,EAAAA,KAACi9D,GAAU,CAACC,WAAYjrC,EAAMwE,OAAS,YAAH5xB,OAAeotB,EAAMwE,QAAW,KAAKj5B,UACvE2X,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,gBAAgBD,OAAO,aAAY7tB,SAAA,EACzD2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAACo9D,GAAS,CAAChoD,MAAO,CAAE0mB,MAAO,QAAS5N,SAAU,QAAS1wB,SACpDy0B,EAAMoI,SAETr6B,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQgI,QAAS,OAAQ14B,UACpC,QAAV6iE,EAAApuC,EAAM2lC,YAAI,IAAAyI,OAAA,EAAVA,EAAYvpD,OAAQ,aAGzB9W,EAAAA,EAAAA,KAACw9D,GAAQ,CAACC,YAAY,EAAMjgE,SACzB,IAAIu5B,KAAK9E,EAAMqT,MAAMkS,6BAK5BriC,EAAAA,EAAAA,MAACgoD,GAAW,CAAA3/D,SAAA,EACVwC,EAAAA,EAAAA,KAACq9D,GAAe,CAAA7/D,SACby0B,EAAMu+B,eAGTr7C,EAAAA,EAAAA,MAACmoD,GAAQ,CAAA9/D,SAAA,EACP2X,EAAAA,EAAAA,MAACooD,GAAS,CAAA//D,SAAA,EACR2X,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/C,IAAIu5B,KAAK9E,EAAMqT,MAAMkS,mBAAmB,QAAS,CACnDoa,IAAK,UACLC,MAAO,OACPC,KAAM,gBAGV38C,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Cy0B,EAAM2uC,MAAQ,uBAEpBzrD,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Cy0B,EAAM9zB,WAAsB,QAAdmiE,EAAIruC,EAAM2lC,YAAI,IAAA0I,OAAA,EAAVA,EAAYniE,WAAY,uBAEhDgX,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,OAC7B,QAAlB+iE,EAAAtuC,EAAM4uC,oBAAY,IAAAN,OAAA,EAAlBA,EAAoBh8D,SAAU,EAAE,IAAE0tB,EAAM6uC,kBAAoB,OAEjE7uC,EAAMkgC,QACLh9C,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,MAC/Cy0B,EAAMkgC,MAAM,WAKtBnyD,EAAAA,EAAAA,KAACsmB,GAAM,CACLiD,MAAM,QACNrL,QAAS,SAAChB,GAAM,IAAA6jD,EACd7jD,EAAE4F,kBAC0B,QAA5Bi+C,EAAI9uC,EAAM+uC,0BAAkB,IAAAD,GAAxBA,EAA0BE,kBAI9BtB,GAAgB1tC,EAClB,EACApb,SAAU4oD,GAAkB7kC,YAAqC,QAA5B4lC,EAAIvuC,EAAM+uC,0BAAkB,IAAAR,OAAA,EAAxBA,EAA0BS,kBACnE16C,SAAkC,QAAxBk6C,EAAAxuC,EAAM+uC,0BAAkB,IAAAP,GAAxBA,EAA0BQ,iBAAmB,YAAc,UAAUzjE,SAE9EiiE,GAAkB7kC,UAAY,kBACN,QAAxB8lC,EAAAzuC,EAAM+uC,0BAAkB,IAAAN,GAAxBA,EAA0BO,iBAAmB,gBAAkB,wBAlEjEhvC,EAAM4G,GAsEF,MAIf1jB,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,8CAQV0gE,GAAoBE,IACnBp+D,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQigD,GAAoB,EAAM,EAAC3gE,UAC/C2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK4gE,EAAatnD,QAClB9W,EAAAA,EAAAA,KAAC2qB,GAAU,CAACzM,QAAS,WAAF,OAAQigD,GAAoB,EAAM,EAAC3gE,UACpDwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE0mB,MAAO,UAAWiU,WAAY,IAAK7hB,SAAU,OAAQiO,aAAc,QAAS3+B,SACrF4gE,EAAa5N,eAGhBr7C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,2BAIzE2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQ0vC,oBAAqB,uCAAwC52B,IAAK,QAAS3wB,SAAA,EACxG2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,wBAA2BwC,EAAAA,EAAAA,KAAA,UACnCA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAE4gE,EAAap/B,WAGnD7pB,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBAAsBwC,EAAAA,EAAAA,KAAA,UAC9BmV,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,CAC/B4gE,EAAa+B,iBAAmB,EAAE,OAAK/B,EAAa8C,aAAe,WAIxE/rD,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,aAAgBwC,EAAAA,EAAAA,KAAA,UACxBA,EAAAA,EAAAA,KAACw9D,GAAQ,CAACC,WAAYW,EAAa8B,WAAY9qD,MAAO,CAAEonC,OAAQ,SAAUh/C,SACvE4gE,EAAa8B,WAAa,YAAc,gBAI5C9B,EAAagC,iBACZjrD,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BmV,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,CAAE4gE,EAAagC,eAAe,UAInEhC,EAAa+C,UACZhsD,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cAAiBwC,EAAAA,EAAAA,KAAA,UACzBA,EAAAA,EAAAA,KAAA,KAAG26B,KAAMyjC,EAAa+C,QAAStjD,OAAO,SAASujD,IAAI,sBAChDhsD,MAAO,CAAE0mB,MAAO,UAAW7I,eAAgB,QAASz1B,SACpD4gE,EAAa+C,aAKnB/C,EAAap6B,QACZ7uB,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAE4gE,EAAap6B,iBAMxDo6B,EAAaiD,QACZlsD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,sBAGzEwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE0mB,MAAO,UAAWiU,WAAY,IAAKyM,OAAQ,GAAIh/C,SACxD4gE,EAAaiD,WAKnBjD,EAAakD,MAAQlD,EAAakD,KAAK/8D,OAAS,IAC/C4Q,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,cAGzEwC,EAAAA,EAAAA,KAACorB,GAAa,CAACG,KAAK,MAAME,OAAK,EAAAjuB,SAC5B4gE,EAAakD,KAAKtjD,IAAI,SAACujD,EAAKz8C,GAAK,OAChC9kB,EAAAA,EAAAA,KAAA,QAAkBoV,MAAO,CACvBK,WAAY,UACZqmB,MAAO,UACP7N,QAAS,WACTpY,aAAc,OACdqY,SAAU,QACV1wB,SACC+jE,GAPQz8C,EAQJ,YAOjB9kB,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAAQ9tB,UAC9B2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV8mB,UAAW,SACXJ,MAAO,UACPrmB,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdF,OAAQ,sBACRnY,SAAA,EACAwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQiO,aAAc,QAAS3+B,SAAC,QACxDwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,aAActuB,SAAU,QAAS1wB,SAAC,sCAGtDwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAEonC,OAAQ,EAAGxgB,WAAY,OAAQF,MAAO,WAAYt+B,SAAC,iDAUxE8gE,GAAyBE,IACxBx+D,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQqgD,GAAyB,EAAM,EAAC/gE,UACpD2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACV2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,MAAIghE,EAAqBnkC,UAC7Br6B,EAAAA,EAAAA,KAAC2qB,GAAU,CAACzM,QAAS,WAAF,OAAQqgD,GAAyB,EAAM,EAAC/gE,UACzDwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EACnC2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,iCAIzE2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQ0vC,oBAAqB,uCAAwC52B,IAAK,QAAS3wB,SAAA,EACxG2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,UAA2B,QAAzBkgE,EAAAc,EAAqB5G,YAAI,IAAA8F,OAAA,EAAzBA,EAA2B5mD,OAAQ,kBAGzE3B,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cAAiBwC,EAAAA,EAAAA,KAAA,UACzBA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAC/B,IAAIu5B,KAAKynC,EAAqBl5B,MAAMkS,mBAAmB,QAAS,CAC/Doa,IAAK,UACLC,MAAO,OACPC,KAAM,kBAKZ38C,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAC/BghE,EAAqBoC,MAAQ,yBAIlCzrD,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAC/BghE,EAAqBrgE,WAAqC,QAA7Bw/D,EAAIa,EAAqB5G,YAAI,IAAA+F,OAAA,EAAzBA,EAA2Bx/D,WAAY,yBAI7EgX,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBAAsBwC,EAAAA,EAAAA,KAAA,UAC9BmV,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,EACE,QAAjCogE,EAAAY,EAAqBqC,oBAAY,IAAAjD,OAAA,EAAjCA,EAAmCr5D,SAAU,EAAE,OAAKi6D,EAAqBsC,kBAAoB,UAIjGtC,EAAqBrM,QACpBh9C,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,mBAAsBwC,EAAAA,EAAAA,KAAA,UAC9BmV,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,CAAEghE,EAAqBrM,MAAM,UAIlEqM,EAAqBgD,aACpBrsD,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cAAiBwC,EAAAA,EAAAA,KAAA,UACzBA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAEghE,EAAqBgD,sBAMhEhD,EAAqBhO,cACpBr7C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,6BAGzEwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE0mB,MAAO,UAAWiU,WAAY,IAAKyM,OAAQ,GAAIh/C,SACxDghE,EAAqBhO,iBAM3BgO,EAAqB7Y,QAAU6Y,EAAqB7Y,OAAOphD,OAAS,IACnE4Q,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACA2X,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAA,CAAC,8BAC3CghE,EAAqB7Y,OAAOphD,OAAO,QAEjEvE,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACVC,QAAS,OACT0vC,oBAAqB,wCACrB52B,IAAK,QACL3wB,SACCghE,EAAqB7Y,OAAO3nC,IAAI,SAAC4nC,EAAO9gC,GAAK,OAC5C9kB,EAAAA,EAAAA,KAAA,OAEEoV,MAAO,CACLyK,YAAa,MACbhK,aAAc,MACdqO,SAAU,SACVzO,WAAY,UACZijC,OAAQ,UACRpiB,WAAY,uBAEd+F,aAAc,SAACnf,GAAC,OAAKA,EAAEW,OAAOzI,MAAM+W,UAAY,aAAa,EAC7DmQ,aAAc,SAACpf,GAAC,OAAKA,EAAEW,OAAOzI,MAAM+W,UAAY,UAAU,EAC1DjO,QAAS,WAEPte,OAAO6hE,KAAK,YAAD58D,OAAa+gD,GAAS,SACnC,EAAEpoD,UAEFwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAc+gD,GACjBl/B,IAAG,oBAAA7hB,OAAsBigB,EAAQ,GACjC1P,MAAO,CACLM,MAAO,OACPF,OAAQ,OACRuwC,UAAW,SAEbp1B,QAAS,SAACzT,GACRA,EAAEW,OAAOzI,MAAMC,QAAU,OACzB6H,EAAEW,OAAO6jD,cAAcC,UAAY,gJACrC,KA3BG78C,EA6BD,QAMb05C,EAAqB5G,OACpBziD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,4BAGzE2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQ0vC,oBAAqB,uCAAwC52B,IAAK,QAAS3wB,SAAA,EACxG2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eAAkBwC,EAAAA,EAAAA,KAAA,UAC1BA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAEghE,EAAqB5G,KAAK9gD,WAEhE3B,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,qBAAwBwC,EAAAA,EAAAA,KAAA,UAChCA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAEghE,EAAqB5G,KAAKz5D,eAEhEgX,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,UAAawC,EAAAA,EAAAA,KAAA,UACrBA,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAEghE,EAAqB5G,KAAKlqD,oBAOxEyH,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAOD,SAAS,SAAQ9tB,SAAA,EAC1CwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,YACTrI,QAAS,WAAF,OAAQqgD,GAAyB,EAAM,EAAC/gE,SAChD,cAGwC,QAAxCqgE,EAACW,EAAqBwC,0BAAkB,IAAAnD,GAAvCA,EAAyCoD,oBACzCjhE,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAAS,WACPqgD,GAAyB,GACzBoB,GAAgBnB,EAClB,EAAEhhE,SACH,+BAIqC,QAAvCsgE,EAAAU,EAAqBwC,0BAAkB,IAAAlD,OAAA,EAAvCA,EAAyCmD,oBACxCjhE,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,YACT1P,UAAQ,EAAArZ,SACT,8BAUVkhE,GAAsBE,IACrB5+D,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQygD,GAAsB,EAAM,EAACnhE,UACjD2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAQlI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAClE2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kCACJwC,EAAAA,EAAAA,KAAC2qB,GAAU,CAACzM,QAAS,WAAF,OAAQygD,GAAsB,EAAM,EAACnhE,UACtDwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE+mB,aAAc,QAAS3+B,SAAA,EACnC2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SACrEohE,EAAcvkC,SAGjBllB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQ8Y,IAAK,QAAS3wB,SAAA,EAC3C2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,SACnCwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,UAAoB,QAAlBugE,EAAAa,EAAchH,YAAI,IAAAmG,OAAA,EAAlBA,EAAoBjnD,OAAQ,aAGlE3B,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnCwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAC/B,IAAIu5B,KAAK6nC,EAAct5B,MAAMkS,mBAAmB,QAAS,CACxDoa,IAAK,UACLC,MAAO,OACPC,KAAM,iBAKX8M,EAAcgC,OACbzrD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnCwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAEohE,EAAcgC,WAItDzrD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnCwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAC/BohE,EAAczgE,WAA8B,QAAtB6/D,EAAIY,EAAchH,YAAI,IAAAoG,OAAA,EAAlBA,EAAoB7/D,WAAY,yBAI/DgX,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnC2X,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,EACL,QAA1BygE,EAAAW,EAAciC,oBAAY,IAAA5C,OAAA,EAA1BA,EAA4B15D,SAAU,EAAE,OAAKq6D,EAAckC,kBAAoB,IAAI,oBAIvFlC,EAAczM,QACbh9C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,OAAQ3wB,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnC2X,EAAAA,EAAAA,MAAA,QAAMC,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAA,CAAEohE,EAAczM,MAAM,gBAM/DyM,EAAcpO,cACbr7C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,QACd3+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAEonC,OAAQ,aAAc1gB,MAAO,UAAW5N,SAAU,QAAS1wB,SAAC,iBAGzEwC,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE0mB,MAAO,UAAWiU,WAAY,IAAKyM,OAAQ,GAAIh/C,SACxDohE,EAAcpO,kBAKrBr7C,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdF,OAAQ,qBACRnY,SAAA,EACA2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQE,WAAY,SAAU4Y,IAAK,MAAOgO,aAAc,OAAQ3+B,SAAA,EACrFwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,QACnCwC,EAAAA,EAAAA,KAAA,UAAQoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAC,qBAEvC2X,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAE0mB,MAAO,UAAW0gB,OAAQ,EAAGolB,YAAa,QAASpkE,SAAA,EAC9DwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,0CACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wCACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uDAKV2X,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAOD,SAAS,WAAU9tB,SAAA,EAC5CwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,YACTrI,QAAS,WAAF,OAAQygD,GAAsB,EAAM,EAC3C9nD,SAAU4oD,GAAkB7kC,UAAUp9B,SACvC,YAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAAS0hD,GACT/oD,SAAU4oD,GAAkB7kC,UAAUp9B,SAErCiiE,GAAkB7kC,UAAY,kBAAoB,0CASrE,E,2CCjpCMinC,IAAyB7rD,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAI9CgnC,GAAgBnnC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,qPAc1BinC,GAAMpnC,EAAAA,GAAOmC,OAAM1B,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,wcAIT,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,aAAa,EACjG,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAYrC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAC3B,oDACA,kFAAkF,EAE3E,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,GASnD8/B,IAAW9rD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkByB,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,6dAU/B,SAAAY,GAAK,OAAIA,EAAMgrD,WAAa,qfAkB7B,EAGc,SAAAhrD,GAAK,OAAIA,EAAMgrD,UAAY,cAAgB,aAAa,GAcnEC,GAAWhsD,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,8VAKX,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,EAMT,SAAA3Y,GAAK,OAAIA,EAAM2Y,MAAM,GAS3CuyC,GAAYjsD,EAAAA,GAAOyE,GAAE5C,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,2JAWrB+rD,GAAYlsD,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,gbAMf,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,GA0B5ByyC,GAAensD,EAAAA,GAAOosD,GAAEnqD,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,0FAOxBksD,GAAcrsD,EAAAA,GAAOssD,GAAElqD,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,wPAkBvBosD,GAAoBvsD,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,q6BAalB,SAAAY,GAAK,OAAIA,EAAMyrD,YAAY,GAyCvCC,GAAczsD,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,irBAwCxBusD,GAAe1sD,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,ulBAgCzBw+B,GAAa3+B,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,6SAwBvBwsD,GAAe,CACnBC,IAAK,CACH/V,KAAM,KACN/wB,MAAO,UACPq2B,MAAO,IACP0Q,SAAU,CACR,oBACA,yBACA,wBACA,qBACA,kBACA,wBAGJC,QAAS,CACPjW,KAAM,KACN/wB,MAAO,UACPq2B,MAAO,IACP4Q,UAAU,EACVF,SAAU,CACR,sBACA,yBACA,kBACA,kBACA,yBACA,uBACA,4BA0ZN,SArZsB,WAAM,IAAAG,EAC1BvlE,GAAkCC,EAAAA,EAAAA,UAAS,SAAQC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CuiD,EAASriD,EAAA,GAAEsiD,EAAYtiD,EAAA,GAC9BI,GAAgDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxDklE,EAAgBjlE,EAAA,GAAEklE,EAAmBllE,EAAA,GAC5C0d,GAAwChe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA/CynD,EAAYxnD,EAAA,GAAEynD,EAAeznD,EAAA,GACpCG,GAAkCpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAvCunD,EAAStnD,EAAA,GAAEunD,EAAYvnD,EAAA,GACxBmV,GAAcC,EAAAA,EAAAA,kBAGpBib,GAAiE/b,EAAAA,EAAAA,UAC/D,sBACAgyB,EAAAA,iBAAiBC,UACjB,CACE3xB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IANUkiD,EAAkBnV,EAAxBvb,KAAqC0yC,EAAen3B,EAA1BxR,UAUlClD,GAAmErH,EAAAA,EAAAA,UACjE,uBACAgyB,EAAAA,iBAAiBmhB,WACjB,CACE9yC,QAAuB,YAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAPUokE,EAAmB/rC,EAAzB7G,KAAsC6yC,EAAgBhsC,EAA3BkD,UAY7B+oC,GAAoBh/B,EAAAA,EAAAA,aAAY0d,EAAAA,iBAAiBuhB,UAAW,CAChEvoD,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,+BACdywC,GAAoB,GACpBE,EAAgB,MAChBlyC,EAAYkiB,kBAAkB,sBAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAaIwkE,IAViBl/B,EAAAA,EAAAA,aAAY0d,EAAAA,iBAAiByhB,OAAQ,CAC1DzoD,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,qBACdvB,EAAYkiB,kBAAkB,sBAChC,EACAziB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,KAGoBslC,EAAAA,EAAAA,aAAY0d,EAAAA,iBAAiB0hB,aAAc,CAC/D1oD,UAAW,SAACwV,GACV2B,EAAAA,GAAMC,QAAQ,8BAAD5tB,OAA+BgsB,EAAKmzC,SAAQ,MACzDV,EAAa,GACf,EACA3yC,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,KA8BI4kE,EAAY,eAAA1mE,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA83D,EAAA1kC,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACfc,OAAO0yB,QAAQ,6CAA8C,CAAF1zB,EAAAE,KAAA,QACL,OAAlD03D,EAAS0N,OAAO,mCAAkCtlE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEhDujD,EAAAA,iBAAiByhB,OAAOtN,GAAU,IAAG,OAC3ChkC,EAAAA,GAAMC,QAAQ,qBACdvB,EAAYkiB,kBAAkB,uBAAuBx0C,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAErD4zB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAW1J,IAAS,wBAAAlzB,EAAAW,OAAA,EAAAb,EAAA,iBAG9C,kBAXiB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAwClB,OAAI8jE,GAEAvjE,EAAAA,EAAAA,KAAC6hE,GAAsB,CAAArkE,UACrBwC,EAAAA,EAAAA,KAACkpB,GAAW,CAAA1rB,UACVwC,EAAAA,EAAAA,KAAC+rB,GAAc,SAOrB/rB,EAAAA,EAAAA,KAAC6hE,GAAsB,CAAArkE,UACrB2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAQ5oB,SAAA,EAC7BwC,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASD,OAAO,SAASI,OAAK,EAAAjuB,UACpD2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAC1U,MAAO,CAAE0mB,MAAO,QAASI,UAAW,SAAUC,aAAc,QAAS3+B,SAAA,EACjFwC,EAAAA,EAAAA,KAACyoB,GAAS,IAAG,+BAIjBzoB,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8mB,UAAW,SAAUJ,MAAO,wBAAyBK,aAAc,QAAS3+B,SAAC,2DAIzF2X,EAAAA,EAAAA,MAACgoC,GAAa,CAAA3/C,SAAA,EACZ2X,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,UAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,SAAA,EAErCwC,EAAAA,EAAAA,KAACyoB,GAAS,IAAG,YAGftT,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,WAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,SAAS,EAACziD,SAAA,EAEtCwC,EAAAA,EAAAA,KAACuoB,GAAQ,IAAG,iBAGdvoB,EAAAA,EAAAA,KAACo9C,GAAG,CACFpb,QAAuB,YAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,UAAU,EAACziD,SACxC,kBAMY,UAAdwiD,IACChgD,EAAAA,EAAAA,KAAA,OAAAxC,UACEwC,EAAAA,EAAAA,KAAC4rB,GAAI,CAACC,SAAS,uCAAuCN,KAAK,OAAM/tB,SAC9Do+C,OAAOC,QAAQ8mB,IAAc3kD,IAAI,SAAAzf,GAAA,IAAA+6B,GAAA17B,EAAAA,EAAAA,GAAAW,EAAA,GAAE4lE,EAAQ7qC,EAAA,GAAEn1B,EAAMm1B,EAAA,UAClDnkB,EAAAA,EAAAA,MAAC2sD,GAAQ,CAEPC,UAAW59D,EAAO4+D,SAClB9sC,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BsW,WAAY,CAAEC,SAAU,IAAM/4B,SAAA,EAE9BwC,EAAAA,EAAAA,KAACgiE,GAAQ,CAACtyC,OAAQvrB,EAAO23B,MAAMt+B,SAC5B2G,EAAO0oD,QAGV7sD,EAAAA,EAAAA,KAACiiE,GAAS,CAAAzkE,SAAE2mE,KAEZhvD,EAAAA,EAAAA,MAAC+sD,GAAS,CAACxyC,OAAQvrB,EAAO23B,MAAMt+B,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,CACnB2G,EAAOguD,OACRnyD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,WAE7BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQzC,SAAC,gBAG1BwC,EAAAA,EAAAA,KAACmiE,GAAY,CAAA3kE,SACV2G,EAAO0+D,SAAS7kD,IAAI,SAAComD,EAASt/C,GAAK,OAClC3P,EAAAA,EAAAA,MAACktD,GAAW,CAAA7kE,SAAA,EACVwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,UACnBwC,EAAAA,EAAAA,KAACsd,GAAS,MAEX8mD,IAJet/C,EAKJ,MAIlB9kB,EAAAA,EAAAA,KAACsmB,GAAM,CACLpI,QAAS,WAAF,OAtJD,SAACimD,GACvBf,EAAgBe,GAChBjB,GAAoB,EACtB,CAmJiCmB,CAAgBF,EAAS,EACxCttD,UAAU0qC,aAAkB,EAAlBA,EAAoBoD,QAASwf,EAAStmC,cAChDzoB,MAAO,CACLK,YAAY8rC,aAAkB,EAAlBA,EAAoBoD,QAASwf,EAAStmC,cAC9C,UAAS,2BAAAh5B,OACkBV,EAAO23B,MAAK,SAAAj3B,OAAQV,EAAO23B,MAAK,YAC/DpmB,MAAO,QACPlY,UAED+jD,aAAkB,EAAlBA,EAAoBoD,QAASwf,EAAStmC,cACnC,eACA,mBA3CDsmC,EA8CI,OAOJ,WAAdnkB,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAACotD,GAAiB,CAACC,aA3HN,SAACr9D,GACtB,OAAQA,aAAM,EAANA,EAAQ04B,eACd,IAAK,MAAO,MAAO,UACnB,IAAK,UAAW,MAAO,UACvB,QAAS,MAAO,UAEpB,CAqH2CymC,CAAe/iB,aAAkB,EAAlBA,EAAoBoD,MAAMnnD,SAAA,EACxEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SApHlB,SAAC2H,GACrB,OAAQA,aAAM,EAANA,EAAQ04B,eACd,IAAK,MAAO,MAAO,KACnB,IAAK,UAAW,MAAO,KACvB,QAAS,MAAO,KAEpB,CA+Ge0mC,CAAchjB,aAAkB,EAAlBA,EAAoBoD,SAErC3kD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SAC1B+jD,SAAAA,EAAoBmD,kBAAiD,UAA7BnD,aAAkB,EAAlBA,EAAoBoD,MAAe,GAAA9/C,OACrE08C,EAAmBoD,KAAKrxB,cAAa,SACxC,kBAGNtzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SACzB+jD,SAAAA,EAAoBmD,kBAAiD,UAA7BnD,aAAkB,EAAlBA,EAAoBoD,OAC3DxvC,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,CAAE,eACa+jD,EAAmBsD,WAAa9lD,EAAAA,SAAS62D,WAAWrU,EAAmBsD,YAAc,iBAClG7kD,EAAAA,EAAAA,KAAA,SAAM,4CAIR,6FAIHuhD,SAAAA,EAAoBmD,kBAAiD,UAA7BnD,aAAkB,EAAlBA,EAAoBoD,OAC3DxvC,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAOD,SAAS,SAAQ9tB,SAAA,EAC1CwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAW/oB,SAAC,mBAG7BwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,SACTrI,QAAS+lD,EAAazmE,SACvB,0BAKHwC,EAAAA,EAAAA,KAACorB,GAAa,CAACG,KAAK,OAAOD,SAAS,SAAQ9tB,UAC1CwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,UAAUrI,QAAS,WAAF,OAAQ+hC,EAAa,QAAQ,EAACziD,SAAC,4BAQvE2X,EAAAA,EAAAA,MAACutD,GAAY,CAAAllE,SAAA,EACXwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SAAC,oBAC7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,mBACZC,MAAO4lD,EACP1sD,SAAU,SAACuG,GAAC,OAAKomD,EAAapmD,EAAEW,OAAOJ,MAAM6V,cAAc,KAE7DtzB,EAAAA,EAAAA,KAACsmB,GAAM,CACLiD,MAAM,QACNrL,QA3LS,WAClBmlD,EAAUxzB,OAKfg0B,EAAcn9B,OAAO28B,EAAUxzB,QAJ7Brd,EAAAA,GAAMnzB,MAAM,mBAKhB,EAqLgBwX,SAAUgtD,EAAcjpC,YAAcyoC,EAAUxzB,OAAOryC,SACxD,uBASM,YAAdwiD,IACChgD,EAAAA,EAAAA,KAAA,OAAAxC,SACGkmE,GACC1jE,EAAAA,EAAAA,KAAC+rB,GAAc,KACb03C,SAA6B,QAAVT,EAAnBS,EAAqBe,gBAAQ,IAAAxB,OAAA,EAA7BA,EAA+Bz+D,QAAS,GAC1CvE,EAAAA,EAAAA,KAAA,OAAAxC,SACGimE,EAAoBe,SAASxmD,IAAI,SAACymD,GAAO,IAAAC,EAAA,OACxCvvD,EAAAA,EAAAA,MAACstD,GAAW,CAAAjlE,SAAA,EACV2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CACN,QADMknE,EAClBD,EAAQ9f,YAAI,IAAA+f,OAAA,EAAZA,EAAcpxC,cAAc,gBAE/BtzB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAClBuB,EAAAA,SAAS62D,WAAW6O,EAAQhsC,kBAGjCtjB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,CAAC,IAC5BinE,EAAQnpD,OAAO,UAVHmpD,EAAQ5rC,GAYZ,MAIlB1jB,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,0BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,yDAOVylE,GAAoBE,IACnBnjE,EAAAA,EAAAA,KAACkmB,GAAK,CAAChI,QAAS,WAAF,OAAQglD,GAAoB,EAAM,EAAC1lE,UAC/C2X,EAAAA,EAAAA,MAACgR,GAAY,CAACjI,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EAChD2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACV2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,cAAY2lE,EAAa,gBAC7BnjE,EAAAA,EAAAA,KAAC2qB,GAAU,CAACzM,QAAS,WAAF,OAAQglD,GAAoB,EAAM,EAAC1lE,UACpDwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8mB,UAAW,SAAUC,aAAc,QAAS3+B,SAAA,EACxDwC,EAAAA,EAAAA,KAACgiE,GAAQ,CAACtyC,OAAQizC,GAAaQ,GAAcrnC,MAAMt+B,SAChDmlE,GAAaQ,GAActW,QAE9B13C,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAEonC,OAAQ,eAAgB1gB,MAAO,WAAYt+B,SAAA,CACrD2lE,EAAa,gBAEhBhuD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ8N,WAAY,MAAOF,MAAO6mC,GAAaQ,GAAcrnC,OAAQt+B,SAAA,CAC1FmlE,GAAaQ,GAAchR,MAAM,kBAItCh9C,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAjSI,SAACL,GAGrB,GAFAA,EAAEC,iBAEGgmD,EAAL,CAEA,IAAMwB,EAAmB,CACvBC,kBAAmBzB,EAAa7vC,cAChCuxC,gBAAiB,EACjBC,eAAgB,UAChBC,cAAc,GAIZ1B,EAAUxzB,SACZ80B,EAAiBK,WAAa3B,EAAUxzB,QAG1C8zB,EAAkBj9B,OAAOi+B,EAdA,CAe3B,EA+Q0CnnE,SAAA,EAC5B2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,8BACPwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACL8P,YAAY,8BACZC,MAAO4lD,EACP1sD,SAAU,SAACuG,GAAC,OAAKomD,EAAapmD,EAAEW,OAAOJ,MAAM6V,cAAc,QAI/Dne,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACVK,WAAY,UACZwY,QAAS,OACTpY,aAAc,OACdsmB,aAAc,OACdjO,SAAU,OACV4N,MAAO,WACPt+B,SAAA,EACAwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,cACR2X,EAAAA,EAAAA,MAAA,MAAIC,MAAO,CAAEonC,OAAQ,gBAAiBolB,YAAa,GAAIpkE,SAAA,EACrDwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,8CACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iDACJwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4CAIR2X,EAAAA,EAAAA,MAACiW,GAAa,CAACG,KAAK,OAAOD,SAAS,WAAU9tB,SAAA,EAC5CwC,EAAAA,EAAAA,KAACsmB,GAAM,CACLC,SAAS,YACTrI,QAAS,WAAF,OAAQglD,GAAoB,EAAM,EACzCx1D,KAAK,SAAQlQ,SACd,YAGDwC,EAAAA,EAAAA,KAACsmB,GAAM,CAAC5Y,KAAK,SAASmJ,SAAU8sD,EAAkB/oC,UAAUp9B,SACzDmmE,EAAkB/oC,UAAY,eAAiB,4BAUpE,E,2mBC1vBA,IAAMqqC,IAAmBjvD,EAAAA,EAAAA,IAAO6S,GAAP7S,CAAqBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,4EAIxCgnC,GAAgBnnC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,qPAc1BinC,GAAMpnC,EAAAA,GAAOmC,OAAM1B,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,wcAIT,SAAAY,GAAK,OAAIA,EAAMirB,QAAU,oDAAsD,aAAa,EACjG,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,EAYrC,SAAAjrB,GAAK,OAAIA,EAAMirB,QAC3B,oDACA,kFAAkF,EAE3E,SAAAjrB,GAAK,OAAIA,EAAMirB,QAAU,QAAU,SAAS,GASnDkjC,IAAclvD,EAAAA,EAAAA,IAAOge,GAAAA,EAAO7c,IAAdnB,CAAkByB,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,wiBAalC,SAAAY,GAAK,OAAIA,EAAMouD,OAAS,GAAK,2JAAJtgE,OAQO,IAAhBkS,EAAMouD,MAAc,UAA4B,IAAhBpuD,EAAMouD,MAAc,UAAY,UAAS,eAE1F,GAkBGC,GAAYpvD,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,uXAIZ,SAAAY,GACZ,OAAoB,IAAhBA,EAAMouD,MAAoB,oDACV,IAAhBpuD,EAAMouD,MAAoB,oDACV,IAAhBpuD,EAAMouD,MAAoB,oDACvB,mDACT,EACS,SAAApuD,GAAK,OAAIA,EAAMouD,OAAS,EAAI,UAAY,OAAO,GAgBpD9wC,GAAWre,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,kfAkCrBkvD,GAAcrvD,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,6hBAqCxBg9C,IAAYn9C,EAAAA,EAAAA,IAAO4V,GAAP5V,CAAYiC,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,kCAIxBi9C,GAAWp9C,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,6yBAcT,SAAAY,GAAK,OAAIA,EAAM2Y,MAAM,GAmCjC41C,GAAkBtvD,EAAAA,GAAOmB,IAAGmB,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,ggBAgC5Bw+B,GAAa3+B,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,6SAuBvBovD,GAAWvvD,EAAAA,GAAOQ,KAAIkC,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,kKACZ,SAAAY,GAAK,OAAIhY,EAAAA,SAASy0B,iBAAiBzc,EAAMyuD,UAAU,GA2anE,SAlagB,WAAM,IAAAC,EAAAC,EACpBjoE,GAAkCC,EAAAA,EAAAA,UAAS,eAAcC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDuiD,EAASriD,EAAA,GAAEsiD,EAAYtiD,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAAS,CACnCiQ,OAAQ,QACRg4D,SAAU,UACV3mC,KAAM,KACNhhC,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAJKw6B,EAAMv6B,EAAA,GAAEm8D,EAASn8D,EAAA,GASxBouC,IAHoBjb,EAAAA,EAAAA,mBAG2Cd,EAAAA,EAAAA,UAC7D,CAAC,cAAekI,GAChB,kBAAM0a,EAAAA,UAAU2yB,eAAertC,EAAO,EACtC,CACE7H,QAAuB,gBAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,KAPUwmE,EAAWz5B,EAAjBvb,KAA8Bi1C,EAAoB15B,EAA/BxR,UAW3BlD,GAAqDrH,EAAAA,EAAAA,UACnD,CAAC,mBACD4iB,EAAAA,UAAU8yB,WACV,CACEr1C,QAAuB,cAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAPU2mE,EAAOtuC,EAAb7G,KAA0Bo1C,EAAcvuC,EAAzBkD,UAWvBmnB,GAAoD1xB,EAAAA,EAAAA,UAClD,CAAC,YAAakI,EAAO5qB,QACrB,kBAAMslC,EAAAA,UAAUizB,YAAY,CAAEv4D,OAAQ4qB,EAAO5qB,QAAS,EACtD,CACE+iB,QAAuB,cAAdsvB,EACTrvB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAMN,EAAAA,SAASy8B,YAAYn8B,GACnC,IAPU8mE,EAAQpkB,EAAdlxB,KAA2Bu1C,EAAYrkB,EAAvBnnB,UAYlByrC,EAAqB,SAAC/hC,EAAO7mB,GACjC08C,EAAU,SAAAt7D,GAAI,OAAA8F,GAAAA,GAAA,GACT9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GACNq5B,EAAQ7mB,GAAK,EAElB,EASM6oD,EAAmB,SAACC,GACxB,OAAIA,EAAS,GAAUvmE,EAAAA,EAAAA,KAAC0oB,GAAa,IACjC69C,EAAS,GAAUvmE,EAAAA,EAAAA,KAAC2oB,GAAe,IAChC,IACT,EAQA,MAAmB,gBAAdq3B,GAA+B8lB,GACjB,cAAd9lB,GAA6BimB,GACf,cAAdjmB,GAA6BomB,GAE9BpmE,EAAAA,EAAAA,KAACilE,GAAgB,CAAAznE,UACfwC,EAAAA,EAAAA,KAACkpB,GAAW,CAAA1rB,UACVwC,EAAAA,EAAAA,KAAC+rB,GAAc,SAOrB/rB,EAAAA,EAAAA,KAACilE,GAAgB,CAAAznE,UACf2X,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,SAAQ5oB,SAAA,EAC7BwC,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASD,OAAO,SAASI,OAAK,EAAAjuB,UACpD2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAC1U,MAAO,CAAE0mB,MAAO,QAASI,UAAW,SAAUC,aAAc,QAAS3+B,SAAA,EACjFwC,EAAAA,EAAAA,KAAC4oB,GAAU,IAAG,yBAIlB5oB,EAAAA,EAAAA,KAAA,KAAGoV,MAAO,CAAE8mB,UAAW,SAAUJ,MAAO,wBAAyBK,aAAc,QAAS3+B,SAAC,8DAIzF2X,EAAAA,EAAAA,MAACgoC,GAAa,CAAA3/C,SAAA,EACZ2X,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,gBAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,cAAc,EAACziD,SAAA,EAE3CwC,EAAAA,EAAAA,KAAC4oB,GAAU,IAAG,cAGhBzT,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,cAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,YAAY,EAACziD,SAAA,EAEzCwC,EAAAA,EAAAA,KAACuoB,GAAQ,IAAG,kBAGdpT,EAAAA,EAAAA,MAACioC,GAAG,CACFpb,QAAuB,cAAdge,EACT9hC,QAAS,WAAF,OAAQ+hC,EAAa,YAAY,EAACziD,SAAA,EAEzCwC,EAAAA,EAAAA,KAACyoB,GAAS,IAAG,yBAMF,gBAAdu3B,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAACslE,GAAe,CAAA9nE,UACd2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,YACP2X,EAAAA,EAAAA,MAAA,UACEsI,MAAO8a,EAAO5qB,OACdgJ,SAAU,SAACuG,GAAC,OAAKmpD,EAAmB,SAAUnpD,EAAEW,OAAOJ,MAAM,EAC7DrI,MAAO,CACLM,MAAO,OACPuY,QAAS,OACTtY,OAAQ,oBACRE,aAAc,OACdrY,SAAA,EAEFwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,OAAMjgB,SAAC,YACrBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,WACtBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,OAAMjgB,SAAC,SACrBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,qBAIxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,eACP2X,EAAAA,EAAAA,MAAA,UACEsI,MAAO8a,EAAOotC,SACdhvD,SAAU,SAACuG,GAAC,OAAKmpD,EAAmB,WAAYnpD,EAAEW,OAAOJ,MAAM,EAC/DrI,MAAO,CACLM,MAAO,OACPuY,QAAS,OACTtY,OAAQ,oBACRE,aAAc,OACdrY,SAAA,EAEFwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,WACxBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,gBACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,aAAYjgB,SAAC,kBAC3BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,aAAYjgB,SAAC,yBAI/B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,WACPwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACL8P,YAAY,mBACZC,MAAO8a,EAAOyG,KACdroB,SAAU,SAACuG,GAAC,OAAKmpD,EAAmB,OAAQnpD,EAAEW,OAAOJ,MAAM,aAMlEooD,SAAkB,QAAPJ,EAAXI,EAAa/zB,aAAK,IAAA2zB,OAAA,EAAlBA,EAAoBlhE,QAAS,GAC5BvE,EAAAA,EAAAA,KAAA,OAAAxC,SACGqoE,EAAY/zB,MAAM9zB,IAAI,SAAC4T,EAAM9M,GAAK,OACjC3P,EAAAA,EAAAA,MAAC+vD,GAAW,CAEVC,MAAOrgD,EAAQ,EACfmR,QAAS,CAAEC,QAAS,EAAGlW,EAAG,IAC1BoW,QAAS,CAAEF,QAAS,EAAGlW,EAAG,GAC1BsW,WAAY,CAAEC,SAAU,GAAKiwC,MAAe,GAAR1hD,GAActnB,SAAA,EAElDwC,EAAAA,EAAAA,KAAColE,GAAS,CAACD,MAAOrgD,EAAQ,EAAEtnB,UArItBipE,EAsIY3hD,EAAQ,EArI7B,IAAT2hD,EAAmB,KACV,IAATA,EAAmB,KACV,IAATA,EAAmB,KAChBA,MAqIStxD,EAAAA,EAAAA,MAACkf,GAAQ,CAAA72B,SAAA,EACP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAClBo0B,EAAK9a,KACL8a,EAAK80C,YACJ1mE,EAAAA,EAAAA,KAACulE,GAAQ,CAACC,UAAW5zC,EAAK80C,UAAUlpE,SACjCo0B,EAAK80C,gBAIZvxD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,EACpB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,OACfo0B,EAAK+0C,eAAiB,MAE7BxxD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,MAChBo0B,EAAKg1C,gBAAkB,MAE7BzxD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,OAAMzC,SAAA,CAAC,MAChBo0B,EAAKoN,MAAQ,sBAKvB7pB,EAAAA,EAAAA,MAACkwD,GAAW,CAAA7nE,SAAA,EACV2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,SAAQzC,SAAA,EACrBwC,EAAAA,EAAAA,KAACuoB,GAAQ,IACRqJ,EAAKi1C,cAAgB,UAEAriE,IAAvBotB,EAAKk1C,gBACJ3xD,EAAAA,EAAAA,MAAA,OAAKlV,UAAS,UAAA4E,QAxJT0hE,EAwJuC30C,EAAKk1C,cAvJjEP,EAAS,EAAU,WACnBA,EAAS,EAAU,WAChB,KAqJ+E/oE,SAAA,CAC/D8oE,EAAiB10C,EAAKk1C,eACtB3kD,KAAK4kD,IAAIn1C,EAAKk1C,uBAxChBl1C,EAAKiH,IAlHF,IAAC0tC,EAbHE,CA2KM,MAIlBtxD,EAAAA,EAAAA,MAACw/B,GAAU,CAAAn3C,SAAA,EACTwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QACtBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,oDAOI,cAAdwiD,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAACg+C,GAAS,CAACtnC,SAAS,uCAAuCN,KAAK,OAAM/tB,SAAA,EACpE2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAC1jC,OAAO,oDAAmDlyB,SAAA,EAClEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,UACnBwC,EAAAA,EAAAA,KAACuoB,GAAQ,OAEXvoB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,UAAEwoE,aAAO,EAAPA,EAASgB,iBAAkB,KACnDhnE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,wBAGzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAC1jC,OAAO,oDAAmDlyB,SAAA,EAClEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,UACnBwC,EAAAA,EAAAA,KAAC4oB,GAAU,OAEbzT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,CAAC,KAAEwoE,aAAO,EAAPA,EAASiB,mBAAoB,QACtDjnE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,2BAGzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAC1jC,OAAO,oDAAmDlyB,SAAA,EAClEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QAGtB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,QAAOzC,SAAA,EACnBwoE,aAAO,EAAPA,EAASc,eAAgB,EAAI,IAAM,IAAId,aAAO,EAAPA,EAASc,gBAAiB,MAEpE9mE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,2BAGzB2X,EAAAA,EAAAA,MAACi+C,GAAQ,CAAC1jC,OAAO,oDAAmDlyB,SAAA,EAClEwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMzC,SAAC,QAGtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,UAAEwoE,aAAO,EAAPA,EAASkB,aAAc,KAC/ClnE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOzC,SAAC,gCAI1BwoE,SAAuB,QAAhBN,EAAPM,EAASmB,sBAAc,IAAAzB,OAAA,EAAvBA,EAAyBnhE,QAAS,IACjC4Q,EAAAA,EAAAA,MAAC+T,GAAW,CAAA1rB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAE+mB,aAAc,OAAQL,MAAO,WAAYt+B,SAAC,sBAGvDwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACVgyC,UAAW,QACXggB,UAAW,OACXn5C,QAAS,QACTzwB,SACCwoE,EAAQmB,eAAenpD,IAAI,SAACqpD,EAAOviD,GAAK,OACvC3P,EAAAA,EAAAA,MAAA,OAEEC,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZ0Y,QAAS,SACTq5C,aAAc,qBACd9pE,SAAA,EAEF2X,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAS6pE,EAAM7Q,QAAU,yBACzBx2D,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAChDuB,EAAAA,SAAS62D,WAAWyR,EAAM5uC,kBAG/BtjB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV0mB,MAAOurC,EAAMd,OAAS,EAAI,UAAY,UACtCvqC,WAAY,OACZx+B,SAAA,CACC6pE,EAAMd,OAAS,EAAI,IAAM,GAAIc,EAAMd,YAnBjCzhD,EAqBD,WASH,cAAdk7B,IACC7qC,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACEwC,EAAAA,EAAAA,KAACslE,GAAe,CAAA9nE,UACdwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,UACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACkqB,GAAK,CAAA1sB,SAAC,YACP2X,EAAAA,EAAAA,MAAA,UACEsI,MAAO8a,EAAO5qB,OACdgJ,SAAU,SAACuG,GAAC,OAAKmpD,EAAmB,SAAUnpD,EAAEW,OAAOJ,MAAM,EAC7DrI,MAAO,CACLM,MAAO,OACPuY,QAAS,OACTtY,OAAQ,oBACRE,aAAc,OACdrY,SAAA,EAEFwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,OAAMjgB,SAAC,YACrBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,WACtBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,OAAMjgB,SAAC,mBAM7BwC,EAAAA,EAAAA,KAAC4rB,GAAI,CAACC,SAAS,uCAAuCN,KAAK,OAAM/tB,SAC9D,CAAC,cAAe,eAAgB,cAAcwgB,IAAI,SAAC2nD,EAAU7gD,GAC5D,IAAMyiD,GAAepB,aAAQ,EAARA,EAAWR,KAAa,GAO7C,OACExwD,EAAAA,EAAAA,MAAC+T,GAAW,CAAA1rB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAIoV,MAAO,CAAE+mB,aAAc,OAAQL,MAAO,UAAWI,UAAW,UAAW1+B,SARxD,CACrBgqE,YAAa,iBACbC,aAAc,mBACdC,WAAY,yBAMQ/B,KAGjB4B,EAAahjE,OAAS,GACrBvE,EAAAA,EAAAA,KAAA,OAAAxC,SACG+pE,EAAa1gC,MAAM,EAAG,GAAG7oB,IAAI,SAAC4T,EAAM+1C,GAAS,OAC5CxyD,EAAAA,EAAAA,MAAA,OAEEC,MAAO,CACLC,QAAS,OACTE,WAAY,SACZ4Y,IAAK,OACLF,QAAS,SACTq5C,aAAcK,EAAY,EAAI,oBAAsB,QACpDnqE,SAAA,EAEFwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACVM,MAAO,OACPF,OAAQ,OACRK,aAAc,MACdJ,WAA0B,IAAdkyD,EAAkB,UAA0B,IAAdA,EAAkB,UAA0B,IAAdA,EAAkB,UAAY,UACtGtyD,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB4Y,SAAU,OACV8N,WAAY,MACZF,MAAO6rC,GAAa,EAAI,UAAY,WACpCnqE,SACCmqE,EAAY,KAGfxyD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE68C,KAAM,GAAIz0D,SAAA,EACtB2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE4mB,WAAY,MAAOF,MAAO,WAAYt+B,SAAA,CACjDo0B,EAAK9a,KACL8a,EAAK80C,YACJ1mE,EAAAA,EAAAA,KAACulE,GAAQ,CAACC,UAAW5zC,EAAK80C,UAAWtxD,MAAO,CAAEs6B,WAAY,OAAQlyC,SAC/Do0B,EAAK80C,gBAIZvxD,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAChDo0B,EAAKg2C,OAAS,EAAE,IAAe,gBAAbjC,EAA6B,WAChB,iBAAbA,EAA8B,SAC9B,mBApClB/zC,EAAKiH,GAuCN,MAIV74B,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8mB,UAAW,SAAUJ,MAAO,UAAW7N,QAAS,QAASzwB,SAAC,iBApD1DmoE,EA0DtB,YAOd,E,UCvuBM98C,GAAgB7S,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qPAe1B0xD,GAAiB7xD,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,oHAmDjC,SA3CyB,WAGvB,IAAAi2B,GAAqD/b,EAAAA,EAAAA,UAAS,CAC5Dy3C,SAAU,CAAC,QACXC,QAAS,WAAF,OAAQC,EAAAA,IAAIjoB,IAAI,WAAW,EAClCuK,UAAW,MAHC50B,EAAQ0W,EAAdvb,KAgBR,OAhBgDub,EAAxBxR,WAkBpB56B,EAAAA,EAAAA,KAAC6oB,GAAa,CAAArrB,UACZwC,EAAAA,EAAAA,KAAC+rB,GAAc,OAMnB5W,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC6oB,GAAa,CAAArrB,UACZwC,EAAAA,EAAAA,KAAC6nE,GAAc,CAAArqE,UACbwC,EAAAA,EAAAA,KAACkoE,GAAY,CACXhtD,QAnBU,WAElB8V,UAAU,EACZ,EAiBU5V,gBAAgBsa,aAAQ,EAARA,EAAU6uB,UAAW,EACrClpC,UA1BiB,WAEzBzb,OAAOzB,SAASgvD,QAClB,UA6BF,E,mkBCyHA,SAvKkB,WAChB,IAAMn8B,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1Cm9B,EAASj9B,EAAA,GAAEk9B,EAAYl9B,EAAA,GAC9BI,GAAwCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhD+8B,EAAY98B,EAAA,GAAE+8B,EAAe/8B,EAAA,GAEpCg9B,GAIIC,EAAAA,GAAAA,MAHFx1B,EAAQu1B,EAARv1B,SACAwX,EAAY+d,EAAZ/d,aACaie,EAAMF,EAAnBG,UAAaD,OAIfE,EAAAA,UAAgB,WACd,IAAMC,EAAiB,eAAA99B,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,OAAAD,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACpByU,KAA4B,CAAF3U,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGpByG,GAAQoB,aAAY,OAC1BqqB,EAAS,kBAAmB,CAAE5wB,SAAS,IAAQxB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAA,SAG/CM,QAAQC,KAAK,+CACboU,KAAuB,wBAAA3U,EAAAW,OAAA,EAAAb,EAAA,iBAG5B,kBAZsB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAcvB47B,GACF,EAAG,CAACrK,IAEJ,IAAMzT,EAAQ,eAAAhf,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOmrB,GAAI,IAAAxsB,EAAA1F,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OACP,OAAnB+7B,GAAa,GAAMj1B,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAGMyG,GAAQW,MAAM,CACnCA,MAAO2qB,EAAK3qB,MACZq1B,SAAU1K,EAAK0K,WACf,OAHY31B,EAAAb,KAKDb,QACXsuB,EAAAA,GAAMC,QAAQ,+BACdzB,EAAS,kBAAmB,CAAE5wB,SAAS,KACxCwF,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEKvB,EAAe1F,EAAMuG,SAAW,qBACtCstB,EAAAA,GAAMnzB,MAAMgF,GAAc,OAEN,OAFMuB,EAAA/G,KAAA,EAE1Bg8B,GAAa,GAAOj1B,EAAAtG,OAAA,2BAAAsG,EAAArG,OAAA,EAAAmG,EAAA,qBAEvB,gBAnBaJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAqBd,OACE0V,EAAAA,EAAAA,MAAC0T,GAAa,CAACC,WAAS,EAAAtrB,SAAA,EAEtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAEfkV,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,QAAO5oB,SAAA,EAC5B2X,EAAAA,EAAAA,MAACkU,GAAW,CAAA7rB,SAAA,EACVwC,EAAAA,EAAAA,KAACspB,GAAI,CAAA9rB,SAAC,QACNwC,EAAAA,EAAAA,KAAC2pB,GAAK,CAAAnsB,SAAC,mBACPwC,EAAAA,EAAAA,KAAC6pB,GAAQ,CAAArsB,SAAC,kDAGZ2X,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,EAAaM,GAAU/f,SAAA,EACrC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,QAAOj+B,SAAC,qBACvBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,QACHrb,YAAY,gCACZke,aAAa,YACTj2B,EAAS,QAAS,CACpBk2B,SAAU,6BACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,wBAEX,IACFjF,UAAWi7B,EAAOh1B,MAAQ,QAAU,MAErCg1B,EAAOh1B,QAASlG,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOh1B,MAAMhB,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,WAAUj+B,SAAC,YAC1B2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAMotB,EAAe,OAAS,WAC9BjC,GAAG,WACHrb,YAAY,iBACZke,aAAa,oBACTj2B,EAAS,WAAY,CACvBk2B,SAAU,oBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,yBAEX,IACFjF,UAAWi7B,EAAOK,SAAW,QAAU,OAEzCv7B,EAAAA,EAAAA,KAAC2qB,GAAU,CACTjd,KAAK,SACL6Y,SAAS,YACTrI,QAAS,WAAF,OAAQ6c,GAAiBD,EAAa,EAC7C1lB,MAAO,CACL4P,SAAU,WACV6W,MAAO,OACPpmB,WAAY,OACZqmB,MAAO,WACPt+B,SAEDs9B,GAAe96B,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAG5CmU,EAAOK,WAAYv7B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOK,SAASr2B,cAGlDlF,EAAAA,EAAAA,KAACsmB,GAAM,CAAC5Y,KAAK,SAASmJ,SAAU+jB,EAAWxlB,MAAO,CAAEM,MAAO,QAASlY,SACjEo9B,EAAY,UAAY,qBAI7BzlB,EAAAA,EAAAA,MAACiW,GAAa,CAACE,SAAS,SAASC,KAAK,OAAOnW,MAAO,CAAE2mB,UAAW,QAASv+B,SAAA,EACxEwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,iBACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,uBAGDwC,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CAAE0mB,MAAO,WAAYt+B,SAAC,OACnCwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,wBACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,uBAKHwC,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASlW,MAAO,CAAE2mB,UAAW,QAASv+B,UAC5DwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,SACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,6CAOX,E,mkBC6OA,SA/YqB,WACnB,IAAMwzB,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GACjDM,GADgBJ,EAAA,GAAcA,EAAA,IACUD,EAAAA,EAAAA,WAAS,IAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhD+8B,EAAY98B,EAAA,GAAE+8B,EAAe/8B,EAAA,GACpC0d,GAAsDhe,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA9D6nB,EAAmB5nB,EAAA,GAAE6nB,EAAsB7nB,EAAA,GAClDG,GAAkCpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAvCmnB,EAASlnB,EAAA,GAAEmnB,EAAYnnB,EAAA,GAC9BG,GAAkCxe,EAAAA,EAAAA,UAAS,GAAEye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAtCmnB,EAASlnB,EAAA,GAAEmnB,EAAYnnB,EAAA,GAC9BG,GAAoC5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA5C6mB,EAAU5mB,EAAA,GAAE6mB,EAAa7mB,EAAA,GAEhCye,GAKIC,EAAAA,GAAAA,MAJFx1B,EAAQu1B,EAARv1B,SACAwX,EAAY+d,EAAZ/d,aACA2mB,EAAK5I,EAAL4I,MACa1I,EAAMF,EAAnBG,UAAaD,OAGTK,EAAWqI,EAAM,YACjBI,EAAQJ,EAAM,SAGdc,GAAmBC,EAAAA,EAAAA,aAAYrJ,EAAAA,QAAQsJ,SAAU,CACrDvpB,UAAW,WACTmX,EAAAA,GAAMC,QAAQ,4CACd2Q,GAAc,GACdE,EAAa,IACb,IAAMiB,EAAWC,YAAY,WAC3BlB,EAAa,SAAAzkC,GACX,OAAIA,GAAQ,GACV4lC,cAAcF,GACP,GAEF1lC,EAAO,CAChB,EACF,EAAG,IACL,EACA8xB,QAAS,SAACtxB,GACRmzB,EAAAA,GAAMnzB,MAAM,0BAA4BA,EAAM6F,SAAW,sBAC3D,IAII2/B,GAAmBF,EAAAA,EAAAA,aAAYp/B,GAAQE,SAAU,CACrD4V,UAAW,SAACjX,IACNA,EAASquB,SAAWruB,EAASF,SAC/BsuB,EAAAA,GAAMC,QAAQ,iCACdzB,EAAS,eAEb,EACAL,QAAS,SAACtxB,GACR,IAAMgF,EAAehF,EAAM6F,SAAW,qBACtCstB,EAAAA,GAAMnzB,MAAMgF,EACd,IAWIkZ,EAAQ,eAAAhgB,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOmyB,GAAI,OAAApyB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrBmkC,EAAW,CAAFrkC,EAAAE,KAAA,QACsC,OAAlD0zB,EAAAA,GAAMnzB,MAAM,sCAAsCT,EAAAI,OAAA,iBAIpD6lC,EAAiB6B,OAAO,CACtB5vB,KAAM+Z,EAAK/Z,KACX5Q,MAAO2qB,EAAK3qB,MACZ89B,MAAOnT,EAAKmT,MACZzI,SAAU1K,EAAK0K,SACfi1B,YAAa3/B,EAAK2/B,YAClBryD,SAAU0yB,EAAK1yB,SACfi0D,aAAcvhC,EAAKuhC,aACnB+O,QAAStwC,EAAKswC,QACdzzD,KAAM,UACN04B,UAAWnD,IACV,wBAAArkC,EAAAW,OAAA,EAAAb,EAAA,IACJ,gBAlBa4G,GAAA,OAAA/H,EAAAiC,MAAA,KAAAC,UAAA,KAoBd,OACE0V,EAAAA,EAAAA,MAAC0T,GAAa,CAACC,WAAS,EAAAtrB,SAAA,EAEtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAEfkV,EAAAA,EAAAA,MAAC+T,GAAW,CAAC9C,UAAU,QAAO5oB,SAAA,EAC5B2X,EAAAA,EAAAA,MAACkU,GAAW,CAAA7rB,SAAA,EACVwC,EAAAA,EAAAA,KAACspB,GAAI,CAAA9rB,SAAC,QACNwC,EAAAA,EAAAA,KAAC2pB,GAAK,CAAAnsB,SAAC,uBACPwC,EAAAA,EAAAA,KAAC6pB,GAAQ,CAAArsB,SAAC,4DAGZ2X,EAAAA,EAAAA,MAAC4U,GAAI,CAACxM,SAAUN,EAAaM,GAAU/f,SAAA,EACrC2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,OAAMj+B,SAAC,sBACtBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,OACHrb,YAAY,0BACR/X,EAAS,OAAQ,CACnBk2B,SAAU,6BACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,qBAEX6Z,UAAW,CACTtB,MAAO,IACPvY,QAAS,4BAEX,IACFjF,UAAWi7B,EAAOpkB,KAAO,QAAU,MAEpCokB,EAAOpkB,OAAQ9W,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOpkB,KAAK5R,cAG1CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,QAAOj+B,SAAC,aACvBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,QACHrb,YAAY,uBACR/X,EAAS,QAAS,CACpBk2B,SAAU,mBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,qBAEX6Z,UAAW,CACTtB,MAAO,GACPvY,QAAS,wBAEXyhC,QAAS,CACPlpB,MAAO,mBACPvY,QAAS,iDAEX,IACFjF,UAAWi7B,EAAOh1B,MAAQ,QAAU,MAErCg1B,EAAOh1B,QAASlG,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOh1B,MAAMhB,cAG5CiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,QAAOj+B,SAAC,aACvB2X,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQ8Y,IAAK,QAAS3wB,SAAA,EAC3CwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE68C,KAAM,GAAIz0D,UACtBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,QACLmrB,GAAG,QACHrb,YAAY,uBACR/X,EAAS,QAAS,CACpBk2B,SAAU,mBACVgL,QAAS,CACPlpB,MAAO,2CACPvY,QAAS,yBAEX,IACFjF,UAAWi7B,EAAO8I,MAAQ,QAAU,SAGxChkC,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLwQ,QA9GS,WAChB8lB,EAILU,EAAiBgC,OAAO1C,GAHtBxR,EAAAA,GAAMnzB,MAAM,wBAIhB,EAyGcwX,UAAWmtB,GAASU,EAAiB9J,WAAayI,EAAY,EAC9DjuB,MAAO,CACLK,WAAY4tB,EAAY,EAAI,UAAY,UACxCvH,MAAO,QACPnmB,OAAQ,OACRE,aAAc,MACdoY,QAAS,YACTC,SAAU,OACV8N,WAAY,MACZ0c,OAAQrV,EAAY,EAAI,cAAgB,UACxC/M,WAAY,gBACZ6xC,WAAY,UACZ3qE,SAEDknC,EAAiB9J,UAAY,cAC7ByI,EAAY,EAAI,GAAHx+B,OAAMw+B,EAAS,KAAM,WAGtCnI,EAAO8I,QAAShkC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO8I,MAAM9+B,UACzCm+B,EAAY,IACXluB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CACV8Y,SAAU,OACV4N,MAAO,UACPC,UAAW,OACXv+B,SAAA,CAAC,4BACyB6lC,EAAU,iBAK1CluB,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,YAAWj+B,SAAC,oBAC3BwC,EAAAA,EAAAA,KAACqqB,GAAK,CACJ3c,KAAK,OACLmrB,GAAG,YACHrb,YAAY,wBACZC,MAAOwlB,EACPtsB,SAAU,SAACuG,GAET,IAAMO,EAAQP,EAAEW,OAAOJ,MAAMrd,QAAQ,MAAO,IAAIymC,MAAM,EAAG,GACzD3D,EAAazlB,EACf,EACArI,MAAO,CACL2xB,WAAY,YACZ7Y,SAAU,OACV4Y,cAAe,MACf5K,UAAW,YAGd+G,EAAU1+B,OAAS,GAAK0+B,EAAU1+B,OAAS,GAAK4+B,IAC/CnjC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAC,iCAEX2lC,GAAcF,EAAU1+B,OAAS,IACjCvE,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAC,uCAMf2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,WAAUj+B,SAAC,oCAC1BwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,WACHrb,YAAY,oCACR/X,EAAS,WAAY,CACvBsZ,UAAW,CACTtB,MAAO,IACPvY,QAAS,4BAEX,IACFjF,UAAWi7B,EAAO/8B,SAAW,QAAU,MAExC+8B,EAAO/8B,WAAY6B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO/8B,SAAS+G,cAGlDiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,UAASj+B,SAAC,8BACzBwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAK,OACLmrB,GAAG,UACHrb,YAAY,mCACR/X,EAAS,YAAU,IACvBxF,UAAWi7B,EAAOimC,QAAU,QAAU,MAEvCjmC,EAAOimC,UAAWnhE,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOimC,QAAQj8D,cAGhDiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,eAAcj+B,SAAC,2CAC9BwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,CACPk0B,GAAG,eACHrb,YAAY,0EACZkN,WAAW,QACPjlB,EAAS,eAAgB,CAC3BsZ,UAAW,CACTtB,MAAO,IACPvY,QAAS,4BAEX,IACFjF,UAAWi7B,EAAOk3B,aAAe,QAAU,MAE5Cl3B,EAAOk3B,eAAgBpyD,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOk3B,aAAaltD,cAG1DiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,cAAaj+B,SAAC,sBAC7BwC,EAAAA,EAAAA,KAACwqB,GAAQ7lB,GAAAA,GAAA,CACPk0B,GAAG,cACHrb,YAAY,mDACZkN,WAAW,SACPjlB,EAAS,cAAe,CAC1Bk2B,SAAU,6BACV5c,UAAW,CACTtB,MAAO,IACPvY,QAAS,6BAEX,IACFjF,UAAWi7B,EAAOs1B,YAAc,QAAU,MAE3Ct1B,EAAOs1B,cAAexwD,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOs1B,YAAYtrD,cAGxDiQ,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,WAAUj+B,SAAC,cAC1B2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAMotB,EAAe,OAAS,WAC9BjC,GAAG,WACHrb,YAAY,uCACR/X,EAAS,WAAY,CACvBk2B,SAAU,oBACVC,UAAW,CACTne,MAAO,EACPvY,QAAS,yBAEX,IACFjF,UAAWi7B,EAAOK,SAAW,QAAU,OAEzCv7B,EAAAA,EAAAA,KAAC2qB,GAAU,CACTjd,KAAK,SACL6Y,SAAS,YACTrI,QAAS,WAAF,OAAQ6c,GAAiBD,EAAa,EAC7C1lB,MAAO,CACL4P,SAAU,WACV6W,MAAO,OACPpmB,WAAY,OACZqmB,MAAO,WACPt+B,SAEDs9B,GAAe96B,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAG5CmU,EAAOK,WAAYv7B,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAOK,SAASr2B,WAChDlF,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACV8Y,SAAU,OACV4N,MAAO,UACPC,UAAW,OACXv+B,SAAC,8DAKL2X,EAAAA,EAAAA,MAAC8U,GAAS,CAAAzsB,SAAA,EACRwC,EAAAA,EAAAA,KAACkqB,GAAK,CAACuR,QAAQ,kBAAiBj+B,SAAC,0BACjC2X,EAAAA,EAAAA,MAACiV,GAAY,CAAA5sB,SAAA,EACXwC,EAAAA,EAAAA,KAACqqB,GAAK1lB,GAAAA,GAAA,CACJ+I,KAAM61B,EAAsB,OAAS,WACrC1K,GAAG,kBACHrb,YAAY,oBACR/X,EAAS,kBAAmB,CAC9Bk2B,SAAU,qBACVqL,SAAU,SAAAvpB,GAAK,OAAIA,IAAU8d,GAAY,qBAAqB,KAC9D,IACFt7B,UAAWi7B,EAAO+L,gBAAkB,QAAU,OAEhDjnC,EAAAA,EAAAA,KAAC2qB,GAAU,CACTjd,KAAK,SACL6Y,SAAS,YACTrI,QAAS,WAAF,OAAQslB,GAAwBD,EAAoB,EAC3DnuB,MAAO,CACL4P,SAAU,WACV6W,MAAO,OACPpmB,WAAY,OACZqmB,MAAO,WACPt+B,SAED+lC,GAAsBvjC,EAAAA,EAAAA,KAACwnB,GAAU,KAAMxnB,EAAAA,EAAAA,KAAC+mB,GAAO,SAGnDmU,EAAO+L,kBAAmBjnC,EAAAA,EAAAA,KAAC4qB,GAAS,CAAAptB,SAAE09B,EAAO+L,gBAAgB/hC,cAGhElF,EAAAA,EAAAA,KAACsmB,GAAM,CACL5Y,KAAK,SACLmJ,SAAUguB,EAAiBjK,YAAcqI,GAAkC,IAArBA,EAAU1+B,OAChE6Q,MAAO,CAAEM,MAAO,QAASlY,SAExBqnC,EAAiBjK,UAAY,iBAAmB,8BAIrD56B,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASC,KAAK,OAAOnW,MAAO,CAAE2mB,UAAW,QAASv+B,UACxEwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,cACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,+BAKHwC,EAAAA,EAAAA,KAACorB,GAAa,CAACE,SAAS,SAASlW,MAAO,CAAE2mB,UAAW,QAASv+B,UAC5DwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,YACHiV,MAAO,CACL0mB,MAAO,UACP7I,eAAgB,OAChB+I,WAAY,MACZ9N,SAAU,QACV1wB,SACH,sCAOX,E,ylBCtaA,IAAMwhB,GAAmBhJ,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kOAc7B8I,GAAejJ,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,2mBAInB,SAAAY,GAAK,OAAIA,EAAMmI,SAAW,OAAO,EAoB/B,SAAAnI,GAAK,OAAIA,EAAMoI,eAAiB,OAAO,EAKvC,SAAApI,GAAK,OAAIA,EAAMoI,eAAiB,OAAO,GAK/CC,GAAWpJ,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,k1BA+CrBkJ,GAAarJ,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,08BAOjB,SAAAY,GAAK,OAAIA,EAAMuI,SAAW,WAAW,GA+B3CC,GAAWvJ,EAAAA,GAAOmB,IAAGQ,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,wNAcrBqJ,GAAexJ,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,wPAic/B,SAlb0B,SAAH5Y,GAOjB,IANJkiB,EAAMliB,EAANkiB,OACAvE,EAAO3d,EAAP2d,QACAwE,EAASniB,EAATmiB,UACAC,EAAMpiB,EAANoiB,OAAMyoD,EAAA7qE,EACNsiB,YAAAA,OAAW,IAAAuoD,EAAG,OAAOA,EAAAxoD,EAAAriB,EACrBuiB,QAAAA,OAAO,IAAAF,EAAG,IAAGA,EAEbniB,GAAgCC,EAAAA,EAAAA,UAAS,CAAEqiB,EAAG,EAAGC,EAAG,EAAGtK,MAAO,IAAKF,OAAQ,KAAK7X,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzEwiB,EAAQtiB,EAAA,GAAEuiB,EAAWviB,EAAA,GAC5BI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CoiB,EAAUniB,EAAA,GAAEoiB,EAAapiB,EAAA,GAChC0d,GAAkChe,EAAAA,EAAAA,UAAS,CAAEqiB,EAAG,EAAGC,EAAG,IAAIrE,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAnD2E,EAAS1E,EAAA,GAAE2E,EAAY3E,EAAA,GAC9BG,GAAoCpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA5CyE,EAAUxE,EAAA,GAAEyE,EAAazE,EAAA,GAChCG,GAAwCxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA/CuE,EAAYtE,EAAA,GAAEuE,EAAevE,EAAA,GACpCG,GAAkC5e,EAAAA,EAAAA,UAAS,CAAEgY,MAAO,EAAGF,OAAQ,IAAI+G,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA5DqE,EAASpE,EAAA,GAAEqE,EAAYrE,EAAA,GAC9BG,GAAgChf,EAAAA,EAAAA,UAAS,IAAGif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAArCmE,EAAQlE,EAAA,GAAEmE,EAAWnE,EAAA,GAC5BG,GAA0Cpf,EAAAA,EAAAA,UAAS,CAAEgY,MAAO,IAAKF,OAAQ,MAAMuH,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAAxEiE,EAAahE,EAAA,GAAEiE,EAAgBjE,EAAA,GACtCkE,GAAgCvjB,EAAAA,EAAAA,WAAS,GAAMwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,UACXC,GAAeD,EAAAA,EAAAA,WAGrBjjB,EAAAA,EAAAA,WAAU,WACR,IAAMmjB,EAAc,WAClBJ,EAAYxhB,OAAO6hB,YAAc,IACnC,EAKA,OAHAD,IACA5hB,OAAOC,iBAAiB,SAAU2hB,GAE3B,kBAAM5hB,OAAOE,oBAAoB,SAAU0hB,EAAY,CAChE,EAAG,KAGHnjB,EAAAA,EAAAA,WAAU,WACR,GAAIqhB,EAAW,CACb,IAAMgC,EAAMC,IAAIC,gBAAgBlC,GAChCoB,EAAYY,GAEZ,IAAMG,EAAM,IAAIC,MAyChB,OAxCAD,EAAIE,OAAS,WACX,IAAQrM,EAAkBmM,EAAlBnM,MAAOF,EAAWqM,EAAXrM,OACfoL,EAAa,CAAElL,MAAAA,EAAOF,OAAAA,IAGtB,IACIwM,EAAgBC,EADdC,EAAmBf,EAAW,IAAM,IAGtCzL,EAAQF,GAEVwM,EAAiBE,EACjBD,EAAmBzM,EAASE,EAASwM,IAGrCD,EAAkBC,EAClBF,EAAkBtM,EAAQF,EAAU0M,GAItCF,EAAiBG,KAAKC,IAAIJ,EAAgBb,EAAW,IAAM,KAC3Dc,EAAkBE,KAAKC,IAAIH,EAAiBd,EAAW,IAAM,KAE7DH,EAAiB,CAAEtL,MAAOsM,EAAgBxM,OAAQyM,IAGlD,IAAMomD,EAAYlmD,KAAKrE,IACrBqD,EAAW,IAAM,IACA,GAAjBa,GAEIsmD,EAAaD,EAAYxoD,EAE/BK,EAAY,CACVH,GAAIiC,EAAiBqmD,GAAa,EAClCroD,GAAIiC,EAAkBqmD,GAAc,EACpC5yD,MAAO2yD,EACP7yD,OAAQ8yD,GAEZ,EACAzmD,EAAIS,IAAMZ,EAEH,kBAAMC,IAAIY,gBAAgBb,EAAI,CACvC,CACF,EAAG,CAAChC,EAAWyB,EAAUtB,IAGzB,IAAM2C,GAAsBC,EAAAA,EAAAA,aAAY,SAACvF,GACvC,OAAIA,EAAEwF,SAAWxF,EAAEwF,QAAQ,GAClB,CACL3C,EAAG7C,EAAEwF,QAAQ,GAAGC,QAChB3C,EAAG9C,EAAEwF,QAAQ,GAAGE,SAGb,CACL7C,EAAG7C,EAAEyF,QACL3C,EAAG9C,EAAE0F,QAET,EAAG,IAGGC,GAAcJ,EAAAA,EAAAA,aAAY,SAACvF,GAAqB,IAAlBxP,EAAIjO,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,OACrCyd,EAAExP,KACJwP,EAAEC,iBAIJD,EAAE4F,kBAEF,IAAMC,EAASP,EAAoBtF,GAEtB,SAATxP,GACF0S,GAAc,GACdE,EAAa,CACXP,EAAGgD,EAAOhD,EAAIE,EAASF,EACvBC,EAAG+C,EAAO/C,EAAIC,EAASD,MAGzBQ,GAAc,GACdE,EAAgBhT,GAChB4S,EAAa,CACXP,EAAGgD,EAAOhD,EACVC,EAAG+C,EAAO/C,IAGhB,EAAG,CAACC,EAASF,EAAGE,EAASD,EAAGwC,IAEtBQ,GAAaP,EAAAA,EAAAA,aAAY,SAACvF,GAC9B,GAAKiD,GAAeI,EAApB,CAEe,cAAXrD,EAAExP,MACJwP,EAAEC,iBAGJ,IAAM4F,EAASP,EAAoBtF,GAEnC,GAAIiD,EAAY,CACd,IAAM8C,EAAOF,EAAOhD,EAAIM,EAAUN,EAC5BmD,EAAOH,EAAO/C,EAAIK,EAAUL,EAG5BmD,EAAOpC,EAAcrL,MAAQuK,EAASvK,MACtC0N,EAAOrC,EAAcvL,OAASyK,EAASzK,OAE7C0K,EAAY,SAAArhB,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IACPkhB,EAAGoC,KAAKC,IAAI,EAAGD,KAAKrE,IAAImF,EAAME,IAC9BnD,EAAGmC,KAAKC,IAAI,EAAGD,KAAKrE,IAAIoF,EAAME,KAAM,EAExC,MAAO,GAAI7C,EAAY,CACrB,IAAM8C,EAASN,EAAOhD,EAAIM,EAAUN,EACrBgD,EAAO/C,EAAIK,EAAUL,EAEpCE,EAAY,SAAArhB,GACV,IAAI0kB,EAAW1kB,EAAK6W,MAChB8N,EAAY3kB,EAAK2W,OACjByN,EAAOpkB,EAAKkhB,EACZmD,EAAOrkB,EAAKmhB,EAEhB,OAAQS,GACN,IAAK,WAEH+C,GADAD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,IACnBxD,EACvBoD,EAAOpkB,EAAKkhB,EAAIlhB,EAAK6W,MAAQ6N,EAC7BL,EAAOrkB,EAAKmhB,EAAInhB,EAAK2W,OAASgO,EAC9B,MACF,IAAK,YAEHA,GADAD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,IACnBxD,EACvBqD,EAAOrkB,EAAKmhB,EAAInhB,EAAK2W,OAASgO,EAC9B,MACF,IAAK,cAEHA,GADAD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,IACnBxD,EACvBoD,EAAOpkB,EAAKkhB,EAAIlhB,EAAK6W,MAAQ6N,EAC7B,MACF,IAAK,eAEHC,GADAD,EAAWpB,KAAKC,IAAItC,EAASjhB,EAAK6W,MAAQ2N,IACnBxD,EACvB,MACF,QACE,OAAOhhB,EAIX,IAAMskB,EAAOpC,EAAcrL,MAAQ6N,EAC7BH,EAAOrC,EAAcvL,OAASgO,EAEpC,MAAO,CACLzD,EAAGoC,KAAKC,IAAI,EAAGD,KAAKrE,IAAImF,EAAME,IAC9BnD,EAAGmC,KAAKC,IAAI,EAAGD,KAAKrE,IAAIoF,EAAME,IAC9B1N,MAAO6N,EACP/N,OAAQgO,EAEZ,GAEAlD,EAAa,CAAEP,EAAGgD,EAAOhD,EAAGC,EAAG+C,EAAO/C,GACxC,CArEsC,CAsExC,EAAG,CAACG,EAAYI,EAAYN,EAAUI,EAAWI,EAAcM,EAAejB,EAASD,EAAa2C,IAE9FkB,GAAYjB,EAAAA,EAAAA,aAAY,SAACvF,GACzBA,GAAgB,aAAXA,EAAExP,MACTwP,EAAEC,iBAGJiD,GAAc,GACdI,GAAc,GACdE,EAAgB,KAClB,EAAG,KAGHriB,EAAAA,EAAAA,WAAU,WACR,IAAMslB,EAAwB,SAACzG,GAAC,OAAK8F,EAAW9F,EAAE,EAC5C0G,EAAsB,WAAH,OAASF,GAAW,EACvCG,EAAwB,SAAC3G,GAC7BA,EAAEC,iBACF6F,EAAW9F,EACb,EACM4G,EAAuB,SAAC5G,GAAC,OAAKwG,EAAUxG,EAAE,EAE1C6G,EAAgB,SAAC7G,IACjBiD,GAAcI,IAChBrD,EAAEC,gBAEN,EAWA,OATIgD,GAAcI,KAChByD,SAASnkB,iBAAiB,YAAa8jB,GACvCK,SAASnkB,iBAAiB,UAAW+jB,GACrCI,SAASnkB,iBAAiB,YAAagkB,EAAuB,CAAEI,SAAS,IACzED,SAASnkB,iBAAiB,WAAYikB,EAAsB,CAAEG,SAAS,IACvED,SAASnkB,iBAAiB,YAAakkB,EAAe,CAAEE,SAAS,IACjED,SAASle,KAAKsP,MAAM8O,SAAW,UAG1B,WACLF,SAASlkB,oBAAoB,YAAa6jB,GAC1CK,SAASlkB,oBAAoB,UAAW8jB,GACxCI,SAASlkB,oBAAoB,YAAa+jB,GAC1CG,SAASlkB,oBAAoB,WAAYgkB,GACzCE,SAASlkB,oBAAoB,YAAaikB,GAC1CC,SAASle,KAAKsP,MAAM8O,SAAW,EACjC,CACF,EAAG,CAAC/D,EAAYI,EAAYyC,EAAYU,KAGxCrlB,EAAAA,EAAAA,WAAU,WACR,IAAM8lB,EAAkB5C,EAAa6C,QACrC,GAAKD,EAAL,CAEA,IAAME,EAAmB,SAACnH,GACxBA,EAAEC,iBACF0F,EAAY3F,EAAG,OACjB,EAEMoH,EAA0B,SAACpH,GAC/BA,EAAEC,iBACF0F,EAAY3F,EAAG,WACjB,EAEMqH,EAA2B,SAACrH,GAChCA,EAAEC,iBACF0F,EAAY3F,EAAG,YACjB,EAEMsH,EAA6B,SAACtH,GAClCA,EAAEC,iBACF0F,EAAY3F,EAAG,cACjB,EAEMuH,EAA8B,SAACvH,GACnCA,EAAEC,iBACF0F,EAAY3F,EAAG,eACjB,EAEM6G,EAAgB,SAAC7G,GACrBA,EAAEC,gBACJ,EAEAgH,EAAgBtkB,iBAAiB,aAAcwkB,EAAkB,CAAEJ,SAAS,IAC5EE,EAAgBtkB,iBAAiB,YAAakkB,EAAe,CAAEE,SAAS,IAExE,IAAMS,EAAUP,EAAgBQ,iBAAiB,gBAMjD,OALAD,EAAQE,QAAQ,SAACC,EAAQC,GACvB,IAAMC,EAAU,CAACT,EAAyBC,EAA0BC,EAA4BC,GAA6BK,GAC7HD,EAAOhlB,iBAAiB,aAAcklB,EAAS,CAAEd,SAAS,GAC5D,GAEO,WACLE,EAAgBrkB,oBAAoB,aAAcukB,GAClDF,EAAgBrkB,oBAAoB,YAAaikB,GACjDW,EAAQE,QAAQ,SAACC,EAAQC,GACvB,IAAMC,EAAU,CAACT,EAAyBC,EAA0BC,EAA4BC,GAA6BK,GAC7HD,EAAO/kB,oBAAoB,aAAcilB,EAC3C,EACF,CA/C4B,CAgD9B,EAAG,CAAClC,KAGJxkB,EAAAA,EAAAA,WAAU,WACR,GAAIohB,EAKF,OAJAuE,SAASle,KAAKsP,MAAM8O,SAAW,SAC/BF,SAASle,KAAKsP,MAAM4P,SAAW,QAC/BhB,SAASle,KAAKsP,MAAMM,MAAQ,OAErB,WACLsO,SAASle,KAAKsP,MAAM8O,SAAW,GAC/BF,SAASle,KAAKsP,MAAM4P,SAAW,GAC/BhB,SAASle,KAAKsP,MAAMM,MAAQ,EAC9B,CAEJ,EAAG,CAAC+J,IAGJ,IAAMwF,IAAaxC,EAAAA,EAAAA,aAAY,WAC7B,GAAKpB,EAAS+C,QAAd,CAGA,IAAMkB,EAAS3E,EAAUjL,MAAQqL,EAAcrL,MACzC6P,EAAS5E,EAAUnL,OAASuL,EAAcvL,OAG1CgQ,EAAUrD,KAAKqtB,MAAMvvB,EAASF,EAAIuF,GAClCG,EAAUtD,KAAKqtB,MAAMvvB,EAASD,EAAIuF,GAClCG,EAAcvD,KAAKqtB,MAAMvvB,EAASvK,MAAQ4P,GAC1CK,EAAexD,KAAKqtB,MAAMvvB,EAASzK,OAAS+P,GAalD5F,EAViB,CACf0kC,KAAM3kC,EACN6oD,WAAY,CACVxoD,EAAGyF,EACHxF,EAAGyF,EACH/P,MAAOgQ,EACPlQ,OAAQmQ,KAKZzK,GAxB6B,CAyB/B,EAAG,CAAC+E,EAAUU,EAAWI,EAAerB,EAAWC,EAAQzE,IAGrD+K,IAAcxD,EAAAA,EAAAA,aAAY,WAC9B,IAAM4lD,EAAYlmD,KAAKrE,IACrBqD,EAAW,IAAM,IACK,GAAtBJ,EAAcrL,OAEV4yD,EAAaD,EAAYxoD,EAE/BK,EAAY,CACVH,GAAIgB,EAAcrL,MAAQ2yD,GAAa,EACvCroD,GAAIe,EAAcvL,OAAS8yD,GAAc,EACzC5yD,MAAO2yD,EACP7yD,OAAQ8yD,GAEZ,EAAG,CAACvnD,EAAeI,EAAUtB,IAE7B,OAAKJ,GAAWC,GAGd1f,EAAAA,EAAAA,KAACkmB,GAAK,CAAA1oB,UACJ2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAWjF,EAAW,OAAS,QAAQ3jB,SAAA,EACnD2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BACJwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYrI,QAAShD,EAAQ1d,UAC5CwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAC6J,GAAgB,CAAAxhB,SAAA,EACfwC,EAAAA,EAAAA,KAACwf,GAAY,CAAAhiB,SAEP,sIAKN2X,EAAAA,EAAAA,MAAC8J,GAAY,CACXwH,IAAKlF,EACLrC,QAAO,GAAAra,OAAKkc,EAAcvL,OAAM,MAChC2J,cAAa,GAAAta,OAAKsd,KAAKrE,IAAIiD,EAAcvL,OAAQ,KAAI,MAAKhY,SAAA,EAE1DwC,EAAAA,EAAAA,KAAA,OACEymB,IAAKpF,EACLiB,IAAKzB,EACL6F,IAAI,2BACJC,WAAW,KAGbxR,EAAAA,EAAAA,MAACiK,GAAQ,CACPhK,MAAO,CACLwR,KAAM3G,EAASF,EACf8G,IAAK5G,EAASD,EACdtK,MAAOuK,EAASvK,MAChBF,OAAQyK,EAASzK,QAEnBsR,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,OAAO,EAAC1f,SAAA,EAE3CwC,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,uBACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,WAAW,KAEhDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,wBACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,YAAY,KAEjDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,0BACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,cAAc,KAEnDld,EAAAA,EAAAA,KAACqf,GAAU,CACTpf,UAAU,2BACVqf,QAAQ,YACRwH,YAAa,SAAC5J,GAAC,OAAK2F,EAAY3F,EAAG,eAAe,WAKxD/H,EAAAA,EAAAA,MAACoK,GAAQ,CAAA/hB,SAAA,EACPwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYrI,QAAS+H,GAAYzoB,SAAC,cAGnDwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACpI,QAAS+G,GAAWznB,SAAC,oCApEL,IA4EpC,E,kCCjlBMgrE,GAAkBxyD,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,2VAqB5BynC,GAAa5nC,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,0JAUvBsyD,GAAazyD,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,iDAKvBuyD,GAAa1yD,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,iDAKvBwyD,GAAY3yD,EAAAA,GAAOK,MAAKsB,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,4BAIxByyD,GAAmB5yD,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,gIAO7B0yD,GAAc7yD,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,2HAQxB2yD,GAAe9yD,EAAAA,GAAO6L,IAAG5J,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,iEAMzB4yD,GAAe/yD,EAAAA,GAAOmC,OAAMC,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,4YAsB5B6yD,IAAehzD,EAAAA,EAAAA,IAAOsQ,GAAPtQ,CAAcsC,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,sDA6KnC,SAxK2B,SAAH5Y,GAMlB,IALJqK,EAAOrK,EAAPqK,QACAqhE,EAAQ1rE,EAAR0rE,SACAC,EAAQ3rE,EAAR2rE,SAAQC,EAAA5rE,EACR6rE,eAAAA,OAAc,IAAAD,EAAG,GAAEA,EAAAE,EAAA9rE,EACnB+rE,SAAAA,OAAQ,IAAAD,EAAG,GAAEA,EAEb5rE,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C8rE,EAAa5rE,EAAA,GAAE6rE,EAAgB7rE,EAAA,GACtCI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CoiB,EAAUniB,EAAA,GAAEoiB,EAAapiB,EAAA,GAChC0d,GAAsChe,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA9C+tD,EAAW9tD,EAAA,GAAE+tD,EAAc/tD,EAAA,GAC5BuuC,GAAe5oC,EAAAA,EAAAA,QAAO,MAEtBqoD,EAAmB,SAACrlB,GACxB,IACMslB,EADYzlC,MAAM7jC,KAAKgkD,GACA/rB,OAAO,SAAA8rB,GAAI,OAAIA,EAAK32C,KAAKwlB,WAAW,SAAS,GAEhD,IAAtB02C,EAAWrlE,OAKX6kE,EAAe7kE,OAASglE,EAAchlE,OAASqlE,EAAWrlE,OAAS+kE,EACrE92C,EAAAA,GAAMnzB,MAAM,YAADwF,OAAaykE,EAAQ,2BAIlCE,EAAiB,SAAA3qE,GAAI,SAAAgG,QAAA40B,EAAAA,GAAAA,GAAQ56B,IAAI46B,EAAAA,GAAAA,GAAKmwC,GAAU,GAT9Cp3C,EAAAA,GAAMnzB,MAAM,0CAUhB,EA6BMwqE,EAAY,eAAAtrE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA8M,EAAAsmB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACU,IAAzByqE,EAAchlE,OAAY,CAAA3F,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAOzB,OALL0qE,GAAe,GAAM9qE,EAAAC,KAAA,EAEb2M,EAAW,IAAIi6C,SACrB8jB,EAAc3kD,QAAQ,SAAAy/B,GACpB74C,EAASk6C,OAAO,SAAUrB,EAC5B,GAAGzlD,EAAAE,KAAA,EAEoBmqE,EAASrhE,EAAS4D,GAAS,OAApC5M,EAAAmG,KAED0tB,UACX+2C,EAAiB,IACbtf,EAAa9lC,UACf8lC,EAAa9lC,QAAQ3G,MAAQ,KAEhC7e,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEDM,QAAQG,MAAM,gBAAeyyB,GAC7BU,EAAAA,GAAMnzB,MAAM,mCAAmC,OAEzB,OAFyBT,EAAAC,KAAA,EAE/C6qE,GAAe,GAAO9qE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAEzB,kBAxBiB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KA0BZqqE,EAAoB,eAAAxwC,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOuG,GAAQ,IAAAtN,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAElCoqE,EAASthE,EAASqE,GAAS,OAAArG,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEjC1G,QAAQG,MAAM,gBAAeV,GAC7B6zB,EAAAA,GAAMnzB,MAAM,mCAAmC,wBAAAuG,EAAArG,OAAA,EAAAmG,EAAA,iBAElD,gBAPyBJ,GAAA,OAAAg0B,EAAA95B,MAAA,KAAAC,UAAA,KAS1B,OACE0V,EAAAA,EAAAA,MAACqzD,GAAe,CACdvoE,UAAWkgB,EAAa,WAAa,GACrC4pD,WAjEmB,SAAC7sD,GACtBA,EAAEC,iBACFiD,GAAc,EAChB,EA+DI4pD,YA7DoB,SAAC9sD,GACvBA,EAAEC,iBACFiD,GAAc,EAChB,EA2DI6pD,OAzDe,SAAC/sD,GAClBA,EAAEC,iBACFiD,GAAc,GAEd,IAAMkkC,EAAQpnC,EAAEgtD,aAAa5lB,MAC7BqlB,EAAiBrlB,EACnB,EAmDuB9mD,SAAA,EAEnB2X,EAAAA,EAAAA,MAACyoC,GAAU,CAAC1/B,QAAS,WAAF,IAAA6vC,EAAA,OAA4B,QAA5BA,EAAQ7D,EAAa9lC,eAAO,IAAA2pC,OAAA,EAApBA,EAAsB5J,OAAO,EAAC3mD,SAAA,EACvDwC,EAAAA,EAAAA,KAACyoE,GAAU,CAAAjrE,SAAC,QACZwC,EAAAA,EAAAA,KAAC0oE,GAAU,CAAAlrE,SACR2iB,EACG,+BACA,wDAGNhL,EAAAA,EAAAA,MAACuzD,GAAU,CAACtzD,MAAO,CAAE8Y,SAAU,OAAQ4N,MAAO,WAAYt+B,SAAA,CAAC,YAC/C8rE,EAAS,sCAIvBtpE,EAAAA,EAAAA,KAAC2oE,GAAS,CACRliD,IAAKyjC,EACLx8C,KAAK,OACL83C,UAAQ,EACRpB,OAAO,UACPztC,SArEwB,SAACuG,GAC7B,IAAMonC,EAAQpnC,EAAEW,OAAOymC,MACvBqlB,EAAiBrlB,EACnB,IAsEKilB,EAAchlE,OAAS,IACtB4Q,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,oBAAkB+rE,EAAchlE,OAAO,SAC3CvE,EAAAA,EAAAA,KAAC4oE,GAAgB,CAAAprE,SACd+rE,EAAcvrD,IAAI,SAACqmC,EAAMv/B,GAAK,OAC7B3P,EAAAA,EAAAA,MAAC0zD,GAAW,CAAArrE,SAAA,EACVwC,EAAAA,EAAAA,KAAC8oE,GAAY,CACXxmD,IAAKX,IAAIC,gBAAgByiC,GACzB39B,IAAG,WAAA7hB,OAAaigB,EAAQ,MAE1B9kB,EAAAA,EAAAA,KAAC+oE,GAAY,CAAC7qD,QAAS,WAAF,OA9ER,SAAC4G,GAC1B0kD,EAAiB,SAAA3qE,GAAI,OAAIA,EAAK05B,OAAO,SAAC4xC,EAAG1rD,GAAC,OAAKA,IAAMqG,CAAK,EAAC,EAC7D,CA4E2CslD,CAAmBtlD,EAAM,EAACtnB,SAAC,QALxCsnB,EAQJ,MAGlB9kB,EAAAA,EAAAA,KAACgpE,GAAY,CACX9qD,QAAS2rD,EACThzD,SAAU4yD,EAAYjsE,SAErBisE,EAAc,cAAgB,aAAH5kE,OAAgB0kE,EAAchlE,OAAM,qBAMrE6kE,EAAe7kE,OAAS,IACvB4Q,EAAAA,EAAAA,MAAA,OAAA3X,SAAA,EACE2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAI,4BAA0B4rE,EAAe7kE,OAAO,SACpDvE,EAAAA,EAAAA,KAAC4oE,GAAgB,CAAAprE,SACd4rE,EAAeprD,IAAI,SAAC4nC,EAAO9gC,GAAK,OAC/B3P,EAAAA,EAAAA,MAAC0zD,GAAW,CAAArrE,SAAA,EACVwC,EAAAA,EAAAA,KAAC8oE,GAAY,CACXxmD,IAAG,YAAAzd,OAAc+gD,GACjBl/B,IAAG,eAAA7hB,OAAiBigB,EAAQ,MAE9B9kB,EAAAA,EAAAA,KAAC+oE,GAAY,CAAC7qD,QAAS,WAAF,OAAQ4rD,EAAqBlkB,EAAM,EAACpoD,SAAC,QAL1CsnB,EAQJ,UAO5B,E,mkBCwQA,SAzgBkB,SAAHvnB,GAA4C,IAAtC00B,EAAK10B,EAAL00B,MAAOo4C,EAAM9sE,EAAN8sE,OAAQC,EAAQ/sE,EAAR+sE,SAAUp4D,EAAM3U,EAAN2U,OAC5CzU,GAAgCC,EAAAA,EAAAA,UAAS,CACvC28B,MAAO,GACPm2B,YAAa,GACblrB,KAAM,GACNs7B,KAAM,GACNziE,SAAU,GACVg0D,MAAO,GACP2O,iBAAkB,GAClB6E,SAAU,QACV4E,gBAAiB,MACjBC,WAAY,GACZC,qBAAsB,GACtBC,eAAgB,IAChB/sE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAbK+N,EAAQ7N,EAAA,GAAEgtE,EAAWhtE,EAAA,GAc5BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA4Bhe,EAAAA,EAAAA,UAAS,CAAC,GAAEie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjCwf,EAAMvf,EAAA,GAAEmvD,EAASnvD,EAAA,GACxBG,GAAkDpe,EAAAA,EAAAA,WAAS,GAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA1D4lC,EAAiB3lC,EAAA,GAAE4lC,EAAoB5lC,EAAA,GAC9CG,GAAkDxe,EAAAA,EAAAA,UAAS,MAAKye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAzD6uD,EAAiB5uD,EAAA,GAAE6uD,EAAoB7uD,EAAA,GAC9CG,GAAsC5e,EAAAA,EAAAA,UAAS,IAAG6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA3C2uD,EAAW1uD,EAAA,GAAE2uD,EAAc3uD,EAAA,IAElCle,EAAAA,EAAAA,WAAU,WACR,GAAI4zB,EAAO,CACT,IAAMk5C,EAAY,IAAIp0C,KAAK9E,EAAMqT,MACjCqlC,EAAY,CACVtwC,MAAOpI,EAAMoI,OAAS,GACtBm2B,YAAav+B,EAAMu+B,aAAe,GAClClrB,KAAM6lC,EAAU7wC,cAAcqV,MAAM,KAAK,GACzCixB,KAAMuK,EAAUC,eAAevkC,MAAM,EAAG,GACxC1oC,SAAU8zB,EAAM9zB,UAAY,GAC5Bg0D,MAAOlgC,EAAMkgC,OAAS,GACtB2O,iBAAkB7uC,EAAM6uC,kBAAoB,GAC5C6E,SAAU1zC,EAAM0zC,UAAY,QAC5B4E,gBAAiBt4C,EAAMs4C,iBAAmB,MAC1CC,WAAYv4C,EAAMu4C,YAAc,GAChCC,qBAAsBx4C,EAAMw4C,sBAAwB,GACpDh0C,OAAQxE,EAAMwE,QAAU,GACxBi0C,eAAgBz4C,EAAMy4C,gBAAkB,IAI1CQ,EAAej5C,EAAM0zB,QAAU,GACjC,CACF,EAAG,CAAC1zB,IAEJ,IAAMo5C,EAAe,SAACnuD,GACpB,IAAAouD,EAAwBpuD,EAAEW,OAAlB/G,EAAIw0D,EAAJx0D,KAAM2G,EAAK6tD,EAAL7tD,MACdktD,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GACN6L,EAAO2G,GAAK,GAIXyd,EAAOpkB,IACTg0D,EAAU,SAAAjsE,GAAI,OAAA8F,GAAAA,GAAA,GACT9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GACN6L,EAAO,IAAE,EAGhB,EAEMy0D,EAAe,WACnB,IAAMC,EAAY,CAAC,EAgCnB,OA9BKhgE,EAAS6uB,MAAMwV,SAClB27B,EAAUnxC,MAAQ,gCAGf7uB,EAAS85B,KAGM,IAAIvO,KAAK,GAADlyB,OAAI2G,EAAS85B,KAAI,KAAAzgC,OAAI2G,EAASo1D,QACvC,IAAI7pC,OACnBy0C,EAAUlmC,KAAO,sCAJnBkmC,EAAUlmC,KAAO,2BAQd95B,EAASo1D,OACZ4K,EAAU5K,KAAO,6BAGfp1D,EAAS2mD,OAASx0C,MAAMP,WAAW5R,EAAS2mD,UAC9CqZ,EAAUrZ,MAAQ,2BAGhB3mD,EAASs1D,mBAAqBnjD,MAAMuP,SAAS1hB,EAASs1D,oBAAsB5zC,SAAS1hB,EAASs1D,kBAAoB,KACpH0K,EAAU1K,iBAAmB,0DAG3Bt1D,EAASk/D,iBAAmB/sD,MAAMuP,SAAS1hB,EAASk/D,kBAAoBx9C,SAAS1hB,EAASk/D,gBAAkB,GAAKx9C,SAAS1hB,EAASk/D,gBAAkB,MACvJc,EAAUd,eAAiB,6CAG7BI,EAAUU,GAC+B,IAAlC5vB,OAAO6vB,KAAKD,GAAWjnE,MAChC,EAgBMmnE,EAAgB,eAAAntE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOitE,GAAQ,IAAAC,EAAAxnE,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjCmzB,SAAAA,EAAO4G,GAAI,CAAFj6B,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAWX,OAXWJ,EAAAC,KAAA,GAGN2M,EAAW,IAAIi6C,UACZC,OAAO,SAAUimB,EAAStnB,MAE/BsnB,EAASpD,aACX/8D,EAASk6C,OAAO,IAAKimB,EAASpD,WAAWxoD,GACzCvU,EAASk6C,OAAO,IAAKimB,EAASpD,WAAWvoD,GACzCxU,EAASk6C,OAAO,QAASimB,EAASpD,WAAW7yD,OAC7ClK,EAASk6C,OAAO,SAAUimB,EAASpD,WAAW/yD,SAC/C5W,EAAAE,KAAA,EAEsByG,GAAQsmE,kBAAkB55C,EAAM4G,GAAIrtB,GAAS,QAA9DpH,EAAQxF,EAAAmG,MAED0tB,SAEXk4C,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IACP43B,OAAQryB,EAAS6H,UAAQ,GAE5BrN,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEDM,QAAQG,MAAM,2BAA0ByyB,GACxCU,EAAAA,GAAMnzB,MAAM,2CAA2C,wBAAAT,EAAAW,OAAA,EAAAb,EAAA,iBAE1D,gBA3BqB4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAkChBqsE,EAAiB,eAAAxyC,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOkC,EAAS4D,GAAQ,IAAApH,EAAAzF,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEvByG,GAAQwmE,kBAAkBnkE,EAAS4D,GAAS,OAIlE,OAJKpH,EAAQwB,EAAAb,MAED0tB,SACXy4C,EAAe,SAAArsE,GAAI,SAAAgG,QAAA40B,EAAAA,GAAAA,GAAQ56B,IAAI46B,EAAAA,GAAAA,GAAKr1B,EAASkgD,MAAMtmC,IAAI,SAAAqb,GAAC,OAAIA,EAAEptB,QAAQ,IAAC,GACxErG,EAAA5G,OAAA,SAEMoF,GAAQ,OAEsC,MAFtCwB,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEf1G,QAAQG,MAAM,+BAA8BV,GAASA,EAAA,wBAAAiH,EAAArG,OAAA,EAAAmG,EAAA,iBAGxD,gBAbsBO,EAAAM,GAAA,OAAA+yB,EAAA95B,MAAA,KAAAC,UAAA,KAejBusE,EAAiB,eAAAnyC,GAAAr7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAOyB,EAASqE,GAAQ,IAAA+G,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAAAuH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAExCyG,GAAQ0mE,iBAAiBrkE,EAASqE,GAAS,OACjDi/D,EAAe,SAAArsE,GAAI,OAAIA,EAAK05B,OAAO,SAAA1W,GAAG,OAAIA,IAAQ5V,CAAQ,EAAC,GAAE5F,EAAAvH,KAAA,eAER,MAFQuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAE7DnH,QAAQG,MAAM,+BAA8B2T,GAASA,EAAA,wBAAA3M,EAAA9G,OAAA,EAAA4G,EAAA,iBAGxD,gBARsBe,EAAAY,GAAA,OAAA+xB,EAAAr6B,MAAA,KAAAC,UAAA,KAUjBwd,EAAY,eAAA+c,GAAAx7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA+H,EAAO0W,GAAC,IAAAjV,EAAAwL,EAAA,OAAAhV,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,OACR,GAAnBoe,EAAEC,iBAEGouD,IAAgB,CAAF9kE,EAAA3H,KAAA,eAAA2H,EAAAzH,OAAA,iBAYgE,GARnF6rE,GAAW,GAAMpkE,EAAA5H,KAAA,EAEToJ,EAAStD,GAAAA,GAAA,GACV6G,GAAQ,IACX6G,QAASH,EACTozB,KAAM,IAAIvO,KAAK,GAADlyB,OAAI2G,EAAS85B,KAAI,KAAAzgC,OAAI2G,EAASo1D,OAAQtmC,cACpD63B,MAAO3mD,EAAS2mD,MAAQ/0C,WAAW5R,EAAS2mD,OAAS,EACrD2O,iBAAkBt1D,EAASs1D,iBAAmB5zC,SAAS1hB,EAASs1D,kBAAoB,KACpF4J,eAAgBl/D,EAASk/D,eAAiBx9C,SAAS1hB,EAASk/D,gBAAkB,KAG5Ez4C,EAAO,CAAFxrB,EAAA3H,KAAA,eAAA2H,EAAA3H,KAAA,EAEDyG,GAAQ6C,YAAY6pB,EAAM4G,GAAI5wB,GAAU,OAAAxB,EAAA3H,KAAA,sBAAA2H,EAAA3H,KAAA,EAGxCyG,GAAQwC,YAAYE,GAAU,OAGtCoiE,IAAS5jE,EAAA3H,KAAA,eAAA2H,EAAA5H,KAAA,EAAA4U,EAAAhN,EAAA,SAETvH,QAAQG,MAAM,6BAA4BoU,GAC1Cq3D,EAAU,CAAEoB,OAAQ,8BAA+B,OAEjC,OAFiCzlE,EAAA5H,KAAA,EAEnDgsE,GAAW,GAAOpkE,EAAAnH,OAAA,2BAAAmH,EAAAlH,OAAA,EAAAiH,EAAA,qBAErB,gBAjCiB2B,GAAA,OAAA6xB,EAAAx6B,MAAA,KAAAC,UAAA,KAoDlB,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBzC,UACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKy0B,EAAQ,wBAA0B,qBACvCjyB,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLzN,UAAU,eACVie,QAASosD,EAAS9sE,SACnB,UAKH2X,EAAAA,EAAAA,MAAA,QAAMoI,SAAUN,EAAchd,UAAU,qBAAoBzC,SAAA,CACzD09B,EAAOgxC,SACNlsE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3B09B,EAAOgxC,SAKXj6C,IACC9c,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJ2X,EAAAA,EAAAA,MAAA,OACElV,UAAU,sBACVie,QAxJY,WACxB,IAAM7H,EAAQ2N,SAASmB,cAAc,SACrC9O,EAAM3I,KAAO,OACb2I,EAAM+tC,OAAS,UACf/tC,EAAM81D,SAAW,SAACjvD,GAChB,IAAMmnC,EAAOnnC,EAAEW,OAAOymC,MAAM,GACxBD,IACF2mB,EAAqB3mB,GACrB1C,GAAqB,GAEzB,EACAtrC,EAAM8tC,OACR,EA6Ic/uC,MAAO,CACLM,MAAO,QACPF,OAAQ,OACRG,OAAQ,qBACRE,aAAc,OACdR,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBojC,OAAQ,UACR0zB,gBAAiB5gE,EAASirB,OAAS,cAAgB,UACnD41C,gBAAiB7gE,EAASirB,OAAS,gBAAH5xB,OAAmB2G,EAASirB,OAAM,KAAM,OACxE61C,eAAgB,QAChBC,mBAAoB,SACpBC,iBAAkB,YAClBxnD,SAAU,YACVxnB,SAAA,EAEAgO,EAASirB,SACTthB,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAE8mB,UAAW,SAAUJ,MAAO,WAAYt+B,SAAA,EACpDwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,SAAUiO,aAAc,OAAQ3+B,SAAC,QACzDwC,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE8Y,SAAU,QAAS1wB,SAAC,wBAGrCgO,EAASirB,SACRz2B,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CACV4P,SAAU,WACV6B,IAAK,EACLD,KAAM,EACNiV,MAAO,EACP4wC,OAAQ,EACRh3D,WAAY,kBACZJ,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB4gB,QAAS,EACTI,WAAY,oBACZwF,MAAO,QACP5N,SAAU,QAEZmO,aAAc,SAACnf,GAAC,OAAKA,EAAEW,OAAOzI,MAAM8gB,QAAU,GAAG,EACjDoG,aAAc,SAACpf,GAAC,OAAKA,EAAEW,OAAOzI,MAAM8gB,QAAU,GAAG,EAAC14B,SACjD,mBASRy0B,IACC9c,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAC0sE,GAAkB,CACjB9kE,QAASqqB,EAAM4G,GACfowC,SAAU6C,EACV5C,SAAU8C,EACV5C,eAAgB6B,EAChB3B,SAAU,SAKhBn0D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,QAAOj+B,SAAC,wBACvBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,QACH/hB,KAAK,QACL2G,MAAOjS,EAAS6uB,MAChB1jB,SAAU00D,EACVprE,UAAWi7B,EAAOb,MAAQ,QAAU,GACpC7c,YAAY,6BAEb0d,EAAOb,QAASr6B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAOb,YAGzDllB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,WAAUj+B,SAAC,eAC1BwC,EAAAA,EAAAA,KAAA,UACE64B,GAAG,WACH/hB,KAAK,WACL2G,MAAOjS,EAASm6D,SAChBhvD,SAAU00D,EAAa7tE,SAjIlB,CACjB,CAAEigB,MAAO,QAASxH,MAAO,aACzB,CAAEwH,MAAO,UAAWxH,MAAO,WAC3B,CAAEwH,MAAO,WAAYxH,MAAO,gBAC5B,CAAEwH,MAAO,aAAcxH,MAAO,cAC9B,CAAEwH,MAAO,aAAcxH,MAAO,YAC9B,CAAEwH,MAAO,SAAUxH,MAAO,SAC1B,CAAEwH,MAAO,QAASxH,MAAO,WA4HD+H,IAAI,SAAA2uD,GAAG,OACjB3sE,EAAAA,EAAAA,KAAA,UAAwByd,MAAOkvD,EAAIlvD,MAAMjgB,SACtCmvE,EAAI12D,OADM02D,EAAIlvD,MAER,YAMjBtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,cAAaj+B,SAAC,cAC7BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,cACH/hB,KAAK,cACL2G,MAAOjS,EAASglD,YAChB75C,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,2BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,oBACtBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAAS85B,KAChB3uB,SAAU00D,EACVprE,UAAWi7B,EAAOoK,KAAO,QAAU,GACnCxnB,KAAK,IAAIiZ,MAAOuD,cAAcqV,MAAM,KAAK,KAE1CzU,EAAOoK,OAAQtlC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAOoK,WAGxDnwB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,qBACtBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAASo1D,KAChBjqD,SAAU00D,EACVprE,UAAWi7B,EAAO0lC,KAAO,QAAU,KAEpC1lC,EAAO0lC,OAAQ5gE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAO0lC,cAI1DzrD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,WAAUj+B,SAAC,sBAC1BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,WACH/hB,KAAK,WACL2G,MAAOjS,EAASrN,SAChBwY,SAAU00D,EACV7tD,YAAY,iCAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,QAAOj+B,SAAC,cACvBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,SACLmrB,GAAG,QACH/hB,KAAK,QACL2G,MAAOjS,EAAS2mD,MAChBx7C,SAAU00D,EACVprE,UAAWi7B,EAAOi3B,MAAQ,QAAU,GACpC30C,YAAY,IACZM,IAAI,IACJC,KAAK,SAENmd,EAAOi3B,QAASnyD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAOi3B,YAGzDh9C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,mBAAkBj+B,SAAC,sBAClCwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,SACLmrB,GAAG,mBACH/hB,KAAK,mBACL2G,MAAOjS,EAASs1D,iBAChBnqD,SAAU00D,EACVprE,UAAWi7B,EAAO4lC,iBAAmB,QAAU,GAC/CtjD,YAAY,kBACZM,IAAI,MAELod,EAAO4lC,mBAAoB9gE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAO4lC,uBAGpE3rD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,iBAAgBj+B,SAAC,yBAChCwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,SACLmrB,GAAG,iBACH/hB,KAAK,iBACL2G,MAAOjS,EAASk/D,eAChB/zD,SAAU00D,EACVprE,UAAWi7B,EAAOwvC,eAAiB,QAAU,GAC7CltD,YAAY,IACZM,IAAI,IACJsE,IAAI,OAEL8Y,EAAOwvC,iBAAkB1qE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE09B,EAAOwvC,wBAIpEv1D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,kBAAiBj+B,SAAC,4BACjCwC,EAAAA,EAAAA,KAAA,UACE64B,GAAG,kBACH/hB,KAAK,kBACL2G,MAAOjS,EAAS++D,gBAChB5zD,SAAU00D,EAAa7tE,SA/Ob,CACtB,CAAEigB,MAAO,MAAOxH,MAAO,OACvB,CAAEwH,MAAO,MAAOxH,MAAO,OACvB,CAAEwH,MAAO,MAAOxH,MAAO,OACvB,CAAEwH,MAAO,MAAOxH,MAAO,iBA6OM+H,IAAI,SAAAytB,GAAG,OACtBzrC,EAAAA,EAAAA,KAAA,UAAwByd,MAAOguB,EAAIhuB,MAAMjgB,SACtCiuC,EAAIx1B,OADMw1B,EAAIhuB,MAER,SAKftI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,aAAYj+B,SAAC,eAC5BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,aACH/hB,KAAK,aACL2G,MAAOjS,EAASg/D,WAChB7zD,SAAU00D,EACV7tD,YAAY,sCAKlBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,uBAAsBj+B,SAAC,uBACtCwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,uBACH/hB,KAAK,uBACL2G,MAAOjS,EAASi/D,qBAChB9zD,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,oDAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLzN,UAAU,oBACVie,QAASosD,EACTzzD,SAAU+zD,EAAQptE,SACnB,YAGDwC,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLzN,UAAU,kBACV4W,SAAU+zD,EAAQptE,SAEjBotE,EAAU,gBAAmB34C,EAAQ,sBAAwB,2BAMpEjyB,EAAAA,EAAAA,KAAC4sE,GAAiB,CAChBntD,OAAQiiC,EACRxmC,QAnXyB,WAC/BymC,GAAqB,GACrBqpB,EAAqB,KACvB,EAiXQtrD,UAAWqrD,EACXprD,OAAQ+rD,EACR7rD,YAAa,aAKvB,E,uDCzgBMgtD,GAAe72D,EAAAA,GAAOmB,IAAGjB,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,+GAQzB22D,GAAc92D,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,yIAUxB42D,GAAc/2D,EAAAA,GAAOmB,IAAGV,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,uUAoBxB62D,GAAYh3D,EAAAA,GAAOmB,IAAGM,KAAAA,IAAAtB,EAAAA,EAAAA,GAAA,sBAItB82D,GAAaj3D,EAAAA,GAAOsB,GAAEK,KAAAA,IAAAxB,EAAAA,EAAAA,GAAA,6FAOtB+2D,GAAYl3D,EAAAA,GAAOmB,IAAGU,KAAAA,IAAA1B,EAAAA,EAAAA,GAAA,sFAOtBg3D,GAAWn3D,EAAAA,GAAOmB,IAAGY,KAAAA,IAAA5B,EAAAA,EAAAA,GAAA,+IAYrBi3D,GAAmBp3D,EAAAA,GAAOmB,IAAGc,KAAAA,IAAA9B,EAAAA,EAAAA,GAAA,0EAM7Bk3D,GAAgBr3D,EAAAA,GAAOmB,IAAGiB,KAAAA,IAAAjC,EAAAA,EAAAA,GAAA,+BAI1B2T,GAAe9T,EAAAA,GAAOyE,GAAEnC,KAAAA,IAAAnC,EAAAA,EAAAA,GAAA,6FAOxBm3D,GAAYt3D,EAAAA,GAAOmB,IAAGqB,KAAAA,IAAArC,EAAAA,EAAAA,GAAA,2GAMtBo3D,GAAYv3D,EAAAA,GAAOmB,IAAGuB,KAAAA,IAAAvC,EAAAA,EAAAA,GAAA,kTAoBtBq3D,GAAsBx3D,EAAAA,GAAOmB,IAAGyB,KAAAA,IAAAzC,EAAAA,EAAAA,GAAA,+BAIhCs3D,GAAmBz3D,EAAAA,GAAOmB,IAAG2B,KAAAA,IAAA3C,EAAAA,EAAAA,GAAA,8DAM7Bu3D,GAAkB13D,EAAAA,GAAOmB,IAAG6B,KAAAA,IAAA7C,EAAAA,EAAAA,GAAA,8KAW5Bw3D,GAAoB33D,EAAAA,GAAOmB,IAAG+B,KAAAA,IAAA/C,EAAAA,EAAAA,GAAA,4LAc9B4V,GAAiB/V,EAAAA,GAAOmB,IAAGiC,KAAAA,IAAAjD,EAAAA,EAAAA,GAAA,yIAuLjC,SA9K0B,SAAH5Y,GAAqC,IAA/BkiB,EAAMliB,EAANkiB,OAAQvE,EAAO3d,EAAP2d,QAAStT,EAAOrK,EAAPqK,QAC5C1I,QAAQgU,IAAI,4BAA6B,CAAEuM,OAAAA,EAAQ7X,QAAAA,IACnD,IAAAnK,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCw0B,EAAKt0B,EAAA,GAAEiwE,EAAQjwE,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA0Bhe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjCrc,EAAKsc,EAAA,GAAEqB,EAAQrB,EAAA,IAEtBtd,EAAAA,EAAAA,WAAU,WACRa,QAAQgU,IAAI,+BAAgC,CAAEuM,OAAAA,EAAQ7X,QAAAA,IAClD6X,GAAU7X,GACZimE,GAEJ,EAAG,CAACpuD,EAAQ7X,IAEZ,IAwBoBkmE,EATAnc,EAfdkc,EAAgB,eAAAtvE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAER,OADf+rE,GAAW,GACX7tD,EAAS,MAAMpe,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUyG,GAAQmC,SAASE,GAAQ,OAA1CxD,EAAQxF,EAAAmG,KACd6oE,EAASxpE,EAAS6tB,OAAOrzB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEzBM,QAAQG,MAAM,+BAA8ByyB,GAC5C9U,EAAS,2CAA2C,OAElC,OAFkCpe,EAAAC,KAAA,EAEpDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAbqB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KA6BtB,OAAKggB,GAGHzf,EAAAA,EAAAA,KAACkmB,GAAK,CAAA1oB,UACJ2X,EAAAA,EAAAA,MAACgR,GAAY,CAACC,UAAU,QAAO5oB,SAAA,EAC7B2X,EAAAA,EAAAA,MAACkR,GAAW,CAAA7oB,SAAA,EACVwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJwC,EAAAA,EAAAA,KAACsmB,GAAM,CAACC,SAAS,YAAYrI,QAAShD,EAAQ1d,UAC5CwC,EAAAA,EAAAA,KAACwmB,GAAS,UAIdrR,EAAAA,EAAAA,MAAC03D,GAAY,CAAArvE,SAAA,CACVotE,IAAW5qE,EAAAA,EAAAA,KAAC+rB,GAAc,CAAAvuB,SAAC,gBAE3B6B,IACCW,EAAAA,EAAAA,KAAA,OAAKoV,MAAO,CAAE0mB,MAAO,UAAWI,UAAW,SAAUjO,QAAS,QAASzwB,SACpE6B,IAIJ4yB,IACC9c,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACE2X,EAAAA,EAAAA,MAAC23D,GAAW,CAAAtvE,SAAA,EACVwC,EAAAA,EAAAA,KAAC+sE,GAAW,CAAAvvE,SACTy0B,EAAMwE,QACLz2B,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAcotB,EAAMwE,QACvB/P,IAAKuL,EAAMoI,MACX1J,QAAS,SAACzT,GAAQA,EAAEW,OAAOzI,MAAMC,QAAU,MAAQ,IAEnD,QAGNF,EAAAA,EAAAA,MAAC63D,GAAS,CAAAxvE,SAAA,EACRwC,EAAAA,EAAAA,KAACitE,GAAU,CAAAzvE,SAAEy0B,EAAMoI,SAEnBllB,EAAAA,EAAAA,MAAC+3D,GAAS,CAAA1vE,SAAA,EACR2X,EAAAA,EAAAA,MAACg4D,GAAQ,CAAA3vE,SAAA,EACPwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAC,QACvBwC,EAAAA,EAAAA,KAAA,QAAAxC,UAtDAm0D,EAsDkB1/B,EAAMqT,KArD7B,IAAIvO,KAAK46B,GACVna,mBAAmB,QAAS,CACtCsa,KAAM,UACND,MAAO,OACPD,IAAK,kBAoDU3/B,EAAM2uC,OACLzrD,EAAAA,EAAAA,MAACg4D,GAAQ,CAAA3vE,SAAA,EACPwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAC,QACvBwC,EAAAA,EAAAA,KAAA,QAAAxC,UAnDFswE,EAmDoB77C,EAAM2uC,KAlDvCkN,EACEA,EAAWlvD,UAAU,EAAG,GADP,SAsDPqT,EAAM9zB,WACLgX,EAAAA,EAAAA,MAACg4D,GAAQ,CAAA3vE,SAAA,EACPwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAC,QACvBwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAOy0B,EAAM9zB,cAIhB8zB,EAAMkgC,MAAQ,IACbh9C,EAAAA,EAAAA,MAACg4D,GAAQ,CAAA3vE,SAAA,EACPwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAC,QACvB2X,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAOy0B,EAAMkgC,MAAM,WAItBlgC,EAAM6uC,mBACL3rD,EAAAA,EAAAA,MAACg4D,GAAQ,CAAA3vE,SAAA,EACPwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMzC,SAAC,QACvB2X,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAOy0B,EAAM87C,sBAAwB,EAAE,IAAE97C,EAAM6uC,0BAKpD7uC,EAAMu+B,cACLxwD,EAAAA,EAAAA,KAACotE,GAAgB,CAAA5vE,SAAEy0B,EAAMu+B,oBAM9Bv+B,EAAM0zB,QAAU1zB,EAAM0zB,OAAOphD,OAAS,IACrC4Q,EAAAA,EAAAA,MAACk4D,GAAa,CAAA7vE,SAAA,EACZ2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAAtsB,SAAA,CAAC,eAAay0B,EAAM0zB,OAAOphD,OAAO,QAC/CvE,EAAAA,EAAAA,KAACstE,GAAS,CAAA9vE,SACPy0B,EAAM0zB,OAAO3nC,IAAI,SAAC4nC,EAAO9gC,GAAK,OAC7B9kB,EAAAA,EAAAA,KAACutE,GAAS,CAAA/vE,UACRwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAc+gD,GACjBl/B,IAAG,eAAA7hB,OAAiBigB,EAAQ,GAC5B6L,QAAS,SAACzT,GAAQA,EAAEW,OAAOzI,MAAMC,QAAU,MAAQ,KAJvCyP,EAMJ,QAOnBmN,EAAM4uC,cAAgB5uC,EAAM4uC,aAAat8D,OAAS,IACjD4Q,EAAAA,EAAAA,MAACq4D,GAAmB,CAAAhwE,SAAA,EAClB2X,EAAAA,EAAAA,MAAC2U,GAAY,CAAAtsB,SAAA,CAAC,cAAYy0B,EAAM4uC,aAAat8D,OAAO,QACpDvE,EAAAA,EAAAA,KAACytE,GAAgB,CAAAjwE,SACdy0B,EAAM4uC,aAAa7iD,IAAI,SAACgwD,EAAalpD,GAAK,IAAAmpD,EAAAC,EAAAC,EAAA,OACzCh5D,EAAAA,EAAAA,MAACu4D,GAAe,CAAAlwE,SAAA,EACdwC,EAAAA,EAAAA,KAAC2tE,GAAiB,CAAAnwE,SACC,QAAhBywE,EAAAD,EAAYp8C,YAAI,IAAAq8C,GAAhBA,EAAkBj8C,KACjBhyB,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAcmpE,EAAYp8C,KAAKI,KAClCtL,IAAKsnD,EAAYp8C,KAAK9a,MAAQk3D,EAAYp8C,KAAK1rB,MAC/CyqB,QAAS,SAACzT,GAAQA,EAAEW,OAAOzI,MAAMC,QAAU,MAAQ,IAEnD,QAENrV,EAAAA,EAAAA,KAAA,QAAAxC,UAAuB,QAAhB0wE,EAAAF,EAAYp8C,YAAI,IAAAs8C,OAAA,EAAhBA,EAAkBp3D,QAAwB,QAApBq3D,EAAIH,EAAYp8C,YAAI,IAAAu8C,OAAA,EAAhBA,EAAkBjoE,UACnDlG,EAAAA,EAAAA,KAAA,QAAMoV,MAAO,CACX0mB,MAA8B,cAAvBkyC,EAAY7oE,OAAyB,UAAY,UACxD+oB,SAAU,QACV1wB,SACwB,cAAvBwwE,EAAY7oE,OAAyB,IAAM,QAf1B2f,EAiBJ,mBAvHlB,IAkItB,ECnUO,IAAMspD,GAAiB,SAACC,GAAiD,IAK1EC,EALoCC,EAAa9uE,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,EAAG+uE,EAAO/uE,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,KAC/Du3B,EAAM,IAAID,KACV03C,EAAa,IAAI13C,KAAKs3C,GAU5B,OALEC,EADEE,EACS,IAAIz3C,KAAKy3C,GAET,IAAIz3C,KAAK03C,EAAW/1C,UAA6B,GAAhB61C,EAAqB,GAAK,KAGpEE,EAAaz3C,EACR,WACEA,GAAOy3C,GAAcz3C,GAAOs3C,EAC9B,UAEA,WAEX,EAOaI,GAAqB,SAACvpE,GAOjC,MANkB,CAChB,SAAY,YACZ,QAAW,OACX,UAAa,aAGEA,IAAW,YAC9B,E,mkBChCA,IAAM8oD,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFY,GAAY,WAAH,OACbrT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGFunD,GAAe,WAAH,OAChBx5D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,cACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACJ,EAGFwnD,GAAU,WAAH,OACXz5D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,quBACJ,EAGFc,GAAW,WAAH,OACZ/S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFQ,GAAW,WAAH,OACZjT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iDACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iCACJ,EAGFmB,GAAW,WAAH,OACZvoB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,oGACZ,EAGF8mD,GAAa,WAAH,OACd15D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFunD,GAAY,WAAH,OACb35D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC1BvnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,uBACb,EAwaR,SArasB,WACpB,IAAMiJ,GAAWC,EAAAA,EAAAA,MACjBxzB,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bm6D,EAAIj6D,EAAA,GAAEoxE,EAAOpxE,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BuzD,EAAKtzD,EAAA,GAAEgxE,EAAQhxE,EAAA,GACtB0d,GAAwChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAA7CuzD,EAAYtzD,EAAA,GAAEuzD,EAAevzD,EAAA,GACpCG,GAA8Bpe,EAAAA,EAAAA,WAAS,GAAKqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAArC8uD,EAAO7uD,EAAA,GAAE8uD,EAAU9uD,EAAA,GAC1BG,GAAwDxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAhEizD,EAAoBhzD,EAAA,GAAEizD,EAAuBjzD,EAAA,GACpDG,GAAkD5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA1DolC,EAAiBnlC,EAAA,GAAEolC,EAAoBplC,EAAA,GAC9CG,GAAkDhf,EAAAA,EAAAA,UAAS,MAAKif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAAzDquD,EAAiBpuD,EAAA,GAAEquD,EAAoBruD,EAAA,GAC9CG,GAAgDpf,EAAAA,EAAAA,WAAS,GAAMqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAAxDuyD,EAAgBtyD,EAAA,GAAEuyD,EAAmBvyD,EAAA,GAC5CkE,GAA8CvjB,EAAAA,EAAAA,UAAS,MAAKwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAArDsuD,EAAeruD,EAAA,GAAEsuD,EAAkBtuD,EAAA,GACpCgpC,GAAe5oC,EAAAA,EAAAA,QAAO,OAE5BjjB,EAAAA,EAAAA,WAAU,WAEHkV,KAKLk8D,IAJEz+C,EAAS,cAKb,EAAG,CAACA,IAEJ,IAAMy+C,EAAiB,eAAAlyE,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAgxE,EAAAC,EAAAhqE,EAAAiqE,EAAArQ,EAAAztC,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE0B+wE,QAAQC,IAAI,CAC1DvqE,GAAQoB,aACRpB,GAAQwqE,aAAa,YACrBxqE,GAAQ4B,UAAU,CAAE0wB,MAAO,MAC3B,OAAA63C,EAAA9wE,EAAAmG,KAAA4qE,GAAA/xE,EAAAA,EAAAA,GAAA8xE,EAAA,GAJK/pE,EAAQgqE,EAAA,GAAEC,EAASD,EAAA,GAAEpQ,EAAUoQ,EAAA,GAMtCZ,EAAQppE,EAASiyD,MAAQjyD,GACzBqpE,EAASY,EAAUI,WAAaJ,GAChCV,EAAgB/qC,MAAMC,QAAQm7B,EAAWS,QAAUT,EAAWS,OAAU77B,MAAMC,QAAQm7B,GAAcA,EAAa,IAAK3gE,EAAAE,KAAA,eAItH,GAJsHF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEtHM,QAAQG,MAAM,0BAAyByyB,GAGjB,iBAAlBA,EAAM5sB,UAA8B4sB,EAAM5sB,QAAQ44B,SAAS,WAAYhM,EAAM5sB,QAAQ44B,SAAS,SAAQ,CAAAl/B,EAAAE,KAAA,QAEhF,OADxByU,KACAyd,EAAS,eAAepyB,EAAAI,OAAA,iBAK1B+vE,EAAQ,MACRC,EAAS,CAAC,GACVE,EAAgB,IAAI,OAEF,OAFEtwE,EAAAC,KAAA,EAEpBgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBA5BsB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KA8BjBwwE,EAAoB,WACxBb,GAAwB,EAC1B,EA4BM1D,EAAgB,eAAAntE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOimE,GAAQ,IAAAngE,EAAApH,EAAAzF,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OAWnC,OAXmC8G,EAAA/G,KAAA,GAE9B2M,EAAW,IAAIi6C,UACZC,OAAO,SAAUimB,EAAStnB,MAG/BsnB,EAASpD,aACX/8D,EAASk6C,OAAO,IAAKimB,EAASpD,WAAWxoD,GACzCvU,EAASk6C,OAAO,IAAKimB,EAASpD,WAAWvoD,GACzCxU,EAASk6C,OAAO,QAASimB,EAASpD,WAAW7yD,OAC7ClK,EAASk6C,OAAO,SAAUimB,EAASpD,WAAW/yD,SAC/C5P,EAAA9G,KAAA,EAEsByG,GAAQ2qE,iBAAiB1kE,GAAS,QAAnDpH,EAAQwB,EAAAb,MAED0tB,SAEXs8C,EAAQ,SAAAlwE,GAAI,OAAA8F,GAAAA,GAAA,GACP9F,GAAI,IACP43B,OAAQryB,EAAS6H,UAAQ,GAE5BrG,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAED1G,QAAQG,MAAM,2BAA0BV,GACxC6zB,EAAAA,GAAMnzB,MAAM,+BAA+B,wBAAAuG,EAAArG,OAAA,EAAAmG,EAAA,iBAE9C,gBA1BqBJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAoChB0wE,EAAyB,SAACvoE,GAC9B1I,QAAQgU,IAAI,yCACZhU,QAAQgU,IAAI,YAAatL,GACzB1I,QAAQgU,IAAI,kCAAmCm8D,GAC/CnwE,QAAQgU,IAAI,iCAAkCq8D,GAE9CC,EAAmB5nE,GACnB0nE,GAAoB,GAEpBpwE,QAAQgU,IAAI,sDACd,EAOA,OAAI03D,GAEAz1D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,yBAAwBzC,SAAA,EACrCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4BAKJo6D,GAaHziD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAE7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,wBAAuBzC,SAAA,EACpC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,wBAAwBie,QA3FrB,WAAM,IAAA6vC,EACV,QAApBA,EAAA7D,EAAa9lC,eAAO,IAAA2pC,GAApBA,EAAsB5J,OACxB,EAyF0E3mD,SAAA,EAChEwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAKs1C,SAAAA,EAAMnhC,OAAS,YAAH5xB,OAAe+yD,EAAKnhC,QAAW,wBAChD/P,IAAKkxC,aAAI,EAAJA,EAAM9gD,KACX6Z,QAAS,SAACzT,GACRA,EAAEW,OAAOyE,IAAM,uBACjB,KAEFnN,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,QACNwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,2BAGV2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKo6D,aAAI,EAAJA,EAAM9gD,QACX3B,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,gBAAezC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAC6uE,GAAU,CAAC5uE,UAAU,SACrB23D,aAAI,EAAJA,EAAMz5D,aAET6B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWzC,SAAEo6D,aAAI,EAAJA,EAAMlqD,cAGpCyH,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,kBAAkBie,QAAS+xD,EAAkBzyE,SAAA,EAC7DwC,EAAAA,EAAAA,KAACkoB,GAAQ,CAACjoB,UAAU,SAAS,0BAG/BkV,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,oBAAoBie,QA1HvB,WACrBte,OAAOzB,SAASw8B,KAAO,gBACzB,EAwHsEn9B,SAAA,EAC5DwC,EAAAA,EAAAA,KAAC4uE,GAAO,CAAC3uE,UAAU,SAAS,sBAOlCD,EAAAA,EAAAA,KAAA,SACEymB,IAAKyjC,EACLx8C,KAAK,OACL02C,OAAO,UACPztC,SA9HmB,SAACsb,GACxB,IAAMoyB,EAAOpyB,EAAMpU,OAAOymC,MAAM,GAC5BD,IACF2mB,EAAqB3mB,GACrB1C,GAAqB,GAEzB,EAyHMvsC,MAAO,CAAEC,QAAS,WAIpBF,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC/BwC,EAAAA,EAAAA,KAACiuD,GAAY,OAEf94C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK8zD,EAAM8e,cAAgB,KAC3BpwE,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,6BAIP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBzC,UACrCwC,EAAAA,EAAAA,KAACwoB,GAAS,OAEZrT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK8zD,EAAM+e,oBAAsB,KACjCrwE,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,sBAIP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChCwC,EAAAA,EAAAA,KAAC2uE,GAAY,OAEfx5D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,MAAA3X,SAAA,CAAK8zD,EAAMgf,eAAiB,EAAE,SAC9BtwE,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,iBAIP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC/BwC,EAAAA,EAAAA,KAACuoB,GAAQ,OAEXpT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK8zD,EAAMif,gBAAkB,KAC7BvwE,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,sBAMT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,cAAcie,QAAS+xD,EAAkBzyE,SAAA,EACzDwC,EAAAA,EAAAA,KAACiuD,GAAY,CAAChuD,UAAU,UACxBD,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,yBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,kCAGL2X,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAACnvB,GAAG,eAAeF,UAAU,cAAazC,SAAA,EAC7CwC,EAAAA,EAAAA,KAACooB,GAAQ,CAACnoB,UAAU,UACpBD,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,6BAGL2X,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAACnvB,GAAG,kBAAkBF,UAAU,cAAazC,SAAA,EAChDwC,EAAAA,EAAAA,KAAC2uE,GAAY,CAAC1uE,UAAU,UACxBD,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,eACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4BAGL2X,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAACnvB,GAAG,qBAAqBF,UAAU,cAAazC,SAAA,EACnDwC,EAAAA,EAAAA,KAACwoB,GAAS,CAACvoB,UAAU,UACrBD,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,eACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,qCAMT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CAACnvB,GAAG,eAAeF,UAAU,WAAUzC,SAAC,uBAG/CwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,UACxByxE,GAAgB,IAAIjxD,IAAI,SAAAiU,GAAK,OAC7B9c,EAAAA,EAAAA,MAAA,OAAoBlV,UAAU,aAAYzC,SAAA,EACxC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKy0B,EAAMoI,SACXr6B,EAAAA,EAAAA,KAAA,QAAMC,UAAS,gBAAA4E,OAAkBupE,GAAen8C,EAAMqT,KAAMrT,EAAMy4C,gBAAkB,EAAGz4C,EAAMu+C,WAAYhzE,SACtGkxE,GAAmBN,GAAen8C,EAAMqT,KAAMrT,EAAMy4C,gBAAkB,EAAGz4C,EAAMu+C,iBAIpFr7D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,aAAYzC,SAAA,EACvBwC,EAAAA,EAAAA,KAAC8uE,GAAS,CAAC7uE,UAAU,SACpB,IAAI82B,KAAK9E,EAAMqT,MAAMkS,mBAAmB,aAE3CriC,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,iBAAgBzC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAC6uE,GAAU,CAAC5uE,UAAU,SACrBgyB,EAAM9zB,aAETgX,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,qBAAoBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAACwoB,GAAS,CAACvoB,UAAU,SACpBgyB,EAAM6uC,kBAAoB7uC,EAAM6uC,iBAAmB,EAAC,GAAAj8D,OAC9CotB,EAAM87C,sBAAwB,EAAC,KAAAlpE,OAAIotB,EAAM6uC,iBAAgB,kBAAAj8D,OACzDotB,EAAM87C,sBAAwB,EAAC,sBAK1C54D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,yBACVie,QAAS,SAAChB,GAcR,OAbAhe,QAAQgU,IAAI,8BACZhU,QAAQgU,IAAI,gBAAiBgK,GAC7Bhe,QAAQgU,IAAI,gBAAiBgK,EAAEW,QAC/B3e,QAAQgU,IAAI,uBAAwBgK,EAAEuzD,eACtCvxE,QAAQgU,IAAI,YAAa+e,EAAM4G,IAE/B3b,EAAEC,iBACFD,EAAE4F,kBAEF5jB,QAAQgU,IAAI,wCACZi9D,EAAuBl+C,EAAM4G,IAC7B35B,QAAQgU,IAAI,kCAEL,CACT,EACAmnB,MAAM,mBACNjlB,MAAO,CAAEsjC,OAAQ,UAAWg4B,WAAY,QAASlzE,SAClD,SAGDwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,yBACVie,QAAS,SAAChB,GAKR,OAJAA,EAAEC,iBACFD,EAAE4F,kBACF5jB,QAAQgU,IAAI,oCAAqC+e,EAAM4G,IACvDs3C,EAAuBl+C,EAAM4G,KACtB,CACT,EACAwB,MAAM,YACNjlB,MAAO,CAAEsjC,OAAQ,UAAWg4B,WAAY,QAASlzE,SAClD,eAGDwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CACHnvB,GAAG,eACHF,UAAU,2BACVie,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SACrC,uBApEKy0B,EAAM4G,GAwEV,SAMZ1jB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChCwC,EAAAA,EAAAA,KAACwoB,GAAS,OAEZrT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,yEACHwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBzC,SAAC,0BAIxC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChCwC,EAAAA,EAAAA,KAACooB,GAAQ,OAEXjT,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4DACHwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBzC,SAAC,+BAO3C2xE,IACCnvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAC2wE,GAAS,CACRrG,SAlVwB,WAClC8E,GAAwB,EAC1B,EAiVY/E,OA/Ue,WACzB+E,GAAwB,GAExBK,GACF,SAkVMzvE,EAAAA,EAAAA,KAAC4sE,GAAiB,CAChBntD,OAAQiiC,EACRxmC,QAtSyB,WAC/BymC,GAAqB,GACrBqpB,EAAqB,MACjB9gB,EAAa9lC,UACf8lC,EAAa9lC,QAAQ3G,MAAQ,GAEjC,EAiSQiC,UAAWqrD,EACXprD,OAAQ+rD,EACR7rD,YAAa,UAIf7f,EAAAA,EAAAA,KAAC4wE,GAAiB,CAChBnxD,OAAQ4vD,EACRn0D,QA3RwB,WAC9Bo0D,GAAoB,GACpBE,EAAmB,KACrB,EAyRQ5nE,QAAS2nE,QA5Qbp6D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kCACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,oGACHwC,EAAAA,EAAAA,KAAA,UAAQke,QAASuxD,EAAmBxvE,UAAU,kBAAiBzC,SAAC,wBA6QtE,E,mkBChPF,SA5P0B,SAAHD,GAA6B,IAAvBqK,EAAOrK,EAAPqK,QAASsT,EAAO3d,EAAP2d,QACpCzd,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CojE,EAAYljE,EAAA,GAAEkzE,EAAelzE,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA0Bhe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjCrc,EAAKsc,EAAA,GAAEqB,EAAQrB,EAAA,GACtBG,GAAoCpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAzCguC,EAAU/tC,EAAA,GAAEguC,EAAahuC,EAAA,GAChCG,GAA4Cxe,EAAAA,EAAAA,UAAS,OAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAApD6mB,EAAc5mB,EAAA,GAAE6mB,EAAiB7mB,EAAA,IAExC9d,EAAAA,EAAAA,WAAU,WACJuJ,GACFkpE,GAEJ,EAAG,CAAClpE,IAEJ,IAAMkpE,EAAgB,eAAAvyE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGN,OAHMF,EAAAC,KAAA,EAErBgsE,GAAW,GACX7tD,EAAS,MAAMpe,EAAAE,KAAA,EAEQyG,GAAQsD,qBAAqBjB,GAAQ,OAAtDxD,EAAQxF,EAAAmG,KACd8rE,EAAgBzsE,EAASy8D,cAAgB,IAAIjiE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAE7CM,QAAQG,MAAM,8BAA6ByyB,GAC3C9U,EAAS,0CAA0C,OAEjC,OAFiCpe,EAAAC,KAAA,EAEnDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAbqB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAehBmyC,EAAkB,eAAAtY,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOyD,EAAe4nE,GAAS,IAAApyE,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEhDyG,GAAQ0D,wBAAwBrB,EAASuB,EAAe4nE,GAAU,OAExEF,EAAgB,SAAAhyE,GAAI,OAClBA,EAAKmf,IAAI,SAAAgwD,GAAW,OAClBA,EAAYn1C,KAAO1vB,EAAaxE,GAAAA,GAAA,GACvBqpE,GAAW,IAAE7oE,OAAQ4rE,IAC1B/C,CAAW,EAChB,GACDpoE,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEF1G,QAAQG,MAAM,6BAA4BV,GAC1C6zB,EAAAA,GAAMnzB,MAAM,wCAAwC,wBAAAuG,EAAArG,OAAA,EAAAmG,EAAA,iBAEvD,gBAfuBJ,EAAAW,GAAA,OAAAqzB,EAAA95B,MAAA,KAAAC,UAAA,KAiBlBuxE,EAAuB,eAAAn3C,GAAAr7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAOgD,GAAa,IAAA6J,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,UAC7Cc,OAAO0yB,QAAQ,mDAAoD,CAAFjsB,EAAAvH,KAAA,eAAAuH,EAAArH,OAAA,wBAAAqH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAK9DyG,GAAQiE,kBAAkB5B,EAASuB,GAAc,OACvD0nE,EAAgB,SAAAhyE,GAAI,OAAIA,EAAK05B,OAAO,SAAA/gB,GAAC,OAAIA,EAAEqhB,KAAO1vB,CAAa,EAAC,GAAE9C,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAElEnH,QAAQG,MAAM,6BAA4B2T,GAC1Cwf,EAAAA,GAAMnzB,MAAM,gCAAgC,wBAAAgH,EAAA9G,OAAA,EAAA4G,EAAA,iBAE/C,gBAZ4BI,GAAA,OAAAszB,EAAAr6B,MAAA,KAAAC,UAAA,KAcvBwxE,EAAiB,SAAC9rE,GAOtB,MANiB,CACf,QAAW,UACX,SAAY,cACZ,SAAY,WACZ,UAAa,WAECA,IAAWA,CAC7B,EAYM+rE,EAAuBrQ,EAAatoC,OAAO,SAAAy1C,GAAe,IAAAC,EAAAC,EACxDiD,GACY,QAAhBlD,EAAAD,EAAYp8C,YAAI,IAAAq8C,GAAM,QAANA,EAAhBA,EAAkBn3D,YAAI,IAAAm3D,OAAA,EAAtBA,EAAwBpwC,cAAcC,SAASgsB,EAAWjsB,kBAC1C,QADwDqwC,EACxEF,EAAYp8C,YAAI,IAAAs8C,GAAO,QAAPA,EAAhBA,EAAkBlqC,aAAK,IAAAkqC,OAAA,EAAvBA,EAAyBrwC,cAAcC,SAASgsB,EAAWjsB,gBAEvDuzC,EAAmC,QAAnBruC,GAA4BirC,EAAY7oE,SAAW49B,EAEzE,OAAOouC,GAAiBC,CAC1B,GAEMC,EAAexQ,EAAa3F,OAAO,SAACC,EAAK6S,GAE7C,OADA7S,EAAI6S,EAAY7oE,SAAWg2D,EAAI6S,EAAY7oE,SAAW,GAAK,EACpDg2D,CACT,EAAG,CAAC,GAEJ,OAAIyP,GAEA5qE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BzC,UACzCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBzC,UACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,mCAQXwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BzC,UACzC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,eACVie,QAAShD,EAAQ1d,SAClB,SAKF6B,IACCW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3B6B,KAKL8V,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEqjE,EAAat8D,UAC5CvE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,qBAE/B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE6zE,EAAaC,UAAY,KACxDtxE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,qBAE/B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAE6zE,EAAaE,SAAW,KACvDvxE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,mBAKjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,8BACZC,MAAOqsC,EACPnzC,SAAU,SAACuG,GAAC,OAAK6sC,EAAc7sC,EAAEW,OAAOJ,MAAM,EAC9Cxd,UAAU,oBAIdD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UACEsI,MAAOslB,EACPpsB,SAAU,SAACuG,GAAC,OAAK8lB,EAAkB9lB,EAAEW,OAAOJ,MAAM,EAClDxd,UAAU,gBAAezC,SAAA,EAEzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,iBACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,aACxBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,iBACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,cACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,YAAWjgB,SAAC,qBAMhCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,SACC,IAAhC0zE,EAAqB3sE,QACpB4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBzC,SAAC,QACtCwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4BAGL0zE,EAAqBlzD,IAAI,SAAAgwD,GAAW,IAAAG,EAAAqD,EAAAC,EAAAC,EA5GtBvsE,EA4GsB,OAClCgQ,EAAAA,EAAAA,MAAA,OAA0BlV,UAAU,mBAAkBzC,SAAA,EACpD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBzC,UACjCwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAqB,QAAhB6rD,EAAAH,EAAYp8C,YAAI,IAAAu8C,GAAhBA,EAAkB13C,OAAS,YAAH5xB,OAAempE,EAAYp8C,KAAK6E,QAAW,wBACxE/P,IAAqB,QAAlB8qD,EAAExD,EAAYp8C,YAAI,IAAA4/C,OAAA,EAAhBA,EAAkB16D,KACvB6Z,QAAS,SAACzT,GACRA,EAAEW,OAAOyE,IAAM,uBACjB,OAIJnN,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBzC,UACb,QAAhBi0E,EAAAzD,EAAYp8C,YAAI,IAAA6/C,OAAA,EAAhBA,EAAkB36D,OAAQ,8BAE7B9W,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBzC,SACb,QADak0E,EAC7B1D,EAAYp8C,YAAI,IAAA8/C,OAAA,EAAhBA,EAAkB1tC,SAErB7uB,EAAAA,EAAAA,MAAA,KAAGlV,UAAU,mBAAkBzC,SAAA,CAAC,iBACf,IAAIu5B,KAAKi3C,EAAYv1C,YAAY+e,mBAAmB,mBAKzEriC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAemV,MAAO,CAAEg3D,iBAvI/BjnE,EAuI+D6oE,EAAY7oE,OAtIlF,CACb,QAAW,UACX,SAAY,UACZ,SAAY,UACZ,UAAa,WAEDA,IAAW,YAgIkF3H,SAC1FyzE,EAAejD,EAAY7oE,WAG9BgQ,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,CACL,YAAvBwwE,EAAY7oE,SACXgQ,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EACEwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,yBACVie,QAAS,WAAF,OAAQ0zB,EAAmBo8B,EAAYn1C,GAAI,WAAW,EAACr7B,SAC/D,gBAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,wBACVie,QAAS,WAAF,OAAQ0zB,EAAmBo8B,EAAYn1C,GAAI,WAAW,EAACr7B,SAC/D,mBAMmB,aAAvBwwE,EAAY7oE,SACXnF,EAAAA,EAAAA,KAAA,UACEC,UAAU,yBACVie,QAAS,WAAF,OAAQ0zB,EAAmBo8B,EAAYn1C,GAAI,YAAY,EAACr7B,SAChE,cAKHwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,wBACVie,QAAS,WAAF,OAAQ8yD,EAAwBhD,EAAYn1C,GAAG,EAACr7B,SACxD,wBA5DGwwE,EAAYn1C,GAiEhB,SAOpB,ECrPA,IAAM3Q,GAAW,WAAH,OACZ/S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFqmC,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFinD,GAAa,WAAH,OACd15D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFiB,GAAY,WAAH,OACbrT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGF0nD,GAAY,WAAH,OACb35D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC1BvnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,uBACb,EAGF4pD,GAAa,WAAH,OACdx8D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gEACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,8DACJ,EAGFiB,GAAY,WAAH,OACblT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kBACjB/nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,yFACJ,EAGFL,GAAU,WAAH,OACX5R,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EASFqqD,GAAsB,WAAH,OACvBz8D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wBACJ,EAgWR,SA7VmB,WACjB,IAAA3pB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCuiE,EAAMriE,EAAA,GAAEk0E,EAASl0E,EAAA,GACxBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA4Bhe,EAAAA,EAAAA,UAAS,OAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAApC6c,EAAM5c,EAAA,GAAEw+C,EAASx+C,EAAA,GACxBG,GAAoCpe,EAAAA,EAAAA,UAAS,IAAGqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAzCguC,EAAU/tC,EAAA,GAAEguC,EAAahuC,EAAA,GAChCG,GAA8Cxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAtD41D,EAAe31D,EAAA,GAAE41D,EAAkB51D,EAAA,GAC1CG,GAAwC5e,EAAAA,EAAAA,UAAS,MAAK6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA/C01D,EAAYz1D,EAAA,GAAE01D,EAAe11D,EAAA,GACpCG,GAA4Bhf,EAAAA,EAAAA,UAAS,MAAKif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAAnCxK,EAAMyK,EAAA,GACbG,GADwBH,EAAA,IACwBjf,EAAAA,EAAAA,WAAS,IAAMqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAAxDo1D,EAAgBn1D,EAAA,GAAEo1D,EAAmBp1D,EAAA,GAC5CkE,GAA8CvjB,EAAAA,EAAAA,UAAS,MAAKwjB,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAArDsuD,EAAeruD,EAAA,GAAEsuD,EAAkBtuD,EAAA,GAC1C+oB,GAAgDvsC,EAAAA,EAAAA,WAAS,GAAMwsC,GAAAtsC,EAAAA,EAAAA,GAAAqsC,EAAA,GAAxDolC,EAAgBnlC,EAAA,GAAEolC,EAAmBplC,EAAA,IAE5C7rC,EAAAA,EAAAA,WAAU,WACR+zE,GACF,EAAG,IAEH,IAAMA,EAAU,eAAA70E,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA6gE,EAAAztC,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUyG,GAAQ4B,YAAW,OAAtCo4D,EAAU3gE,EAAAmG,KAChB8sE,EAAU1tC,MAAMC,QAAQm7B,EAAWS,QAAUT,EAAWS,OAAU77B,MAAMC,QAAQm7B,GAAcA,EAAa,IAAK3gE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEhHM,QAAQG,MAAM,+BAA8ByyB,GAC5C+/C,EAAU,IAAI,OAEI,OAFJjzE,EAAAC,KAAA,EAEdgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAVe,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAYV4yE,EAAiB,eAAA9zE,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOkC,GAAO,IAAAjJ,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,WAClCc,OAAO0yB,QAAQ,mDAAoD,CAAF1sB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAE3DyG,GAAQkD,YAAYb,GAAQ,OAClCiqE,GAAW7R,GAAU,IAAIznC,OAAO,SAAAtG,GAAK,OAAIA,EAAM4G,KAAOjxB,CAAO,IAAGhC,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEhE1G,QAAQG,MAAM,+BAA8BV,GAAS,wBAAAiH,EAAArG,OAAA,EAAAmG,EAAA,iBAG1D,gBATsBJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAgBjBwwE,EAAoB,WACxBgC,EAAgB,MAChBF,GAAmB,EACrB,EAkCMO,EAAsB,SAACrgD,GAE3B,OAAOm8C,GACLn8C,EAAMqT,KACNrT,EAAMy4C,gBAAkB,EACxBz4C,EAAMu+C,SAEV,EAEM+B,GAAkBvS,GAAU,IAAIznC,OAAO,SAAAtG,GAC3C,IAAMugD,EAAcF,EAAoBrgD,GAClCwgD,EAA2B,QAAXl6C,GAAoBA,IAAWi6C,EAE/CrB,EAAgBl/C,EAAMoI,MAAMwD,cAAcC,SAASgsB,EAAWjsB,gBAC/C5L,EAAM9zB,SAAS0/B,cAAcC,SAASgsB,EAAWjsB,eAEtE,OAAO40C,GAAiBtB,CAC1B,GAEA,OAAIvG,GAEAz1D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,gCAMP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAE1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,0DAEL2X,EAAAA,EAAAA,MAAA,UACElV,UAAU,mCACVie,QAAS+xD,EAAkBzyE,SAAA,EAE3BwC,EAAAA,EAAAA,KAACkoB,GAAQ,CAACjoB,UAAU,SAAS,6BAMjCkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAC4xE,GAAmB,CAAC3xE,UAAU,iBAC/BD,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,uBACZC,MAAOqsC,EACPnzC,SAAU,SAACuG,GAAC,OAAK6sC,EAAc7sC,EAAEW,OAAOJ,MAAM,EAC9Cxd,UAAU,qBAIdkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,QAAX0zB,EAAmB,SAAW,IACvDra,QAAS,WAAF,OAAQi8C,EAAU,MAAM,EAAC38D,SACjC,SAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,aAAX0zB,EAAwB,SAAW,IAC5Dra,QAAS,WAAF,OAAQi8C,EAAU,WAAW,EAAC38D,SACtC,iBAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,YAAX0zB,EAAuB,SAAW,IAC3Dra,QAAS,WAAF,OAAQi8C,EAAU,UAAU,EAAC38D,SACrC,iBAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,cAAX0zB,EAAyB,SAAW,IAC7Dra,QAAS,WAAF,OAAQi8C,EAAU,YAAY,EAAC38D,SACvC,uBAOLwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,SACJ,IAA1B+0E,EAAehuE,QACd4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAACiuD,GAAY,CAAChuD,UAAU,oBACxBD,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,kDACH2X,EAAAA,EAAAA,MAAA,UACElV,UAAU,kBACVie,QAAS+xD,EAAkBzyE,SAAA,EAE3BwC,EAAAA,EAAAA,KAACkoB,GAAQ,CAACjoB,UAAU,SAAS,6BAKjCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SACzB+0E,EAAev0D,IAAI,SAAAiU,GAAK,OACvB9c,EAAAA,EAAAA,MAAA,OAAoBlV,UAAU,aAAYzC,SAAA,EACxC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAS,cAAA4E,OAAgBytE,EAAoBrgD,MAClDy8C,GAAmB4D,EAAoBrgD,QAE1C9c,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVie,QAAS,SAAChB,GA5HC,IAACtV,EA6HVsV,EAAEC,iBACFD,EAAE4F,kBA9HQlb,EA+HaqqB,EAAM4G,GA9HjD35B,QAAQgU,IAAI,gCAAiCtL,GAC7C4nE,EAAmB5nE,GACnB0nE,GAAoB,EA6HF,EACAj1C,MAAM,mBAAkB78B,UAExBwC,EAAAA,EAAAA,KAAC+mB,GAAO,CAAC9mB,UAAU,YAErBD,EAAAA,EAAAA,KAAA,UACEC,UAAU,0BACVie,QAAS,WAAF,OAjJKtW,EAiJ0BqqB,EAAM4G,GAhJ9D22C,EAAmB5nE,QACnBuqE,GAAoB,GAFS,IAACvqE,CAiJmC,EAC/CyyB,MAAM,yBAAwB78B,UAE9BwC,EAAAA,EAAAA,KAACwoB,GAAS,CAACvoB,UAAU,YAEvBD,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVie,QAAS,WAAF,OA7KH,SAAC+T,GACvBggD,EAAgBhgD,GAChB8/C,GAAmB,EACrB,CA0KmCW,CAAgBzgD,EAAM,EAACz0B,UAEtCwC,EAAAA,EAAAA,KAAC2xE,GAAU,CAAC1xE,UAAU,YAExBD,EAAAA,EAAAA,KAAA,UACEC,UAAU,oBACVie,QAAS,WAAF,OAAQm0D,EAAkBpgD,EAAM4G,GAAG,EAACr7B,UAE3CwC,EAAAA,EAAAA,KAACqoB,GAAS,CAACpoB,UAAU,kBAK3BkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAazC,SAAEy0B,EAAMoI,SACnCr6B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBzC,SAAEy0B,EAAMu+B,eAExCr7C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAACiuD,GAAY,CAAChuD,UAAU,UACxBD,EAAAA,EAAAA,KAAA,QAAAxC,SAAO,IAAIu5B,KAAK9E,EAAMqT,MAAMkS,mBAAmB,WAC9CvlB,EAAM2uC,OAAQzrD,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,aAAYzC,SAAA,CAAC,MAAIy0B,EAAM2uC,YAKhDz7D,EAASmtE,EAAoBrgD,GAC7B0gD,EH3PK,SAACtE,GAChC,IAAMr3C,EAAM,IAAID,KACV03C,EAAa,IAAI13C,KAAKs3C,GAE5B,GAAII,GAAcz3C,EAChB,OAAO,KAGT,IAAM47C,EAAOnE,EAAW/1C,UAAY1B,EAAI0B,UAClCm6C,EAAO1wD,KAAKs1C,MAAMmb,EAAO,OACzBE,EAAQ3wD,KAAKs1C,MAAOmb,EAAO,MAAqB,MAChDG,EAAU5wD,KAAKs1C,MAAOmb,EAAO,KAAgB,KAEnD,OAAIC,EAAO,EACF,GAAPhuE,OAAUguE,EAAI,SAAAhuE,OAAQiuE,EAAK,OAClBA,EAAQ,EACV,GAAPjuE,OAAUiuE,EAAK,QAAAjuE,OAAOkuE,EAAO,SAEtB,GAAPluE,OAAUkuE,EAAO,QAErB,CGuO6CC,CAAkB/gD,EAAMqT,MACzC2tC,EH/NG,SAAC5E,GAAiD,IAK3EC,EALqCC,EAAa9uE,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,EAAG+uE,EAAO/uE,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,KAChEu3B,EAAM,IAAID,KACV03C,EAAa,IAAI13C,KAAKs3C,GAU5B,GALEC,EADEE,EACS,IAAIz3C,KAAKy3C,GAET,IAAIz3C,KAAK03C,EAAW/1C,UAA6B,GAAhB61C,EAAqB,GAAK,KAGpEv3C,EAAMy3C,GAAcz3C,EAAMs3C,EAC5B,OAAO,KAGT,IAAMsE,EAAOtE,EAAS51C,UAAY1B,EAAI0B,UAChCo6C,EAAQ3wD,KAAKs1C,MAAMmb,EAAO,MAC1BG,EAAU5wD,KAAKs1C,MAAOmb,EAAO,KAAgB,KAEnD,OAAIE,EAAQ,EACH,GAAPjuE,OAAUiuE,EAAK,QAAAjuE,OAAOkuE,EAAO,SAEtB,GAAPluE,OAAUkuE,EAAO,QAErB,CGsM2CG,CAAgBjhD,EAAMqT,KAAMrT,EAAMy4C,gBAAkB,EAAGz4C,EAAMu+C,UAEnE,aAAXrrE,GAAyBwtE,GAEzBx9D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,wBAAuBzC,SAAA,EACpCwC,EAAAA,EAAAA,KAAC8uE,GAAS,CAAC7uE,UAAU,UACrBkV,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,cAAYm1E,QAGF,YAAXxtE,GAAwB8tE,GAE/B99D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,wBAAuBzC,SAAA,EACpCwC,EAAAA,EAAAA,KAAC8uE,GAAS,CAAC7uE,UAAU,UACrBkV,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,iBAAey1E,QAIpB,OAGT99D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAC6uE,GAAU,CAAC5uE,UAAU,UACtBD,EAAAA,EAAAA,KAAA,QAAAxC,SAAOy0B,EAAM9zB,eAGfgX,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAACwoB,GAAS,CAACvoB,UAAU,UACrBD,EAAAA,EAAAA,KAAA,QAAAxC,SACGy0B,EAAM6uC,kBAAoB7uC,EAAM6uC,iBAAmB,EAAC,GAAAj8D,OAC9CotB,EAAM87C,sBAAwB,EAAC,KAAAlpE,OAAIotB,EAAM6uC,iBAAgB,kBAAAj8D,OACzDotB,EAAM87C,sBAAwB,EAAC,uBAM3C97C,EAAMkgC,MAAQ,IACbh9C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAC,gBAC9B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,cAAazC,SAAA,CAAEy0B,EAAMkgC,MAAM,WAI9ClgC,EAAMkhD,aACLnzE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,kBAKZ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,CAC1By0B,EAAM6uC,kBACL3rD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,yBAAwBzC,SAAA,EACrCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3BwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,gBACVmV,MAAO,CAAEM,MAAO,GAAF7Q,OAAKsd,KAAKrE,KAAKmU,EAAM87C,sBAAwB,GAAK97C,EAAM6uC,iBAAmB,IAAK,KAAI,WAGtG3rD,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,gBAAezC,SAAA,CAC5B2kB,KAAKqtB,OAAOvd,EAAM87C,sBAAwB,GAAK97C,EAAM6uC,iBAAmB,KAAK,qBAIlF9gE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBzC,UACrCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAC,uBAMpCwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CAACnvB,GAAE,gBAAA0E,OAAkBotB,EAAM4G,GAAE,iBAAiB54B,UAAU,2BAA0BzC,SAAC,mBA9HlFy0B,EAAM4G,IAoDR,IACM1zB,EACAwtE,EACAM,CA2ER,OAObnB,IACC9xE,EAAAA,EAAAA,KAAC2wE,GAAS,CACR1+C,MAAO+/C,EACP3H,OA/QiB,WACvB0H,GAAmB,GACnBE,EAAgB,MAChBG,GACF,EA4QQ9H,SArRiB,WACvByH,GAAmB,GACnBE,EAAgB,KAClB,EAmRQ//D,OAAQA,IAKXggE,IACClyE,EAAAA,EAAAA,KAACozE,GAAiB,CAChBxrE,QAAS2nE,EACTr0D,QA9QwB,WAC9Bi3D,GAAoB,GACpB3C,EAAmB,KACrB,KAgRIxvE,EAAAA,EAAAA,KAAC4wE,GAAiB,CAChBnxD,OAAQ4vD,EACRn0D,QA1Q0B,WAC9Bo0D,GAAoB,GACpBE,EAAmB,KACrB,EAwQM5nE,QAAS2nE,MAIjB,ECzaA,IAQM/mD,GAAY,WAAH,OACbrT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGF6mC,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFyrD,GAAoB,WAAH,OACrBl+D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,aACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,aACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,0BACJ,EAGFksD,GAAiB,WAAH,OAClBn+D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kCACjB/nB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,sBACb,EAGFwrD,GAAmB,WAAH,OACpBp+D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,iCACjB/nB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,wBACb,EAGFhB,GAAU,WAAH,OACX5R,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,kDACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QACtB,EAGFS,GAAY,WAAH,OACbhoB,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,8IACJ,EAgXR,SAnWsB,WAAM,IAAAosD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1Bt3E,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCuyE,EAASryE,EAAA,GAAEq3E,EAAYr3E,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA4Bhe,EAAAA,EAAAA,UAAS,QAAOie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAArC/N,EAAMgO,EAAA,GAAEs5D,EAASt5D,EAAA,GACxBG,GAA4Cpe,EAAAA,EAAAA,UAAS,YAAWqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA3CC,EAAA,GAAmBA,EAAA,IAExC1d,EAAAA,EAAAA,WAAU,WACR62E,GACF,EAAG,CAACvnE,IAEJ,IAAMunE,EAAa,eAAA33E,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAgxE,EAAAC,EAAAwF,EAAAnV,EAAAa,EAAAuU,EAAAtjD,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEwC+wE,QAAQC,IAAI,CACpEvqE,GAAQwqE,aAAa,WAAYpiE,GACjCpI,GAAQwqE,aAAa,SAAUpiE,GAC/BpI,GAAQwqE,aAAa,eAAgBpiE,GACrCpI,GAAQwqE,aAAa,YAAapiE,KAClC,OAAA+hE,EAAA9wE,EAAAmG,KAAA4qE,GAAA/xE,EAAAA,EAAAA,GAAA8xE,EAAA,GALKyF,EAAQxF,EAAA,GAAE3P,EAAM2P,EAAA,GAAE9O,EAAY8O,EAAA,GAAEyF,EAASzF,EAAA,GAOhDqF,EAAa,CACXG,SAAUA,EAASnF,WAAamF,EAChCnV,OAAQA,EAAOgQ,WAAahQ,EAC5Ba,aAAcA,EAAamP,WAAanP,EACxCuU,UAAWA,EAAUpF,WAAaoF,IACjCx2E,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEHM,QAAQG,MAAM,6BAA4ByyB,GAAS,OAEjC,OAFiClzB,EAAAC,KAAA,EAEnDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBApBkB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KA+Bb41E,EAAmB,SAACh7C,EAAO5c,EAAOovC,EAAM0Z,GAA2B,IAAnBzqC,EAAKr8B,UAAA8E,OAAA,QAAAC,IAAA/E,UAAA,GAAAA,UAAA,GAAG,OACtD61E,EAVgB,SAAClxD,EAASmxD,GAChC,IAAKA,EAAU,MAAO,CAAE93D,MAAO,EAAG+3D,YAAY,GAC9C,IAAMjP,GAAWniD,EAAUmxD,GAAYA,EAAY,IACnD,MAAO,CACL93D,MAAO0E,KAAK4kD,IAAIR,GAAQkP,QAAQ,GAChCD,WAAYjP,GAAU,EAE1B,CAGqBmP,CAAgBj4D,EAAO8oD,aAAM,EAANA,EAAQgP,UAElD,OACEpgE,EAAAA,EAAAA,MAAA,OAAKlV,UAAS,eAAA4E,OAAiBi3B,GAAQt+B,SAAA,EACrC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,eAAA4E,OAAiBi3B,GAAQt+B,SACpCqvD,KAEH7sD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3B83E,EAAW73D,MAAQ,IAClBtI,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,CACG83E,EAAWE,YACVx1E,EAAAA,EAAAA,KAACszE,GAAc,CAACrzE,UAAU,yBAE1BD,EAAAA,EAAAA,KAACuzE,GAAgB,CAACtzE,UAAU,yBAE9BkV,EAAAA,EAAAA,MAAA,QAAMlV,UAAS,gBAAA4E,OAAkBywE,EAAWE,WAAa,WAAa,YAAah4E,SAAA,CAChF83E,EAAW73D,MAAM,gBAM5BtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAczC,UAAEigB,aAAK,EAALA,EAAOk4D,mBAAoB,KACzD31E,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAczC,SAAE68B,SAIrC,EAEMu7C,EAAc,SAAC/kD,EAAMwJ,GAEzB,IAAK8J,MAAMC,QAAQvT,IAAyB,IAAhBA,EAAKtsB,OAC/B,OACE4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAazC,SAAE68B,KAC7Br6B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,oCAMX,IAAMq4E,EAAW1zD,KAAKC,IAAG5iB,MAAR2iB,MAAIsX,EAAAA,GAAAA,GAAQ5I,EAAK7S,IAAI,SAAAoJ,GAAC,OAAIA,EAAE3J,KAAK,KAElD,OACEtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAazC,SAAE68B,KAC7Br6B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3BqzB,EAAK7S,IAAI,SAAC83D,EAAMhxD,GAAK,OACpB3P,EAAAA,EAAAA,MAAA,OAAiBlV,UAAU,YAAWzC,SAAA,EACpCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,SAAEs4E,EAAK7/D,SACjCjW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,WACVmV,MAAO,CACLM,MAAO,GAAF7Q,OAAMixE,EAAKr4D,MAAQo4D,EAAY,IAAG,KACvCzJ,gBAAiB,OAAFvnE,OAAiB,GAARigB,EAAU,qBAIxC9kB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,SAAEs4E,EAAKr4D,UAXzBqH,EAYJ,OAKhB,EAEA,OAAI8lD,GAEAz1D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,yBAAwBzC,SAAA,EACrCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,8BAMP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAE7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,oDAEL2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,SAAX8I,EAAoB,SAAW,IACxDuQ,QAAS,WAAF,OAAQ+2D,EAAU,OAAO,EAACz3E,SAClC,YAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,UAAX8I,EAAqB,SAAW,IACzDuQ,QAAS,WAAF,OAAQ+2D,EAAU,QAAQ,EAACz3E,SACnC,WAGDwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA2B,SAAX8I,EAAoB,SAAW,IACxDuQ,QAAS,WAAF,OAAQ+2D,EAAU,OAAO,EAACz3E,SAClC,eAOL2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,CAC1B63E,EACC,oBACkB,QADC7B,EACnBxD,EAAUmF,gBAAQ,IAAA3B,OAAA,EAAlBA,EAAoBpD,cACpBpwE,EAAAA,EAAAA,KAACiuD,GAAY,IACK,QADFwlB,EAChBzD,EAAUmF,gBAAQ,IAAA1B,OAAA,EAAlBA,EAAoBsC,cACpB,QAGDV,EACC,aACkB,QADN3B,EACZ1D,EAAUmF,gBAAQ,IAAAzB,OAAA,EAAlBA,EAAoBrD,oBACpBrwE,EAAAA,EAAAA,KAACwoB,GAAS,IACQ,QADLmrD,EACb3D,EAAUmF,gBAAQ,IAAAxB,OAAA,EAAlBA,EAAoBqC,oBACpB,SAGDX,EACC,QACkB,QADXzB,EACP5D,EAAUmF,gBAAQ,IAAAvB,OAAA,EAAlBA,EAAoBtD,eACpBtwE,EAAAA,EAAAA,KAACqzE,GAAiB,IACA,QADGQ,EACrB7D,EAAUmF,gBAAQ,IAAAtB,OAAA,EAAlBA,EAAoBoC,eACpB,UAGDZ,EACC,UACkB,QADTvB,EACT9D,EAAUmF,gBAAQ,IAAArB,OAAA,EAAlBA,EAAoBvD,gBACpBvwE,EAAAA,EAAAA,KAACgoB,GAAS,IACQ,QADL+rD,EACb/D,EAAUmF,gBAAQ,IAAApB,OAAA,EAAlBA,EAAoBjN,cACpB,WAKJ3xD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EAEjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBzC,UAC9B2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,2BAA0BzC,SAAA,EAC1CwC,EAAAA,EAAAA,KAAC+mB,GAAO,CAAC9mB,UAAU,SAAS,mBAMlCkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,0BAC/B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,eAAczC,SAAA,EACX,QAAhBw2E,EAAAhE,EAAUhQ,cAAM,IAAAgU,OAAA,EAAhBA,EAAkBkC,wBAAyB,EAAE,WAGlD/gE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,oBAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACX,QAAhBy2E,EAAAjE,EAAUhQ,cAAM,IAAAiU,GAAc,QAAdA,EAAhBA,EAAkBkC,oBAAY,IAAAlC,OAAA,EAA9BA,EAAgCp1D,KAAK,QAAS,mBAGnD1J,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,YAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACX,QAAhB02E,EAAAlE,EAAUhQ,cAAM,IAAAkU,OAAA,EAAhBA,EAAkBkC,gBAAiB,WAKzB,QAAhBjC,EAAAnE,EAAUhQ,cAAM,IAAAmU,OAAA,EAAhBA,EAAkBkC,gBACjBr2E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3Bo4E,EACC5F,EAAUhQ,OAAOqW,aACjB,mCAQVlhE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBzC,UAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BAGN2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,qBAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACL,QAAtB42E,EAAApE,EAAUnP,oBAAY,IAAAuT,OAAA,EAAtBA,EAAwBkC,mBAAoB,QAGjDnhE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,wBAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,UACL,QAAtB62E,EAAArE,EAAUnP,oBAAY,IAAAwT,OAAA,EAAtBA,EAAwBkC,sBAAuB,QAGpDphE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,qBAC/B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,eAAczC,SAAA,EACL,QAAtB82E,EAAAtE,EAAUnP,oBAAY,IAAAyT,OAAA,EAAtBA,EAAwBkC,cAAe,EAAE,iBAKzB,QAAtBjC,EAAAvE,EAAUnP,oBAAY,IAAA0T,OAAA,EAAtBA,EAAwBkC,gBACvBthE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,SACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,aACNwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKzC,UAClBwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,gBACVmV,MAAO,CAAEM,MAAO,GAAF7Q,QAA+C,QAA1C2vE,EAAAxE,EAAUnP,aAAa4V,aAAaC,cAAM,IAAAlC,OAAA,EAA1CA,EAA4CmC,OAAQ,EAAC,WAG5ExhE,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EAAiD,QAA1Ci3E,EAAAzE,EAAUnP,aAAa4V,aAAaC,cAAM,IAAAjC,OAAA,EAA1CA,EAA4CkC,OAAQ,EAAE,WAE/DxhE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,aACNwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKzC,UAClBwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,kBACVmV,MAAO,CAAEM,MAAO,GAAF7Q,QAA+C,QAA1C6vE,EAAA1E,EAAUnP,aAAa4V,aAAaC,cAAM,IAAAhC,OAAA,EAA1CA,EAA4CkC,SAAU,EAAC,WAG9EzhE,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,EAAiD,QAA1Cm3E,EAAA3E,EAAUnP,aAAa4V,aAAaC,cAAM,IAAA/B,OAAA,EAA1CA,EAA4CiC,SAAU,EAAE,iBAKrEzhE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC7BwyE,EAAUnP,aAAa4V,aAAaI,YAAc,IAAI74D,IAAI,SAAC84D,EAAOhyD,GAAK,OACvE3P,EAAAA,EAAAA,MAAA,OAAiBlV,UAAU,kBAAiBzC,SAAA,EAC1CwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAOs5E,EAAM5vC,SACblnC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKzC,UAClBwC,EAAAA,EAAAA,KAAA,OACEC,UAAU,eACVmV,MAAO,CAAEM,MAAO,GAAF7Q,OAAKiyE,EAAM9kC,WAAU,WAGvC78B,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAOs5E,EAAM9kC,WAAW,SARhBltB,EASJ,kBAUpB3P,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBzC,UAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BAGN2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,iBAC/B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,eAAczC,SAAA,EACR,QAAnBo3E,EAAA5E,EAAUoF,iBAAS,IAAAR,GAAe,QAAfA,EAAnBA,EAAqBtE,qBAAa,IAAAsE,OAAA,EAAlCA,EAAoCe,mBAAoB,EAAE,YAG/DxgE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,iBAC/B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,eAAczC,SAAA,EACR,QAAnBq3E,EAAA7E,EAAUoF,iBAAS,IAAAP,GAAgB,QAAhBA,EAAnBA,EAAqBkC,sBAAc,IAAAlC,OAAA,EAAnCA,EAAqCc,mBAAoB,EAAE,YAGhExgE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,aAC/B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,eAAczC,SAAA,EACR,QAAnBs3E,EAAA9E,EAAUoF,iBAAS,IAAAN,GAAQ,QAARA,EAAnBA,EAAqBkC,cAAM,IAAAlC,OAAA,EAA3BA,EAA6Ba,mBAAoB,EAAE,eAKtC,QAAnBZ,EAAA/E,EAAUoF,iBAAS,IAAAL,OAAA,EAAnBA,EAAqBkC,oBACpBj3E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3Bo4E,EACC5F,EAAUoF,UAAU6B,iBACpB,iCAUlB,E,mkBCzaA,IAAM/uD,GAAW,WAAH,OACZ/S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFO,GAAW,WAAH,OACZhT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gEACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,8DACJ,EAGFiB,GAAY,WAAH,OACblT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,kBACjB/nB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wFACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EAGFsvD,GAAW,WAAH,OACZl3E,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,oBACZ,EAGFovD,GAAY,WAAH,OACbhiE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,IAAIF,OAAO,QACnCxV,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,KAAKC,EAAE,IAAItK,MAAM,IAAIF,OAAO,SAChC,EAGFoZ,GAAe,WAAH,OAChBzZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,quBACJ,EAGFgwD,GAAe,WAAH,OAChBp3E,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,qCACb,EAGF+mD,GAAY,WAAH,OACb35D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAC1BvnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,uBACb,EA8QFsvD,GAAU,SAAHx9C,GAAkC,IAA5By9C,EAAGz9C,EAAHy9C,IAAKhN,EAAQzwC,EAARywC,SAAUD,EAAMxwC,EAANwwC,OAChCnuD,GAAgCxe,EAAAA,EAAAA,UAAS,CACvCoZ,MAAMwgE,aAAG,EAAHA,EAAKxgE,OAAQ,GACnB05C,aAAa8mB,aAAG,EAAHA,EAAK9mB,cAAe,GACjC9iD,MAAM4pE,aAAG,EAAHA,EAAK5pE,OAAQ,SACnB6pE,SAASD,aAAG,EAAHA,EAAKC,UAAW,GACzBhzC,UAAU+yC,aAAG,EAAHA,EAAK/yC,WAAY,GAC3B91B,UAAU6oE,aAAG,EAAHA,EAAK7oE,WAAY,CAAC,EAC5BtJ,QAAQmyE,aAAG,EAAHA,EAAKnyE,SAAU,aACvBgX,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GARK1Q,EAAQ2Q,EAAA,GAAEwuD,EAAWxuD,EAAA,GAS5BG,GAA8B5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAAtCsuD,EAAOruD,EAAA,GAAEsuD,EAAUtuD,EAAA,GAEpBU,EAAY,eAAA+c,GAAAx7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA+H,EAAO0W,GAAC,IAAAzJ,EAAA,OAAAhV,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,OAEV,GADjBoe,EAAEC,iBACF0tD,GAAW,GAAMpkE,EAAA5H,KAAA,GAGXy4E,EAAK,CAAF7wE,EAAA3H,KAAA,eAAA2H,EAAA3H,KAAA,EACCyG,GAAQiyE,UAAUF,EAAIz+C,GAAIrtB,GAAS,OAAA/E,EAAA3H,KAAA,sBAAA2H,EAAA3H,KAAA,EAEnCyG,GAAQkyE,UAAUjsE,GAAS,OAEnC6+D,IAAS5jE,EAAA3H,KAAA,eAAA2H,EAAA5H,KAAA,EAAA4U,EAAAhN,EAAA,SAETvH,QAAQG,MAAM,0BAAyBoU,GACvC+e,EAAAA,GAAMnzB,MAAM,8BAA8B,OAExB,OAFwBoH,EAAA5H,KAAA,EAE1CgsE,GAAW,GAAOpkE,EAAAnH,OAAA,2BAAAmH,EAAAlH,OAAA,EAAAiH,EAAA,qBAErB,gBAjBiBU,GAAA,OAAA8yB,EAAAx6B,MAAA,KAAAC,UAAA,KAmBZ4rE,EAAe,SAACnuD,GACpB,IAAAouD,EAAwBpuD,EAAEW,OAAlB/G,EAAIw0D,EAAJx0D,KAAM2G,EAAK6tD,EAAL7tD,MACdktD,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GACN6L,EAAO2G,GAAK,EAEjB,EAEA,OACEtI,EAAAA,EAAAA,MAAA,QAAMoI,SAAUN,EAAchd,UAAU,WAAUzC,SAAA,EAChD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK85E,EAAM,qBAAuB,kBAClCt3E,EAAAA,EAAAA,KAAA,UAAQ0N,KAAK,SAASzN,UAAU,YAAYie,QAASosD,EAAS9sE,SAAC,UAGjE2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,qBACtBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAASsL,KAChBH,SAAU00D,EACV1vC,UAAQ,EACRne,YAAY,8BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,cAAaj+B,SAAC,cAC7BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,cACH/hB,KAAK,cACL2G,MAAOjS,EAASglD,YAChB75C,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,gCAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,gBACtB2X,EAAAA,EAAAA,MAAA,UACE0jB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAASkC,KAChBiJ,SAAU00D,EACV1vC,UAAQ,EAAAn+B,SAAA,EAERwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,oBACxBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,iBAAgBjgB,SAAC,4BAC/BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,gBAAejgB,SAAC,kBAC9BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,YAAWjgB,SAAC,eAC1BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,aAAYjgB,SAAC,eAC3BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,4BAI3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,SAAQj+B,SAAC,YACxB2X,EAAAA,EAAAA,MAAA,UACE0jB,GAAG,SACH/hB,KAAK,SACL2G,MAAOjS,EAASrG,OAChBwR,SAAU00D,EAAa7tE,SAAA,EAEvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,eACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,sBAK7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,UAASj+B,SAAC,+BACzBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,UACH/hB,KAAK,UACL2G,MAAOjS,EAAS+rE,QAChB5gE,SAAU00D,EACV7tD,YAAY,4DAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,WAAUj+B,SAAC,yBAC1B2X,EAAAA,EAAAA,MAAA,UACE0jB,GAAG,WACH/hB,KAAK,WACL2G,MAAOjS,EAAS+4B,SAChB5tB,SAAU00D,EAAa7tE,SAAA,EAEvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,GAAEjgB,SAAC,gBACjBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,mBACnBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,oBACnBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,qBACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,qBACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,gBACnBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,oBACnBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,qBACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,eACnBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,KAAIjgB,SAAC,uBAIvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAQ0N,KAAK,SAASzN,UAAU,oBAAoBie,QAASosD,EAAS9sE,SAAC,YAGvEwC,EAAAA,EAAAA,KAAA,UAAQ0N,KAAK,SAASzN,UAAU,kBAAkB4W,SAAU+zD,EAAQptE,SACjEotE,EAAU,gBAAmB0M,EAAM,WAAa,iBAK3D,EAEA,SAhaiB,WACf,IAAA75E,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7Bi6E,EAAI/5E,EAAA,GAAEg6E,EAAOh6E,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA8Che,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAtDo2D,EAAen2D,EAAA,GAAEo2D,EAAkBp2D,EAAA,GAC1CG,GAAoCpe,EAAAA,EAAAA,UAAS,MAAKqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA3C87D,EAAU77D,EAAA,GAAE87D,EAAa97D,EAAA,IAEhC1d,EAAAA,EAAAA,WAAU,WACRy5E,GACF,EAAG,IAEH,IAAMA,EAAQ,eAAAv6E,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEI,OAFJF,EAAAC,KAAA,EAEbgsE,GAAW,GAAMjsE,EAAAE,KAAA,EACMyG,GAAQwyE,UAAS,OAAlC3zE,EAAQxF,EAAAmG,KACd4yE,EAAQxzC,MAAMC,QAAQhgC,EAASszE,MAAQtzE,EAASszE,KAAQvzC,MAAMC,QAAQhgC,GAAYA,EAAW,IAAKxF,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAElGM,QAAQG,MAAM,yBAAwByyB,GACtC6lD,EAAQ,IAAI,OAEM,OAFN/4E,EAAAC,KAAA,EAEZgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAXa,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAaRu4E,EAAkB,WACtBH,EAAc,MACd9F,GAAmB,EACrB,EAEMkG,EAAgB,SAACX,GACrBO,EAAcP,GACdvF,GAAmB,EACrB,EAEMmG,EAAe,eAAA35E,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOuI,GAAK,IAAAtP,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,WAC9Bc,OAAO0yB,QAAQ,8CAA+C,CAAF1sB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAEtDyG,GAAQ4yE,UAAUlqE,GAAM,cAAArI,EAAA9G,KAAA,EACxBg5E,IAAU,OAAAlyE,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAEhB1G,QAAQG,MAAM,wBAAuBV,GACrC6zB,EAAAA,GAAMnzB,MAAM,4BAA4B,wBAAAuG,EAAArG,OAAA,EAAAmG,EAAA,iBAG7C,gBAVoBJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAYf24E,EAAe,eAAA9+C,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAO8H,EAAOoqE,GAAa,IAAAtH,EAAA/9D,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,OAEqB,OAFrBuH,EAAAxH,KAAA,EAEzCkyE,EAA8B,WAAlBsH,EAA6B,WAAa,SAAQhyE,EAAAvH,KAAA,EAC9DyG,GAAQiyE,UAAUvpE,EAAO,CAAE9I,OAAQ4rE,IAAY,cAAA1qE,EAAAvH,KAAA,EAC/Cg5E,IAAU,OAAAzxE,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAEhBnH,QAAQG,MAAM,iCAAgC2T,GAC9Cwf,EAAAA,GAAMnzB,MAAM,qCAAqC,wBAAAgH,EAAA9G,OAAA,EAAA4G,EAAA,iBAEpD,gBAToBF,EAAAM,GAAA,OAAA+yB,EAAA95B,MAAA,KAAAC,UAAA,KA4Bf64E,EAAiB,SAAC5qE,GACtB,OAAQA,GACN,IAAK,UACH,MAAO,KACT,IAAK,iBACH,MAAO,KACT,IAAK,gBACH,MAAO,KACT,IAAK,YACH,MAAO,KACT,IAAK,aACH,MAAO,MACT,QACE,MAAO,KAEb,EAcA,OAAIk9D,GAEA5qE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,UACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,UAASzC,SAAA,EACtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4BAOT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,gBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,4DAEL2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,kBAAkBie,QAAS85D,EAAgBx6E,SAAA,EAC3DwC,EAAAA,EAAAA,KAACkoB,GAAQ,CAACjoB,UAAU,SAAS,sBAKjCkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEk6E,EAAKnzE,aAEtC4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,cACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEk6E,EAAKn/C,OAAO,SAAA++C,GAAG,MAAmB,WAAfA,EAAInyE,MAAmB,GAAEZ,aAE7E4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEk6E,EAAKxc,OAAO,SAACqd,EAAKjB,GAAG,OAAKiB,GAAOjB,EAAIkB,iBAAmB,EAAE,EAAE,SAE7FrjE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEk6E,EAAKn/C,OAAO,SAAA++C,GAAG,MAAmB,UAAfA,EAAInyE,MAAkB,GAAEZ,gBAI9EvE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,SACV,IAAhBk6E,EAAKnzE,QACJ4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,SAAC,QAC5BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,eACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,+DACH2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,kBAAkBie,QAAS85D,EAAgBx6E,SAAA,EAC3DwC,EAAAA,EAAAA,KAACkoB,GAAQ,CAACjoB,UAAU,SAAS,sBAKjCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,SACvBk6E,EAAK15D,IAAI,SAACs5D,GAAG,OACZniE,EAAAA,EAAAA,MAAA,OAAkBlV,UAAU,WAAUzC,SAAA,EACpC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,SACtB86E,EAAehB,EAAI5pE,SAEtByH,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAK85E,EAAIxgE,QACT9W,EAAAA,EAAAA,KAAA,KAAAxC,UA7EIkQ,EA6Ee4pE,EAAI5pE,KA5EzB,CACd,QAAW,iBACX,eAAkB,yBAClB,cAAiB,eACjB,UAAa,YACb,WAAc,YACd,OAAU,oBAEGA,IAASA,YAuEV1N,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,UA5GnB2H,EA6GUmyE,EAAInyE,OAtG9BszE,EANY,CAChB,OAAU,CAAE/gC,KAAM,UAAWghC,MAAO,iBACpC,SAAY,CAAEhhC,KAAM,YAAaghC,MAAO,mBACxC,MAAS,CAAEhhC,KAAM,SAAUghC,MAAO,iBAGPvzE,IAAW,CAAEuyC,KAAMvyC,EAAQuzE,MAAO,mBACxD14E,EAAAA,EAAAA,KAAA,QAAMC,UAAS,gBAAA4E,OAAkB4zE,EAAWC,OAAQl7E,SAAEi7E,EAAW/gC,cAyG5DviC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBzC,SAAE85E,EAAI9mB,eAEpCr7C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAC,cAChCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAE85E,EAAIC,SAAW,oBAElDpiE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAC,eAChCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAE85E,EAAI/yC,UAAY,mBAElD+yC,EAAIqB,WACHxjE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAC,uBAChCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAC5B,IAAIu5B,KAAKugD,EAAIqB,UAAUhD,eAAe,qBAOjDxgE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,SAAQzC,SAAA,EACrBwC,EAAAA,EAAAA,KAACo3E,GAAY,CAACn3E,UAAU,UACxBkV,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAO85E,EAAIkB,iBAAmB,EAAE,gBAElCrjE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,SAAQzC,SAAA,EACrBwC,EAAAA,EAAAA,KAAC8uE,GAAS,CAAC7uE,UAAU,UACrBkV,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,WAAS,IAAIu5B,KAAKugD,EAAI7+C,YAAY+e,mBAAmB,mBAI/DriC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1B2X,EAAAA,EAAAA,MAAA,UACElV,UAAS,cAAA4E,OAA+B,WAAfyyE,EAAInyE,OAAsB,cAAgB,eACnE+Y,QAAS,WAAF,OAAQk6D,EAAgBd,EAAIz+C,GAAIy+C,EAAInyE,OAAO,EAClDk1B,MAAsB,WAAfi9C,EAAInyE,OAAsB,aAAe,YAAY3H,SAAA,CAE5C,WAAf85E,EAAInyE,QAAsBnF,EAAAA,EAAAA,KAACm3E,GAAS,CAACl3E,UAAU,UAAYD,EAAAA,EAAAA,KAACk3E,GAAQ,CAACj3E,UAAU,SAChE,WAAfq3E,EAAInyE,OAAsB,aAAe,gBAE5CnF,EAAAA,EAAAA,KAAA,UACEC,UAAU,WACVie,QAAS,WAAF,OAAQ+5D,EAAcX,EAAI,EACjCj9C,MAAM,YAAW78B,UAEjBwC,EAAAA,EAAAA,KAAC4uB,GAAY,OAEf5uB,EAAAA,EAAAA,KAAA,UACEC,UAAU,WACVie,QAAS,WAAF,OAAQ+5D,EAAcX,EAAI,EACjCj9C,MAAM,gBAAe78B,UAErBwC,EAAAA,EAAAA,KAACmoB,GAAQ,OAEXnoB,EAAAA,EAAAA,KAAA,UACEC,UAAU,kBACVie,QAAS,WAAF,OAAQg6D,EAAgBZ,EAAIz+C,GAAG,EACtCwB,MAAM,UAAS78B,UAEfwC,EAAAA,EAAAA,KAACqoB,GAAS,cA/ERivD,EAAIz+C,IAjGH,IAAC1zB,EAOhBszE,EAqBgB/qE,CAwJN,OAMbokE,IACC9xE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAACq3E,GAAO,CACNC,IAAKM,EACLtN,SAAU,WACRyH,GAAmB,GACnB8F,EAAc,KAChB,EACAxN,OAzMW,WACrB0H,GAAmB,GACnB8F,EAAc,MACdC,GACF,UA4MF,EChUA,IAAMc,GAAW,WAAH,OACZzjE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,IAAIC,EAAE,QACrB,EAGFkB,GAAY,WAAH,OACbtT,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACJ,EAGFyxD,GAAa,WAAH,OACd74E,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,iDACJ,EAUF6mC,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFC,GAAa,WAAH,OACd1S,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,wBACJ,EAGF4mC,GAAa,WAAH,OACdhuD,EAAAA,EAAAA,KAAA,OAAK0V,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,UAC/FwC,EAAAA,EAAAA,KAAA,WAAS+nB,OAAO,iDACZ,EAmRF+wD,GAAmB,SAAHj/C,GAAyD,IAAAk/C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAnDpL,EAAWn0C,EAAXm0C,YAAa9yD,EAAO2e,EAAP3e,QAASm+D,EAAYx/C,EAAZw/C,aAAcnQ,EAAQrvC,EAARqvC,SAC9DpsD,GAA4Cpf,EAAAA,EAAAA,WAAS,GAAMqf,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAApDw8D,EAAcv8D,EAAA,GAAEw8D,EAAiBx8D,EAAA,GACxCkE,GAA8BvjB,EAAAA,EAAAA,UAASswE,EAAYl5D,MAAKoM,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAAjDu4D,EAAOt4D,EAAA,GAAEu4D,EAAUv4D,EAAA,GAO1B,OACE/L,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,6BACJwC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,YAAYie,QAAShD,EAAQ1d,SAAC,UAGlD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,SACf,QAAhBu7E,EAAA/K,EAAYp8C,YAAI,IAAAmnD,GAAhBA,EAAkBtiD,QACjBz2B,EAAAA,EAAAA,KAAA,OAAKsiB,IAAK0rD,EAAYp8C,KAAK6E,OAAQ/P,IAAKsnD,EAAYp8C,KAAK9a,MAAQk3D,EAAYp8C,KAAK1rB,SAElFlG,EAAAA,EAAAA,KAAC44E,GAAQ,OAGbzjE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,UAAqB,QAAhBw7E,EAAAhL,EAAYp8C,YAAI,IAAAonD,OAAA,EAAhBA,EAAkBliE,QAAwB,QAApBmiE,EAAIjL,EAAYp8C,YAAI,IAAAqnD,OAAA,EAAhBA,EAAkB/yE,QAAS,8BAC1DlG,EAAAA,EAAAA,KAAA,KAAAxC,UAAoB,QAAhB07E,EAAAlL,EAAYp8C,YAAI,IAAAsnD,OAAA,EAAhBA,EAAkBl1C,QAAS,qBACd,QAAhBm1C,EAAAnL,EAAYp8C,YAAI,IAAAunD,OAAA,EAAhBA,EAAkB1tC,OAAOt2B,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAG,YAAUwwE,EAAYp8C,KAAK6Z,QACvC,QAAhB2tC,EAAApL,EAAYp8C,YAAI,IAAAwnD,OAAA,EAAhBA,EAAkBj7E,YAAYgX,EAAAA,EAAAA,MAAA,KAAA3X,SAAA,CAAG,mBAAiBwwE,EAAYp8C,KAAKzzB,mBAIxEgX,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAS,mBAAA4E,OAAqBmpE,EAAYl5D,MAAOtX,SAAA,CAC/B,UAArBwwE,EAAYl5D,MAAmB9U,EAAAA,EAAAA,KAACyoB,GAAS,IACpB,UAArBulD,EAAYl5D,MAAyC,cAArBk5D,EAAYl5D,MAAuB9U,EAAAA,EAAAA,KAAC64E,GAAU,KAAM74E,EAAAA,EAAAA,KAAC44E,GAAQ,IACxE,UAArB5K,EAAYl5D,KAAmB,WACV,UAArBk5D,EAAYl5D,KAAmB,gBACV,cAArBk5D,EAAYl5D,KAAuB,YAAc,cAG9B,UAArBk5D,EAAYl5D,OACX9U,EAAAA,EAAAA,KAAA,UACEC,UAAU,2BACVie,QAAS,WAAF,OAAQq7D,GAAmBD,EAAe,EAAC97E,SACnD,qBAMJ87E,IACCnkE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/B2X,EAAAA,EAAAA,MAAA,UAAQsI,MAAO+7D,EAAS7iE,SAAU,SAACuG,GAAC,OAAKu8D,EAAWv8D,EAAEW,OAAOJ,MAAM,EAACjgB,SAAA,EAClEwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,cACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,YAAWjgB,SAAC,eAC1BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,sBAExB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,yBAAyBie,QA3DlC,WACvBm7D,EAAarL,EAAYn1C,GAAI2gD,GAC7BD,GAAkB,EACpB,EAwDqF/7E,SAAC,eAGtEwC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,2BAA2Bie,QAAS,WAAF,OAAQq7D,GAAkB,EAAM,EAAC/7E,SAAC,qBAQ9F2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAS,uBAAA4E,OAAyBmpE,EAAY7oE,QAAS3H,SACnC,WAAvBwwE,EAAY7oE,OAAsB,UACX,aAAvB6oE,EAAY7oE,OAAwB,YAAc,qBAIvDgQ,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAI,IAAIu5B,KAAKi3C,EAAY0L,WAAW/D,eAAe,cAGpD3H,EAAY2L,kBACXxkE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAIwwE,EAAY2L,qBAInB3L,EAAY4L,gBACXzkE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,0BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAI,IAAIu5B,KAAKi3C,EAAY4L,eAAejE,eAAe,cAI1D3H,EAAY6L,MACX1kE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAIwwE,EAAY6L,gBAMxB1kE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,oBAAoBie,QAAShD,EAAQ1d,SAAC,YAIlC,UAArBwwE,EAAYl5D,OACX9U,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAAiBie,QAAS,WAAF,OAAQgrD,EAAS8E,EAAYn1C,GAAG,EAACr7B,SAAC,4BAOtF,EAEA,SA7YyB,WACvB,IAAAC,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CojE,EAAYljE,EAAA,GAAEkzE,EAAelzE,EAAA,GACpCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAAoChe,EAAAA,EAAAA,UAAS,IAAGie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAzCouC,EAAUnuC,EAAA,GAAEouC,EAAapuC,EAAA,GAChCG,GAAoCpe,EAAAA,EAAAA,UAAS,OAAMqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA5Cg+D,EAAU/9D,EAAA,GAAEg+D,EAAah+D,EAAA,GAChCG,GAAwCxe,EAAAA,EAAAA,UAAS,OAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAhD89D,EAAY79D,EAAA,GAAE89D,EAAe99D,EAAA,GACpCG,GAAsD5e,EAAAA,EAAAA,UAAS,MAAK6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA7D49D,EAAmB39D,EAAA,GAAE49D,EAAsB59D,EAAA,GAClDG,GAAkChf,EAAAA,EAAAA,WAAS,GAAMif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAA1Ci+B,EAASh+B,EAAA,GAAEi+B,EAAYj+B,EAAA,IAE9Bte,EAAAA,EAAAA,WAAU,WACRyyE,GACF,EAAG,IAEH,IAAMA,EAAgB,eAAAvzE,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OAFIF,EAAAC,KAAA,EAErBgsE,GAAW,GAAMjsE,EAAAE,KAAA,EACMyG,GAAQ60E,kBAAiB,OAA1Ch2E,EAAQxF,EAAAmG,KACd8rE,EAAgB1sC,MAAMC,QAAQhgC,EAASy8D,cAAgBz8D,EAASy8D,aAAgB18B,MAAMC,QAAQhgC,GAAYA,EAAW,IAAKxF,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAE1HM,QAAQG,MAAM,8BAA6ByyB,GAC3C++C,EAAgB,IAAI,OAEF,OAFEjyE,EAAAC,KAAA,EAEpBgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAXqB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAkBhB46E,EAAgB,eAAA97E,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAOyD,EAAeqwE,GAAO,IAAA76E,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,WAChDc,OAAO0yB,QAAQ,mDAAoD,CAAF1sB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAA+G,EAAA9G,KAAA,EAE3DyG,GAAQ+0E,sBAAsBnxE,EAAeqwE,GAAQ,cAAA5zE,EAAA9G,KAAA,EACrDgyE,IAAkB,OACxBl2B,GAAa,GACbu/B,EAAuB,MAAMv0E,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAE7B1G,QAAQG,MAAM,yBAAwBV,GACtC6zB,EAAAA,GAAMnzB,MAAM,uCAAuC,wBAAAuG,EAAArG,OAAA,EAAAmG,EAAA,iBAGxD,gBAZqBJ,EAAAW,GAAA,OAAA1H,EAAAiB,MAAA,KAAAC,UAAA,KAchBuxE,EAAuB,eAAA13C,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAOgD,GAAa,IAAA6J,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,WAC9Cc,OAAO0yB,QAAQ,8DAA+D,CAAFjsB,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAEtEyG,GAAQiE,kBAAkBL,GAAc,cAAA9C,EAAAvH,KAAA,EACxCgyE,IAAkB,OACxBl2B,GAAa,GACbu/B,EAAuB,MAAM9zE,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAE7BnH,QAAQG,MAAM,+BAA8B2T,GAC5Cwf,EAAAA,GAAMnzB,MAAM,mCAAmC,wBAAAgH,EAAA9G,OAAA,EAAA4G,EAAA,iBAGpD,gBAZ4BI,GAAA,OAAA+yB,EAAA95B,MAAA,KAAAC,UAAA,KA0CvByxE,EAAuBrQ,EAAatoC,OAAO,SAAAy1C,GAAe,IAAAC,EAAAC,EAAAC,EACxDgD,GAAiBrnB,IACJ,QAAhBmkB,EAAAD,EAAYp8C,YAAI,IAAAq8C,OAAA,EAAhBA,EAAkBn3D,OAAQk3D,EAAYp8C,KAAK9a,KAAK+mB,cAAcC,SAASgsB,EAAWjsB,iBAClE,QAAhBqwC,EAAAF,EAAYp8C,YAAI,IAAAs8C,OAAA,EAAhBA,EAAkBhoE,QAAS8nE,EAAYp8C,KAAK1rB,MAAM23B,cAAcC,SAASgsB,EAAWjsB,iBACpE,QAAhBswC,EAAAH,EAAYp8C,YAAI,IAAAu8C,OAAA,EAAhBA,EAAkBnqC,QAASgqC,EAAYp8C,KAAKoS,MAAMnG,cAAcC,SAASgsB,EAAWjsB,eAEjF08C,EAA6B,QAAfT,GAAwB9L,EAAYl5D,OAASglE,EAC3D1I,EAAiC,QAAjB4I,GAA0BhM,EAAY7oE,SAAW60E,EAEvE,OAAO7I,GAAiBoJ,GAAenJ,CACzC,GAEA,OAAIxG,GAEA5qE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,UAASzC,SAAA,EACtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,iCAOT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,UAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,qDAIP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,sBACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEqjE,EAAat8D,aAE9C4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEqjE,EAAatoC,OAAO,SAAA/gB,GAAC,MAAe,UAAXA,EAAE1C,MAA+B,UAAX0C,EAAE1C,IAAgB,GAAEvQ,aAEpG4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,iBACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEqjE,EAAatoC,OAAO,SAAA/gB,GAAC,MAAe,cAAXA,EAAE1C,IAAoB,GAAEvQ,aAElF4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,cACJwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAEqjE,EAAatoC,OAAO,SAAA/gB,GAAC,MAAiB,WAAbA,EAAErS,MAAmB,GAAEZ,gBAInF4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAC6nB,GAAU,CAAC5nB,UAAU,iBACtBD,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACL8P,YAAY,sBACZC,MAAOqsC,EACPnzC,SAAU,SAACuG,GAAC,OAAK6sC,EAAc7sC,EAAEW,OAAOJ,MAAM,QAIlDtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAACguD,GAAU,CAAC/tD,UAAU,iBACtBkV,EAAAA,EAAAA,MAAA,UAAQsI,MAAOq8D,EAAYnjE,SAAU,SAACuG,GAAC,OAAK68D,EAAc78D,EAAEW,OAAOJ,MAAM,EAACjgB,SAAA,EACxEwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,cACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,cACtBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,mBACtBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,YAAWjgB,SAAC,eAC1BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,oBAI3BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UAAQsI,MAAOu8D,EAAcrjE,SAAU,SAACuG,GAAC,OAAK+8D,EAAgB/8D,EAAEW,OAAOJ,MAAM,EAACjgB,SAAA,EAC5EwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,MAAKjgB,SAAC,iBACpBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,cACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,WAAUjgB,SAAC,gBACzBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,gCAM/BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBzC,SACF,IAAhC0zE,EAAqB3sE,QACpB4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,SAAC,QAC5BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,oBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SACGssD,GAA6B,QAAfgwB,GAAyC,QAAjBE,EACnC,yCACA,oCAKRh6E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,SAC/B0zE,EAAqBlzD,IAAI,SAACgwD,GAAW,IAAAwD,EAAAC,EAAAC,EAAA8I,EA9GxBr1E,EAOhBszE,EAxBc3jE,EAQd2lE,EAuHwC,OACpCtlE,EAAAA,EAAAA,MAAA,OAA0BlV,UAAU,mBAAkBzC,SAAA,EACpD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SACT,QAAhBg0E,EAAAxD,EAAYp8C,YAAI,IAAA4/C,GAAhBA,EAAkB/6C,QACjBz2B,EAAAA,EAAAA,KAAA,OAAKsiB,IAAK0rD,EAAYp8C,KAAK6E,OAAQ/P,IAAKsnD,EAAYp8C,KAAK9a,MAAQk3D,EAAYp8C,KAAK1rB,SAElFlG,EAAAA,EAAAA,KAAC44E,GAAQ,OAGbzjE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,UAAqB,QAAhBi0E,EAAAzD,EAAYp8C,YAAI,IAAA6/C,OAAA,EAAhBA,EAAkB36D,QAAwB,QAApB46D,EAAI1D,EAAYp8C,YAAI,IAAA8/C,OAAA,EAAhBA,EAAkBxrE,QAAS,8BAC1DlG,EAAAA,EAAAA,KAAA,KAAAxC,UAAoB,QAAhBg9E,EAAAxM,EAAYp8C,YAAI,IAAA4oD,OAAA,EAAhBA,EAAkBx2C,QAAS,2BAGnC7uB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EA/I7BsX,EAgJUk5D,EAAYl5D,KAxIpC2lE,EAPU,CACd,MAAS,CAAE/iC,KAAM,WAAYghC,MAAO,aAAc7rB,MAAM7sD,EAAAA,EAAAA,KAACyoB,GAAS,KAClE,MAAS,CAAEivB,KAAM,gBAAiBghC,MAAO,aAAc7rB,MAAM7sD,EAAAA,EAAAA,KAAC64E,GAAU,KACxE,UAAa,CAAEnhC,KAAM,YAAaghC,MAAO,iBAAkB7rB,MAAM7sD,EAAAA,EAAAA,KAAC64E,GAAU,KAC5E,OAAU,CAAEnhC,KAAM,WAAYghC,MAAO,cAAe7rB,MAAM7sD,EAAAA,EAAAA,KAAC44E,GAAQ,MAG5C9jE,IAAS,CAAE4iC,KAAM5iC,EAAM4jE,MAAO,eAAgB7rB,MAAM7sD,EAAAA,EAAAA,KAAC44E,GAAQ,MAEpFzjE,EAAAA,EAAAA,MAAA,QAAMlV,UAAS,cAAA4E,OAAgB41E,EAAS/B,OAAQl7E,SAAA,CAC7Ci9E,EAAS5tB,KACT4tB,EAAS/iC,UAKQvyC,EAgIU6oE,EAAY7oE,OAzHtCszE,EANY,CAChB,OAAU,CAAE/gC,KAAM,UAAWghC,MAAO,iBACpC,SAAY,CAAEhhC,KAAM,YAAaghC,MAAO,mBACxC,OAAU,CAAEhhC,KAAM,eAAgBghC,MAAO,kBAGdvzE,IAAW,CAAEuyC,KAAMvyC,EAAQuzE,MAAO,mBACxD14E,EAAAA,EAAAA,KAAA,QAAMC,UAAS,gBAAA4E,OAAkB4zE,EAAWC,OAAQl7E,SAAEi7E,EAAW/gC,eA4H5D13C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBzC,UAClC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAACiuD,GAAY,CAAChuD,UAAU,UACxBkV,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,kBAAgB,IAAIu5B,KAAKi3C,EAAY0L,WAAWliC,mBAAmB,eAE1Ew2B,EAAY2L,kBACX35E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,UACxB2X,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,qBAAmBwwE,EAAY2L,qBAGxC3L,EAAY4L,gBACX55E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,UACxB2X,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAM,yBAAuB,IAAIu5B,KAAKi3C,EAAY4L,eAAepiC,mBAAmB,oBAM5Fx3C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBzC,UACjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,EAClCwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,oBACVie,QAAS,WAAF,OA7MG,SAAC8vD,GAC7BmM,EAAuBnM,GACvBpzB,GAAa,EACf,CA0MmC8/B,CAAsB1M,EAAY,EAACxwE,SACnD,cAIqB,UAArBwwE,EAAYl5D,OACX9U,EAAAA,EAAAA,KAAA,UACEC,UAAU,iBACVie,QAAS,WAAF,OAAQ8yD,EAAwBhD,EAAYn1C,GAAG,EAACr7B,SACxD,qBArDCwwE,EAAYn1C,GA2DhB,OAMb8hB,GAAau/B,IACZl6E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAC84E,GAAgB,CACf9K,YAAakM,EACbh/D,QAAS,WACP0/B,GAAa,GACbu/B,EAAuB,KACzB,EACAd,aAAcgB,EACdnR,SAAU8H,UAOxB,E,mkBC9TA,IAAM2J,GAAW,WAAH,OACZxlE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,qEACRpnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,2BACjB/nB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,mBACb,EAGF0gD,GAAa,WAAH,OACdtzD,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,sBACjB/nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAC7B,EAuKFgzD,GAAkB,SAAH5gD,GAAiC,IAA3B49B,EAAI59B,EAAJ49B,KAAMyS,EAAMrwC,EAANqwC,OAAQwQ,EAAM7gD,EAAN6gD,OACvCv+D,GAAgC5e,EAAAA,EAAAA,UAAS,CACvCoZ,MAAM8gD,aAAI,EAAJA,EAAM9gD,OAAQ,GACpB05C,aAAaoH,aAAI,EAAJA,EAAMpH,cAAe,GAClC9iD,MAAMkqD,aAAI,EAAJA,EAAMlqD,OAAQ,UACpByzD,SAASvJ,aAAI,EAAJA,EAAMuJ,UAAW,GAC1B/O,cAAcwF,aAAI,EAAJA,EAAMxF,eAAgB,KACpC71C,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GANK9Q,EAAQ+Q,EAAA,GAAEouD,EAAWpuD,EAAA,GAatB8uD,EAAe,SAACnuD,GACpB,IAAAouD,EAAwBpuD,EAAEW,OAAlB/G,EAAIw0D,EAAJx0D,KAAM2G,EAAK6tD,EAAL7tD,MACdktD,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GAAG6L,EAAO2G,GAAK,EAC/C,EAEA,OACEtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBACJ2X,EAAAA,EAAAA,MAAA,QAAMoI,SAbW,SAACL,GACpBA,EAAEC,iBACFktD,EAAO7+D,EACT,EAUkCvL,UAAU,gBAAezC,SAAA,EACrD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,sBACtBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAASsL,KAChBH,SAAU00D,EACV1vC,UAAQ,EACRne,YAAY,+BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,cAAaj+B,SAAC,oBAC7BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,cACH/hB,KAAK,cACL2G,MAAOjS,EAASglD,YAChB75C,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,yBAIhBxd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,UACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,eACtB2X,EAAAA,EAAAA,MAAA,UAAQ0jB,GAAG,OAAO/hB,KAAK,OAAO2G,MAAOjS,EAASkC,KAAMiJ,SAAU00D,EAAa7tE,SAAA,EACzEwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,UAASjgB,SAAC,WACxBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,WACtBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,OAAMjgB,SAAC,UACrBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,SAAQjgB,SAAC,WACvBwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,YAAWjgB,SAAC,eAC1BwC,EAAAA,EAAAA,KAAA,UAAQyd,MAAM,QAAOjgB,SAAC,oBAK5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,UAASj+B,SAAC,cACzBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,MACLmrB,GAAG,UACH/hB,KAAK,UACL2G,MAAOjS,EAAS21D,QAChBxqD,SAAU00D,EACV7tD,YAAY,4BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,eAAcj+B,SAAC,2BAC9BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,eACH/hB,KAAK,eACL2G,MAAOjS,EAAS4mD,aAChBz7C,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,6CAIhBxd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UAAQzH,KAAK,SAASzN,UAAU,kBAAkB4W,SAAUgkE,EAAOr9E,SAAA,EACjEwC,EAAAA,EAAAA,KAAC26E,GAAQ,CAAC16E,UAAU,SACnB46E,EAAS,gBAAkB,sBAMxC,EAGMC,GAAkB,SAAHC,GAAiD,IAA3CnjB,EAAImjB,EAAJnjB,KAAMyS,EAAM0Q,EAAN1Q,OAAQ2Q,EAAcD,EAAdC,eAAgBH,EAAME,EAANF,OACvDn+D,GAAgChf,EAAAA,EAAAA,UAAS,CACvCkgC,SAASg6B,aAAI,EAAJA,EAAMh6B,UAAW,GAC1BoB,MAAM44B,aAAI,EAAJA,EAAM54B,OAAQ,GACpBi8C,SAASrjB,aAAI,EAAJA,EAAMqjB,UAAW,GAC1Bj3C,OAAO4zB,aAAI,EAAJA,EAAM5zB,QAAS,KACtBrnB,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GALKlR,EAAQmR,EAAA,GAAEguD,EAAWhuD,EAAA,GAYtB0uD,EAAe,SAACnuD,GACpB,IAAAg+D,EAAwBh+D,EAAEW,OAAlB/G,EAAIokE,EAAJpkE,KAAM2G,EAAKy9D,EAALz9D,MACdktD,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GAAG6L,EAAO2G,GAAK,EAC/C,EASA,OACEtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBAEJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAiBie,QAAS,WAAF,OAAQ8F,SAASm3D,eAAe,iBAAiBh3B,OAAO,EAAC3mD,SAAA,CAC7Fo6D,SAAAA,EAAMnhC,QACLz2B,EAAAA,EAAAA,KAAA,OACEsiB,IAAG,YAAAzd,OAAc+yD,EAAKnhC,QACtB/P,IAAI,eACJiK,QAAS,SAACzT,GACRA,EAAEW,OAAOyE,IAAM,uBACjB,KAGFtiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBzC,SAAC,QAEtC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,QACNwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAM,2BAGV2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,SAAOsmB,QAAQ,gBAAgBx7B,UAAU,oBAAmBzC,SAAA,EAC1DwC,EAAAA,EAAAA,KAACyoE,GAAU,CAACxoE,UAAU,SAAS,uBAGjCD,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,gBACHurB,OAAO,UACPztC,SAxCa,SAACuG,GACxB,IAAMmnC,EAAOnnC,EAAEW,OAAOymC,MAAM,GACxBD,GACF22B,EAAe32B,EAEnB,EAoCYjvC,MAAO,CAAEC,QAAS,WAEpBrV,EAAAA,EAAAA,KAAA,KAAGC,UAAU,cAAazC,SAAC,8CAKjC2X,EAAAA,EAAAA,MAAA,QAAMoI,SA1DW,SAACL,GACpBA,EAAEC,iBACFktD,EAAO7+D,EACT,EAuDkCvL,UAAU,gBAAezC,SAAA,EACrD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,WAAUzC,SAAA,EACvB2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,UAASj+B,SAAC,YACzBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,UACH/hB,KAAK,UACL2G,MAAOjS,EAASoyB,QAChBjnB,SAAU00D,EACV7tD,YAAY,eAGhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,OAAMj+B,SAAC,WACtBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,OACH/hB,KAAK,OACL2G,MAAOjS,EAASwzB,KAChBroB,SAAU00D,EACV7tD,YAAY,kBAKlBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,UAASj+B,SAAC,WACzBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,UACH/hB,KAAK,UACL2G,MAAOjS,EAASyvE,QAChBtkE,SAAU00D,EACV7tD,YAAY,2BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,QAAOj+B,SAAC,WACvBwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,QACLmrB,GAAG,QACH/hB,KAAK,QACL2G,MAAOjS,EAASw4B,MAChBrtB,SAAU00D,EACV7tD,YAAY,yBAIhBxd,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UAAQzH,KAAK,SAASzN,UAAU,kBAAkB4W,SAAUgkE,EAAOr9E,SAAA,EACjEwC,EAAAA,EAAAA,KAAC26E,GAAQ,CAAC16E,UAAU,SACnB46E,EAAS,gBAAkB,sBAMxC,EAGMO,GAAkB,SAAHC,GAAiC,IAA3BzjB,EAAIyjB,EAAJzjB,KAAMyS,EAAMgR,EAANhR,OAAQwQ,EAAMQ,EAANR,OACvC/9D,GAAgCpf,EAAAA,EAAAA,UAAS,CACvCs7C,WAA+B,KAApB4e,aAAI,EAAJA,EAAM5e,WACjBsiC,cAAqC,KAAvB1jB,aAAI,EAAJA,EAAM0jB,gBACpBv+D,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAHKtR,EAAQuR,EAAA,GAAE4tD,EAAW5tD,EAAA,GAUtBsuD,EAAe,SAACnuD,GACpB,IAAAq+D,EAA0Br+D,EAAEW,OAApB/G,EAAIykE,EAAJzkE,KAAMJ,EAAO6kE,EAAP7kE,QACdi0D,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GAAG6L,EAAOJ,GAAO,EACjD,EAEA,OACEvB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJ2X,EAAAA,EAAAA,MAAA,QAAMoI,SAbW,SAACL,GACpBA,EAAEC,iBACFktD,EAAO7+D,EACT,EAUkCvL,UAAU,gBAAezC,SAAA,EACrD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,oBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,uDAEL2X,EAAAA,EAAAA,MAAA,SAAOlV,UAAU,gBAAezC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLoJ,KAAK,YACLJ,QAASlL,EAASwtC,UAClBriC,SAAU00D,KAEZrrE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAIpBkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,uDAEL2X,EAAAA,EAAAA,MAAA,SAAOlV,UAAU,gBAAezC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLoJ,KAAK,eACLJ,QAASlL,EAAS8vE,aAClB3kE,SAAU00D,KAEZrrE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4BAMtBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UAAQzH,KAAK,SAASzN,UAAU,kBAAkB4W,SAAUgkE,EAAOr9E,SAAA,EACjEwC,EAAAA,EAAAA,KAAC26E,GAAQ,CAAC16E,UAAU,SACnB46E,EAAS,gBAAkB,sBAMxC,EAGMW,GAAuB,SAAHx/B,GAAiC,IAA3B4b,EAAI5b,EAAJ4b,KAAMyS,EAAMruB,EAANquB,OAAQwQ,EAAM7+B,EAAN6+B,OAC5C55D,GAAgCvjB,EAAAA,EAAAA,UAAS,CACvC+9E,qBAAmD,KAA9B7jB,aAAI,EAAJA,EAAM6jB,qBAC3BC,iBAA2C,KAA1B9jB,aAAI,EAAJA,EAAM8jB,iBACvBC,iBAA2C,KAA1B/jB,aAAI,EAAJA,EAAM+jB,mBACvBz6D,GAAAtjB,EAAAA,EAAAA,GAAAqjB,EAAA,GAJKzV,EAAQ0V,EAAA,GAAEypD,EAAWzpD,EAAA,GAWtBmqD,EAAe,SAACnuD,GACpB,IAAA0+D,EAA0B1+D,EAAEW,OAApB/G,EAAI8kE,EAAJ9kE,KAAMJ,EAAOklE,EAAPllE,QACdi0D,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GAAG6L,EAAOJ,GAAO,EACjD,EAEA,OACEvB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJ2X,EAAAA,EAAAA,MAAA,QAAMoI,SAbW,SAACL,GACpBA,EAAEC,iBACFktD,EAAO7+D,EACT,EAUkCvL,UAAU,gBAAezC,SAAA,EACrD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,uBAAsBzC,SAAA,EACnC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,uBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,sCAEL2X,EAAAA,EAAAA,MAAA,SAAOlV,UAAU,gBAAezC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLoJ,KAAK,sBACLJ,QAASlL,EAASiwE,oBAClB9kE,SAAU00D,KAEZrrE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAIpBkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,+CAEL2X,EAAAA,EAAAA,MAAA,SAAOlV,UAAU,gBAAezC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLoJ,KAAK,kBACLJ,QAASlL,EAASkwE,gBAClB/kE,SAAU00D,KAEZrrE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAKpBkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,2BACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,kDAEL2X,EAAAA,EAAAA,MAAA,SAAOlV,UAAU,gBAAezC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLoJ,KAAK,kBACLJ,QAASlL,EAASmwE,gBAClBhlE,SAAU00D,KAEZrrE,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4BAKtBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAczC,UAC3B2X,EAAAA,EAAAA,MAAA,UAAQzH,KAAK,SAASzN,UAAU,kBAAkB4W,SAAUgkE,EAAOr9E,SAAA,EACjEwC,EAAAA,EAAAA,KAAC26E,GAAQ,CAAC16E,UAAU,SACnB46E,EAAS,gBAAkB,sBAMxC,EAGMgB,GAAmB,SAAHz/B,GAA0F,IAApFwb,EAAIxb,EAAJwb,KAAckkB,GAAF1/B,EAANiuB,OAAwBjuB,EAAhB0/B,kBAAkBC,EAAgB3/B,EAAhB2/B,iBAAkBC,EAAmB5/B,EAAnB4/B,oBAAqBnB,EAAMz+B,EAANy+B,OACjG5wC,GAAwCvsC,EAAAA,EAAAA,UAAS,CAC/Cu+E,iBAAkB,GAClBC,aAAc,GACdC,iBAAkB,KAClBjyC,GAAAtsC,EAAAA,EAAAA,GAAAqsC,EAAA,GAJKn3B,EAAYo3B,EAAA,GAAEkyC,EAAelyC,EAAA,GAuB9BmyC,EAAuB,SAACn/D,GAC5B,IAAAo/D,EAAwBp/D,EAAEW,OAAlB/G,EAAIwlE,EAAJxlE,KAAM2G,EAAK6+D,EAAL7+D,MACd2+D,EAAgB,SAAAv9E,GAAI,OAAA8F,GAAAA,GAAA,GAAU9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GAAG6L,EAAO2G,GAAK,EACnD,EAEA,OACEtI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,4BAEJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,kBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,0DAEDu+E,GAQA5mE,EAAAA,EAAAA,MAAA,QAAMoI,SAtCe,SAACL,GAE5B,GADAA,EAAEC,iBACErK,EAAaopE,eAAiBppE,EAAaqpE,iBAA/C,CAMA,IAAMI,EAAU,CACdC,gBAAiB1pE,EAAampE,iBAC9BQ,YAAa3pE,EAAaopE,cAG5BJ,EAAiBS,GACjBH,EAAgB,CAAEH,iBAAkB,GAAIC,aAAc,GAAIC,iBAAkB,IAT5E,MAFE3pD,EAAAA,GAAMnzB,MAAM,sBAYhB,EAuB8CY,UAAU,gBAAezC,SAAA,EAC7D2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,mBAAkBj+B,SAAC,oBAClCwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLmrB,GAAG,mBACH/hB,KAAK,mBACL2G,MAAO3K,EAAampE,iBACpBtlE,SAAU0lE,EACV1gD,UAAQ,EACRne,YAAY,+BAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,eAAcj+B,SAAC,kBAC9BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLmrB,GAAG,eACH/hB,KAAK,eACL2G,MAAO3K,EAAaopE,aACpBvlE,SAAU0lE,EACV1gD,UAAQ,EACRne,YAAY,uBACZoe,UAAU,UAIdzmB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,SAAOy7B,QAAQ,mBAAkBj+B,SAAC,wBAClCwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,WACLmrB,GAAG,mBACH/hB,KAAK,mBACL2G,MAAO3K,EAAaqpE,iBACpBxlE,SAAU0lE,EACV1gD,UAAQ,EACRne,YAAY,2BACZoe,UAAU,UAIdzmB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAQ0N,KAAK,SAASzN,UAAU,oBAAoBie,QAAS,WAAF,OAAQ89D,GAAoB,EAAM,EAACx+E,SAAC,YAG/FwC,EAAAA,EAAAA,KAAA,UAAQ0N,KAAK,SAASzN,UAAU,kBAAkB4W,SAAUgkE,EAAOr9E,SAChEq9E,EAAS,gBAAkB,2BAtDlC76E,EAAAA,EAAAA,KAAA,UACEC,UAAU,oBACVie,QAAS,WAAF,OAAQ89D,GAAoB,EAAK,EAACx+E,SAC1C,wBA0DL2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,+BACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAAC,qBACjCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAC7Bo6D,SAAAA,EAAM8kB,WAAa,IAAI3lD,KAAK6gC,EAAK8kB,YAAY/G,eAAe,SAAW,mBAG5ExgE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAAC,wBACjCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAC7Bo6D,SAAAA,EAAM+kB,eAAiB,KAAO,mBAO7C,EAEA,SAvoBqB,WACnB,IAAAl/E,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bm6D,EAAIj6D,EAAA,GAAEoxE,EAAOpxE,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA4Bhe,EAAAA,EAAAA,WAAS,GAAMie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAApCm/D,EAAMl/D,EAAA,GAAEihE,EAASjhE,EAAA,GACxBG,GAAkCpe,EAAAA,EAAAA,UAAS,WAAUqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAA9CkkC,EAASjkC,EAAA,GAAEkkC,EAAYlkC,EAAA,GAC9BG,GAAgDxe,EAAAA,EAAAA,WAAS,GAAMye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAAxD6/D,EAAgB5/D,EAAA,GAAE6/D,EAAmB7/D,EAAA,IAE5C9d,EAAAA,EAAAA,WAAU,WACRw+E,GACF,EAAG,IAEH,IAAMA,EAAY,eAAAt/E,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAA0F,EAAA0tB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEA,OAFAF,EAAAC,KAAA,EAEjBgsE,GAAW,GAAMjsE,EAAAE,KAAA,EACMyG,GAAQoB,aAAY,OAArCvC,EAAQxF,EAAAmG,KACdgqE,EAAQ3qE,EAASwzD,MAAQxzD,GAAUxF,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEnCM,QAAQG,MAAM,gCAA+ByyB,GAAS,OAEpC,OAFoClzB,EAAAC,KAAA,EAEtDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,kBAViB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAYZq9E,EAAU,eAAAv+E,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAiH,EAAO8F,GAAQ,IAAA7M,EAAA,OAAAF,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OAEd,OAFc8G,EAAA/G,KAAA,EAE9B+9E,GAAU,GAAMh3E,EAAA9G,KAAA,EACVyG,GAAQuB,cAAc0E,GAAS,cAAA5F,EAAA9G,KAAA,EAC/B+9E,IAAc,OACpBrqD,EAAAA,GAAMC,QAAQ,gCAAgC7sB,EAAA9G,KAAA,eAAA8G,EAAA/G,KAAA,EAAAF,EAAAiH,EAAA,SAE9C1G,QAAQG,MAAM,8BAA6BV,GAC3C6zB,EAAAA,GAAMnzB,MAAM,kCAAkC,OAE7B,OAF6BuG,EAAA/G,KAAA,EAE9C+9E,GAAU,GAAOh3E,EAAAtG,OAAA,2BAAAsG,EAAArG,OAAA,EAAAmG,EAAA,qBAEpB,gBAZeJ,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAcVs9E,EAAoB,eAAAzjD,GAAA96B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA0H,EAAO2M,GAAY,IAAAE,EAAA,OAAAvU,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,OAE5B,OAF4BuH,EAAAxH,KAAA,EAE5C+9E,GAAU,GAAMv2E,EAAAvH,KAAA,EACVyG,GAAQy3E,eAAelqE,GAAa,OAC1CkpE,GAAoB,GACpBxpD,EAAAA,GAAMC,QAAQ,2BAA2BpsB,EAAAvH,KAAA,eAAAuH,EAAAxH,KAAA,EAAAmU,EAAA3M,EAAA,SAEzCnH,QAAQG,MAAM,2BAA0B2T,GACxCwf,EAAAA,GAAMnzB,MAAM,+BAA+B,OAE1B,OAF0BgH,EAAAxH,KAAA,EAE3C+9E,GAAU,GAAOv2E,EAAA/G,OAAA,2BAAA+G,EAAA9G,OAAA,EAAA4G,EAAA,qBAEpB,gBAZyBF,GAAA,OAAAqzB,EAAA95B,MAAA,KAAAC,UAAA,KAcpBw9E,EAAkB,eAAApjD,GAAAr7B,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAA+H,EAAO69C,GAAI,IAAA74C,EAAAiI,EAAA,OAAAhV,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,OAIF,OAJE2H,EAAA5H,KAAA,EAElC+9E,GAAU,IACJpxE,EAAW,IAAIi6C,UACZC,OAAO,SAAUrB,GAAM59C,EAAA3H,KAAA,EAC1ByG,GAAQs9C,aAAar3C,GAAS,cAAA/E,EAAA3H,KAAA,EAC9B+9E,IAAc,OACpBrqD,EAAAA,GAAMC,QAAQ,4BAA4BhsB,EAAA3H,KAAA,eAAA2H,EAAA5H,KAAA,EAAA4U,EAAAhN,EAAA,SAE1CvH,QAAQG,MAAM,2BAA0BoU,GACxC+e,EAAAA,GAAMnzB,MAAM,+BAA+B,OAE1B,OAF0BoH,EAAA5H,KAAA,EAE3C+9E,GAAU,GAAOn2E,EAAAnH,OAAA,2BAAAmH,EAAAlH,OAAA,EAAAiH,EAAA,qBAEpB,gBAduBD,GAAA,OAAAszB,EAAAr6B,MAAA,KAAAC,UAAA,KAgBxB,OAAImrE,GAEA5qE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,UAASzC,SAAA,EACtBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,+BAeT2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,UAC1B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,8DAIP2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC/BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWzC,SAnBrB,CACX,CAAEq7B,GAAI,UAAW5iB,MAAO,WAAY42C,KAAM,MAC1C,CAAEh0B,GAAI,UAAW5iB,MAAO,UAAW42C,KAAM,MACzC,CAAEh0B,GAAI,UAAW5iB,MAAO,cAAe42C,KAAM,MAC7C,CAAEh0B,GAAI,gBAAiB5iB,MAAO,cAAe42C,KAAM,MACnD,CAAEh0B,GAAI,WAAY5iB,MAAO,eAAgB42C,KAAM,QAejC7uC,IAAI,SAACq+C,GAAG,OACZlnD,EAAAA,EAAAA,MAAA,UAEElV,UAAS,cAAA4E,OAAgBm7C,IAAcqc,EAAIxjC,GAAK,SAAW,IAC3D3a,QAAS,WAAF,OAAQ+hC,EAAaoc,EAAIxjC,GAAG,EAACr7B,SAAA,EAEpCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAE6+D,EAAIxP,QAChC7sD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWzC,SAAE6+D,EAAIpmD,UAL5BomD,EAAIxjC,GAMF,QAKf1jB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,CAChB,YAAdwiD,IACChgD,EAAAA,EAAAA,KAAC46E,GAAe,CAAChjB,KAAMA,EAAMyS,OAAQyS,EAAYjC,OAAQA,IAG5C,YAAd76B,IACChgD,EAAAA,EAAAA,KAAC86E,GAAe,CACdljB,KAAMA,EACNyS,OAAQyS,EACR9B,eAAgBiC,EAChBpC,OAAQA,IAIG,YAAd76B,IACChgD,EAAAA,EAAAA,KAACo7E,GAAe,CAACxjB,KAAMA,EAAMyS,OAAQyS,EAAYjC,OAAQA,IAG5C,kBAAd76B,IACChgD,EAAAA,EAAAA,KAACw7E,GAAoB,CAAC5jB,KAAMA,EAAMyS,OAAQyS,EAAYjC,OAAQA,IAGjD,aAAd76B,IACChgD,EAAAA,EAAAA,KAAC67E,GAAgB,CACfjkB,KAAMA,EACNyS,OAAQyS,EACRhB,iBAAkBiB,EAClBhB,iBAAkBA,EAClBC,oBAAqBA,EACrBnB,OAAQA,YAOtB,ECjLA,IAAMvsD,GAAW,WAAH,OACZnZ,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,oDACRpnB,EAAAA,EAAAA,KAAA,YAAU+nB,OAAO,4BACb,EAGFkmC,GAAe,WAAH,OAChB94C,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,IAAItK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACnDtsB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC9B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAUF+mD,GAAe,WAAH,OAChBx5D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,cACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,eACJ,EAYFwnD,GAAU,WAAH,OACXz5D,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1BvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,quBACJ,EAGF81D,GAAgB,WAAH,OACjB/nE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,+CACRpnB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,IAAIC,GAAG,IAAIC,EAAE,OACxBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACRpnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,gCACJ,EAGF+1D,GAAY,WAAH,OACbhoE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAM+f,EAAE,IAAIC,EAAE,KAAKtK,MAAM,KAAKF,OAAO,KAAK6W,GAAG,IAAIC,GAAG,OACpDtsB,EAAAA,EAAAA,KAAA,UAAQqnB,GAAG,KAAKC,GAAG,IAAIC,EAAE,OACzBvnB,EAAAA,EAAAA,KAAA,QAAMonB,EAAE,aACRpnB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,QAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC7B,EAGFw1D,GAAY,WAAH,OACbjoE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAChC5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAC5B,EAGFy1D,GAAY,WAAH,OACbloE,EAAAA,EAAAA,MAAA,OAAKO,MAAM,KAAKF,OAAO,KAAKwR,QAAQ,YAAYC,KAAK,OAAOC,OAAO,eAAeC,YAAY,IAAG3pB,SAAA,EAC/FwC,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,QAC/B5nB,EAAAA,EAAAA,KAAA,QAAMynB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,SAC3B,EA4JR,SAzJuB,WACrB,IAAAnqB,GAAgDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxD6/E,EAAgB3/E,EAAA,GAAE4/E,EAAmB5/E,EAAA,GACtCQ,GAAWC,EAAAA,EAAAA,MACX4yB,GAAWC,EAAAA,EAAAA,MAEXusD,EAAkB,CACtB,CACE1mE,KAAM,UACN6jB,KAAM,kBACNkyB,KAAMv+B,GACNkiC,YAAa,0BAEf,CACE15C,KAAM,cACN6jB,KAAM,eACNkyB,KAAMoB,GACNuC,YAAa,4BAEf,CACE15C,KAAM,YACN6jB,KAAM,kBACNkyB,KAAM8hB,GACNne,YAAa,uBAEf,CACE15C,KAAM,OACN6jB,KAAM,aACNkyB,KAAMswB,GACN3sB,YAAa,wBAEf,CACE15C,KAAM,YACN6jB,KAAM,qBACNkyB,KAAMqwB,GACN1sB,YAAa,0BAEf,CACE15C,KAAM,YACN6jB,KAAM,iBACNkyB,KAAM+hB,GACNpe,YAAa,oBAIXn+B,EAAY,eAAA90B,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAozB,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEXyU,KAAsB,OAC5Byd,EAAS,eAAepyB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAExBM,QAAQG,MAAM,iBAAgByyB,GAAS,wBAAAlzB,EAAAW,OAAA,EAAAb,EAAA,iBAE1C,kBAPiB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KASZg+E,EAAW,SAAC9iD,GAChB,OAAOx8B,EAAS4B,WAAa46B,GAAQx8B,EAAS4B,SAASmzB,WAAWyH,EAAO,IAC3E,EAEA,OACExlB,EAAAA,EAAAA,MAAAmqB,EAAAA,SAAA,CAAA9hC,SAAA,EAEE2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,UACzBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,UACvBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWzC,SAAC,uBAIhCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,SACtBggF,EAAgBx/D,IAAI,SAAC83D,GACpB,IAAM4H,EAAO5H,EAAKjpB,KAClB,OACE13C,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAEHnvB,GAAI21E,EAAKn7C,KACT16B,UAAS,YAAA4E,OAAc44E,EAAS3H,EAAKn7C,MAAQ,SAAW,IACxDN,MAAOy7C,EAAKtlB,YAAYhzD,SAAA,EAExBwC,EAAAA,EAAAA,KAAC09E,EAAI,CAACz9E,UAAU,cAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAEs4E,EAAKh/D,SAN5Bg/D,EAAKh/D,KAShB,MAGF9W,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,UACzB2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,aAAaie,QAASmU,EAAa70B,SAAA,EACnDwC,EAAAA,EAAAA,KAAC4uE,GAAO,CAAC3uE,UAAU,cACnBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,mBAMjCwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,oBACVie,QAAS,WAAF,OAAQq/D,GAAqBD,EAAiB,EAAC9/E,SAErD8/E,GACCt9E,EAAAA,EAAAA,KAACq9E,GAAS,CAACp9E,UAAU,iBAErBD,EAAAA,EAAAA,KAACo9E,GAAS,CAACn9E,UAAU,kBAKxBq9E,IACCt9E,EAAAA,EAAAA,KAAA,OAAKC,UAAS,sBAAA4E,OAAwBy4E,EAAmB,SAAW,IAAMp/D,QAAS,WAAF,OAAQq/D,GAAoB,EAAM,EAAC//E,UAClH2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAoBie,QAAS,SAAChB,GAAC,OAAKA,EAAE4F,iBAAiB,EAACtlB,SAAA,EACrE2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUzC,UACvBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWzC,SAAC,qBAE9BwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,mBACVie,QAAS,WAAF,OAAQq/D,GAAoB,EAAM,EAAC//E,UAE1CwC,EAAAA,EAAAA,KAACq9E,GAAS,CAACp9E,UAAU,qBAIzBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBzC,SAC7BggF,EAAgBx/D,IAAI,SAAC83D,GACpB,IAAM4H,EAAO5H,EAAKjpB,KAClB,OACE13C,EAAAA,EAAAA,MAACma,EAAAA,GAAI,CAEHnvB,GAAI21E,EAAKn7C,KACT16B,UAAS,mBAAA4E,OAAqB44E,EAAS3H,EAAKn7C,MAAQ,SAAW,IAC/Dzc,QAAS,WAAF,OAAQq/D,GAAoB,EAAM,EAAC//E,SAAA,EAE1CwC,EAAAA,EAAAA,KAAC09E,EAAI,CAACz9E,UAAU,cAChBkV,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAEs4E,EAAKh/D,QACjC9W,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBzC,SAAEs4E,EAAKtlB,mBARrCslB,EAAKh/D,KAYhB,MAGF9W,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChC2X,EAAAA,EAAAA,MAAA,UAAQlV,UAAU,oBAAoBie,QAASmU,EAAa70B,SAAA,EAC1DwC,EAAAA,EAAAA,KAAC4uE,GAAO,CAAC3uE,UAAU,cACnBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUzC,SAAC,sBAQ3C,EC/NA,GAXmB,SAAHD,GAAqB,IAAfC,EAAQD,EAARC,SACpB,OACE2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAC29E,GAAc,KACf39E,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWzC,SACxBA,MAIT,E,mkBC2JA,SApKyB,SAAHD,GAAsC,IA0CjCo0D,EA1CC1/B,EAAK10B,EAAL00B,MAAO/W,EAAO3d,EAAP2d,QAASG,EAAS9d,EAAT8d,UAC1C5d,GAAgCC,EAAAA,EAAAA,UAAS,CACvCwH,QAAS,GACTktD,aAAc,GACdqY,qBAAsB,KACtB9sE,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAJK+N,EAAQ7N,EAAA,GAAEgtE,EAAWhtE,EAAA,GAK5BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtC6sE,EAAO5sE,EAAA,GAAE6sE,EAAU7sE,EAAA,GAC1B0d,GAA0Bhe,EAAAA,EAAAA,UAAS,MAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAAjCrc,EAAKsc,EAAA,GAAEqB,EAAQrB,EAAA,GAEhB0vD,EAAe,SAACnuD,GACpB,IAAAouD,EAAwBpuD,EAAEW,OAAlB/G,EAAIw0D,EAAJx0D,KAAM2G,EAAK6tD,EAAL7tD,MACdktD,EAAY,SAAA9rE,GAAI,OAAA8F,GAAAA,GAAA,GACX9F,GAAI,IAAAoM,EAAAA,EAAAA,GAAA,GACN6L,EAAO2G,GAAK,GAGXpe,GACF2d,EAAS,KAEb,EAEMC,EAAY,eAAA1e,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,EAAOwe,GAAC,IAAA4U,EAAA,OAAArzB,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,GAAnBoe,EAAEC,iBAEG3R,EAAStG,QAAQ2qC,OAAQ,CAAFjxC,EAAAE,KAAA,QACiB,OAA3Cke,EAAS,kCAAkCpe,EAAAI,OAAA,iBAI5B,OAAjB6rE,GAAW,GAAMjsE,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETyG,GAAQsE,aAAaooB,EAAM4G,GAAIrtB,GAAS,OAC9C6P,SAAAA,IACAH,IAAUtc,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEVM,QAAQG,MAAM,wBAAuByyB,GACrC9U,EAAS,+CAA+C,OAEtC,OAFsCpe,EAAAC,KAAA,EAExDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,qBAErB,gBAnBiB4G,GAAA,OAAA/G,EAAAiB,MAAA,KAAAC,UAAA,KAgClB,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BzC,UACxC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,oBAAmBzC,SAAA,EAChC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,8BACJwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,eACVie,QAAShD,EAAQ1d,SAClB,UAKH2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAKy0B,EAAMoI,SACXllB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAC,QAC9BwC,EAAAA,EAAAA,KAAA,QAAAxC,UA7Bam0D,EA6BU1/B,EAAMqT,KA5B1B,IAAIvO,KAAK46B,GACVna,mBAAmB,QAAS,CACtCoa,IAAK,UACLC,MAAO,OACPC,KAAM,UACN9E,KAAM,UACNC,OAAQ,kBAwBDh7B,EAAM9zB,WACLgX,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAC,QAC9BwC,EAAAA,EAAAA,KAAA,QAAAxC,SAAOy0B,EAAM9zB,cAGhB8zB,EAAMkgC,QACLh9C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAAC,QAC9B2X,EAAAA,EAAAA,MAAA,QAAA3X,SAAA,CAAOy0B,EAAMkgC,MAAM,kBAM3Bh9C,EAAAA,EAAAA,MAAA,QAAMoI,SAAUN,EAAchd,UAAU,mBAAkBzC,SAAA,CACvD6B,IACCW,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,SAC3B6B,KAIL8V,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,SAAOsmB,QAAQ,UAASj+B,SAAA,CAAC,4BAEvBwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,gEAE/BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,UACH/hB,KAAK,UACL2G,MAAOjS,EAAStG,QAChByR,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,qCACZme,UAAQ,QAIZxmB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,SAAOsmB,QAAQ,eAAcj+B,SAAA,CAAC,yBAE5BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,mDAE/BwC,EAAAA,EAAAA,KAAA,SACE0N,KAAK,OACLmrB,GAAG,eACH/hB,KAAK,eACL2G,MAAOjS,EAAS4mD,aAChBz7C,SAAU00D,EACV7tD,YAAY,yCAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzB2X,EAAAA,EAAAA,MAAA,SAAOsmB,QAAQ,uBAAsBj+B,SAAA,CAAC,qBAEpCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYzC,SAAC,oDAE/BwC,EAAAA,EAAAA,KAAA,YACE64B,GAAG,uBACH/hB,KAAK,uBACL2G,MAAOjS,EAASi/D,qBAChB9zD,SAAU00D,EACVvd,KAAK,IACLtwC,YAAY,sDAIhBrI,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLzN,UAAU,oBACVie,QAAShD,EACTrE,SAAU+zD,EAAQptE,SACnB,YAGDwC,EAAAA,EAAAA,KAAA,UACE0N,KAAK,SACLzN,UAAU,kBACV4W,SAAU+zD,EAAQptE,SAEjBotE,EAAU,cAAgB,4BAOzC,ECmJA,GAjTyB,WACvB,IAAQ/xC,GAAO+mB,EAAAA,EAAAA,KAAP/mB,GACRp7B,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/Bm6D,EAAIj6D,EAAA,GAAEoxE,EAAOpxE,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCiiE,EAAMhiE,EAAA,GAAE6zE,EAAS7zE,EAAA,GACxB0d,GAA8Bhe,EAAAA,EAAAA,WAAS,GAAKie,GAAA/d,EAAAA,EAAAA,GAAA8d,EAAA,GAArCkvD,EAAOjvD,EAAA,GAAEkvD,EAAUlvD,EAAA,GAC1BG,GAA0Bpe,EAAAA,EAAAA,UAAS,MAAKqe,GAAAne,EAAAA,EAAAA,GAAAke,EAAA,GAAjCzc,EAAK0c,EAAA,GAAEiB,EAAQjB,EAAA,GACtBG,GAAkCxe,EAAAA,EAAAA,UAAS,QAAOye,GAAAve,EAAAA,EAAAA,GAAAse,EAAA,GAA3C8jC,EAAS7jC,EAAA,GAAE8jC,EAAY9jC,EAAA,GAC9BG,GAAsD5e,EAAAA,EAAAA,WAAS,GAAM6e,GAAA3e,EAAAA,EAAAA,GAAA0e,EAAA,GAA9DshE,EAAmBrhE,EAAA,GAAEshE,EAAsBthE,EAAA,GAClDG,GAA0Chf,EAAAA,EAAAA,UAAS,MAAKif,GAAA/e,EAAAA,EAAAA,GAAA8e,EAAA,GAAjDkiD,EAAajiD,EAAA,GAAEkiD,EAAgBliD,EAAA,IAEtCte,EAAAA,EAAAA,WAAU,WACJw6B,GACFgkD,GAEJ,EAAG,CAAChkD,IAEJ,IAAMgkD,EAAY,eAAAt/E,GAAAiB,EAAAA,EAAAA,GAAAC,IAAAA,KAAG,SAAAC,IAAA,IAAAo/E,EAAAC,EAAAjsD,EAAAnzB,EAAA,OAAAF,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKjB,OALiBF,EAAAC,KAAA,EAEjBgsE,GAAW,GACX7tD,EAAS,MAETpe,EAAAE,KAAA,EAC2BkpE,EAAAA,IAAIlI,MAAMke,QAAQnlD,GAAG,OAGhD,OAHMilD,EAAYl/E,EAAAmG,KAClBgqE,EAAQ+O,EAAalmB,MAAQkmB,GAE7Bl/E,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE+ByG,GAAQ4B,UAAU,CAAEkL,QAASwmB,EAAIhB,MAAO,KAAK,OAApEkmD,EAAcn/E,EAAAmG,KACpB8sE,EAAUkM,EAAe/d,QAAU,IAAIphE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAizB,EAAAlzB,EAAA,SAEvCM,QAAQC,KAAK,gCAA+B2yB,GAC5C+/C,EAAU,IAAI,OAAAjzE,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAF,EAAAC,EAAA,SAGhBM,QAAQG,MAAM,yBAAwBV,GACtCqe,EAAS,gDAAgD,OAEvC,OAFuCpe,EAAAC,KAAA,EAEzDgsE,GAAW,GAAOjsE,EAAAU,OAAA,2BAAAV,EAAAW,OAAA,EAAAb,EAAA,2BAErB,kBAvBiB,OAAAnB,EAAAiC,MAAA,KAAAC,UAAA,KAyBZw+E,EAAmB,SAACvwE,GAOxB,MANc,CACZ,UAAa,cACb,WAAc,WACd,YAAe,cACf,MAAS,UAEEA,IAAS,MACxB,EAwCA,OAAIk9D,GAEAz1D,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,6BAA4BzC,SAAA,EACzCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACfD,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,sCAKL6B,IAAUu4D,GAEVziD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,2BAA0BzC,SAAA,EACvCwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,qBACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAI6B,GAAS,oBACbW,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CAACnvB,GAAG,SAASF,UAAU,kBAAiBzC,SAAC,kCAQlD2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EAEjC2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC/BwC,EAAAA,EAAAA,KAACsvB,EAAAA,GAAI,CAACnvB,GAAG,SAASF,UAAU,YAAWzC,SAAC,wBAK1C2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBzC,UAC/BwC,EAAAA,EAAAA,KAAA,OACEsiB,IAAKs1C,EAAKnhC,OAAS,YAAH5xB,OAAe+yD,EAAKnhC,QAAW,wBAC/C/P,IAAKkxC,EAAK9gD,KACV6Z,QAAS,SAACzT,GACRA,EAAEW,OAAOyE,IAAM,uBACjB,OAIJnN,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,iBAAgBzC,SAAA,EAC7B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBzC,SAlFpB,SAACkQ,GACvB,OAAQA,GACN,IAAK,YACH,MAAO,KACT,IAAK,aACH,MAAO,MACT,IAAK,cACH,MAAO,KACT,QACE,MAAO,MAEb,CAuE8CwwE,CAAgBtmB,EAAKlqD,SACvD1N,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kBAAiBzC,SAAEygF,EAAiBrmB,EAAKlqD,YAG3D1N,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iBAAgBzC,SAAEo6D,EAAK9gD,QAErC3B,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,qBAAoBzC,SAAA,EACjCwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAezC,SAAC,QAChC2X,EAAAA,EAAAA,MAAA,QAAMlV,UAAU,gBAAezC,SAAA,CAC5Bo6D,EAAK54B,KAAK,KAAG44B,EAAKh6B,cAItBg6B,EAAKuJ,UACJnhE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBzC,UAChC2X,EAAAA,EAAAA,MAAA,KACEwlB,KAAMi9B,EAAKuJ,QACXtjD,OAAO,SACPujD,IAAI,sBACJnhE,UAAU,eAAczC,SAAA,CACzB,MACKo6D,EAAKuJ,uBASrBhsD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,UACEC,UAAS,cAAA4E,OAA8B,SAAdm7C,EAAuB,SAAW,IAC3D9hC,QAAS,WAAF,OAAQ+hC,EAAa,OAAO,EAACziD,SACrC,gBAGD2X,EAAAA,EAAAA,MAAA,UACElV,UAAS,cAAA4E,OAA8B,WAAdm7C,EAAyB,SAAW,IAC7D9hC,QAAS,WAAF,OAAQ+hC,EAAa,SAAS,EAACziD,SAAA,CACvC,YACWwiE,EAAOz7D,OAAO,WAK5B4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,sBAAqBzC,SAAA,CACnB,SAAdwiD,IACC7qC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,mBAAkBzC,SAAA,EAC/BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,aACJwC,EAAAA,EAAAA,KAAA,KAAAxC,SACGo6D,EAAKpH,aAAe,mCAIzBr7C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,0BACHo6D,EAAK5zB,QACJ7uB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,WAAe,IAAEo6D,EAAK5zB,SAGjC4zB,EAAKxF,eACJj9C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,6BAAiC,IAAEo6D,EAAKxF,gBAGnDwF,EAAKuJ,UACJhsD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,UAAAxC,SAAQ,eACRwC,EAAAA,EAAAA,KAAA,KAAG26B,KAAMi9B,EAAKuJ,QAAQjuC,WAAW,QAAU0kC,EAAKuJ,QAAU,WAAHt8D,OAAc+yD,EAAKuJ,SACvEtjD,OAAO,SACPujD,IAAI,sBACJnhE,UAAU,eAAczC,SACxBo6D,EAAKuJ,iBAMdhsD,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,YACJ2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,eAAczC,SAAA,EAC3B2X,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,UAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAEygF,EAAiBrmB,EAAKlqD,YAExDyH,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,YAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAEo6D,EAAK54B,WAEvC7pB,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,aAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAEo6D,EAAKh6B,aAEtCg6B,EAAKqjB,UACJ9lE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,YAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAEo6D,EAAKqjB,cAGzC9lE,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,cAAazC,SAAA,EAC1BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAAC,oBAC/BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAczC,SAC3Bo6D,EAAKumB,aAAe,IAAIpnD,KAAK6gC,EAAKumB,cAAc3mC,mBAAmB,SAAW,2BAQ5E,WAAdwI,IACC7qC,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,kBAAiBzC,SAAA,EAC9BwC,EAAAA,EAAAA,KAAA,MAAAxC,SAAI,wBAEe,IAAlBwiE,EAAOz7D,QACN4Q,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,YAAWzC,SAAA,EACxBwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBzC,SAAC,QAChCwC,EAAAA,EAAAA,KAAA,KAAAxC,SAAG,uDAGLwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAazC,SACzBwiE,EAAOhiD,IAAI,SAAAiU,GAAK,OACf9c,EAAAA,EAAAA,MAAA,OAAoBlV,UAAU,aAAYzC,SAAA,EACxCwC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYzC,UAnMpBm0D,EAoMY1/B,EAAMqT,KAnM5B,IAAIvO,KAAK46B,GACVna,mBAAmB,QAAS,CACtCoa,IAAK,UACLC,MAAO,OACPC,KAAM,UACN9E,KAAM,UACNC,OAAQ,gBA+LM93C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,aAAYzC,SAAA,EACzBwC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAazC,SAAEy0B,EAAMoI,QAClCpI,EAAMu+B,cACLxwD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAmBzC,SAAEy0B,EAAMu+B,eAE1Cr7C,EAAAA,EAAAA,MAAA,OAAKlV,UAAU,gBAAezC,SAAA,EAC5BwC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAazC,SAC1By0B,EAAMkgC,MAAQ,GAAHttD,OAAMotB,EAAMkgC,MAAK,MAAO,eAEtCnyD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,qBAAoBzC,SACjCy0B,EAAM6uC,iBAAmB,MAAHj8D,OAASotB,EAAM6uC,iBAAgB,eAAgB,wBAI1E9gE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAezC,UAC5BwC,EAAAA,EAAAA,KAAA,UACEC,UAAU,yBACVie,QAAS,WAAF,OA5MJ,SAAC+T,GAC1B4sC,EAAiB5sC,GACjB4rD,GAAuB,EACzB,CAyMuCO,CAAmBnsD,EAAM,EAACz0B,SAC1C,yBAtBGy0B,EAAM4G,IAlMR,IAAC84B,CA6NH,WASjBisB,GAAuBhf,IACtB5+D,EAAAA,EAAAA,KAACq+E,GAAgB,CACfpsD,MAAO2sC,EACP1jD,QAzN2B,WACjC2iE,GAAuB,GACvBhf,EAAiB,KACnB,EAuNQxjD,UArNyB,WAC/BmX,EAAAA,GAAMC,QAAQ,sEAChB,MAwNF,E,UC7QM1J,GAAQ,CACZC,OAAQ,CACNupC,QAAS,UACT+rB,UAAW,UACX7oE,WAAY,UACZ8oE,QAAS,UACT7mC,KAAM,UACN2b,UAAW,OACX19C,OAAQ,UACR8c,QAAS,UACTpzB,MAAO,UACPgtD,QAAS,WAEXqG,MAAO,CACLH,QAAS,oBACTI,MAAO,CACLW,MAAO,OACPM,OAAQ,OACRV,MAAO,OACPN,OAAQ,OACR4rB,QAAS,SAGbhsB,QAAS,CACPK,GAAI,MACJY,GAAI,MACJT,GAAI,OACJP,GAAI,OACJgsB,GAAI,QAEN5oE,aAAc,MACdk9C,OAAQ,6BAGJ2rB,IAAcC,EAAAA,EAAAA,IAAiBzoE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,gpFAQlB,SAAAY,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMH,OAAO,EAC7B,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOvT,UAAU,EACjD,SAAAsB,GAAK,OAAIA,EAAMgS,MAAMC,OAAO0uB,IAAI,EAC5B,SAAA3gC,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMO,KAAK,EAK1C,SAAAn8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAuB/B,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EAOjC,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EAAI,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EAC5D,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EAQ5B,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAW9C,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOs1D,SAAS,EAC1B,SAAAvnE,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EAGhC,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EAOzC,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EAI7B,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQK,EAAE,EAEvC,SAAA97C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOs1D,SAAS,EAKnC,SAAAvnE,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,EACtB,SAAA18C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EACrC,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EAKhC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAK1C,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMC,OAAOqqC,SAAS,EAYjC,SAAAt8C,GAAK,OAAIA,EAAMgS,MAAMlT,YAAY,EACpC,SAAAkB,GAAK,OAAIA,EAAMgS,MAAMgqC,MAAM,EAC9B,SAAAh8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EACzB,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQQ,EAAE,EAQvC,SAAAj8C,GAAK,OAAIA,EAAMgS,MAAMC,OAAO3pB,KAAK,EAC7B,SAAA0X,GAAK,OAAIA,EAAMgS,MAAM2pC,MAAMC,MAAMW,KAAK,EAOxC,SAAAv8C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQisB,EAAE,EAMpB,SAAA1nE,GAAK,OAAIA,EAAMgS,MAAMC,OAAOrT,MAAM,EAC9B,SAAAoB,GAAK,OAAIA,EAAMgS,MAAMC,OAAOupC,OAAO,EAa9C,SAAAx7C,GAAK,OAAIA,EAAMgS,MAAMypC,QAAQiB,EAAE,GAK5CmrB,GAAe5oE,EAAAA,GAAOmB,IAAGb,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,6EAOzB+a,GAAc,IAAI2tD,EAAAA,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPtuD,MAAO,EACP45B,sBAAsB,EACtBC,UAAW,IACXsQ,UAAW,QA4MjB,SAvMA,WACE,OACE56D,EAAAA,EAAAA,KAACg/E,EAAAA,oBAAmB,CAACC,OAAQ/tD,GAAY1zB,UACvC2X,EAAAA,EAAAA,MAAC+pE,EAAAA,GAAa,CAACn2D,MAAOA,GAAMvrB,SAAA,EAC1BwC,EAAAA,EAAAA,KAAC0+E,GAAW,KACZ1+E,EAAAA,EAAAA,KAAC4+E,GAAY,CAAAphF,UACXwC,EAAAA,EAAAA,KAACm/E,EAAAA,GAAM,CACLC,OAAQ,CACNC,oBAAoB,EACpBC,sBAAsB,GACtB9hF,UAEFwC,EAAAA,EAAAA,KAAC42B,GAAoB,CAAAp5B,UACnB2X,EAAAA,EAAAA,MAACoqE,EAAAA,GAAM,CAAA/hF,SAAA,EAEPwC,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,SAAS8sD,SAASz/E,EAAAA,EAAAA,KAAC0/E,GAAK,OACpC1/E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,YAAY8sD,SAASz/E,EAAAA,EAAAA,KAAC2/E,GAAQ,OAG1C3/E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,SAAS8sD,SACnBtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC6/E,GAAK,UAGV7/E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,aAAa8sD,SAASz/E,EAAAA,EAAAA,KAAC8/E,GAAgB,OACnD9/E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,oBAAoB8sD,SAASz/E,EAAAA,EAAAA,KAAC8/E,GAAgB,OAG1D9/E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,cAAc8sD,SAASz/E,EAAAA,EAAAA,KAAC+/E,GAAS,OAC7C//E,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,iBAAiB8sD,SAASz/E,EAAAA,EAAAA,KAACggF,GAAY,OAGnDhgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,kBAAkB8sD,SAC5Bz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACmgF,GAAa,WAKpBngF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,eAAe8sD,SACzBz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACogF,GAAU,WAKjBpgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,kBAAkB8sD,SAC5Bz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACqgF,GAAa,WAOpBrgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,aAAa8sD,SACvBz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACsgF,GAAQ,WAKftgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,qBAAqB8sD,SAC/Bz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACugF,GAAgB,WAKvBvgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,iBAAiB8sD,SAC3Bz/E,EAAAA,EAAAA,KAACigF,GAAa,CAAAziF,UACZwC,EAAAA,EAAAA,KAACkgF,GAAU,CAAA1iF,UACTwC,EAAAA,EAAAA,KAACwgF,GAAY,WAMnBxgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,IAAI8sD,SACdtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAACygF,GAAI,UAITzgF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,WAAW8sD,SACrBtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC0gF,GAAO,UAIZ1gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,WAAW8sD,SACrBtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC2gF,GAAO,UAIZ3gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,kBAAkB8sD,SAC5BtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC2gF,GAAO,UAIZ3gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,mBAAmB8sD,SAC7BtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC4gF,GAAI,UAIT5gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,iBAAiB8sD,SAC3BtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC6gF,GAAa,UAOlB7gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,iBAAiB8sD,SAC3BtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC8gF,GAAa,UAIlB9gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,WAAW8sD,SACrBtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAAC+gF,GAAO,UAIZ/gF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,OAAO8sD,SACjBtqE,EAAAA,EAAAA,MAACyqE,EAAS,CAAApiF,SAAA,EACRwC,EAAAA,EAAAA,KAACioE,GAAU,KACXjoE,EAAAA,EAAAA,KAACghF,GAAG,UAIRhhF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,WAAW8sD,SACrBz/E,EAAAA,EAAAA,KAAC4/E,EAAS,CAAApiF,UACRwC,EAAAA,EAAAA,KAACihF,GAAK,SAIVjhF,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,iBAAiB8sD,SAC3Bz/E,EAAAA,EAAAA,KAAC4/E,EAAS,CAAApiF,UACRwC,EAAAA,EAAAA,KAACkoE,GAAY,SAKjBloE,EAAAA,EAAAA,KAACw/E,EAAAA,GAAK,CAAC7sD,KAAK,IAAI8sD,SAASz/E,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAG,IAAIC,SAAO,gBAOvDJ,EAAAA,EAAAA,KAACkhF,EAAAA,GAAO,CACNl8D,SAAS,YACTm8D,aAAc,CACZ5qD,SAAU,IACVnhB,MAAO,CACLK,WAAYsT,GAAMC,OAAOu1D,QACzBziD,MAAO/S,GAAMC,OAAO0uB,KACpB/hC,OAAQ,aAAF9Q,OAAekkB,GAAMC,OAAOrT,QAClCE,aAAckT,GAAMlT,cAEtB4c,QAAS,CACP2uD,UAAW,CACT7uB,QAASxpC,GAAMC,OAAOyJ,QACtB6rD,UAAW,UAGfj/E,MAAO,CACL+hF,UAAW,CACT7uB,QAASxpC,GAAMC,OAAO3pB,MACtBi/E,UAAW,iBAQ3B,EC3bA,IAAM+C,GAAYr9D,SAASm3D,eAAe,SAC7BmG,EAAAA,EAAAA,GAAWD,IAEnBE,OAAOnmD,EAAAA,cAAoBomD,I,w9BCHhC,IAAMC,EAAYC,EAAAA,EAAMC,OAAO,CAC7BC,QAASC,CAAAA,iBAAAA,OAAAA,gBAAAA,OAAAA,4BAAAA,IAAAA,KAAAA,WAAAA,mBAAAA,iCAAAA,SAAAA,GAAAA,gBAAAA,OAAAA,sBAAAA,qDAAAA,SAAAA,QAAAA,4BAAAA,IAAAA,iBAAAA,UAAAA,YAAAA,yFAAAA,kBAAAA,gBAAAA,qBAAAA,IAAAA,gBAAAA,uVAAAA,MAAAA,IAAAA,mBAAAA,GAAAA,KAAAA,iBAAAA,0BAAAA,IAAAA,OAAAA,0BAAAA,OAAAA,2BAAAA,eAAAA,iBAAAA,gBAAAA,SAAAA,oBAAAA,OAAAA,qBAAAA,QAAAA,iBAAAA,8CAAAA,QAAAA,qFAAAA,aAAAA,oEAAAA,oBAAAA,IAAAA,cAAAA,wCAAAA,MAAAA,8BAAAA,wBAAAA,8FAAAA,WAAAA,OAAAA,gBAAAA,WAAAA,wBAAAA,mDAAAA,sBAAAA,wBAAAA,wBAAAA,iCAAAA,yBAAAA,+BAAAA,gBAAAA,GAAAA,iBAAAA,OAAAA,eAAAA,OAAAA,UAAAA,YAAAA,MAAAA,IAAAA,iCAAAA,IAAAA,4BAAAA,8BAAAA,gBAAAA,YAAAA,mBAAAA,QAAAA,oBAAAA,sCAAAA,QAAAA,WAAAA,2BAAAA,IAAAA,4BAAAA,IAAAA,eAAAA,UAAAA,IAAAA,8BAAAA,gBAAAA,UAAAA,EAAAA,eAAAA,kBAAAA,aAAAA,kBAAAA,OAAAA,sBAAAA,uHAAAA,aAAAA,iBAAAA,eAAAA,IAAAA,KAAAA,iBAAAA,iBAAAA,sBAAAA,cAAAA,gFAAAA,wBAAAA,IAAAA,oBAAAA,6CAAAA,KAAAA,sWAAAA,gBAAAA,gEAAAA,cAAAA,mCAAAA,SAAAA,2DAAAA,KAAAA,gBAAAA,iBAAAA,kBAAAA,gBAAAA,iBAAAA,gBAAAA,UAAAA,iBAAAA,2CAAAA,kBAAAA,QAAAA,YAAAA,MAAAA,QAAAA,KAAAA,aAAAA,gCAAAA,aAAAA,IAAAA,KAAAA,cAAAA,uBAAAA,MAAAA,oBAAAA,MAAAA,iBAAAA,IAAAA,WAAAA,8BAAAA,oBAAAA,MAAAA,gBAAAA,mCAAAA,UAAAA,+3DAAAA,aAAAA,SAAAA,sBAAAA,4CAAAA,qBAAAA,4BAAAA,cAAAA,+BAAAA,qBAAAA,wDAAAA,6BAAAA,MAAAA,MAAAA,eAAAA,oBAAAA,QAAAA,oBAAAA,QAAAA,iBAAAA,IAAAA,oBAAAA,IAAAA,gBAAAA,UAAAA,eAAAA,uCAAAA,SAAAA,IAAAA,gBAAAA,UAAAA,8BAAAA,GAAAA,wBAAAA,aAAAA,uBAAAA,8BAAAA,IAAAA,iCAAAA,gBAAAA,OAAAA,4BAAAA,iBAAAA,aAAAA,uCAAAA,cAAAA,qHAAAA,gBAAAA,8CAAAA,QAAAA,iBAAAA,yBAAAA,aAAAA,YAAAA,aAAAA,gBAAAA,OAAAA,eAAAA,upBAAAA,sBAAAA,+BAAAA,aAAAA,OAAAA,SAAAA,iCAAAA,OAAAA,MAAYC,mBAAqB,OAC1CC,QAAS,IACTn9E,QAAS,CACP,eAAgB,sBAQdo9E,EAAY,iBACZC,EAAiB,sBAGjBC,EAAW,WAAH,OAASz9E,aAAaC,QAAQs9E,EAAU,EAGhDG,EAAW,SAACj+E,GACZA,EACFO,aAAa6B,QAAQ07E,EAAW99E,IAEhCO,aAAaiC,WAAWs7E,GAExBI,IAEJ,EAGMC,EAAe,WACnB,IACE,IAAMC,EAAS79E,aAAaC,QAAQu9E,GACpC,OAAOK,EAASv8E,KAAKmnC,MAAMo1C,GAAU,IACvC,CAAE,MAAOjjF,GAEP,OADAH,QAAQC,KAAK,qCAAsCE,GAC5C,IACT,CACF,EAEMkjF,EAAe,SAAC7sD,GACpB,IACEjxB,aAAa6B,QAAQ27E,EAAgBl8E,KAAKC,UAASrB,EAAAA,EAAC,CAAC,EAChD+wB,GAAQ,IACX8sD,SAAUzrD,KAAKC,SAEnB,CAAE,MAAO33B,GACPH,QAAQC,KAAK,uCAAwCE,EACvD,CACF,EAEM+iF,EAAiB,WACrB39E,aAAaiC,WAAWu7E,EAC1B,EAUIQ,GAAgB,EAGpBhB,EAAUiB,aAAaC,QAAQC,IAC7B,SAACz+E,GACC,IAAMD,EAAQg+E,IAId,OAHIh+E,IACFC,EAAOS,QAAQi+E,cAAgB,UAAHh+E,OAAaX,IAEpCC,CACT,EACA,SAAC9E,GAAK,OAAKwwE,QAAQva,OAAOj2D,EAAM,GAIlCoiF,EAAUiB,aAAat+E,SAASw+E,IAC9B,SAACx+E,GAAQ,OAAKA,CAAQ,EACtB,SAAC/E,GAAU,IAAAuxB,EAAAoH,EAgBT,OAf+B,OAAb,QAAdpH,EAAAvxB,EAAM+E,gBAAQ,IAAAwsB,OAAA,EAAdA,EAAgBzrB,SAAmBs9E,GAYd,QAAdzqD,EAAA34B,EAAM+E,gBAAQ,IAAA4zB,OAAA,EAAdA,EAAgB7yB,SAAU,KACnCqtB,EAAAA,GAAMnzB,MAAM,sCAXZojF,GAAgB,EAChBN,EAAS,MAGTviF,OAAOkjF,cAAc,IAAIC,YAAY,gBAGrC1lE,WAAW,WACTolE,GAAgB,CAClB,EAAG,MAIE5S,QAAQva,OAAOj2D,EACxB,GAIK,IA8Ee2jF,EA3Cdr/E,EALOs/E,EALLC,EAZAr/E,EAZHD,EAiVQu/E,EARAC,EANAC,EAPLC,EATAC,EANYC,EAPAC,EAhBAC,EAZFC,EANAC,EAPAC,EAfAC,EATFC,EANHC,EAPJC,EATGC,EALKC,EALNC,EA9BCC,EAfA9jF,EAfCkD,EAlBHC,EA+QQ4gF,EANLC,EARJC,EARFC,EARHC,EAVYC,GALLC,GA0EDC,GAhBCC,GAsESC,GALNC,GANIC,GALJC,GARLC,GALIC,GAPFC,GALAC,GALKC,GA6INC,GALCC,GALHrjF,GAjCAC,GAjCAC,GALAojF,GANFljF,GAuIMN,GARHyjF,GALIC,GANFC,GALDC,GALAC,GANFC,GALIC,GAgGEC,GALMC,GALGC,GALLC,GALLC,GALHC,GAVDC,GAbOC,GA6DFC,GALHC,GAoECC,GAxBIC,GALJC,GAVEC,GAXNC,GALIC,GAqKF/lF,GALDC,GAXAqC,GAjBS0jF,GARDC,GALEC,GALLC,GALJC,GALDC,GALDC,GALEC,GALAC,GALHC,GALGC,GAZFC,GA6JEC,GAXAC,GALCC,GALCC,GALNC,GAVIC,GALDC,GALAC,GALDC,GAiHEC,GAXIC,GAVMC,GATHC,GATNC,GALCC,GALJC,GALKC,GA4FGC,GAZAC,GALFC,GARHC,GALOC,GAmEPC,GAPQC,GAPPC,GAfAC,GAiJDC,GA3FOC,GAxjCPnuD,GAAU,CACrBp1B,OAAKtC,GAAApF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAC,EAAO0H,GAAW,IAAAhC,EAAA,OAAA3F,IAAAA,KAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACA2iF,EAAUiI,KAAK,cAAetjF,GAAY,OAOhE,OAPKhC,EAAQxF,EAAAmG,MACD8rB,KAAK3sB,QAChBi+E,EAAS/9E,EAASysB,KAAK3sB,OAEnBE,EAASysB,KAAKe,MAChB2wD,EAAan+E,EAASysB,KAAKe,OAE9BhzB,EAAAI,OAAA,SACMoF,EAASysB,MAAI,wBAAAjyB,EAAAW,OAAA,EAAAb,EAAA,IACrB,SAVI4G,GAAA,OAAA1B,EAAApE,MAAA,KAAAC,UAAA,GAYLgG,UAAQ5B,GAAArF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiH,EAAOgwB,GAAQ,IAAAtxB,EAAA,OAAA3F,IAAAA,KAAA,SAAAmH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,cAAA8G,EAAA9G,KAAA,EACA2iF,EAAUiI,KAAK,iBAAkBh0D,GAAS,OAOhE,OAPKtxB,EAAQwB,EAAAb,MACD8rB,KAAK3sB,QAChBi+E,EAAS/9E,EAASysB,KAAK3sB,OAEnBE,EAASysB,KAAKe,MAChB2wD,EAAan+E,EAASysB,KAAKe,OAE9BhsB,EAAA5G,OAAA,SACMoF,EAASysB,MAAI,wBAAAjrB,EAAArG,OAAA,EAAAmG,EAAA,IACrB,SAVOO,GAAA,OAAApC,EAAArE,MAAA,KAAAC,UAAA,GAYRmlC,UAAQs+C,GAAA1kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0H,EAAO69B,GAAK,IAAA5/B,EAAA,OAAA3F,IAAAA,KAAA,SAAA4H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAAAuH,EAAAvH,KAAA,EACG2iF,EAAUiI,KAAK,kBAAmB,CAAE1lD,MAAAA,IAAQ,OAArD,OAAR5/B,EAAQiC,EAAAtB,KAAAsB,EAAArH,OAAA,SACPoF,EAASysB,MAAI,wBAAAxqB,EAAA9G,OAAA,EAAA4G,EAAA,IACrB,SAHOI,GAAA,OAAA28E,EAAA1jF,MAAA,KAAAC,UAAA,GAKRkqF,eAAa1G,GAAAzkF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+H,EAAOqqB,GAAI,IAAAzsB,EAAA,OAAA3F,IAAAA,KAAA,SAAAgI,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAA2H,EAAA3H,KAAA,EACD2iF,EAAUiI,KAAK,uBAAwB74D,GAAK,OAArD,OAARzsB,EAAQqC,EAAA1B,KAAA0B,EAAAzH,OAAA,SACPoF,EAASysB,MAAI,wBAAApqB,EAAAlH,OAAA,EAAAiH,EAAA,IACrB,SAHYU,GAAA,OAAA+7E,EAAAzjF,MAAA,KAAAC,UAAA,GAKbL,QAAMuE,GAAAnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAmI,IAAA,OAAAnI,IAAAA,KAAA,SAAAoI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,cAAA+H,EAAAhI,KAAA,EAAAgI,EAAA/H,KAAA,EAEE2iF,EAAUiI,KAAK,gBAAe,OAErB,OAFqB7iF,EAAAhI,KAAA,EAEpCsjF,EAAS,MAAMt7E,EAAAvH,OAAA,2BAAAuH,EAAAtH,OAAA,EAAAqH,EAAA,oBAElB,WANK,OAAAjD,EAAAnE,MAAA,KAAAC,UAAA,GAQNsyB,eAAgB,WACd,IAzFkB63D,EAyFZ1lF,EAAQg+E,IACd,IAAKh+E,EAAO,OAAO,KAEnB,IAEE,IAAMw2D,EAAU30D,KAAKmnC,MAAMytB,KAAKz2D,EAAMyrC,MAAM,KAAK,KAC3Ck6C,EAAW,CACf1+E,OAAQuvD,EAAQvvD,OAChBjF,MAAOw0D,EAAQx0D,MACfutB,QAASinC,EAAQjnC,SAIbq2D,EAAazH,IACnB,OAAIyH,IAvGYF,EAuGeE,IAtGfF,EAAWpH,UAEvBzrD,KAAKC,MAAQ4yD,EAAWpH,SADT,KAqG2BsH,EAAW5jF,QAAU2jF,EAAS3jF,MAC1EvB,EAAAA,EAAA,GACKklF,GAAQ,IACX73D,IAAK83D,EAAW93D,IAChBgS,MAAO8lD,EAAW9lD,MAClB7+B,OAAQ2kF,EAAW3kF,OACnB65B,KAAM8qD,EAAW9qD,KACjBpB,QAASksD,EAAWlsD,QACpBzK,SAAU22D,EAAW32D,WAAY,IAK9B02D,CACT,CAAE,MAAAE,GACA,OAAO,IACT,CACF,EAGAC,sBAAoBhH,GAAAxkF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsI,IAAA,IAAA8iF,EAAAzlF,EAAAsxB,EAAA5D,EAAA,OAAArzB,IAAAA,KAAA,SAAAwI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAnI,MAAA,OACqB,IAAnC+qF,EAAWvuD,GAAQvJ,mBACP83D,EAAS3jF,MAAK,CAAAe,EAAAnI,KAAA,eAAAmI,EAAAjI,OAAA,SAAS,MAAI,cAAAiI,EAAApI,KAAA,EAAAoI,EAAAnI,KAAA,EAGpB2iF,EAAU1hC,IAAI,kBAADl7C,OAAmBglF,EAAS3jF,QAAQ,OAcrE,OAdG9B,EAAQ6C,EAAAlC,KACR2wB,EAAWtxB,EAASysB,KAG1B0xD,EAAa,CACX1pD,GAAInD,EAASmD,GACb3yB,MAAOwvB,EAASxvB,MAChB8rB,IAAK0D,EAAS1D,IACdgS,MAAO6lD,EAAS7lD,MAChB7+B,OAAQuwB,EAASvwB,OACjB65B,KAAMtJ,EAASsJ,KACfpB,QAASlI,EAASkI,QAClB8N,QAAShW,EAASgW,QAClBvY,SAAU02D,EAAS12D,WAClBlsB,EAAAjI,OAAA,SAEIs8B,GAAQvJ,kBAAgB,OAEyC,OAFzC9qB,EAAApI,KAAA,EAAAizB,EAAA7qB,EAAA,SAE/B/H,QAAQC,KAAK,mDAAkD2yB,GAAS7qB,EAAAjI,OAAA,SACjE6qF,GAAQ,wBAAA5iF,EAAA1H,OAAA,EAAAwH,EAAA,iBAElB,WA1BmB,OAAAi8E,EAAAxjF,MAAA,KAAAC,UAAA,GA6BpBwqF,gBAAiB,SAACC,GAChB,IAAM14D,EAAc6wD,IAChB7wD,GACF+wD,EAAY59E,EAAAA,EAAC,CAAC,EACT6sB,GACA04D,GAGT,GAIW50C,GAAW,CACtB3uC,YAAUjD,GAAAlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2I,EAAOlB,GAAK,IAAA9B,EAAAotB,EAAA,OAAA/yB,IAAAA,KAAA,SAAA8I,GAAA,cAAAA,EAAA1I,KAAA0I,EAAAzI,MAAA,cAAAyI,EAAAzI,KAAA,EACC2iF,EAAU1hC,IAAI,aAADl7C,OAAcqB,IAAQ,OAYzD,OAZK9B,EAAQmD,EAAAxC,MAGRysB,EAAc8J,GAAQvJ,mBACTP,EAAYtrB,QAAUA,GACvCo1B,GAAQ2uD,gBAAgB,CACtBj4D,IAAK5tB,EAASysB,KAAK0a,QAAQvZ,IAC3B7sB,OAAQf,EAASysB,KAAK0a,QAAQpmC,OAC9B65B,KAAM56B,EAASysB,KAAK0a,QAAQvM,KAC5BpB,QAASx5B,EAASysB,KAAK0a,QAAQ3N,QAC/B8N,QAAStnC,EAASysB,KAAK0a,QAAQG,UAElCnkC,EAAAvI,OAAA,SAEMoF,EAASysB,KAAK0a,SAAO,wBAAAhkC,EAAAhI,OAAA,EAAA6H,EAAA,IAC7B,SAhBSU,GAAA,OAAApE,EAAAlE,MAAA,KAAAC,UAAA,GAkBVqH,eAAarD,GAAAjF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkJ,EAAOX,GAAW,IAAA5C,EAAA,OAAA3F,IAAAA,KAAA,SAAAoJ,GAAA,cAAAA,EAAAhJ,KAAAgJ,EAAA/I,MAAA,cAAA+I,EAAA/I,KAAA,EACR2iF,EAAU0I,IAAI,iBAAkBnjF,GAAY,OASlE,OATK5C,EAAQyD,EAAA9C,MAGD8rB,KAAK4B,SAAWruB,EAASysB,KAAKe,MACzC0J,GAAQ2uD,gBAAgB,CACtB9kF,OAAQf,EAASysB,KAAKe,KAAKzsB,OAC3B65B,KAAM56B,EAASysB,KAAKe,KAAKoN,KACzBpB,QAASx5B,EAASysB,KAAKe,KAAKgM,UAE/B/1B,EAAA7I,OAAA,SAEMoF,EAASysB,MAAI,wBAAAhpB,EAAAtI,OAAA,EAAAoI,EAAA,IACrB,SAbYQ,GAAA,OAAA1E,EAAAjE,MAAA,KAAAC,UAAA,GAebojD,cAAYtiD,GAAA/B,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuJ,EAAOwD,GAAQ,IAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAAyJ,GAAA,cAAAA,EAAArJ,KAAAqJ,EAAApJ,MAAA,cAAAoJ,EAAApJ,KAAA,EACJ2iF,EAAUiI,KAAK,uBAAwBl+E,EAAU,CACtE5G,QAAS,CAAE,eAAgB,yBAC3B,OAOD,OATKR,EAAQ8D,EAAAnD,MAKD8rB,KAAK4B,SAAWruB,EAASysB,KAAK5kB,UACzCqvB,GAAQ2uD,gBAAgB,CACtBj4D,IAAK5tB,EAASysB,KAAK5kB,WAEtB/D,EAAAlJ,OAAA,SAEMoF,EAASysB,MAAI,wBAAA3oB,EAAA3I,OAAA,EAAAyI,EAAA,IACrB,SAbWO,GAAA,OAAAhI,EAAAf,MAAA,KAAAC,UAAA,GAeZsjD,cAAYshC,GAAA7lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4J,EAAOmD,GAAQ,IAAApH,EAAAotB,EAAA44D,EAAAzrF,EAAA,OAAAF,IAAAA,KAAA,SAAA6J,GAAA,cAAAA,EAAAzJ,KAAAyJ,EAAAxJ,MAAA,cAAAwJ,EAAAxJ,KAAA,EACJ2iF,EAAUiI,KAAK,uBAAwBl+E,EAAU,CACtE5G,QAAS,CAAE,eAAgB,yBAC3B,OAFY,KAARR,EAAQkE,EAAAvD,MAKD8rB,KAAK4B,QAAS,CAAFnqB,EAAAxJ,KAAA,QAGuB,GAHvBwJ,EAAAzJ,KAAA,IAGf2yB,EAAc8J,GAAQvJ,oBACTP,EAAYtrB,MAAK,CAAAoC,EAAAxJ,KAAA,eAAAwJ,EAAAxJ,KAAA,EACP2iF,EAAU1hC,IAAI,kBAADl7C,OAAmB2sB,EAAYtrB,QAAQ,QAAzEkkF,EAAY9hF,EAAAvD,MACD8rB,KAAK4B,SACpB6I,GAAQ2uD,gBAAgB,CACtBj4D,IAAKo4D,EAAav5D,KAAKe,KAAKI,IAC5B7sB,OAAQilF,EAAav5D,KAAKe,KAAKzsB,OAC/B65B,KAAMorD,EAAav5D,KAAKe,KAAKoN,KAC7BpB,QAASwsD,EAAav5D,KAAKe,KAAKgM,QAChC8N,QAAS0+C,EAAav5D,KAAKe,KAAK8Z,UAEnC,OAAApjC,EAAAxJ,KAAA,eAAAwJ,EAAAzJ,KAAA,EAAAF,EAAA2J,EAAA,SAGHpJ,QAAQC,KAAK,qDAAoDR,GAAS,cAAA2J,EAAAtJ,OAAA,SAIvEoF,EAASysB,MAAI,wBAAAvoB,EAAA/I,OAAA,EAAA8I,EAAA,iBACrB,SA5BWG,GAAA,OAAA67E,EAAA7kF,MAAA,KAAAC,UAAA,GA8BZwjD,aAAWmhC,GAAA5lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiK,EAAOuD,GAAQ,IAAAyB,EAAAtJ,EAAAimF,EAAA5qF,UAAA,OAAAhB,IAAAA,KAAA,SAAAkK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,OAAiB,OAAf4O,EAAI28E,EAAA9lF,OAAA,QAAAC,IAAA6lF,EAAA,GAAAA,EAAA,GAAG,SAAQ1hF,EAAA7J,KAAA,EACpB2iF,EAAUxsB,OAAO,iBAADpwD,OAAkBoH,EAAQ,UAAApH,OAAS6I,IAAO,OAAnE,OAARtJ,EAAQuE,EAAA5D,KAAA4D,EAAA3J,OAAA,SACPoF,EAASysB,MAAI,wBAAAloB,EAAApJ,OAAA,EAAAmJ,EAAA,IACrB,SAHUE,GAAA,OAAAw7E,EAAA5kF,MAAA,KAAAC,UAAA,GAKX6qF,mBAAiBnG,GAAA3lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqK,EAAOyyB,GAAQ,IAAAn3B,EAAA,OAAA3F,IAAAA,KAAA,SAAAsK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cAAAiK,EAAAjK,KAAA,EACT2iF,EAAUiI,KAAK,6BAA8B,CAAEnuD,SAAAA,IAAW,OAAnE,OAARn3B,EAAQ2E,EAAAhE,KAAAgE,EAAA/J,OAAA,SACPoF,EAASysB,MAAI,wBAAA9nB,EAAAxJ,OAAA,EAAAuJ,EAAA,IACrB,SAHgBE,GAAA,OAAAm7E,EAAA3kF,MAAA,KAAAC,UAAA,GAKjB8qF,cAAYrG,GAAA1lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAyK,EAAOqjC,EAAYhR,GAAQ,IAAAn3B,EAAA,OAAA3F,IAAAA,KAAA,SAAA2K,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,cAAAsK,EAAAtK,KAAA,EAChB2iF,EAAUiI,KAAK,uBAAwB,CAC5DnzB,YAAahqB,EACbhR,SAAAA,IACA,OAHY,OAARn3B,EAAQgF,EAAArE,KAAAqE,EAAApK,OAAA,SAIPoF,EAASysB,MAAI,wBAAAznB,EAAA7J,OAAA,EAAA2J,EAAA,IACrB,SANWG,EAAAC,GAAA,OAAA46E,EAAA1kF,MAAA,KAAAC,UAAA,GASZ+qF,WAASvG,GAAAzlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgL,EAAO8iC,EAAYk+C,GAAU,IAAArmF,EAAA,OAAA3F,IAAAA,KAAA,SAAAiL,GAAA,cAAAA,EAAA7K,KAAA6K,EAAA5K,MAAA,cAAA4K,EAAA5K,KAAA,EACf2iF,EAAUiI,KAAK,aAAD7kF,OAAc0nC,EAAU,eAAe,CAC1Em+C,YAAaD,IACb,OAFY,OAARrmF,EAAQsF,EAAA3E,KAAA2E,EAAA1K,OAAA,SAGPoF,EAASysB,MAAI,wBAAAnnB,EAAAnK,OAAA,EAAAkK,EAAA,IACrB,SALQF,EAAAI,GAAA,OAAAs6E,EAAAzkF,MAAA,KAAAC,UAAA,GAOTkrF,eAAa3G,GAAAxlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqL,EAAOyiC,GAAU,IAAAnoC,EAAA,OAAA3F,IAAAA,KAAA,SAAAuL,GAAA,cAAAA,EAAAnL,KAAAmL,EAAAlL,MAAA,cAAAkL,EAAAlL,KAAA,EACP2iF,EAAU1hC,IAAI,aAADl7C,OAAc0nC,EAAU,iBAAe,OAA7D,OAARnoC,EAAQ4F,EAAAjF,KAAAiF,EAAAhL,OAAA,SACPoF,EAASysB,MAAI,wBAAA7mB,EAAAzK,OAAA,EAAAuK,EAAA,IACrB,SAHYF,GAAA,OAAAo6E,EAAAxkF,MAAA,KAAAC,UAAA,GAMb81C,kBAAgBwuC,GAAAvlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2L,EAAO6B,GAAQ,IAAA4rB,EAAAtmB,EAAAnN,EAAAwmF,EAAAnrF,UAAA,OAAAhB,IAAAA,KAAA,SAAA4L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,OAI7B,OAJyC+4B,EAAK+yD,EAAArmF,OAAA,QAAAC,IAAAomF,EAAA,GAAAA,EAAA,GAAG,GAC7Cr5E,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAFmCw1C,EAAArmF,OAAA,QAAAC,IAAAomF,EAAA,GAAAA,EAAA,GAAG,GAE3BnjF,WACXowB,MAAOA,EAAMpwB,aACb4C,EAAAvL,KAAA,EACqB2iF,EAAU1hC,IAAI,mBAADl7C,OAAoBoH,EAAQ,KAAApH,OAAI0M,EAAO9J,aAAa,OAA1E,OAARrD,EAAQiG,EAAAtF,KAAAsF,EAAArL,OAAA,SACPoF,EAASysB,MAAI,wBAAAxmB,EAAA9K,OAAA,EAAA6K,EAAA,IACrB,SAPeH,GAAA,OAAA85E,EAAAvkF,MAAA,KAAAC,UAAA,GAShBm2C,oBAAkBkuC,GAAAtlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8L,EAAO0B,EAAU6oC,GAAW,IAAA1wC,EAAA,OAAA3F,IAAAA,KAAA,SAAA+L,GAAA,cAAAA,EAAA3L,KAAA2L,EAAA1L,MAAA,OAEqB,GADnEI,QAAQgU,IAAI,sCAAuC,CAAEjH,SAAAA,EAAU6oC,YAAAA,IAC/D51C,QAAQgU,IAAI,kBAAgByiC,EAAAA,EAAAA,GAAS1pC,GAAU,SAAUA,GAEjC,iBAAbA,EAAqB,CAAAzB,EAAA1L,KAAA,QACuB,MAArDI,QAAQG,MAAM,4BAA6B4M,GACrC,IAAI5G,MAAM,6BAA4B,cAAAmF,EAAA1L,KAAA,EAGvB2iF,EAAUiI,KAAK,mBAAD7kF,OAAoBoH,GAAY,CACnE4+E,aAAc/1C,IACd,OAFY,OAAR1wC,EAAQoG,EAAAzF,KAAAyF,EAAAxL,OAAA,SAGPoF,EAASysB,MAAI,wBAAArmB,EAAAjL,OAAA,EAAAgL,EAAA,IACrB,SAbiBL,EAAAO,GAAA,OAAAq5E,EAAAtkF,MAAA,KAAAC,UAAA,GAelBq2C,oBAAkB+tC,GAAArlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkM,EAAOorC,EAAWjB,GAAW,IAAA1wC,EAAA,OAAA3F,IAAAA,KAAA,SAAAoM,GAAA,cAAAA,EAAAhM,KAAAgM,EAAA/L,MAAA,cAAA+L,EAAA/L,KAAA,EACxB2iF,EAAU0I,IAAI,mBAADtlF,OAAoBkxC,GAAa,CACnE80C,aAAc/1C,IACd,OAFY,OAAR1wC,EAAQyG,EAAA9F,KAAA8F,EAAA7L,OAAA,SAGPoF,EAASysB,MAAI,wBAAAhmB,EAAAtL,OAAA,EAAAoL,EAAA,IACrB,SALiBI,EAAAC,GAAA,OAAA64E,EAAArkF,MAAA,KAAAC,UAAA,GAOlBw2C,oBAAkB2tC,GAAAplF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAyM,EAAO6qC,GAAS,IAAA3xC,EAAA,OAAA3F,IAAAA,KAAA,SAAA2M,GAAA,cAAAA,EAAAvM,KAAAuM,EAAAtM,MAAA,cAAAsM,EAAAtM,KAAA,EACX2iF,EAAUxsB,OAAO,mBAADpwD,OAAoBkxC,IAAY,OAAzD,OAAR3xC,EAAQgH,EAAArG,KAAAqG,EAAApM,OAAA,SACPoF,EAASysB,MAAI,wBAAAzlB,EAAA7L,OAAA,EAAA2L,EAAA,IACrB,SAHiBG,GAAA,OAAAu4E,EAAApkF,MAAA,KAAAC,UAAA,GAMlB04C,oBAAkBwrC,GAAAnlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8M,EAAO6uB,GAAQ,IAAAvC,EAAAogB,EAAA1mC,EAAAnN,EAAA0mF,EAAArrF,UAAA,OAAAhB,IAAAA,KAAA,SAAAgN,GAAA,cAAAA,EAAA5M,KAAA4M,EAAA3M,MAAA,OAOhC,OAP4C+4B,EAAKizD,EAAAvmF,OAAA,QAAAC,IAAAsmF,EAAA,GAAAA,EAAA,GAAG,GAAI7yC,EAAc6yC,EAAAvmF,OAAA,QAAAC,IAAAsmF,EAAA,IAAAA,EAAA,GACjEv5E,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAFqC01C,EAAAvmF,OAAA,QAAAC,IAAAsmF,EAAA,GAAAA,EAAA,GAAG,GAE7BrjF,WACXowB,MAAOA,EAAMpwB,aAEXwwC,GACF1mC,EAAOm0C,OAAO,kBAAmB,QAClCj6C,EAAA3M,KAAA,EACsB2iF,EAAU1hC,IAAI,qBAADl7C,OAAsBu1B,EAAQ,KAAAv1B,OAAI0M,EAAO9J,aAAa,OAA5E,OAARrD,EAAQqH,EAAA1G,KAAA0G,EAAAzM,OAAA,SACPoF,EAASysB,MAAI,wBAAAplB,EAAAlM,OAAA,EAAAgM,EAAA,IACrB,SAViBD,GAAA,OAAAq4E,EAAAnkF,MAAA,KAAAC,UAAA,GAYlB24C,sBAAoBsrC,GAAAllF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAmN,EAAOwuB,EAAU0a,GAAW,IAAAiD,EAAA3zC,EAAA2mF,EAAAtrF,UAAA,OAAAhB,IAAAA,KAAA,SAAAoN,GAAA,cAAAA,EAAAhN,KAAAgN,EAAA/M,MAAA,OAEmB,GAFjBi5C,IAAQgzC,EAAAxmF,OAAA,QAAAC,IAAAumF,EAAA,KAAAA,EAAA,GAC1D7rF,QAAQgU,IAAI,wCAAyC,CAAEknB,SAAAA,EAAU0a,YAAAA,EAAaiD,SAAAA,IAC9E74C,QAAQgU,IAAI,kBAAgByiC,EAAAA,EAAAA,GAASvb,GAAU,SAAUA,GAEjC,iBAAbA,EAAqB,CAAAvuB,EAAA/M,KAAA,QACuB,MAArDI,QAAQG,MAAM,4BAA6B+6B,GACrC,IAAI/0B,MAAM,6BAA4B,cAAAwG,EAAA/M,KAAA,EAGvB2iF,EAAUiI,KAAK,qBAAD7kF,OAAsBu1B,GAAY,CACrEywD,aAAc/1C,EACdkE,UAAWjB,IACX,OAHY,OAAR3zC,EAAQyH,EAAA9G,KAAA8G,EAAA7M,OAAA,SAIPoF,EAASysB,MAAI,wBAAAhlB,EAAAtM,OAAA,EAAAqM,EAAA,IACrB,SAdmBF,EAAAC,GAAA,OAAA+3E,EAAAlkF,MAAA,KAAAC,UAAA,GAgBpB44C,sBAAoBorC,GAAAjlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuN,EAAO+pC,EAAWjB,GAAW,IAAA1wC,EAAA,OAAA3F,IAAAA,KAAA,SAAAyN,GAAA,cAAAA,EAAArN,KAAAqN,EAAApN,MAAA,cAAAoN,EAAApN,KAAA,EAC1B2iF,EAAU0I,IAAI,qBAADtlF,OAAsBkxC,GAAa,CACrE80C,aAAc/1C,IACd,OAFY,OAAR1wC,EAAQ8H,EAAAnH,KAAAmH,EAAAlN,OAAA,SAGPoF,EAASysB,MAAI,wBAAA3kB,EAAA3M,OAAA,EAAAyM,EAAA,IACrB,SALmBF,EAAAC,GAAA,OAAA03E,EAAAjkF,MAAA,KAAAC,UAAA,GAOpB64C,sBAAoBkrC,GAAAhlF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4N,EAAO0pC,GAAS,IAAA3xC,EAAA,OAAA3F,IAAAA,KAAA,SAAA8N,GAAA,cAAAA,EAAA1N,KAAA0N,EAAAzN,MAAA,cAAAyN,EAAAzN,KAAA,EACb2iF,EAAUxsB,OAAO,qBAADpwD,OAAsBkxC,IAAY,OAA3D,OAAR3xC,EAAQmI,EAAAxH,KAAAwH,EAAAvN,OAAA,SACPoF,EAASysB,MAAI,wBAAAtkB,EAAAhN,OAAA,EAAA8M,EAAA,IACrB,SAHmBF,GAAA,OAAAq3E,EAAAhkF,MAAA,KAAAC,UAAA,GAMpB0jD,UAAQogC,GAAA/kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+N,EAAO+/B,EAAYy+C,GAAQ,IAAA9lF,EAAAd,EAAA6mF,EAAAxrF,UAAA,OAAAhB,IAAAA,KAAA,SAAAiO,GAAA,cAAAA,EAAA7N,KAAA6N,EAAA5N,MAAA,OAAc,OAAZoG,EAAO+lF,EAAA1mF,OAAA,QAAAC,IAAAymF,EAAA,GAAAA,EAAA,GAAG,GAAEv+E,EAAA5N,KAAA,EAC1B2iF,EAAUiI,KAAK,aAAD7kF,OAAc0nC,EAAU,cAAc,CACzEoX,UAAWqnC,EACX9lF,QAAAA,IACA,OAHY,OAARd,EAAQsI,EAAA3H,KAAA2H,EAAA1N,OAAA,SAIPoF,EAASysB,MAAI,wBAAAnkB,EAAAnN,OAAA,EAAAiN,EAAA,IACrB,SANOJ,EAAAO,GAAA,OAAA42E,EAAA/jF,MAAA,KAAAC,UAAA,GASRyzC,UAAQowC,GAAA9kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAmO,EAAO2/B,EAAY9uB,GAAK,IAAArZ,EAAA,OAAA3F,IAAAA,KAAA,SAAAqO,GAAA,cAAAA,EAAAjO,KAAAiO,EAAAhO,MAAA,cAAAgO,EAAAhO,KAAA,EACT2iF,EAAUiI,KAAK,aAAD7kF,OAAc0nC,EAAU,SAAS,CACpE9uB,MAAAA,IACA,OAFY,OAARrZ,EAAQ0I,EAAA/H,KAAA+H,EAAA9N,OAAA,SAGPoF,EAASysB,MAAI,wBAAA/jB,EAAAvN,OAAA,EAAAqN,EAAA,IACrB,SALOG,EAAAG,GAAA,OAAAo2E,EAAA9jF,MAAA,KAAAC,UAAA,GAORyrF,eAAa7H,GAAA7kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuO,EAAOu/B,GAAU,IAAAnoC,EAAA,OAAA3F,IAAAA,KAAA,SAAAwO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAnO,MAAA,cAAAmO,EAAAnO,KAAA,EACP2iF,EAAU1hC,IAAI,aAADl7C,OAAc0nC,EAAU,YAAU,OAAxD,OAARnoC,EAAQ6I,EAAAlI,KAAAkI,EAAAjO,OAAA,SACPoF,EAASysB,MAAI,wBAAA5jB,EAAA1N,OAAA,EAAAyN,EAAA,IACrB,SAHYG,GAAA,OAAAk2E,EAAA7jF,MAAA,KAAAC,UAAA,GAMb0rF,eAAa/H,GAAA5kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2O,EAAOm/B,GAAU,IAAArnC,EAAAd,EAAAgnF,EAAA3rF,UAAA,OAAAhB,IAAAA,KAAA,SAAA4O,GAAA,cAAAA,EAAAxO,KAAAwO,EAAAvO,MAAA,OAAc,OAAZoG,EAAOkmF,EAAA7mF,OAAA,QAAAC,IAAA4mF,EAAA,GAAAA,EAAA,GAAG,GAAE/9E,EAAAvO,KAAA,EACrB2iF,EAAUiI,KAAK,aAAD7kF,OAAc0nC,EAAU,cAAc,CACzErnC,QAAAA,IACA,OAFY,OAARd,EAAQiJ,EAAAtI,KAAAsI,EAAArO,OAAA,SAGPoF,EAASysB,MAAI,wBAAAxjB,EAAA9N,OAAA,EAAA6N,EAAA,IACrB,SALYE,GAAA,OAAA81E,EAAA5jF,MAAA,KAAAC,UAAA,GAQb8jD,eAAa4/B,GAAA3kF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8O,EAAOg/B,GAAU,IAAAnoC,EAAA,OAAA3F,IAAAA,KAAA,SAAA+O,GAAA,cAAAA,EAAA3O,KAAA2O,EAAA1O,MAAA,cAAA0O,EAAA1O,KAAA,EACP2iF,EAAUiI,KAAK,aAAD7kF,OAAc0nC,EAAU,WAAS,OAAxD,OAARnoC,EAAQoJ,EAAAzI,KAAAyI,EAAAxO,OAAA,SACPoF,EAASysB,MAAI,wBAAArjB,EAAAjO,OAAA,EAAAgO,EAAA,IACrB,SAHYY,GAAA,OAAAg1E,EAAA3jF,MAAA,KAAAC,UAAA,IAOF4rC,GAAW,CACtBgG,aAAWuzC,IAAApmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgP,IAAA,IAAA49E,EAAAjnF,EAAAwJ,EAAAnO,UAAA,OAAAhB,IAAAA,KAAA,SAAAoP,GAAA,cAAAA,EAAAhP,KAAAgP,EAAA/O,MAAA,OAA4B,OAArBusF,EAASz9E,EAAArJ,OAAA,QAAAC,IAAAoJ,EAAA,GAAAA,EAAA,GAAG,UAASC,EAAA/O,KAAA,EAChB2iF,EAAU1hC,IAAI,6BAADl7C,OAA8BwmF,IAAY,OAAhE,OAARjnF,EAAQyJ,EAAA9I,KAAA8I,EAAA7O,OAAA,SACPoF,EAASysB,MAAI,wBAAAhjB,EAAAtO,OAAA,EAAAkO,EAAA,IACrB,WAHU,OAAAm3E,GAAAplF,MAAA,KAAAC,UAAA,GAKX6rC,kBAAgBq5C,IAAAnmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqP,IAAA,IAAAm9B,EAAAqgD,EAAA/5E,EAAAnN,EAAAmnF,EAAA9rF,UAAA,OAAAhB,IAAAA,KAAA,SAAAsP,GAAA,cAAAA,EAAAlP,KAAAkP,EAAAjP,MAAA,OAKf,OALsBmsC,EAAKsgD,EAAAhnF,OAAA,QAAAC,IAAA+mF,EAAA,GAAAA,EAAA,GAAG,GAAID,EAAOC,EAAAhnF,OAAA,QAAAC,IAAA+mF,EAAA,GAAAA,EAAA,GAAG,IACvCh6E,EAAS,IAAI/J,iBACZk+C,OAAO,QAASza,GACnBqgD,EAAQ/mF,OAAS,GACnBgN,EAAOm0C,OAAO,UAAW4lC,EAAQzsE,KAAK,MACvC9Q,EAAAjP,KAAA,EACsB2iF,EAAU1hC,IAAI,yBAADl7C,OAA0B0M,EAAO9J,aAAa,OAApE,OAARrD,EAAQ2J,EAAAhJ,KAAAgJ,EAAA/O,OAAA,SACPoF,EAASysB,MAAI,wBAAA9iB,EAAAxO,OAAA,EAAAuO,EAAA,IACrB,WARe,OAAA62E,GAAAnlF,MAAA,KAAAC,UAAA,GAUhBgtC,MAAIi4C,GAAAlmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuP,EAAOu+B,GAAU,IAAAC,EAAApoC,EAAAonF,EAAA/rF,UAAA,OAAAhB,IAAAA,KAAA,SAAAyP,GAAA,cAAAA,EAAArP,KAAAqP,EAAApP,MAAA,OAAoB,OAAlB0tC,EAAMg/C,EAAAjnF,OAAA,QAAAC,IAAAgnF,EAAA,GAAAA,EAAA,GAAG,UAASt9E,EAAApP,KAAA,EAClB2iF,EAAUiI,KAAK,cAAe,CACnDnzB,YAAahqB,EACbC,OAAAA,IACA,OAHY,OAARpoC,EAAQ8J,EAAAnJ,KAAAmJ,EAAAlP,OAAA,SAIPoF,EAASysB,MAAI,wBAAA3iB,EAAA3O,OAAA,EAAAyO,EAAA,IACrB,SANGO,GAAA,OAAAm2E,EAAAllF,MAAA,KAAAC,UAAA,GAQJotC,SAAO43C,GAAAjmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2P,EAAOm+B,GAAU,IAAAC,EAAApoC,EAAAqnF,EAAAhsF,UAAA,OAAAhB,IAAAA,KAAA,SAAA6P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OAAoB,OAAlB0tC,EAAMi/C,EAAAlnF,OAAA,QAAAC,IAAAinF,EAAA,GAAAA,EAAA,GAAG,UAASn9E,EAAAxP,KAAA,EACrB2iF,EAAUiI,KAAK,iBAAkB,CACtDnzB,YAAahqB,EACbC,OAAAA,IACA,OAHY,OAARpoC,EAAQkK,EAAAvJ,KAAAuJ,EAAAtP,OAAA,SAIPoF,EAASysB,MAAI,wBAAAviB,EAAA/O,OAAA,EAAA6O,EAAA,IACrB,SANMO,GAAA,OAAA81E,EAAAjlF,MAAA,KAAAC,UAAA,GAQPstC,WAASy3C,GAAAhmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+P,EAAAjR,GAAA,IAAAgvC,EAAArnC,EAAAd,EAAA,OAAA3F,IAAAA,KAAA,SAAAiQ,GAAA,cAAAA,EAAA7P,KAAA6P,EAAA5P,MAAA,OAA4B,OAAnBytC,EAAUhvC,EAAVgvC,WAAYrnC,EAAO3H,EAAP2H,QAAOwJ,EAAA5P,KAAA,EACd2iF,EAAUiI,KAAK,mBAAoB,CACxDnzB,YAAahqB,EACbrnC,QAASA,GAAW,KACpB,OAHY,OAARd,EAAQsK,EAAA3J,KAAA2J,EAAA1P,OAAA,SAIPoF,EAASysB,MAAI,wBAAAniB,EAAAnP,OAAA,EAAAiP,EAAA,IACrB,SANQI,GAAA,OAAA41E,EAAAhlF,MAAA,KAAAC,UAAA,GAQTisF,eAAanH,GAAA/lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoQ,IAAA,IAAAzK,EAAA,OAAA3F,IAAAA,KAAA,SAAAqQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAAgQ,EAAAhQ,KAAA,EACU2iF,EAAU1hC,IAAI,0BAAyB,OAAhD,OAAR37C,EAAQ0K,EAAA/J,KAAA+J,EAAA9P,OAAA,SACPoF,EAASysB,MAAI,wBAAA/hB,EAAAvP,OAAA,EAAAsP,EAAA,IACrB,WAHY,OAAA01E,EAAA/kF,MAAA,KAAAC,UAAA,GAMbktC,oBAAkB23C,GAAA9lF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuQ,EAAOu9B,GAAU,IAAAnoC,EAAA4O,EAAA,OAAAvU,IAAAA,KAAA,SAAAwQ,GAAA,cAAAA,EAAApQ,KAAAoQ,EAAAnQ,MAAA,cAAAmQ,EAAApQ,KAAA,EAAAoQ,EAAAnQ,KAAA,EAEV2iF,EAAU1hC,IAAI,sBAADl7C,OAAuB0nC,IAAa,OAA1D,OAARnoC,EAAQ6K,EAAAlK,KAAAkK,EAAAjQ,OAAA,SACPoF,EAASysB,MAAI,OAEmC,OAFnC5hB,EAAApQ,KAAA,EAAAmU,EAAA/D,EAAA,SAEpB/P,QAAQG,MAAM,iCAAgC2T,GAAS/D,EAAAjQ,OAAA,SAChD,CAAEm6B,UAAU,IAAO,wBAAAlqB,EAAA1P,OAAA,EAAAyP,EAAA,iBAE7B,SARiBD,GAAA,OAAAu1E,EAAA9kF,MAAA,KAAAC,UAAA,IAYP0xC,GAAa,CACxBE,aAAWyzC,IAAAtmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0Q,IAAA,IAAA2hC,EAAAv/B,EAAAnN,EAAAunF,EAAAlsF,UAAA,OAAAhB,IAAAA,KAAA,SAAA2Q,GAAA,cAAAA,EAAAvQ,KAAAuQ,EAAAtQ,MAAA,OAUiD,OAV1CgyC,EAAO66C,EAAApnF,OAAA,QAAAC,IAAAmnF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACvBp6E,EAAS,IAAI/J,gBAGfspC,EAAQ3rC,QAAU2rC,EAAQ3rC,OAAOZ,OAAS,GAC5CusC,EAAQ3rC,OAAOyf,QAAQ,SAAAmU,GAAC,OAAIxnB,EAAOm0C,OAAO,SAAU3sB,EAAE,GAEpD+X,EAAQlT,SAASrsB,EAAOm0C,OAAO,UAAW5U,EAAQlT,SAClDkT,EAAQ9R,MAAMztB,EAAOm0C,OAAO,OAAQ5U,EAAQ9R,MAC5C8R,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,OAC9CiZ,EAAQhC,QAAQv9B,EAAOm0C,OAAO,SAAU5U,EAAQhC,QAAQ1/B,EAAAtQ,KAAA,EAErC2iF,EAAU1hC,IAAI,YAADl7C,OAAa0M,EAAO9J,aAAa,OAAvD,OAARrD,EAAQgL,EAAArK,KAAAqK,EAAApQ,OAAA,SACPoF,EAASysB,MAAI,wBAAAzhB,EAAA7P,OAAA,EAAA4P,EAAA,IACrB,WAdU,OAAA21E,GAAAtlF,MAAA,KAAAC,UAAA,GAgBX2xC,YAAUyzC,IAAArmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA6Q,IAAA,IAAAlL,EAAA,OAAA3F,IAAAA,KAAA,SAAA8Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAAAyQ,EAAAzQ,KAAA,EACa2iF,EAAU1hC,IAAI,oBAAmB,OAA1C,OAAR37C,EAAQmL,EAAAxK,KAAAwK,EAAAvQ,OAAA,SACPoF,EAASysB,MAAI,wBAAAthB,EAAAhQ,OAAA,EAAA+P,EAAA,IACrB,WAHS,OAAAu1E,GAAArlF,MAAA,KAAAC,UAAA,IAOC64B,GAAU,CACrB8xB,kBAAgBm7B,IAAA/mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgR,IAAA,IAAAooB,EAAAiX,EAAA1qC,EAAAwnF,EAAAnsF,UAAA,OAAAhB,IAAAA,KAAA,SAAAiR,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAA5Q,MAAA,OAA6B,OAAtB+4B,EAAK+zD,EAAArnF,OAAA,QAAAC,IAAAonF,EAAA,GAAAA,EAAA,GAAG,GAAI98C,EAAM88C,EAAArnF,OAAA,QAAAC,IAAAonF,EAAA,GAAAA,EAAA,GAAG,EAACl8E,EAAA5Q,KAAA,EACtB2iF,EAAU1hC,IAAI,6BAADl7C,OAA8BgzB,EAAK,YAAAhzB,OAAWiqC,IAAS,OAA7E,OAAR1qC,EAAQsL,EAAA3K,KAAA2K,EAAA1Q,OAAA,SACPoF,EAASysB,MAAI,wBAAAnhB,EAAAnQ,OAAA,EAAAkQ,EAAA,IACrB,WAHe,OAAA81E,GAAA/lF,MAAA,KAAAC,UAAA,GAKhBgsD,aAAW65B,IAAA9mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkR,EAAOyqB,GAAQ,IAAAvC,EAAAiX,EAAA1qC,EAAAynF,EAAApsF,UAAA,OAAAhB,IAAAA,KAAA,SAAAmR,GAAA,cAAAA,EAAA/Q,KAAA+Q,EAAA9Q,MAAA,OAAwB,OAAtB+4B,EAAKg0D,EAAAtnF,OAAA,QAAAC,IAAAqnF,EAAA,GAAAA,EAAA,GAAG,GAAI/8C,EAAM+8C,EAAAtnF,OAAA,QAAAC,IAAAqnF,EAAA,GAAAA,EAAA,GAAG,EAACj8E,EAAA9Q,KAAA,EAC3B2iF,EAAU1hC,IAAI,SAADl7C,OAAUu1B,EAAQ,WAAAv1B,OAAUgzB,EAAK,YAAAhzB,OAAWiqC,IAAS,OAA3E,OAAR1qC,EAAQwL,EAAA7K,KAAA6K,EAAA5Q,OAAA,SACPoF,EAASysB,MAAI,wBAAAjhB,EAAArQ,OAAA,EAAAoQ,EAAA,IACrB,SAHUT,GAAA,OAAAo2E,GAAA9lF,MAAA,KAAAC,UAAA,GAKX0sD,aAAWk5B,IAAA7mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoR,EAAOrE,GAAQ,IAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAAqR,GAAA,cAAAA,EAAAjR,KAAAiR,EAAAhR,MAAA,cAAAgR,EAAAhR,KAAA,EACH2iF,EAAUiI,KAAK,aAAcl+E,EAAU,CAC5D5G,QAAS,CAAE,eAAgB,yBAC3B,OAFY,OAARR,EAAQ0L,EAAA/K,KAAA+K,EAAA9Q,OAAA,SAGPoF,EAASysB,MAAI,wBAAA/gB,EAAAvQ,OAAA,EAAAsQ,EAAA,IACrB,SALUR,GAAA,OAAAg2E,GAAA7lF,MAAA,KAAAC,UAAA,GAOXqsF,eAAa1G,IAAA5mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsR,EAAOqqB,GAAQ,IAAAh2B,EAAA,OAAA3F,IAAAA,KAAA,SAAAuR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAlR,KAAA,EACL2iF,EAAU1hC,IAAI,gBAADl7C,OAAiBu1B,IAAW,OAAlD,OAARh2B,EAAQ4L,EAAAjL,KAAAiL,EAAAhR,OAAA,SACPoF,EAASysB,MAAI,wBAAA7gB,EAAAzQ,OAAA,EAAAwQ,EAAA,IACrB,SAHYP,GAAA,OAAA41E,GAAA5lF,MAAA,KAAAC,UAAA,GAKbssF,WAAS5G,IAAA3mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwR,EAAO+7E,EAAQniC,GAAQ,IAAAzlD,EAAA,OAAA3F,IAAAA,KAAA,SAAA0R,GAAA,cAAAA,EAAAtR,KAAAsR,EAAArR,MAAA,cAAAqR,EAAArR,KAAA,EACT2iF,EAAUiI,KAAK,eAAgB,CACpDhmC,QAASsoC,EACTC,UAAWpiC,IACX,OAHY,OAARzlD,EAAQ+L,EAAApL,KAAAoL,EAAAnR,OAAA,SAIPoF,EAASysB,MAAI,wBAAA1gB,EAAA5Q,OAAA,EAAA0Q,EAAA,IACrB,SANQK,EAAAG,GAAA,OAAA00E,GAAA3lF,MAAA,KAAAC,UAAA,GAQT8wB,gBAAc20D,IAAA1mF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2R,IAAA,IAAAhM,EAAA,OAAA3F,IAAAA,KAAA,SAAA4R,GAAA,cAAAA,EAAAxR,KAAAwR,EAAAvR,MAAA,cAAAuR,EAAAvR,KAAA,EACS2iF,EAAU1hC,IAAI,sBAAqB,OAA5C,OAAR37C,EAAQiM,EAAAtL,KAAAsL,EAAArR,OAAA,SACPoF,EAASysB,MAAI,wBAAAxgB,EAAA9Q,OAAA,EAAA6Q,EAAA,IACrB,WAHa,OAAA80E,GAAA1lF,MAAA,KAAAC,UAAA,GAKdysF,oBAAkBjH,IAAAzmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8R,EAAO6pB,GAAQ,IAAAh2B,EAAA,OAAA3F,IAAAA,KAAA,SAAA+R,GAAA,cAAAA,EAAA3R,KAAA2R,EAAA1R,MAAA,cAAA0R,EAAA1R,KAAA,EACV2iF,EAAUxsB,OAAO,SAADpwD,OAAUu1B,IAAW,OAA9C,OAARh2B,EAAQoM,EAAAzL,KAAAyL,EAAAxR,OAAA,SACPoF,EAASysB,MAAI,wBAAArgB,EAAAjR,OAAA,EAAAgR,EAAA,IACrB,SAHiBK,GAAA,OAAAq0E,GAAAzlF,MAAA,KAAAC,UAAA,GAMlBy5B,gBAAc8rD,IAAAxmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiS,EAAO67B,GAAU,IAAAnoC,EAAA,OAAA3F,IAAAA,KAAA,SAAAkS,GAAA,cAAAA,EAAA9R,KAAA8R,EAAA7R,MAAA,cAAA6R,EAAA7R,KAAA,EACR2iF,EAAU1hC,IAAI,sBAADl7C,OAAuB0nC,IAAa,OAA1D,OAARnoC,EAAQuM,EAAA5L,KAAA4L,EAAA3R,OAAA,SACPoF,EAASysB,MAAI,wBAAAlgB,EAAApR,OAAA,EAAAmR,EAAA,IACrB,SAHaK,GAAA,OAAAi0E,GAAAxlF,MAAA,KAAAC,UAAA,GAKd0sF,sBAAoBpH,IAAAvmF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoS,EAAO07B,GAAU,IAAAnoC,EAAA,OAAA3F,IAAAA,KAAA,SAAAqS,GAAA,cAAAA,EAAAjS,KAAAiS,EAAAhS,MAAA,cAAAgS,EAAAhS,KAAA,EACd2iF,EAAU1hC,IAAI,qBAADl7C,OAAsB0nC,IAAa,OAAzD,OAARnoC,EAAQ0M,EAAA/L,KAAA+L,EAAA9R,OAAA,SACPoF,EAASysB,MAAI,wBAAA/f,EAAAvR,OAAA,EAAAsR,EAAA,IACrB,SAHmBG,GAAA,OAAA+zE,GAAAvlF,MAAA,KAAAC,UAAA,IAOTswD,GAAS,CACpBC,QAAMxtD,IAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwS,IAAA,IAAAM,EAAAnN,EAAAgoF,EAAA3sF,UAAA,OAAAhB,IAAAA,KAAA,SAAAyS,GAAA,cAAAA,EAAArS,KAAAqS,EAAApS,MAAA,OACgD,OAAhDyS,EAAS,IAAI/J,gBADC4kF,EAAA7nF,OAAA,QAAAC,IAAA4nF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACoB3kF,WAAUyJ,EAAApS,KAAA,EAC/B2iF,EAAU1hC,IAAI,QAADl7C,OAAS0M,IAAS,OAAxC,OAARnN,EAAQ8M,EAAAnM,KAAAmM,EAAAlS,OAAA,SACPoF,EAASysB,MAAI,wBAAA3f,EAAA3R,OAAA,EAAA0R,EAAA,IACrB,WAJK,OAAAzO,GAAAhD,MAAA,KAAAC,UAAA,GAMN4sF,UAAQ3G,IAAAlnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0S,IAAA,IAAA0mB,EAAAiX,EAAA1qC,EAAAkoF,EAAA7sF,UAAA,OAAAhB,IAAAA,KAAA,SAAA2S,GAAA,cAAAA,EAAAvS,KAAAuS,EAAAtS,MAAA,OAA6B,OAAtB+4B,EAAKy0D,EAAA/nF,OAAA,QAAAC,IAAA8nF,EAAA,GAAAA,EAAA,GAAG,GAAIx9C,EAAMw9C,EAAA/nF,OAAA,QAAAC,IAAA8nF,EAAA,GAAAA,EAAA,GAAG,EAACl7E,EAAAtS,KAAA,EACd2iF,EAAU1hC,IAAI,iBAADl7C,OAAkBgzB,EAAK,YAAAhzB,OAAWiqC,IAAS,OAAjE,OAAR1qC,EAAQgN,EAAArM,KAAAqM,EAAApS,OAAA,SACPoF,EAASysB,MAAI,wBAAAzf,EAAA7R,OAAA,EAAA4R,EAAA,IACrB,WAHO,OAAAu0E,GAAAlmF,MAAA,KAAAC,UAAA,GAKRixD,UAAQpuD,IAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4S,EAAOxE,GAAM,IAAArB,EAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAAgT,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,OAwBrB,OAtBM0M,EAAW,IAAIi6C,UAGZC,OAAO,QAAS74C,EAAOwtB,OAChC7uB,EAASk6C,OAAO,OAAQ74C,EAAOa,MAC/BlC,EAASk6C,OAAO,cAAe74C,EAAO2jD,aACtChlD,EAASk6C,OAAO,UAAW74C,EAAO+wB,SAClCpyB,EAASk6C,OAAO,OAAQ74C,EAAOmyB,MAE3BnyB,EAAOslD,OACT3mD,EAASk6C,OAAO,QAAS74C,EAAOslD,OAG9BtlD,EAAOulD,cACT5mD,EAASk6C,OAAO,eAAgB74C,EAAOulD,cAIrCvlD,EAAO+4C,OAAS/4C,EAAO+4C,iBAAiB5/B,MAC1Cxa,EAASk6C,OAAO,QAAS74C,EAAO+4C,OAGlCn0C,EAAA3S,KAAA,EACuB2iF,EAAUiI,KAAK,cAAel+E,EAAU,CAC7D5G,QAAS,CACP,eAAgB,yBAElB,OAJY,OAARR,EAAQqN,EAAA1M,KAAA0M,EAAAzS,OAAA,SAKPoF,EAASysB,MAAI,wBAAApf,EAAAlS,OAAA,EAAA8R,EAAA,IACrB,SA/BOM,GAAA,OAAArP,GAAA9C,MAAA,KAAAC,UAAA,GAiCRmxD,UAAQvuD,IAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAmT,EAAOinB,EAAIhsB,GAAM,IAAArB,EAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAAqT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,OAwBzB,OAtBM0M,EAAW,IAAIi6C,UAGZC,OAAO,QAAS74C,EAAOwtB,OAChC7uB,EAASk6C,OAAO,OAAQ74C,EAAOa,MAC/BlC,EAASk6C,OAAO,cAAe74C,EAAO2jD,aACtChlD,EAASk6C,OAAO,UAAW74C,EAAO+wB,SAClCpyB,EAASk6C,OAAO,OAAQ74C,EAAOmyB,MAE3BnyB,EAAOslD,OACT3mD,EAASk6C,OAAO,QAAS74C,EAAOslD,OAG9BtlD,EAAOulD,cACT5mD,EAASk6C,OAAO,eAAgB74C,EAAOulD,cAIrCvlD,EAAO+4C,OAAS/4C,EAAO+4C,iBAAiB5/B,MAC1Cxa,EAASk6C,OAAO,QAAS74C,EAAO+4C,OAGlC9zC,EAAAhT,KAAA,EACuB2iF,EAAU0I,IAAI,QAADtlF,OAASg0B,GAAMrtB,EAAU,CAC3D5G,QAAS,CACP,eAAgB,yBAElB,OAJY,OAARR,EAAQ0N,EAAA/M,KAAA+M,EAAA9S,OAAA,SAKPoF,EAASysB,MAAI,wBAAA/e,EAAAvS,OAAA,EAAAqS,EAAA,IACrB,SA/BOU,EAAAG,GAAA,OAAApQ,GAAA7C,MAAA,KAAAC,UAAA,GAiCRqxD,UAAQ1uD,IAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsT,EAAO8mB,GAAE,IAAAz0B,EAAA,OAAA3F,IAAAA,KAAA,SAAAuT,GAAA,cAAAA,EAAAnT,KAAAmT,EAAAlT,MAAA,cAAAkT,EAAAlT,KAAA,EACM2iF,EAAUxsB,OAAO,QAADpwD,OAASg0B,IAAK,OAAvC,OAARz0B,EAAQ4N,EAAAjN,KAAAiN,EAAAhT,OAAA,SACPoF,EAASysB,MAAI,wBAAA7e,EAAAzS,OAAA,EAAAwS,EAAA,IACrB,SAHOa,GAAA,OAAAxQ,GAAA5C,MAAA,KAAAC,UAAA,GAKR8sF,aAAW9G,IAAAjnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwT,EAAO4mB,EAAI3zB,GAAO,IAAAd,EAAA,OAAA3F,IAAAA,KAAA,SAAA2T,GAAA,cAAAA,EAAAvT,KAAAuT,EAAAtT,MAAA,cAAAsT,EAAAtT,KAAA,EACN2iF,EAAUiI,KAAK,QAAD7kF,OAASg0B,EAAE,YAAY,CAAE3zB,QAAAA,IAAU,OAA1D,OAARd,EAAQgO,EAAArN,KAAAqN,EAAApT,OAAA,SACPoF,EAASysB,MAAI,wBAAAze,EAAA7S,OAAA,EAAA0S,EAAA,IACrB,SAHUkB,EAAAG,GAAA,OAAAmyE,GAAAjmF,MAAA,KAAAC,UAAA,GAKX+sF,YAAUhH,IAAAhnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8T,IAAA,IAAAnO,EAAA,OAAA3F,IAAAA,KAAA,SAAA+T,GAAA,cAAAA,EAAA3T,KAAA2T,EAAA1T,MAAA,cAAA0T,EAAA1T,KAAA,EACa2iF,EAAU1hC,IAAI,cAAa,OAApC,OAAR37C,EAAQoO,EAAAzN,KAAAyN,EAAAxT,OAAA,SACPoF,EAASysB,MAAI,wBAAAre,EAAAjT,OAAA,EAAAgT,EAAA,IACrB,WAHS,OAAAizE,GAAAhmF,MAAA,KAAAC,UAAA,IAOCy0D,GAAW,CACtBu4B,cAAYxG,IAAAznF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAiU,IAAA,IAAAtO,EAAA,OAAA3F,IAAAA,KAAA,SAAAkU,GAAA,cAAAA,EAAA9T,KAAA8T,EAAA7T,MAAA,cAAA6T,EAAA7T,KAAA,EACW2iF,EAAU1hC,IAAI,oBAAmB,OAA1C,OAAR37C,EAAQuO,EAAA5N,KAAA4N,EAAA3T,OAAA,SACPoF,EAASysB,MAAI,wBAAAle,EAAApT,OAAA,EAAAmT,EAAA,IACrB,WAHW,OAAAuzE,GAAAzmF,MAAA,KAAAC,UAAA,GAKZ20D,UAAQ4xB,IAAAxnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoU,IAAA,IAAAtB,EAAAnN,EAAAsoF,EAAAjtF,UAAA,OAAAhB,IAAAA,KAAA,SAAAwU,GAAA,cAAAA,EAAApU,KAAAoU,EAAAnU,MAAA,OAC8C,OAAhDyS,EAAS,IAAI/J,gBADGklF,EAAAnoF,OAAA,QAAAC,IAAAkoF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACkBjlF,WAAUwL,EAAAnU,KAAA,EAC/B2iF,EAAU1hC,IAAI,gBAADl7C,OAAiB0M,IAAS,OAAhD,OAARnN,EAAQ6O,EAAAlO,KAAAkO,EAAAjU,OAAA,SACPoF,EAASysB,MAAI,wBAAA5d,EAAA1T,OAAA,EAAAsT,EAAA,IACrB,WAJO,OAAAmzE,GAAAxmF,MAAA,KAAAC,UAAA,GAMRktF,YAAU5G,IAAAvnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2U,EAAOlN,EAAOwvB,GAAQ,IAAAtxB,EAAA,OAAA3F,IAAAA,KAAA,SAAA4U,GAAA,cAAAA,EAAAxU,KAAAwU,EAAAvU,MAAA,cAAAuU,EAAAvU,KAAA,EACT2iF,EAAU0I,IAAI,gBAADtlF,OAAiBqB,GAASwvB,GAAS,OAAzD,OAARtxB,EAAQiP,EAAAtO,KAAAsO,EAAArU,OAAA,SACPoF,EAASysB,MAAI,wBAAAxd,EAAA9T,OAAA,EAAA6T,EAAA,IACrB,SAHSw5E,EAAAC,GAAA,OAAA9G,GAAAvmF,MAAA,KAAAC,UAAA,GAKVqtF,YAAUhH,IAAAtnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+U,EAAOtN,GAAK,IAAA9B,EAAA,OAAA3F,IAAAA,KAAA,SAAAiV,GAAA,cAAAA,EAAA7U,KAAA6U,EAAA5U,MAAA,cAAA4U,EAAA5U,KAAA,EACC2iF,EAAUxsB,OAAO,gBAADpwD,OAAiBqB,IAAQ,OAAlD,OAAR9B,EAAQsP,EAAA3O,KAAA2O,EAAA1U,OAAA,SACPoF,EAASysB,MAAI,wBAAAnd,EAAAnU,OAAA,EAAAiU,EAAA,IACrB,SAHSu5E,GAAA,OAAAjH,GAAAtmF,MAAA,KAAAC,UAAA,GAKVgsD,aAAWo6B,IAAArnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkV,IAAA,IAAApC,EAAAnN,EAAA4oF,EAAAvtF,UAAA,OAAAhB,IAAAA,KAAA,SAAAmV,GAAA,cAAAA,EAAA/U,KAAA+U,EAAA9U,MAAA,OAC2C,OAAhDyS,EAAS,IAAI/J,gBADMwlF,EAAAzoF,OAAA,QAAAC,IAAAwoF,EAAA,GAAAA,EAAA,GAAG,CAAC,GACevlF,WAAUmM,EAAA9U,KAAA,EAC/B2iF,EAAU1hC,IAAI,mBAADl7C,OAAoB0M,IAAS,OAAnD,OAARnN,EAAQwP,EAAA7O,KAAA6O,EAAA5U,OAAA,SACPoF,EAASysB,MAAI,wBAAAjd,EAAArU,OAAA,EAAAoU,EAAA,IACrB,WAJU,OAAAkyE,GAAArmF,MAAA,KAAAC,UAAA,GAMXwtF,eAAarH,IAAApnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoV,EAAOglB,GAAE,IAAAz0B,EAAA,OAAA3F,IAAAA,KAAA,SAAAqV,GAAA,cAAAA,EAAAjV,KAAAiV,EAAAhV,MAAA,cAAAgV,EAAAhV,KAAA,EACC2iF,EAAUxsB,OAAO,mBAADpwD,OAAoBg0B,IAAK,OAAlD,OAARz0B,EAAQ0P,EAAA/O,KAAA+O,EAAA9U,OAAA,SACPoF,EAASysB,MAAI,wBAAA/c,EAAAvU,OAAA,EAAAsU,EAAA,IACrB,SAHYq5E,GAAA,OAAAtH,GAAApmF,MAAA,KAAAC,UAAA,GAKb0tF,WAASxH,IAAAnnF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAsV,EAAO7O,GAAO,IAAAkoF,EAAAhpF,EAAAipF,EAAA5tF,UAAA,OAAAhB,IAAAA,KAAA,SAAAuV,GAAA,cAAAA,EAAAnV,KAAAmV,EAAAlV,MAAA,OAAuB,OAArBsuF,EAAaC,EAAA9oF,OAAA,QAAAC,IAAA6oF,EAAA,GAAAA,EAAA,GAAG,MAAKr5E,EAAAlV,KAAA,EACvB2iF,EAAUiI,KAAK,mBAAoB,CACxDxkF,QAAAA,EACAooF,eAAgBF,IAChB,OAHY,OAARhpF,EAAQ4P,EAAAjP,KAAAiP,EAAAhV,OAAA,SAIPoF,EAASysB,MAAI,wBAAA7c,EAAAzU,OAAA,EAAAwU,EAAA,IACrB,SANQw5E,GAAA,OAAA5H,GAAAnmF,MAAA,KAAAC,UAAA,GAQTswE,cAAY7tE,IAAA1D,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwV,IAAA,IAAAtG,EAAAvJ,EAAAopF,EAAA/tF,UAAA,OAAAhB,IAAAA,KAAA,SAAAyV,GAAA,cAAAA,EAAArV,KAAAqV,EAAApV,MAAA,OAAoB,OAAb6O,EAAM6/E,EAAAjpF,OAAA,QAAAC,IAAAgpF,EAAA,GAAAA,EAAA,GAAG,KAAIt5E,EAAApV,KAAA,EACT2iF,EAAU1hC,IAAI,2BAADl7C,OAA4B8I,IAAS,OAA3D,OAARvJ,EAAQ8P,EAAAnP,KAAAmP,EAAAlV,OAAA,SACPoF,EAASysB,MAAI,wBAAA3c,EAAA3U,OAAA,EAAA0U,EAAA,IACrB,WAHW,OAAA/R,GAAA1C,MAAA,KAAAC,UAAA,IAOD6wB,GAAmB,CAC9BqH,kBAAgB8uD,IAAAjoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA0V,IAAA,IAAA28B,EAAAv/B,EAAAnN,EAAAqpF,EAAAhuF,UAAA,OAAAhB,IAAAA,KAAA,SAAA2V,GAAA,cAAAA,EAAAvV,KAAAuV,EAAAtV,MAAA,OAM4C,OANrCgyC,EAAO28C,EAAAlpF,OAAA,QAAAC,IAAAipF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAC5Bl8E,EAAS,IAAI/J,gBACfspC,EAAQpjC,MAAM6D,EAAOm0C,OAAO,OAAQ5U,EAAQpjC,MAC5CojC,EAAQvW,UAAUhpB,EAAOm0C,OAAO,WAAY5U,EAAQvW,eACjC/1B,IAAnBssC,EAAQlZ,QAAsBrmB,EAAOm0C,OAAO,SAAU5U,EAAQlZ,QAC9DkZ,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,OAC9CiZ,EAAQhC,QAAQv9B,EAAOm0C,OAAO,SAAU5U,EAAQhC,QAAQ16B,EAAAtV,KAAA,EAErC2iF,EAAU1hC,IAAI,kBAADl7C,OAAmB0M,EAAO9J,aAAa,OAA7D,OAARrD,EAAQgQ,EAAArP,KAAAqP,EAAApV,OAAA,SACPoF,EAASysB,MAAI,wBAAAzc,EAAA7U,OAAA,EAAA4U,EAAA,IACrB,WAVe,OAAAsyE,GAAAjnF,MAAA,KAAAC,UAAA,GAahB86D,WAASisB,IAAAhoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4V,IAAA,IAAAwjB,EAAAtmB,EAAAnN,EAAAspF,EAAAjuF,UAAA,OAAAhB,IAAAA,KAAA,SAAA6V,GAAA,cAAAA,EAAAzV,KAAAyV,EAAAxV,MAAA,OAIP,OAJwB+4B,EAAK61D,EAAAnpF,OAAA,QAAAC,IAAAkpF,EAAA,GAAAA,EAAA,GAAG,GAC5Bn8E,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAFkBs4C,EAAAnpF,OAAA,QAAAC,IAAAkpF,EAAA,GAAAA,EAAA,GAAG,GAEVjmF,WACXowB,MAAOA,EAAMpwB,aACb6M,EAAAxV,KAAA,EAEqB2iF,EAAU1hC,IAAI,yBAADl7C,OAA0B0M,EAAO9J,aAAa,OAApE,OAARrD,EAAQkQ,EAAAvP,KAAAuP,EAAAtV,OAAA,SACPoF,EAASysB,MAAI,wBAAAvc,EAAA/U,OAAA,EAAA8U,EAAA,IACrB,WARQ,OAAAmyE,GAAAhnF,MAAA,KAAAC,UAAA,GAUTq6B,YAAUysD,IAAA/nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA8V,EAAOskB,GAAE,IAAAz0B,EAAA,OAAA3F,IAAAA,KAAA,SAAA+V,GAAA,cAAAA,EAAA3V,KAAA2V,EAAA1V,MAAA,cAAA0V,EAAA1V,KAAA,EACI2iF,EAAU0I,IAAI,kBAADtlF,OAAmBg0B,EAAE,UAAQ,OAAnD,OAARz0B,EAAQoQ,EAAAzP,KAAAyP,EAAAxV,OAAA,SACPoF,EAASysB,MAAI,wBAAArc,EAAAjV,OAAA,EAAAgV,EAAA,IACrB,SAHSo5E,GAAA,OAAApH,GAAA/mF,MAAA,KAAAC,UAAA,GAKV+7D,eAAa8qB,IAAA9nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAgW,IAAA,IAAArQ,EAAA,OAAA3F,IAAAA,KAAA,SAAAiW,GAAA,cAAAA,EAAA7V,KAAA6V,EAAA5V,MAAA,cAAA4V,EAAA5V,KAAA,EACU2iF,EAAUiI,KAAK,4BAA2B,OAAnD,OAARtlF,EAAQsQ,EAAA3P,KAAA2P,EAAA1V,OAAA,SACPoF,EAASysB,MAAI,wBAAAnc,EAAAnV,OAAA,EAAAkV,EAAA,IACrB,WAHY,OAAA6xE,GAAA9mF,MAAA,KAAAC,UAAA,GAKbi8D,oBAAkB2qB,IAAA7nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAkW,EAAOkkB,GAAE,IAAAz0B,EAAA,OAAA3F,IAAAA,KAAA,SAAAmW,GAAA,cAAAA,EAAA/V,KAAA+V,EAAA9V,MAAA,cAAA8V,EAAA9V,KAAA,EACJ2iF,EAAUxsB,OAAO,kBAADpwD,OAAmBg0B,IAAK,OAAjD,OAARz0B,EAAQwQ,EAAA7P,KAAA6P,EAAA5V,OAAA,SACPoF,EAASysB,MAAI,wBAAAjc,EAAArV,OAAA,EAAAoV,EAAA,IACrB,SAHiBi5E,GAAA,OAAAvH,GAAA7mF,MAAA,KAAAC,UAAA,GAKlBm8D,yBAAuBwqB,IAAA5nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoW,IAAA,IAAAzQ,EAAA,OAAA3F,IAAAA,KAAA,SAAAsW,GAAA,cAAAA,EAAAlW,KAAAkW,EAAAjW,MAAA,cAAAiW,EAAAjW,KAAA,EACA2iF,EAAUiI,KAAK,8BAA6B,OAArD,OAARtlF,EAAQ2Q,EAAAhQ,KAAAgQ,EAAA/V,OAAA,SACPoF,EAASysB,MAAI,wBAAA9b,EAAAxV,OAAA,EAAAsV,EAAA,IACrB,WAHsB,OAAAuxE,GAAA5mF,MAAA,KAAAC,UAAA,GAKvBouF,sBAAoB1H,IAAA3nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuW,IAAA,IAAA5Q,EAAA,OAAA3F,IAAAA,KAAA,SAAAwW,GAAA,cAAAA,EAAApW,KAAAoW,EAAAnW,MAAA,cAAAmW,EAAAnW,KAAA,EACG2iF,EAAU1hC,IAAI,wBAAuB,OAA9C,OAAR37C,EAAQ6Q,EAAAlQ,KAAAkQ,EAAAjW,OAAA,SACPoF,EAASysB,MAAI,wBAAA5b,EAAA1V,OAAA,EAAAyV,EAAA,IACrB,WAHmB,OAAAmxE,GAAA3mF,MAAA,KAAAC,UAAA,GAKpB8wB,gBAAc21D,IAAA1nF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAqvF,IAAA,IAAA1pF,EAAA,OAAA3F,IAAAA,KAAA,SAAAsvF,GAAA,cAAAA,EAAAlvF,KAAAkvF,EAAAjvF,MAAA,cAAAivF,EAAAjvF,KAAA,EACS2iF,EAAU1hC,IAAI,wBAAuB,OAA9C,OAAR37C,EAAQ2pF,EAAAhpF,KAAAgpF,EAAA/uF,OAAA,SACPoF,EAASysB,MAAI,wBAAAk9D,EAAAxuF,OAAA,EAAAuuF,EAAA,IACrB,WAHa,OAAA5H,GAAA1mF,MAAA,KAAAC,UAAA,IAOH2hD,GAAa,CACxBC,aAAWslC,IAAAnoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAuvF,IAAA,IAAA5pF,EAAA,OAAA3F,IAAAA,KAAA,SAAAwvF,GAAA,cAAAA,EAAApvF,KAAAovF,EAAAnvF,MAAA,cAAAmvF,EAAAnvF,KAAA,EACY2iF,EAAU1hC,IAAI,2BAA0B,OAAjD,OAAR37C,EAAQ6pF,EAAAlpF,KAAAkpF,EAAAjvF,OAAA,SACPoF,EAASysB,MAAI,wBAAAo9D,EAAA1uF,OAAA,EAAAyuF,EAAA,IACrB,WAHU,OAAArH,GAAAnnF,MAAA,KAAAC,UAAA,GAKX4jD,gBAAcqjC,IAAAloF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAyvF,EAAOz/E,GAAQ,IAAArK,EAAA,OAAA3F,IAAAA,KAAA,SAAA0vF,GAAA,cAAAA,EAAAtvF,KAAAsvF,EAAArvF,MAAA,cAAAqvF,EAAArvF,KAAA,EACN2iF,EAAU0I,IAAI,0BAA2B17E,GAAS,OAA3D,OAARrK,EAAQ+pF,EAAAppF,KAAAopF,EAAAnvF,OAAA,SACPoF,EAASysB,MAAI,wBAAAs9D,EAAA5uF,OAAA,EAAA2uF,EAAA,IACrB,SAHaE,GAAA,OAAA1H,GAAAlnF,MAAA,KAAAC,UAAA,IAOHshD,GAAW,CACtBstC,cAAYpH,IAAAzoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA6vF,IAAA,IAAAlqF,EAAA,OAAA3F,IAAAA,KAAA,SAAA8vF,GAAA,cAAAA,EAAA1vF,KAAA0vF,EAAAzvF,MAAA,cAAAyvF,EAAAzvF,KAAA,EACW2iF,EAAU1hC,IAAI,gBAAe,OAAtC,OAAR37C,EAAQmqF,EAAAxpF,KAAAwpF,EAAAvvF,OAAA,SACPoF,EAASysB,MAAI,wBAAA09D,EAAAhvF,OAAA,EAAA+uF,EAAA,IACrB,WAHW,OAAArH,GAAAznF,MAAA,KAAAC,UAAA,GAKZ0jD,UAAQ6jC,IAAAxoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+vF,EAAOC,GAAQ,IAAA/qC,EAAAC,EAAAz+C,EAAAd,EAAA,OAAA3F,IAAAA,KAAA,SAAAiwF,GAAA,cAAAA,EAAA7vF,KAAA6vF,EAAA5vF,MAAA,OAEY,OAA3B4kD,EAAgC+qC,EAAhC/qC,QAASC,EAAuB8qC,EAAvB9qC,UAAWz+C,EAAYupF,EAAZvpF,QAAOwpF,EAAA5vF,KAAA,EACZ2iF,EAAUiI,KAAK,cAAe,CACnDnzB,YAAa7S,EACbC,UAAAA,EACAz+C,QAASA,GAAW,KACpB,OAJY,OAARd,EAAQsqF,EAAA3pF,KAAA2pF,EAAA1vF,OAAA,SAKPoF,EAASysB,MAAI,wBAAA69D,EAAAnvF,OAAA,EAAAivF,EAAA,IACrB,SATOG,GAAA,OAAA3H,GAAAxnF,MAAA,KAAAC,UAAA,GAWRmvF,gBAAc7H,IAAAvoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAowF,IAAA,IAAA//C,EAAAv9B,EAAAnN,EAAA0qF,EAAArvF,UAAA,OAAAhB,IAAAA,KAAA,SAAAswF,GAAA,cAAAA,EAAAlwF,KAAAkwF,EAAAjwF,MAAA,OAKZ,OAL6CgwC,EAAMggD,EAAAvqF,OAAA,QAAAC,IAAAsqF,EAAA,GAAAA,EAAA,GAAG,EAClDv9E,EAAS,IAAI/J,gBAAgB,CACjCkG,KAFuBohF,EAAAvqF,OAAA,QAAAC,IAAAsqF,EAAA,GAAAA,EAAA,GAAG,MAG1Bj3D,OAHsCi3D,EAAAvqF,OAAA,QAAAC,IAAAsqF,EAAA,GAAAA,EAAA,GAAG,IAG5BrnF,WACbqnC,OAAQA,EAAOrnC,aACfsnF,EAAAjwF,KAAA,EACqB2iF,EAAU1hC,IAAI,kBAADl7C,OAAmB0M,EAAO9J,aAAa,OAA7D,OAARrD,EAAQ2qF,EAAAhqF,KAAAgqF,EAAA/vF,OAAA,SACPoF,EAASysB,MAAI,wBAAAk+D,EAAAxvF,OAAA,EAAAsvF,EAAA,IACrB,WARa,OAAA9H,GAAAvnF,MAAA,KAAAC,UAAA,GAUduvF,cAAYlI,IAAAtoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwwF,IAAA,IAAAthF,EAAAvJ,EAAA8qF,EAAAzvF,UAAA,OAAAhB,IAAAA,KAAA,SAAA0wF,GAAA,cAAAA,EAAAtwF,KAAAswF,EAAArwF,MAAA,OAAoB,OAAb6O,EAAMuhF,EAAA3qF,OAAA,QAAAC,IAAA0qF,EAAA,GAAAA,EAAA,GAAG,KAAIC,EAAArwF,KAAA,EACT2iF,EAAU1hC,IAAI,uBAADl7C,OAAwB8I,IAAS,OAAvD,OAARvJ,EAAQ+qF,EAAApqF,KAAAoqF,EAAAnwF,OAAA,SACPoF,EAASysB,MAAI,wBAAAs+D,EAAA5vF,OAAA,EAAA0vF,EAAA,IACrB,WAHW,OAAAnI,GAAAtnF,MAAA,KAAAC,UAAA,GAKZuhD,kBAAgB6lC,IAAAroF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2wF,IAAA,IAAAv3D,EAAAiX,EAAAvC,EAAA7qB,EAAAtd,EAAAmN,EAAA89E,EAAAC,EAAAC,EAAA9vF,UAAA,OAAAhB,IAAAA,KAAA,SAAA+wF,GAAA,cAAAA,EAAA3wF,KAAA2wF,EAAA1wF,MAAA,OAC4D,GADrD+4B,EAAK03D,EAAAhrF,OAAA,QAAAC,IAAA+qF,EAAA,GAAAA,EAAA,GAAG,GAAIzgD,EAAMygD,EAAAhrF,OAAA,QAAAC,IAAA+qF,EAAA,GAAAA,EAAA,GAAG,EAAGhjD,EAAUgjD,EAAAhrF,OAAA,QAAAC,IAAA+qF,EAAA,GAAAA,EAAA,GAAG,KAC5DrwF,QAAQgU,IAAI,gCAAiC,CAAE2kB,MAAAA,EAAOiX,OAAAA,EAAQvC,WAAAA,KAE1DA,EAAY,CAAFijD,EAAA1wF,KAAA,QAGqB,OAD3B4iB,EAAM,mBAAH7c,OAAsB0nC,EAAU,WAAA1nC,OAAUgzB,EAAK,YAAAhzB,OAAWiqC,GACnE5vC,QAAQgU,IAAI,eAAgBwO,GAAK8tE,EAAA1wF,KAAA,EACV2iF,EAAU1hC,IAAIr+B,GAAI,OACG,OADtCtd,EAAQorF,EAAAzqF,KACd7F,QAAQgU,IAAI,gBAAiB9O,EAASysB,MAAM2+D,EAAAxwF,OAAA,SACrCoF,EAASysB,MAAI,OAQa,OAL3Btf,EAAS,IAAI/J,gBAAgB,CACjCqwB,MAAOA,EAAMpwB,WACbqnC,OAAQA,EAAOrnC,aAEXia,EAAM,UAAH7c,OAAa0M,EAAO9J,YAC7BvI,QAAQgU,IAAI,eAAgBwO,GAAK8tE,EAAA1wF,KAAA,EACV2iF,EAAU1hC,IAAIr+B,GAAI,OACG,OADtCtd,EAAQorF,EAAAzqF,KACd7F,QAAQgU,IAAI,gBAAiB9O,EAASysB,MAAM2+D,EAAAxwF,OAAA,SACrCoF,EAASysB,MAAI,wBAAA2+D,EAAAjwF,OAAA,EAAA6vF,EAAA,IAEvB,WAtBe,OAAAvI,GAAArnF,MAAA,KAAAC,UAAA,GAwBhBgwF,cAAY7I,IAAApoF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAixF,IAAA,IAAA5gD,EAAAv9B,EAAAnN,EAAAurF,EAAAlwF,UAAA,OAAAhB,IAAAA,KAAA,SAAAmxF,GAAA,cAAAA,EAAA/wF,KAAA+wF,EAAA9wF,MAAA,OAIV,OAJ6BgwC,EAAM6gD,EAAAprF,OAAA,QAAAC,IAAAmrF,EAAA,GAAAA,EAAA,GAAG,EAClCp+E,EAAS,IAAI/J,gBAAgB,CACjCqwB,OAFsB83D,EAAAprF,OAAA,QAAAC,IAAAmrF,EAAA,GAAAA,EAAA,GAAG,IAEZloF,WACbqnC,OAAQA,EAAOrnC,aACfmoF,EAAA9wF,KAAA,EACqB2iF,EAAU1hC,IAAI,eAADl7C,OAAgB0M,EAAO9J,aAAa,OAA1D,OAARrD,EAAQwrF,EAAA7qF,KAAA6qF,EAAA5wF,OAAA,SACPoF,EAASysB,MAAI,wBAAA++D,EAAArwF,OAAA,EAAAmwF,EAAA,IACrB,WAPW,OAAA9I,GAAApnF,MAAA,KAAAC,UAAA,IAWDmwD,GAAW,CACtBwP,UAAQyoB,IAAArpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoxF,IAAA,IAAA/+C,EAAAv/B,EAAAnN,EAAA0rF,EAAArwF,UAAA,OAAAhB,IAAAA,KAAA,SAAAsxF,GAAA,cAAAA,EAAAlxF,KAAAkxF,EAAAjxF,MAAA,OAMoD,OAN7CgyC,EAAOg/C,EAAAvrF,OAAA,QAAAC,IAAAsrF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACpBv+E,EAAS,IAAI/J,gBACfspC,EAAQpjC,MAAM6D,EAAOm0C,OAAO,OAAQ5U,EAAQpjC,MAC5CojC,EAAQ9R,MAAMztB,EAAOm0C,OAAO,OAAQ5U,EAAQ9R,MAC5C8R,EAAQgP,QAAQvuC,EAAOm0C,OAAO,SAAU5U,EAAQgP,QAChDhP,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,OAC9CiZ,EAAQhC,QAAQv9B,EAAOm0C,OAAO,SAAU5U,EAAQhC,QAAQihD,EAAAjxF,KAAA,EAErC2iF,EAAU1hC,IAAI,UAADl7C,OAAW0M,EAAO9J,aAAa,OAArD,OAARrD,EAAQ2rF,EAAAhrF,KAAAgrF,EAAA/wF,OAAA,SACPoF,EAASysB,MAAI,wBAAAk/D,EAAAxwF,OAAA,EAAAswF,EAAA,IACrB,WAVO,OAAAhI,GAAAroF,MAAA,KAAAC,UAAA,GAYRuwF,YAAUpI,IAAAppF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwxF,EAAOtqF,GAAQ,IAAAvB,EAAA,OAAA3F,IAAAA,KAAA,SAAAyxF,GAAA,cAAAA,EAAArxF,KAAAqxF,EAAApxF,MAAA,cAAAoxF,EAAApxF,KAAA,EACF2iF,EAAUiI,KAAK,SAAU/jF,GAAS,OAA3C,OAARvB,EAAQ8rF,EAAAnrF,KAAAmrF,EAAAlxF,OAAA,SACPoF,EAASysB,MAAI,wBAAAq/D,EAAA3wF,OAAA,EAAA0wF,EAAA,IACrB,SAHSE,GAAA,OAAAvI,GAAApoF,MAAA,KAAAC,UAAA,GAKVu+E,SAAO2J,IAAAnpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA2xF,EAAOl+E,GAAM,IAAA9N,EAAA,OAAA3F,IAAAA,KAAA,SAAA4xF,GAAA,cAAAA,EAAAxxF,KAAAwxF,EAAAvxF,MAAA,cAAAuxF,EAAAvxF,KAAA,EACG2iF,EAAU1hC,IAAI,UAADl7C,OAAWqN,IAAS,OAA1C,OAAR9N,EAAQisF,EAAAtrF,KAAAsrF,EAAArxF,OAAA,SACPoF,EAASysB,MAAI,wBAAAw/D,EAAA9wF,OAAA,EAAA6wF,EAAA,IACrB,SAHME,GAAA,OAAA3I,GAAAnoF,MAAA,KAAAC,UAAA,GAKP8wF,YAAU7I,IAAAlpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+xF,EAAOt+E,EAAQvM,GAAQ,IAAAvB,EAAA,OAAA3F,IAAAA,KAAA,SAAAgyF,GAAA,cAAAA,EAAA5xF,KAAA4xF,EAAA3xF,MAAA,cAAA2xF,EAAA3xF,KAAA,EACV2iF,EAAU0I,IAAI,UAADtlF,OAAWqN,GAAUvM,GAAS,OAApD,OAARvB,EAAQqsF,EAAA1rF,KAAA0rF,EAAAzxF,OAAA,SACPoF,EAASysB,MAAI,wBAAA4/D,EAAAlxF,OAAA,EAAAixF,EAAA,IACrB,SAHSE,EAAAC,GAAA,OAAAjJ,GAAAloF,MAAA,KAAAC,UAAA,GAKVmxF,YAAUnJ,IAAAjpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAoyF,EAAO3+E,GAAM,IAAA9N,EAAA,OAAA3F,IAAAA,KAAA,SAAAqyF,GAAA,cAAAA,EAAAjyF,KAAAiyF,EAAAhyF,MAAA,cAAAgyF,EAAAhyF,KAAA,EACA2iF,EAAUxsB,OAAO,UAADpwD,OAAWqN,IAAS,OAA7C,OAAR9N,EAAQ0sF,EAAA/rF,KAAA+rF,EAAA9xF,OAAA,SACPoF,EAASysB,MAAI,wBAAAigE,EAAAvxF,OAAA,EAAAsxF,EAAA,IACrB,SAHSE,GAAA,OAAAtJ,GAAAjoF,MAAA,KAAAC,UAAA,GAKVuxF,UAAQxJ,IAAAhpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwyF,EAAO/+E,GAAM,IAAAhN,EAAAd,EAAA8sF,EAAAzxF,UAAA,OAAAhB,IAAAA,KAAA,SAAA0yF,GAAA,cAAAA,EAAAtyF,KAAAsyF,EAAAryF,MAAA,OAAc,OAAZoG,EAAOgsF,EAAA3sF,OAAA,QAAAC,IAAA0sF,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAryF,KAAA,EACZ2iF,EAAUiI,KAAK,UAAD7kF,OAAWqN,EAAM,UAAU,CAAEhN,QAAAA,IAAU,OAA9D,OAARd,EAAQ+sF,EAAApsF,KAAAosF,EAAAnyF,OAAA,SACPoF,EAASysB,MAAI,wBAAAsgE,EAAA5xF,OAAA,EAAA0xF,EAAA,IACrB,SAHOG,GAAA,OAAA5J,GAAAhoF,MAAA,KAAAC,UAAA,GAKR4xF,WAAS9J,IAAA/oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA6yF,EAAOp/E,GAAM,IAAA9N,EAAA,OAAA3F,IAAAA,KAAA,SAAA8yF,GAAA,cAAAA,EAAA1yF,KAAA0yF,EAAAzyF,MAAA,cAAAyyF,EAAAzyF,KAAA,EACC2iF,EAAUxsB,OAAO,UAADpwD,OAAWqN,EAAM,WAAS,OAAnD,OAAR9N,EAAQmtF,EAAAxsF,KAAAwsF,EAAAvyF,OAAA,SACPoF,EAASysB,MAAI,wBAAA0gE,EAAAhyF,OAAA,EAAA+xF,EAAA,IACrB,SAHQE,GAAA,OAAAjK,GAAA/nF,MAAA,KAAAC,UAAA,GAKTgyF,YAAUnK,IAAA9oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAizF,IAAA,IAAAttF,EAAA,OAAA3F,IAAAA,KAAA,SAAAkzF,GAAA,cAAAA,EAAA9yF,KAAA8yF,EAAA7yF,MAAA,cAAA6yF,EAAA7yF,KAAA,EACa2iF,EAAU1hC,IAAI,aAAY,OAAnC,OAAR37C,EAAQutF,EAAA5sF,KAAA4sF,EAAA3yF,OAAA,SACPoF,EAASysB,MAAI,wBAAA8gE,EAAApyF,OAAA,EAAAmyF,EAAA,IACrB,WAHS,OAAApK,GAAA9nF,MAAA,KAAAC,UAAA,GAKVmyF,gBAAcvK,IAAA7oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAozF,EAAO3/E,GAAM,IAAA9N,EAAA,OAAA3F,IAAAA,KAAA,SAAAqzF,GAAA,cAAAA,EAAAjzF,KAAAizF,EAAAhzF,MAAA,cAAAgzF,EAAAhzF,KAAA,EACJ2iF,EAAU1hC,IAAI,UAADl7C,OAAWqN,EAAM,aAAW,OAAlD,OAAR9N,EAAQ0tF,EAAA/sF,KAAA+sF,EAAA9yF,OAAA,SACPoF,EAASysB,MAAI,wBAAAihE,EAAAvyF,OAAA,EAAAsyF,EAAA,IACrB,SAHaE,GAAA,OAAA1K,GAAA7nF,MAAA,KAAAC,UAAA,GAKduyF,qBAAmB5K,IAAA5oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAwzF,EAAO//E,GAAM,IAAA9N,EAAA,OAAA3F,IAAAA,KAAA,SAAAyzF,GAAA,cAAAA,EAAArzF,KAAAqzF,EAAApzF,MAAA,cAAAozF,EAAApzF,KAAA,EACT2iF,EAAU1hC,IAAI,UAADl7C,OAAWqN,EAAM,kBAAgB,OAAvD,OAAR9N,EAAQ8tF,EAAAntF,KAAAmtF,EAAAlzF,OAAA,SACPoF,EAASysB,MAAI,wBAAAqhE,EAAA3yF,OAAA,EAAA0yF,EAAA,IACrB,SAHkBE,GAAA,OAAA/K,GAAA5nF,MAAA,KAAAC,UAAA,GAKnB2yF,mBAAiBjL,IAAA3oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA4zF,EAAOngF,EAAQogF,EAAe19B,GAAM,IAAA4B,EAAApyD,EAAAmuF,EAAA9yF,UAAA,OAAAhB,IAAAA,KAAA,SAAA+zF,GAAA,cAAAA,EAAA3zF,KAAA2zF,EAAA1zF,MAAA,OAAa,OAAX03D,EAAM+7B,EAAAhuF,OAAA,QAAAC,IAAA+tF,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAA1zF,KAAA,EAC3C2iF,EAAU0I,IAAI,UAADtlF,OAAWqN,EAAM,kBAAArN,OAAiBytF,GAAiB,CACrF19B,OAAAA,EACA4B,OAAAA,IACA,OAHY,OAARpyD,EAAQouF,EAAAztF,KAAAytF,EAAAxzF,OAAA,SAIPoF,EAASysB,MAAI,wBAAA2hE,EAAAjzF,OAAA,EAAA8yF,EAAA,IACrB,SANgBI,EAAAC,EAAAC,GAAA,OAAAxL,GAAA3nF,MAAA,KAAAC,UAAA,GAQjBowD,oBAAkBq3B,IAAA1oF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAm0F,IAAA,IAAAxuF,EAAA8xC,EAAA+L,EAAAxuC,EAAA,OAAAhV,IAAAA,KAAA,SAAAo0F,GAAA,cAAAA,EAAAh0F,KAAAg0F,EAAA/zF,MAAA,cAAA+zF,EAAAh0F,KAAA,EAAAg0F,EAAA/zF,KAAA,EAEO2iF,EAAU1hC,IAAI,uBAAsB,OAA7C,OAAR37C,EAAQyuF,EAAA9tF,KAAA8tF,EAAA7zF,OAAA,SAEP,CACL8zF,QAAS1uF,EAASysB,KAAKqgC,cACvB0G,KAAMxzD,EAASysB,KAAK+mC,OACrB,UAAAi7B,EAAAh0F,KAAA,EAAA4U,EAAAo/E,EAAA,SAG8B,OAAb,QAAd38C,EAAAziC,EAAMrP,gBAAQ,IAAA8xC,OAAA,EAAdA,EAAgB/wC,SAA6C,OAAb,QAAd88C,EAAAxuC,EAAMrP,gBAAQ,IAAA69C,OAAA,EAAdA,EAAgB98C,QAAc,CAAA0tF,EAAA/zF,KAAA,eAAA+zF,EAAA7zF,OAAA,SAC3D,CAAE8zF,SAAS,EAAOl7B,KAAM,OAAM,aAAAnkD,EAAA,wBAAAo/E,EAAAtzF,OAAA,EAAAqzF,EAAA,iBAI1C,WAfiB,OAAA1L,GAAA1nF,MAAA,KAAAC,UAAA,GAiBlB0H,WAAS3D,IAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAs0F,IAAA,IAAAjiD,EAAAv/B,EAAAnN,EAAA4uF,EAAAvzF,UAAA,OAAAhB,IAAAA,KAAA,SAAAw0F,GAAA,cAAAA,EAAAp0F,KAAAo0F,EAAAn0F,MAAA,OAKgD,OALzCgyC,EAAOkiD,EAAAzuF,OAAA,QAAAC,IAAAwuF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACrBzhF,EAAS,IAAI/J,gBACfspC,EAAQ9R,MAAMztB,EAAOm0C,OAAO,OAAQ5U,EAAQ9R,MAC5C8R,EAAQpjC,MAAM6D,EAAOm0C,OAAO,OAAQ5U,EAAQpjC,MAC5CojC,EAAQgP,QAAQvuC,EAAOm0C,OAAO,SAAU5U,EAAQgP,QAChDhP,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,OAAOo7D,EAAAn0F,KAAA,EAElC2iF,EAAU1hC,IAAI,4BAADl7C,OAA6B0M,EAAO9J,aAAa,OAAvE,OAARrD,EAAQ6uF,EAAAluF,KAAAkuF,EAAAj0F,OAAA,SACPoF,EAASysB,MAAI,wBAAAoiE,EAAA1zF,OAAA,EAAAwzF,EAAA,IACrB,WATQ,OAAAvvF,GAAAhE,MAAA,KAAAC,UAAA,GAWTigE,WAASv+D,IAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAy0F,EAAOtrF,GAAO,IAAAxD,EAAA,OAAA3F,IAAAA,KAAA,SAAA00F,GAAA,cAAAA,EAAAt0F,KAAAs0F,EAAAr0F,MAAA,cAAAq0F,EAAAr0F,KAAA,EACA2iF,EAAUiI,KAAK,4BAAD7kF,OAA6B+C,EAAO,UAAQ,OAAnE,OAARxD,EAAQ+uF,EAAApuF,KAAAouF,EAAAn0F,OAAA,SACPoF,EAASysB,MAAI,wBAAAsiE,EAAA5zF,OAAA,EAAA2zF,EAAA,IACrB,SAHQE,GAAA,OAAAjyF,GAAA3B,MAAA,KAAAC,UAAA,GAKT4zF,YAAUnyF,IAAA1C,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA60F,EAAO1rF,GAAO,IAAAxD,EAAA,OAAA3F,IAAAA,KAAA,SAAA80F,GAAA,cAAAA,EAAA10F,KAAA00F,EAAAz0F,MAAA,cAAAy0F,EAAAz0F,KAAA,EACD2iF,EAAUxsB,OAAO,4BAADpwD,OAA6B+C,EAAO,WAAS,OAAtE,OAARxD,EAAQmvF,EAAAxuF,KAAAwuF,EAAAv0F,OAAA,SACPoF,EAASysB,MAAI,wBAAA0iE,EAAAh0F,OAAA,EAAA+zF,EAAA,IACrB,SAHSE,GAAA,OAAAtyF,GAAA1B,MAAA,KAAAC,UAAA,IAOC4iD,GAAmB,CAC9BoxC,UAAQnL,IAAA9pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAi1F,IAAA,IAAAtvF,EAAA,OAAA3F,IAAAA,KAAA,SAAAk1F,GAAA,cAAAA,EAAA90F,KAAA80F,EAAA70F,MAAA,cAAA60F,EAAA70F,KAAA,EACe2iF,EAAU1hC,IAAI,0BAAyB,OAAhD,OAAR37C,EAAQuvF,EAAA5uF,KAAA4uF,EAAA30F,OAAA,SACPoF,EAASysB,MAAI,wBAAA8iE,EAAAp0F,OAAA,EAAAm0F,EAAA,IACrB,WAHO,OAAApL,GAAA9oF,MAAA,KAAAC,UAAA,GAKRmkE,WAASykB,IAAA7pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAm1F,EAAOC,GAAQ,IAAAzvF,EAAA,OAAA3F,IAAAA,KAAA,SAAAq1F,GAAA,cAAAA,EAAAj1F,KAAAi1F,EAAAh1F,MAAA,cAAAg1F,EAAAh1F,KAAA,EACD2iF,EAAUiI,KAAK,wBAAyBmK,GAAS,OAA1D,OAARzvF,EAAQ0vF,EAAA/uF,KAAA+uF,EAAA90F,OAAA,SACPoF,EAASysB,MAAI,wBAAAijE,EAAAv0F,OAAA,EAAAq0F,EAAA,IACrB,SAHQG,GAAA,OAAA1L,GAAA7oF,MAAA,KAAAC,UAAA,GAKT6iD,WAAS8lC,IAAA5pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAu1F,IAAA,IAAA5vF,EAAA,OAAA3F,IAAAA,KAAA,SAAAw1F,GAAA,cAAAA,EAAAp1F,KAAAo1F,EAAAn1F,MAAA,cAAAm1F,EAAAn1F,KAAA,EACc2iF,EAAU1hC,IAAI,0BAAyB,OAAhD,OAAR37C,EAAQ6vF,EAAAlvF,KAAAkvF,EAAAj1F,OAAA,SACPoF,EAASysB,MAAI,wBAAAojE,EAAA10F,OAAA,EAAAy0F,EAAA,IACrB,WAHQ,OAAA5L,GAAA5oF,MAAA,KAAAC,UAAA,GAKT+jE,YAAU2kB,IAAA3pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAy1F,IAAA,IAAAplD,EAAAv9B,EAAAnN,EAAA+vF,EAAA10F,UAAA,OAAAhB,IAAAA,KAAA,SAAA21F,GAAA,cAAAA,EAAAv1F,KAAAu1F,EAAAt1F,MAAA,OAIR,OAJ2BgwC,EAAMqlD,EAAA5vF,OAAA,QAAAC,IAAA2vF,EAAA,GAAAA,EAAA,GAAG,EAChC5iF,EAAS,IAAI/J,gBAAgB,CACjCqwB,OAFoBs8D,EAAA5vF,OAAA,QAAAC,IAAA2vF,EAAA,GAAAA,EAAA,GAAG,IAEV1sF,WACbqnC,OAAQA,EAAOrnC,aACf2sF,EAAAt1F,KAAA,EACqB2iF,EAAU1hC,IAAI,0BAADl7C,OAA2B0M,EAAO9J,aAAa,OAArE,OAARrD,EAAQgwF,EAAArvF,KAAAqvF,EAAAp1F,OAAA,SACPoF,EAASysB,MAAI,wBAAAujE,EAAA70F,OAAA,EAAA20F,EAAA,IACrB,WAPS,OAAA/L,GAAA3oF,MAAA,KAAAC,UAAA,GAUVqkE,QAAMokB,IAAA1pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA41F,IAAA,IAAA79B,EAAApyD,EAAAkwF,EAAA70F,UAAA,OAAAhB,IAAAA,KAAA,SAAA81F,GAAA,cAAAA,EAAA11F,KAAA01F,EAAAz1F,MAAA,OAAkB,OAAX03D,EAAM89B,EAAA/vF,OAAA,QAAAC,IAAA8vF,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAz1F,KAAA,EACD2iF,EAAUiI,KAAK,wBAAyB,CAAElzB,OAAAA,IAAS,OAA5D,OAARpyD,EAAQmwF,EAAAxvF,KAAAwvF,EAAAv1F,OAAA,SACPoF,EAASysB,MAAI,wBAAA0jE,EAAAh1F,OAAA,EAAA80F,EAAA,IACrB,WAHK,OAAAnM,GAAA1oF,MAAA,KAAAC,UAAA,GAKNskE,cAAYkkB,IAAAzpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+1F,EAAOC,GAAI,IAAArwF,EAAA,OAAA3F,IAAAA,KAAA,SAAAi2F,GAAA,cAAAA,EAAA71F,KAAA61F,EAAA51F,MAAA,cAAA41F,EAAA51F,KAAA,EACA2iF,EAAUiI,KAAK,gCAAiC,CAAE+K,KAAAA,IAAO,OAAlE,OAARrwF,EAAQswF,EAAA3vF,KAAA2vF,EAAA11F,OAAA,SACPoF,EAASysB,MAAI,wBAAA6jE,EAAAn1F,OAAA,EAAAi1F,EAAA,IACrB,SAHWG,GAAA,OAAA1M,GAAAzoF,MAAA,KAAAC,UAAA,GAKZm1F,aAAW5M,IAAAxpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAo2F,IAAA,IAAAzwF,EAAA,OAAA3F,IAAAA,KAAA,SAAAq2F,GAAA,cAAAA,EAAAj2F,KAAAi2F,EAAAh2F,MAAA,cAAAg2F,EAAAh2F,KAAA,EACY2iF,EAAU1hC,IAAI,0BAAyB,OAAhD,OAAR37C,EAAQ0wF,EAAA/vF,KAAA+vF,EAAA91F,OAAA,SACPoF,EAASysB,MAAI,wBAAAikE,EAAAv1F,OAAA,EAAAs1F,EAAA,IACrB,WAHU,OAAA7M,GAAAxoF,MAAA,KAAAC,UAAA,GAKXs1F,YAAUhN,IAAAvpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAu2F,EAAOC,GAAW,IAAAC,EAAA9wF,EAAA+wF,EAAA11F,UAAA,OAAAhB,IAAAA,KAAA,SAAA22F,GAAA,cAAAA,EAAAv2F,KAAAu2F,EAAAt2F,MAAA,OAAoB,OAAlBo2F,EAAcC,EAAA5wF,OAAA,QAAAC,IAAA2wF,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAt2F,KAAA,EACzB2iF,EAAUiI,KAAK,6BAA8B,CAClE2L,cAAeJ,EACfpwB,gBAAiBqwB,IACjB,OAHY,OAAR9wF,EAAQgxF,EAAArwF,KAAAqwF,EAAAp2F,OAAA,SAIPoF,EAASysB,MAAI,wBAAAukE,EAAA71F,OAAA,EAAAy1F,EAAA,IACrB,SANSM,GAAA,OAAAvN,GAAAvoF,MAAA,KAAAC,UAAA,GAWV81F,YAAUzN,IAAAtpF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+2F,IAAA,IAAApxF,EAAA,OAAA3F,IAAAA,KAAA,SAAAg3F,GAAA,cAAAA,EAAA52F,KAAA42F,EAAA32F,MAAA,cAAA22F,EAAA32F,KAAA,EACa2iF,EAAU1hC,IAAI,kBAAiB,OAAxC,OAAR37C,EAAQqxF,EAAA1wF,KAAA0wF,EAAAz2F,OAAA,SACPoF,EAASysB,MAAI,wBAAA4kE,EAAAl2F,OAAA,EAAAi2F,EAAA,IACrB,WAHS,OAAA1N,GAAAtoF,MAAA,KAAAC,UAAA,IAOCwzC,GAAY,CACvBi4C,eAAapC,IAAAtqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAi3F,EAAOt7D,GAAQ,IAAAh2B,EAAA,OAAA3F,IAAAA,KAAA,SAAAk3F,GAAA,cAAAA,EAAA92F,KAAA82F,EAAA72F,MAAA,cAAA62F,EAAA72F,KAAA,EACL2iF,EAAU1hC,IAAI,WAADl7C,OAAYu1B,IAAW,OAA7C,OAARh2B,EAAQuxF,EAAA5wF,KAAA4wF,EAAA32F,OAAA,SACPoF,EAASysB,MAAI,wBAAA8kE,EAAAp2F,OAAA,EAAAm2F,EAAA,IACrB,SAHYE,GAAA,OAAA9M,GAAAtpF,MAAA,KAAAC,UAAA,GAKbyzC,UAAQ21C,IAAArqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAo3F,EAAOz7D,EAAU3c,GAAK,IAAArZ,EAAA,OAAA3F,IAAAA,KAAA,SAAAq3F,GAAA,cAAAA,EAAAj3F,KAAAi3F,EAAAh3F,MAAA,cAAAg3F,EAAAh3F,KAAA,EACP2iF,EAAUiI,KAAK,WAAD7kF,OAAYu1B,GAAY,CAAE3c,MAAAA,IAAQ,OAAzD,OAARrZ,EAAQ0xF,EAAA/wF,KAAA+wF,EAAA92F,OAAA,SACPoF,EAASysB,MAAI,wBAAAilE,EAAAv2F,OAAA,EAAAs2F,EAAA,IACrB,SAHOE,EAAAC,GAAA,OAAAnN,GAAArpF,MAAA,KAAAC,UAAA,GAKR8zC,cAAYq1C,IAAApqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAw3F,EAAO77D,GAAQ,IAAAh2B,EAAA,OAAA3F,IAAAA,KAAA,SAAAy3F,GAAA,cAAAA,EAAAr3F,KAAAq3F,EAAAp3F,MAAA,cAAAo3F,EAAAp3F,KAAA,EACJ2iF,EAAUxsB,OAAO,WAADpwD,OAAYu1B,IAAW,OAAhD,OAARh2B,EAAQ8xF,EAAAnxF,KAAAmxF,EAAAl3F,OAAA,SACPoF,EAASysB,MAAI,wBAAAqlE,EAAA32F,OAAA,EAAA02F,EAAA,IACrB,SAHWE,GAAA,OAAAvN,GAAAppF,MAAA,KAAAC,UAAA,GAKZymE,aAAWyiB,IAAAnqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA23F,IAAA,IAAAtlD,EAAAv/B,EAAAnN,EAAAiyF,EAAA52F,UAAA,OAAAhB,IAAAA,KAAA,SAAA63F,GAAA,cAAAA,EAAAz3F,KAAAy3F,EAAAx3F,MAAA,OAGyD,OAHlDgyC,EAAOulD,EAAA9xF,OAAA,QAAAC,IAAA6xF,EAAA,GAAAA,EAAA,GAAG,CAAC,EACvB9kF,EAAS,IAAI/J,gBACfspC,EAAQnjC,QAAQ4D,EAAOm0C,OAAO,SAAU5U,EAAQnjC,QAChDmjC,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,MAAMpwB,YAAY6uF,EAAAx3F,KAAA,EAE7C2iF,EAAU1hC,IAAI,qBAADl7C,OAAsB0M,EAAO9J,aAAa,OAAhE,OAARrD,EAAQkyF,EAAAvxF,KAAAuxF,EAAAt3F,OAAA,SACPoF,EAASysB,MAAI,wBAAAylE,EAAA/2F,OAAA,EAAA62F,EAAA,IACrB,WAPU,OAAAzN,GAAAnpF,MAAA,KAAAC,UAAA,GASX82F,mBAAiB7N,IAAAlqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+3F,IAAA,IAAA3+D,EAAAtmB,EAAAnN,EAAAqyF,EAAAh3F,UAAA,OAAAhB,IAAAA,KAAA,SAAAi4F,GAAA,cAAAA,EAAA73F,KAAA63F,EAAA53F,MAAA,OAIf,OAJgC+4B,EAAK4+D,EAAAlyF,OAAA,QAAAC,IAAAiyF,EAAA,GAAAA,EAAA,GAAG,GACpCllF,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAF0BqhD,EAAAlyF,OAAA,QAAAC,IAAAiyF,EAAA,GAAAA,EAAA,GAAG,GAElBhvF,WACXowB,MAAOA,EAAMpwB,aACbivF,EAAA53F,KAAA,EACqB2iF,EAAU1hC,IAAI,oBAADl7C,OAAqB0M,EAAO9J,aAAa,OAA/D,OAARrD,EAAQsyF,EAAA3xF,KAAA2xF,EAAA13F,OAAA,SACPoF,EAASysB,MAAI,wBAAA6lE,EAAAn3F,OAAA,EAAAi3F,EAAA,IACrB,WAPgB,OAAA9N,GAAAlpF,MAAA,KAAAC,UAAA,GASjBk3F,sBAAoBlO,IAAAjqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAm4F,IAAA,IAAA/+D,EAAAtmB,EAAAnN,EAAAyyF,EAAAp3F,UAAA,OAAAhB,IAAAA,KAAA,SAAAq4F,GAAA,cAAAA,EAAAj4F,KAAAi4F,EAAAh4F,MAAA,OAIlB,OAJmC+4B,EAAKg/D,EAAAtyF,OAAA,QAAAC,IAAAqyF,EAAA,GAAAA,EAAA,GAAG,GACvCtlF,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAF6ByhD,EAAAtyF,OAAA,QAAAC,IAAAqyF,EAAA,GAAAA,EAAA,GAAG,GAErBpvF,WACXowB,MAAOA,EAAMpwB,aACbqvF,EAAAh4F,KAAA,EACqB2iF,EAAU1hC,IAAI,uBAADl7C,OAAwB0M,EAAO9J,aAAa,OAAlE,OAARrD,EAAQ0yF,EAAA/xF,KAAA+xF,EAAA93F,OAAA,SACPoF,EAASysB,MAAI,wBAAAimE,EAAAv3F,OAAA,EAAAq3F,EAAA,IACrB,WAPmB,OAAAnO,GAAAjpF,MAAA,KAAAC,UAAA,GAUpBmmE,gBAAc4iB,IAAAhqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAs4F,IAAA,IAAAjmD,EAAAv/B,EAAAnN,EAAA4yF,EAAAv3F,UAAA,OAAAhB,IAAAA,KAAA,SAAAw4F,GAAA,cAAAA,EAAAp4F,KAAAo4F,EAAAn4F,MAAA,OAKsD,OAL/CgyC,EAAOkmD,EAAAzyF,OAAA,QAAAC,IAAAwyF,EAAA,GAAAA,EAAA,GAAG,CAAC,EAC1BzlF,EAAS,IAAI/J,gBACfspC,EAAQnjC,QAAQ4D,EAAOm0C,OAAO,SAAU5U,EAAQnjC,QAChDmjC,EAAQ60B,UAAUp0D,EAAOm0C,OAAO,WAAY5U,EAAQ60B,UACpD70B,EAAQ9R,MAAMztB,EAAOm0C,OAAO,OAAQ5U,EAAQ9R,MAC5C8R,EAAQjZ,OAAOtmB,EAAOm0C,OAAO,QAAS5U,EAAQjZ,MAAMpwB,YAAYwvF,EAAAn4F,KAAA,EAE7C2iF,EAAU1hC,IAAI,uBAADl7C,OAAwB0M,EAAO9J,aAAa,OAAlE,OAARrD,EAAQ6yF,EAAAlyF,KAAAkyF,EAAAj4F,OAAA,SACPoF,EAASysB,MAAI,wBAAAomE,EAAA13F,OAAA,EAAAw3F,EAAA,IACrB,WATa,OAAAvO,GAAAhpF,MAAA,KAAAC,UAAA,GAWdsmE,YAAUwiB,IAAA/pF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAy4F,IAAA,IAAA9yF,EAAA,OAAA3F,IAAAA,KAAA,SAAA04F,GAAA,cAAAA,EAAAt4F,KAAAs4F,EAAAr4F,MAAA,cAAAq4F,EAAAr4F,KAAA,EACa2iF,EAAU1hC,IAAI,oBAAmB,OAA1C,OAAR37C,EAAQ+yF,EAAApyF,KAAAoyF,EAAAn4F,OAAA,SACPoF,EAASysB,MAAI,wBAAAsmE,EAAA53F,OAAA,EAAA23F,EAAA,IACrB,WAHS,OAAA3O,GAAA/oF,MAAA,KAAAC,UAAA,IAOCo7C,GAAe,CAC1BC,oBAAkBquC,IAAA3qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA24F,EAAO78C,EAAYC,GAAQ,IAAAp2C,EAAA,OAAA3F,IAAAA,KAAA,SAAA44F,GAAA,cAAAA,EAAAx4F,KAAAw4F,EAAAv4F,MAAA,cAAAu4F,EAAAv4F,KAAA,EACtB2iF,EAAU1hC,IAAI,cAADl7C,OAAe01C,EAAU,KAAA11C,OAAI21C,IAAW,OAA9D,OAARp2C,EAAQizF,EAAAtyF,KAAAsyF,EAAAr4F,OAAA,SACPoF,EAASysB,MAAI,wBAAAwmE,EAAA93F,OAAA,EAAA63F,EAAA,IACrB,SAHiBE,EAAAC,GAAA,OAAApO,GAAA3pF,MAAA,KAAAC,UAAA,GAKlBw7C,aAAWiuC,IAAA1qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+4F,EAAOj9C,EAAYC,EAAUU,GAAY,IAAAz9B,EAAArZ,EAAAqzF,EAAAh4F,UAAA,OAAAhB,IAAAA,KAAA,SAAAi5F,GAAA,cAAAA,EAAA74F,KAAA64F,EAAA54F,MAAA,OAAW,OAAT2e,EAAKg6E,EAAAlzF,OAAA,QAAAC,IAAAizF,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAA54F,KAAA,EACxC2iF,EAAUiI,KAAK,cAAD7kF,OAAe01C,EAAU,KAAA11C,OAAI21C,GAAY,CAC5Em9C,cAAez8C,EACfz9B,MAAAA,IACA,OAHY,OAARrZ,EAAQszF,EAAA3yF,KAAA2yF,EAAA14F,OAAA,SAIPoF,EAASysB,MAAI,wBAAA6mE,EAAAn4F,OAAA,EAAAi4F,EAAA,IACrB,SANUI,EAAAC,EAAAC,GAAA,OAAA5O,GAAA1pF,MAAA,KAAAC,UAAA,GAQX27C,gBAAc6tC,IAAAzqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAs5F,EAAOx9C,EAAYC,GAAQ,IAAAp2C,EAAA,OAAA3F,IAAAA,KAAA,SAAAu5F,GAAA,cAAAA,EAAAn5F,KAAAm5F,EAAAl5F,MAAA,cAAAk5F,EAAAl5F,KAAA,EAClB2iF,EAAUxsB,OAAO,cAADpwD,OAAe01C,EAAU,KAAA11C,OAAI21C,IAAW,OAAjE,OAARp2C,EAAQ4zF,EAAAjzF,KAAAizF,EAAAh5F,OAAA,SACPoF,EAASysB,MAAI,wBAAAmnE,EAAAz4F,OAAA,EAAAw4F,EAAA,IACrB,SAHaE,EAAAC,GAAA,OAAAjP,GAAAzpF,MAAA,KAAAC,UAAA,GAKd04F,kBAAgBnP,IAAAxqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA25F,EAAOh+D,GAAQ,IAAAvC,EAAA0iB,EAAAhpC,EAAAnN,EAAAi0F,EAAA54F,UAAA,OAAAhB,IAAAA,KAAA,SAAA65F,GAAA,cAAAA,EAAAz5F,KAAAy5F,EAAAx5F,MAAA,OAO9B,OAP0C+4B,EAAKwgE,EAAA9zF,OAAA,QAAAC,IAAA6zF,EAAA,GAAAA,EAAA,GAAG,GAAI99C,EAAU89C,EAAA9zF,OAAA,QAAAC,IAAA6zF,EAAA,GAAAA,EAAA,GAAG,KAC9D9mF,EAAS,IAAI/J,gBAAgB,CACjC4tC,MAFmCijD,EAAA9zF,OAAA,QAAAC,IAAA6zF,EAAA,GAAAA,EAAA,GAAG,GAE3B5wF,WACXowB,MAAOA,EAAMpwB,aAEX8yC,GACFhpC,EAAOm0C,OAAO,cAAenL,GAC9B+9C,EAAAx5F,KAAA,EACsB2iF,EAAU1hC,IAAI,mBAADl7C,OAAoBu1B,EAAQ,KAAAv1B,OAAI0M,EAAO9J,aAAa,OAA1E,OAARrD,EAAQk0F,EAAAvzF,KAAAuzF,EAAAt5F,OAAA,SACPoF,EAASysB,MAAI,wBAAAynE,EAAA/4F,OAAA,EAAA64F,EAAA,IACrB,SAVeG,GAAA,OAAAvP,GAAAxpF,MAAA,KAAAC,UAAA,GAYhB+4F,kBAAgBzP,IAAAvqF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAg6F,EAAOl+C,EAAYC,GAAQ,IAAAp2C,EAAA,OAAA3F,IAAAA,KAAA,SAAAi6F,GAAA,cAAAA,EAAA75F,KAAA65F,EAAA55F,MAAA,cAAA45F,EAAA55F,KAAA,EACpB2iF,EAAU1hC,IAAI,oBAADl7C,OAAqB01C,EAAU,KAAA11C,OAAI21C,IAAW,OAApE,OAARp2C,EAAQs0F,EAAA3zF,KAAA2zF,EAAA15F,OAAA,SACPoF,EAASysB,MAAI,wBAAA6nE,EAAAn5F,OAAA,EAAAk5F,EAAA,IACrB,SAHeE,EAAAC,GAAA,OAAA7P,GAAAvpF,MAAA,KAAAC,UAAA,IAOLo5F,GAAa,CACxBh2C,cAAY0mC,IAAA/qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAq6F,EAAOttF,GAAQ,IAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAAs6F,GAAA,cAAAA,EAAAl6F,KAAAk6F,EAAAj6F,MAAA,cAAAi6F,EAAAj6F,KAAA,EACJ2iF,EAAUiI,KAAK,kBAAmBl+E,EAAU,CACjE5G,QAAS,CAAE,eAAgB,yBAC3B,OAOD,OATKR,EAAQ20F,EAAAh0F,MAKD8rB,KAAK4B,SAAWruB,EAASysB,KAAK5kB,UACzCqvB,GAAQ2uD,gBAAgB,CACtBj4D,IAAK5tB,EAASysB,KAAK5kB,WAEtB8sF,EAAA/5F,OAAA,SAEMoF,EAASysB,MAAI,wBAAAkoE,EAAAx5F,OAAA,EAAAu5F,EAAA,IACrB,SAbWE,GAAA,OAAAzP,GAAA/pF,MAAA,KAAAC,UAAA,GAeZw5F,cAAY3P,IAAA9qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAy6F,EAAO1tF,GAAQ,IAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAA06F,GAAA,cAAAA,EAAAt6F,KAAAs6F,EAAAr6F,MAAA,cAAAq6F,EAAAr6F,KAAA,EACJ2iF,EAAUiI,KAAK,kBAAmBl+E,EAAU,CACjE5G,QAAS,CAAE,eAAgB,yBAC3B,OAFY,OAARR,EAAQ+0F,EAAAp0F,KAAAo0F,EAAAn6F,OAAA,SAGPoF,EAASysB,MAAI,wBAAAsoE,EAAA55F,OAAA,EAAA25F,EAAA,IACrB,SALWE,GAAA,OAAA9P,GAAA9pF,MAAA,KAAAC,UAAA,GAOZ45F,qBAAmBhQ,IAAA7qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA66F,EAAO9tF,GAAQ,IAAApH,EAAA,OAAA3F,IAAAA,KAAA,SAAA86F,GAAA,cAAAA,EAAA16F,KAAA06F,EAAAz6F,MAAA,cAAAy6F,EAAAz6F,KAAA,EACX2iF,EAAUiI,KAAK,0BAA2Bl+E,EAAU,CACzE5G,QAAS,CAAE,eAAgB,yBAC3B,OAFY,OAARR,EAAQm1F,EAAAx0F,KAAAw0F,EAAAv6F,OAAA,SAGPoF,EAASysB,MAAI,wBAAA0oE,EAAAh6F,OAAA,EAAA+5F,EAAA,IACrB,SALkBE,GAAA,OAAAnQ,GAAA7pF,MAAA,KAAAC,UAAA,GAOnBg6F,aAAWrQ,IAAA5qF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAAi7F,EAAOztF,GAAQ,IAAAyB,EAAAtJ,EAAAu1F,EAAAl6F,UAAA,OAAAhB,IAAAA,KAAA,SAAAm7F,GAAA,cAAAA,EAAA/6F,KAAA+6F,EAAA96F,MAAA,OAAiB,OAAf4O,EAAIisF,EAAAp1F,OAAA,QAAAC,IAAAm1F,EAAA,GAAAA,EAAA,GAAG,SAAQC,EAAA96F,KAAA,EACpB2iF,EAAUxsB,OAAO,YAADpwD,OAAa6I,EAAI,KAAA7I,OAAIoH,IAAW,OAAzD,OAAR7H,EAAQw1F,EAAA70F,KAAA60F,EAAA56F,OAAA,SACPoF,EAASysB,MAAI,wBAAA+oE,EAAAr6F,OAAA,EAAAm6F,EAAA,IACrB,SAHUG,GAAA,OAAAzQ,GAAA5pF,MAAA,KAAAC,UAAA,GAKXq6F,kBAAmB,SAACC,GAElB,MAAO,CACLC,iBAAkB,SAACC,GACjB,IAAM51D,EAAWliB,KAAKqtB,MAAOyqD,EAAcC,OAASD,EAAc/nD,MAAS,KACvE6nD,GAAYA,EAAW11D,EAC7B,EAEJ,GAIWtlC,GAAW,CACtBlB,gBAAiB,WAAF,QAAUqkF,GAAU,EAEnCnwD,eAAgBuJ,GAAQvJ,eAExB3yB,OAAQk8B,GAAQl8B,OAGhBH,oBAAkBwqF,IAAAjrF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA07F,IAAA,OAAA17F,IAAAA,KAAA,SAAA27F,GAAA,cAAAA,EAAAv7F,KAAAu7F,EAAAt7F,MAAA,cAAAs7F,EAAAt7F,KAAA,EACLw8B,GAAQ0uD,uBAAsB,cAAAoQ,EAAAp7F,OAAA,SAAAo7F,EAAAr1F,MAAA,wBAAAq1F,EAAA76F,OAAA,EAAA46F,EAAA,IAC5C,WAFiB,OAAA1Q,GAAAjqF,MAAA,KAAAC,UAAA,GAKlBwqF,gBAAiB3uD,GAAQ2uD,gBAGzB7H,eAAAA,EAGAiY,eAAgB,SAACxpE,GACf,IAAMrlB,EAAW,IAAIi6C,SAUrB,OATA7J,OAAO6vB,KAAK56C,GAAMjM,QAAQ,SAAAsN,GACN,OAAdrB,EAAKqB,SAA+B1tB,IAAdqsB,EAAKqB,KACzBiS,MAAMC,QAAQvT,EAAKqB,IACrBrB,EAAKqB,GAAKtN,QAAQ,SAAAkxD,GAAI,OAAItqE,EAASk6C,OAAOxzB,EAAK4jD,EAAK,GAEpDtqE,EAASk6C,OAAOxzB,EAAKrB,EAAKqB,IAGhC,GACO1mB,CACT,EAGAgwB,YAAa,SAACn8B,GAAU,IAAA6iD,EACtB,OAAkB,QAAlBA,EAAI7iD,EAAM+E,gBAAQ,IAAA89C,GAAM,QAANA,EAAdA,EAAgBrxB,YAAI,IAAAqxB,GAApBA,EAAsBh9C,QACjB7F,EAAM+E,SAASysB,KAAK3rB,QAEzB7F,EAAM6F,QACD7F,EAAM6F,QAER,8BACT,EAGA0wD,WAAY,SAACjE,GAEX,OADa,IAAI56B,KAAK46B,GACVna,mBAAmB,QAAS,CACtCsa,KAAM,UACND,MAAO,QACPD,IAAK,UACL5E,KAAM,UACNC,OAAQ,WAEZ,EAGA3V,cAAe,SAACqa,GACd,IAAM36B,EAAM,IAAID,KACVuO,EAAO,IAAIvO,KAAK46B,GAChB2oC,EAAgBn4E,KAAKs1C,OAAOzgC,EAAMsO,GAAQ,KAEhD,OAAIg1D,EAAgB,GAAW,aAC3BA,EAAgB,KAAa,GAAPz1F,OAAUsd,KAAKs1C,MAAM6iC,EAAgB,IAAG,cAC9DA,EAAgB,MAAc,GAAPz1F,OAAUsd,KAAKs1C,MAAM6iC,EAAgB,MAAK,YACjEA,EAAgB,OAAe,GAAPz1F,OAAUsd,KAAKs1C,MAAM6iC,EAAgB,OAAM,aAEhEv7F,GAAS62D,WAAWjE,EAC7B,EAGAp+B,MAAO,SAAC3B,GACN,OAAOA,aAAI,EAAJA,EAAM6B,UAA4B,SAAjB7B,EAAK6B,OAC/B,EAGA8mE,UAAW,SAAC3oE,GACV,MAAyB,aAAlBA,aAAI,EAAJA,EAAM6B,QACf,EAGAD,iBAAkB,SAACC,GACjB,OAAQA,GACN,IAAK,MAAO,MAAO,UACnB,IAAK,UAAW,MAAO,UACvB,QAAS,OAAO,KAEpB,EAGAC,gBAAiB,SAACD,GAChB,OAAQA,GACN,IAAK,MAAO,MAAO,KACnB,IAAK,UAAW,MAAO,KACvB,QAAS,OAAO,KAEpB,EAGAq4B,aAAW09B,IAAAhrF,EAAAA,EAAAA,GAAAC,IAAAA,KAAE,SAAA+7F,EAAOt0F,GAAK,IAAA9B,EAAA+1B,EAAA,OAAA17B,IAAAA,KAAA,SAAAg8F,GAAA,cAAAA,EAAA57F,KAAA47F,EAAA37F,MAAA,cAAA27F,EAAA57F,KAAA,EAAA47F,EAAA37F,KAAA,EAEE2iF,EAAU1hC,IAAI,kBAADl7C,OAAmBqB,IAAQ,OAAjD,OAAR9B,EAAQq2F,EAAA11F,KAAA01F,EAAAz7F,OAAA,SACPoF,EAASysB,MAAI,OAE8B,OAF9B4pE,EAAA57F,KAAA,EAAAs7B,EAAAsgE,EAAA,SAEpBv7F,QAAQG,MAAM,4BAA2B86B,GAASsgE,EAAAz7F,OAAA,SAC3C,MAAI,wBAAAy7F,EAAAl7F,OAAA,EAAAi7F,EAAA,iBAEd,SARUE,GAAA,OAAAlR,GAAAhqF,MAAA,KAAAC,UAAA,IAYAuoE,GAAM,CACjB2yB,KAAMr/D,GACNwW,MAAOwD,GACPslD,MAAOvvD,GACPwvD,QAAS1pD,GACTyZ,KAAMtyB,GACN43B,IAAKH,GACL+H,MAAO5D,GACPp8B,cAAexH,GACfyzB,QAAS3C,GACTD,MAAOJ,GACP+e,MAAOlQ,GACPkrC,cAAez4C,GACf1P,OAAQM,GACRwI,UAAWZ,GACXkgD,QAASlC,GACTxhD,MAAOt4C,IAGT,U","sources":["webpack://swingfox-client/./src/components/AuthGuard.js","webpack://swingfox-client/./src/services/clubApi.js","webpack://swingfox-client/./src/components/ClubAuthGuard.js","webpack://swingfox-client/./src/components/UI/Checkbox.js","webpack://swingfox-client/./src/components/UI/BalanceTopUp.js","webpack://swingfox-client/./src/components/UI/AvatarCropper.js","webpack://swingfox-client/./src/components/UI/index.js","webpack://swingfox-client/./src/styles/breakpoints.js","webpack://swingfox-client/./src/styles/headerSizes.js","webpack://swingfox-client/./src/components/Navigation.js","webpack://swingfox-client/./src/components/MatchPopup.js","webpack://swingfox-client/./src/contexts/NotificationContext.js","webpack://swingfox-client/./src/pages/Login.js","webpack://swingfox-client/./src/components/Geography/CountrySelector.js","webpack://swingfox-client/./src/components/Geography/CitySelector.js","webpack://swingfox-client/./src/components/Geography/LocationSelector.js","webpack://swingfox-client/./src/pages/Register.js","webpack://swingfox-client/./src/pages/Home.js","webpack://swingfox-client/./src/pages/Catalog.js","webpack://swingfox-client/./src/components/RatingDisplay.js","webpack://swingfox-client/./src/components/PhotoComments.js","webpack://swingfox-client/./src/components/ProfileComments.js","webpack://swingfox-client/./src/components/Reactions.js","webpack://swingfox-client/./src/pages/Profile.js","webpack://swingfox-client/./src/pages/Chat.js","webpack://swingfox-client/./src/pages/Ads.js","webpack://swingfox-client/./src/pages/Admin.js","webpack://swingfox-client/./src/components/MatchNotification.js","webpack://swingfox-client/./src/pages/Notifications.js","webpack://swingfox-client/./src/pages/Clubs.js","webpack://swingfox-client/./src/pages/Subscriptions.js","webpack://swingfox-client/./src/pages/Ratings.js","webpack://swingfox-client/./src/pages/BalanceTopUp.js","webpack://swingfox-client/./src/pages/ClubLogin.js","webpack://swingfox-client/./src/pages/ClubRegister.js","webpack://swingfox-client/./src/components/UI/ClubAvatarCropper.js","webpack://swingfox-client/./src/components/UI/EventImageUploader.js","webpack://swingfox-client/./src/components/EventForm.js","webpack://swingfox-client/./src/components/EventDetailsModal.js","webpack://swingfox-client/./src/utils/eventStatus.js","webpack://swingfox-client/./src/pages/ClubDashboard.js","webpack://swingfox-client/./src/components/EventParticipants.js","webpack://swingfox-client/./src/pages/ClubEvents.js","webpack://swingfox-client/./src/pages/ClubAnalytics.js","webpack://swingfox-client/./src/pages/ClubBots.js","webpack://swingfox-client/./src/pages/ClubParticipants.js","webpack://swingfox-client/./src/pages/ClubSettings.js","webpack://swingfox-client/./src/components/ClubNavigation.js","webpack://swingfox-client/./src/components/ClubLayout.js","webpack://swingfox-client/./src/components/EventApplication.js","webpack://swingfox-client/./src/pages/PublicClubDetail.js","webpack://swingfox-client/./src/App.js","webpack://swingfox-client/./src/index.js","webpack://swingfox-client/./src/services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { apiUtils } from '../services/api';\n\nconst AuthGuard = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isValidating, setIsValidating] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      setIsValidating(true);\n      \n      try {\n        const authenticated = apiUtils.isAuthenticated();\n        \n        if (!authenticated) {\n          setIsAuthenticated(false);\n          setIsValidating(false);\n          return;\n        }\n\n        // Дополнительная проверка валидности токена\n        try {\n          await apiUtils.refreshCurrentUser();\n          setIsAuthenticated(true);\n        } catch (error) {\n          // Токен невалиден\n          console.warn('Токен невалиден, очищаем авторизацию');\n          apiUtils.logout();\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Ошибка проверки авторизации:', error);\n        setIsAuthenticated(false);\n      } finally {\n        setIsValidating(false);\n      }\n    };\n\n    checkAuth();\n\n    // Слушаем события разлогина\n    const handleAuthLogout = () => {\n      setIsAuthenticated(false);\n    };\n\n    // Проверяем авторизацию при изменении localStorage\n    const handleStorageChange = () => {\n      checkAuth();\n    };\n\n    window.addEventListener('auth-logout', handleAuthLogout);\n    window.addEventListener('storage', handleStorageChange);\n    \n    return () => {\n      window.removeEventListener('auth-logout', handleAuthLogout);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [location.pathname]);\n\n  // Показываем загрузку пока проверяем авторизацию\n  if (isValidating) {\n    return (\n      <div className=\"loading\">\n        Проверка авторизации...\n      </div>\n    );\n  }\n\n  // Если не авторизован, перенаправляем на логин\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace state={{ from: location }} />;\n  }\n\n  // Если авторизован, показываем защищенный контент\n  return children;\n};\n\nexport default AuthGuard;","// Club API Service\nconst API_BASE_URL = '/api/club';\n\n// Helper function for API calls\nconst apiCall = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('clubToken');\n  \n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` }),\n      ...options.headers\n    },\n    ...options\n  };\n\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n    \n    if (!response.ok) {\n      let errorMessage = 'API Error';\n      try {\n        const error = await response.json();\n        errorMessage = error.message || error.error || `HTTP ${response.status}: ${response.statusText}`;\n      } catch (parseError) {\n        errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n      }\n      console.error('API Error Details:', {\n        status: response.status,\n        statusText: response.statusText,\n        endpoint,\n        config\n      });\n      throw new Error(errorMessage);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('API Error:', error);\n    throw error;\n  }\n};\n\nexport const clubApi = {\n  // Authentication\n  register: async (clubData) => {\n    return apiCall('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(clubData)\n    });\n  },\n\n  login: async (credentials) => {\n    const response = await apiCall('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n    \n    if (response.token) {\n      localStorage.setItem('clubToken', response.token);\n    }\n    \n    return response;\n  },\n\n  logout: async () => {\n    try {\n      await apiCall('/auth/logout', { method: 'POST' });\n    } finally {\n      localStorage.removeItem('clubToken');\n    }\n  },\n\n  getProfile: async () => {\n    return apiCall('/auth/profile');\n  },\n\n  updateProfile: async (profileData) => {\n    return apiCall('/auth/profile', {\n      method: 'PUT',\n      body: JSON.stringify(profileData)\n    });\n  },\n\n  // Events\n  getEvents: async (params = {}) => {\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/events/events${queryString ? `?${queryString}` : ''}`);\n  },\n\n  getEvent: async (eventId) => {\n    return apiCall(`/events/events/${eventId}`);\n  },\n\n  createEvent: async (eventData) => {\n    return apiCall('/events/events', {\n      method: 'POST',\n      body: JSON.stringify(eventData)\n    });\n  },\n\n  updateEvent: async (eventId, eventData) => {\n    return apiCall(`/events/events/${eventId}`, {\n      method: 'PUT',\n      body: JSON.stringify(eventData)\n    });\n  },\n\n  deleteEvent: async (eventId) => {\n    return apiCall(`/events/events/${eventId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  // Event Participants\n  getEventParticipants: async (eventId) => {\n    return apiCall(`/events/events/${eventId}/participants`);\n  },\n\n  updateParticipantStatus: async (eventId, participantId, status) => {\n    return apiCall(`/events/events/${eventId}/participants/${participantId}`, {\n      method: 'PUT',\n      body: JSON.stringify({ status })\n    });\n  },\n\n  removeParticipant: async (eventId, participantId) => {\n    return apiCall(`/events/events/${eventId}/participants/${participantId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  // Event Applications\n  applyToEvent: async (eventId, applicationData) => {\n    return apiCall(`/events/events/${eventId}/apply`, {\n      method: 'POST',\n      body: JSON.stringify(applicationData)\n    });\n  },\n\n  getMyApplications: async () => {\n    return apiCall('/user-events/applications');\n  },\n\n  cancelApplication: async (eventId) => {\n    return apiCall(`/user-events/events/${eventId}/cancel`, {\n      method: 'POST'\n    });\n  },\n\n  inviteParticipants: async (eventId, userIds) => {\n    return apiCall(`/events/events/${eventId}/invite`, {\n      method: 'POST',\n      body: JSON.stringify({ user_ids: userIds })\n    });\n  },\n\n  removeParticipant: async (eventId, userId) => {\n    return apiCall(`/events/events/${eventId}/participants/${userId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  // Event Images\n  uploadEventAvatar: async (eventId, formData) => {\n    const token = localStorage.getItem('clubToken');\n    \n    const response = await fetch(`${API_BASE_URL}/events/events/${eventId}/avatar`, {\n      method: 'POST',\n      headers: {\n        ...(token && { 'Authorization': `Bearer ${token}` })\n      },\n      body: formData\n    });\n    \n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Upload Error');\n    }\n    \n    return await response.json();\n  },\n\n  uploadEventImages: async (eventId, formData) => {\n    const token = localStorage.getItem('clubToken');\n    \n    const response = await fetch(`${API_BASE_URL}/events/events/${eventId}/images`, {\n      method: 'POST',\n      headers: {\n        ...(token && { 'Authorization': `Bearer ${token}` })\n      },\n      body: formData\n    });\n    \n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Upload Error');\n    }\n    \n    return await response.json();\n  },\n\n  deleteEventImage: async (eventId, filename) => {\n    return apiCall(`/events/events/${eventId}/images/${filename}`, {\n      method: 'DELETE'\n    });\n  },\n\n  // Ads\n  getAds: async (params = {}) => {\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/ads/ads${queryString ? `?${queryString}` : ''}`);\n  },\n\n  getAd: async (adId) => {\n    return apiCall(`/ads/ads/${adId}`);\n  },\n\n  createAd: async (adData) => {\n    return apiCall('/ads/ads', {\n      method: 'POST',\n      body: JSON.stringify(adData)\n    });\n  },\n\n  updateAd: async (adId, adData) => {\n    return apiCall(`/ads/ads/${adId}`, {\n      method: 'PUT',\n      body: JSON.stringify(adData)\n    });\n  },\n\n  deleteAd: async (adId) => {\n    return apiCall(`/ads/ads/${adId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  getAdStats: async () => {\n    return apiCall('/ads/ads/stats/overview');\n  },\n\n  // Analytics\n  getAnalytics: async (type = 'overview', period = 'week') => {\n    return apiCall(`/analytics/${type}?period=${period}`);\n  },\n\n\n  // Bots\n  getBots: async () => {\n    return apiCall('/bots/bots');\n  },\n\n  getBot: async (botId) => {\n    return apiCall(`/bots/bots/${botId}`);\n  },\n\n  createBot: async (botData) => {\n    return apiCall('/bots/bots', {\n      method: 'POST',\n      body: JSON.stringify(botData)\n    });\n  },\n\n  updateBotSettings: async (botId, settings) => {\n    return apiCall(`/bots/bots/${botId}/settings`, {\n      method: 'PUT',\n      body: JSON.stringify(settings)\n    });\n  },\n\n  toggleBot: async (botId) => {\n    return apiCall(`/bots/bots/${botId}/toggle`, {\n      method: 'PUT'\n    });\n  },\n\n  deleteBot: async (botId) => {\n    return apiCall(`/bots/bots/${botId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  getBotLogs: async (botId) => {\n    return apiCall(`/bots/bots/${botId}/logs`);\n  },\n\n  // Bot Actions\n  sendAutoInvites: async (eventId) => {\n    return apiCall(`/bots/bots/auto-invites/${eventId}`, {\n      method: 'POST'\n    });\n  },\n\n  sendReminders: async () => {\n    return apiCall('/bots/bots/reminders', {\n      method: 'POST'\n    });\n  },\n\n  generateRecommendations: async () => {\n    return apiCall('/bots/bots/recommendations', {\n      method: 'POST'\n    });\n  },\n\n  updateStats: async () => {\n    return apiCall('/bots/bots/update-stats', {\n      method: 'POST'\n    });\n  },\n\n  getBotStats: async () => {\n    return apiCall('/bots/bots/stats/overview');\n  },\n\n  // User Events (Public API)\n  getPublicEvents: async (params = {}) => {\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/user-events/public/events${queryString ? `?${queryString}` : ''}`);\n  },\n\n  getPublicEvent: async (eventId) => {\n    return apiCall(`/user-events/events/${eventId}`);\n  },\n\n  joinEvent: async (eventId) => {\n    return apiCall(`/user-events/events/${eventId}/join`, {\n      method: 'POST'\n    });\n  },\n\n  leaveEvent: async (eventId) => {\n    return apiCall(`/user-events/events/${eventId}/leave`, {\n      method: 'DELETE'\n    });\n  },\n\n  updateEventStatus: async (eventId, status) => {\n    return apiCall(`/user-events/events/${eventId}/status`, {\n      method: 'PUT',\n      body: JSON.stringify({ status })\n    });\n  },\n\n  getUserEvents: async () => {\n    return apiCall('/user-events/user/events');\n  },\n\n  getRecommendations: async () => {\n    return apiCall('/user-events/recommendations');\n  },\n\n  searchEvents: async (query, filters = {}) => {\n    const params = { q: query, ...filters };\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/user-events/search/events?${queryString}`);\n  },\n\n\n  // Public Clubs\n  getPublicClubs: async (params = {}) => {\n    const queryString = new URLSearchParams(params).toString();\n    return apiCall(`/user-events/public/clubs${queryString ? `?${queryString}` : ''}`);\n  },\n\n  // User Applications\n  getUserApplications: async () => {\n    return apiCall('/applications/applications/user');\n  },\n\n  createApplication: async (clubId, message = '') => {\n    return apiCall('/applications/applications', {\n      method: 'POST',\n      body: JSON.stringify({ club_id: clubId, message })\n    });\n  },\n\n  uploadClubAvatar: async (formData) => {\n    const token = localStorage.getItem('clubToken');\n    \n    const response = await fetch(`${API_BASE_URL}/auth/profile/avatar`, {\n      method: 'POST',\n      headers: {\n        ...(token && { 'Authorization': `Bearer ${token}` })\n      },\n      body: formData\n    });\n    \n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Upload Error');\n    }\n    \n    return await response.json();\n  },\n\n  updateProfile: async (profileData) => {\n    return apiCall('/auth/profile', {\n      method: 'PUT',\n      body: JSON.stringify(profileData)\n    });\n  },\n\n  changePassword: async (passwordData) => {\n    console.log('ClubApi.changePassword called with:', passwordData);\n    try {\n      const result = await apiCall('/auth/password', {\n        method: 'PUT',\n        body: JSON.stringify(passwordData)\n      });\n      console.log('ClubApi.changePassword success:', result);\n      return result;\n    } catch (error) {\n      console.error('ClubApi.changePassword error:', error);\n      throw error;\n    }\n  },\n\n  uploadAvatar: async (formData) => {\n    const token = localStorage.getItem('clubToken');\n    \n    const response = await fetch(`${API_BASE_URL}/auth/profile/avatar`, {\n      method: 'POST',\n      headers: {\n        ...(token && { 'Authorization': `Bearer ${token}` })\n      },\n      body: formData\n    });\n    \n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'Upload Error');\n    }\n    \n    return await response.json();\n  }\n};\n\n// Auth helper functions\nexport const clubAuth = {\n  isAuthenticated: () => {\n    return !!localStorage.getItem('clubToken');\n  },\n\n  getToken: () => {\n    return localStorage.getItem('clubToken');\n  },\n\n  setToken: (token) => {\n    localStorage.setItem('clubToken', token);\n  },\n\n  removeToken: () => {\n    localStorage.removeItem('clubToken');\n  },\n\n  // Auto-refresh token if needed\n  refreshToken: async () => {\n    try {\n      const response = await apiCall('/auth/refresh', {\n        method: 'POST'\n      });\n      \n      if (response.token) {\n        localStorage.setItem('clubToken', response.token);\n      }\n      \n      return response;\n    } catch (error) {\n      localStorage.removeItem('clubToken');\n      throw error;\n    }\n  },\n\n  // Ads Management\n  getAds: async () => {\n    return apiCall('/ads/ads');\n  },\n\n  createAd: async (adData) => {\n    return apiCall('/ads/ads', {\n      method: 'POST',\n      body: JSON.stringify(adData)\n    });\n  },\n\n  updateAd: async (adId, adData) => {\n    return apiCall(`/ads/ads/${adId}`, {\n      method: 'PUT',\n      body: JSON.stringify(adData)\n    });\n  },\n\n  deleteAd: async (adId) => {\n    return apiCall(`/ads/ads/${adId}`, {\n      method: 'DELETE'\n    });\n  },\n\n\n  // Bots Management\n  getBots: async () => {\n    return apiCall('/bots/bots');\n  },\n\n  createBot: async (botData) => {\n    return apiCall('/bots/bots', {\n      method: 'POST',\n      body: JSON.stringify(botData)\n    });\n  },\n\n  updateBot: async (botId, botData) => {\n    return apiCall(`/bots/bots/${botId}`, {\n      method: 'PUT',\n      body: JSON.stringify(botData)\n    });\n  },\n\n  deleteBot: async (botId) => {\n    return apiCall(`/bots/bots/${botId}`, {\n      method: 'DELETE'\n    });\n  },\n\n  // Participants Management\n  getParticipants: async () => {\n    return apiCall('/participants');\n  },\n\n  updateParticipantRole: async (participantId, role) => {\n    return apiCall(`/participants/${participantId}/role`, {\n      method: 'PUT',\n      body: JSON.stringify({ role })\n    });\n  },\n\n  removeParticipant: async (participantId) => {\n    return apiCall(`/participants/${participantId}`, {\n      method: 'DELETE'\n    });\n  }\n};\n\n// Error handling\nexport const handleApiError = (error) => {\n  if (error.message === 'Unauthorized') {\n    localStorage.removeItem('clubToken');\n    window.location.href = '/club/login';\n    return;\n  }\n  \n  return error.message || 'Произошла ошибка';\n};\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { clubAuth } from '../services/clubApi';\n\nconst ClubAuthGuard = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n\n  useEffect(() => {\n    const checkAuth = () => {\n      const authenticated = clubAuth.isAuthenticated();\n      setIsAuthenticated(authenticated);\n    };\n\n    checkAuth();\n  }, []);\n\n  if (isAuthenticated === null) {\n    // Показываем загрузку пока проверяем авторизацию\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n      }}>\n        <div style={{\n          width: '50px',\n          height: '50px',\n          border: '4px solid rgba(255, 255, 255, 0.3)',\n          borderTop: '4px solid white',\n          borderRadius: '50%',\n          animation: 'spin 1s linear infinite'\n        }}></div>\n        <style>{`\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}</style>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    // Перенаправляем на страницу входа клуба\n    return <Navigate to=\"/club/login\" replace />;\n  }\n\n  return children;\n};\n\nexport default ClubAuthGuard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst CheckboxContainer = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n  padding: 8px 0;\n  user-select: none;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst CheckboxInput = styled.input`\n  width: 18px;\n  height: 18px;\n  accent-color: #dc3522;\n  cursor: pointer;\n  \n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n`;\n\nconst CheckboxLabel = styled.span`\n  font-size: 14px;\n  color: #4a5568;\n  line-height: 1.4;\n`;\n\nconst Checkbox = ({ \n  label, \n  checked, \n  onChange, \n  disabled = false, \n  name,\n  ...props \n}) => {\n  return (\n    <CheckboxContainer>\n      <CheckboxInput\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled}\n        name={name}\n        {...props}\n      />\n      <CheckboxLabel>{label}</CheckboxLabel>\n    </CheckboxContainer>\n  );\n};\n\nexport default Checkbox;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { \n  CreditCardIcon, \n  CheckIcon\n} from './index';\n\nconst TopUpContainer = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 0 10px 40px rgba(220, 53, 34, 0.15);\n  max-width: 600px;\n  width: 100%;\n  border: 2px solid #fce8e8;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    border-radius: 15px;\n  }\n`;\n\nconst TopUpHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst TopUpTitle = styled.h2`\n  color: #2d3748;\n  font-size: 28px;\n  font-weight: 700;\n  margin: 0 0 10px 0;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst TopUpSubtitle = styled.p`\n  color: #718096;\n  font-size: 16px;\n  margin: 0;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst AmountSection = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst AmountLabel = styled.label`\n  display: block;\n  color: #2d3748;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\n\nconst AmountInput = styled.input`\n  width: 100%;\n  padding: 15px;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  font-size: 18px;\n  font-weight: 600;\n  color: #2d3748;\n  background: #f7fafc;\n  transition: all 0.3s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n    background: white;\n    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n  }\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px;\n    font-size: 16px;\n  }\n`;\n\nconst QuickAmounts = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n  margin-top: 15px;\n  \n  @media (max-width: 480px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nconst QuickAmountButton = styled.button`\n  padding: 12px;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  background: white;\n  color: #4a5568;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #667eea;\n    color: #667eea;\n    transform: translateY(-1px);\n  }\n  \n  &.selected {\n    border-color: #667eea;\n    background: #667eea;\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px;\n    font-size: 14px;\n  }\n`;\n\nconst PaymentMethodSection = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst PaymentMethodLabel = styled.label`\n  display: block;\n  color: #2d3748;\n  font-weight: 600;\n  margin-bottom: 15px;\n  font-size: 16px;\n`;\n\nconst PaymentMethodOption = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  border: 2px solid #e2e8f0;\n  border-radius: 12px;\n  background: #f8fafc;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: #667eea;\n    background: #f0f4ff;\n  }\n`;\n\nconst PaymentMethodInfo = styled.div`\n  flex: 1;\n`;\n\nconst PaymentMethodName = styled.div`\n  font-weight: 600;\n  color: #2d3748;\n  margin-bottom: 4px;\n  font-size: 18px;\n`;\n\nconst PaymentMethodDescription = styled.div`\n  font-size: 14px;\n  color: #718096;\n`;\n\nconst PaymentMethodIcon = styled.div`\n  color: #667eea;\n  margin-left: 15px;\n  font-size: 24px;\n`;\n\n// Реалистичная карта\nconst CardPreview = styled.div`\n  width: 100%;\n  height: 200px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 15px;\n  padding: 20px;\n  color: white;\n  position: relative;\n  margin-bottom: 20px;\n  box-shadow: 0 10px 30px rgba(220, 53, 34, 0.3);\n  \n  @media (max-width: 768px) {\n    height: 180px;\n    padding: 15px;\n  }\n`;\n\nconst CardLogo = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  font-size: 24px;\n  font-weight: bold;\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n    top: 15px;\n    left: 15px;\n  }\n`;\n\nconst CardNumberInput = styled.input`\n  position: absolute;\n  bottom: 80px;\n  left: 20px;\n  width: 280px;\n  background: transparent;\n  border: none;\n  font-size: 18px;\n  font-weight: 600;\n  letter-spacing: 2px;\n  font-family: 'Courier New', monospace;\n  color: white;\n  outline: none;\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n    bottom: 70px;\n    left: 15px;\n    width: 240px;\n  }\n`;\n\nconst CardDetails = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 20px;\n  display: flex;\n  gap: 30px;\n  \n  @media (max-width: 768px) {\n    bottom: 15px;\n    left: 15px;\n    gap: 20px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  font-size: 14px;\n  \n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nconst CardDetailLabel = styled.div`\n  opacity: 0.8;\n  margin-bottom: 2px;\n`;\n\nconst CardDetailInput = styled.input`\n  background: transparent;\n  border: none;\n  font-weight: 600;\n  font-family: 'Courier New', monospace;\n  color: white;\n  outline: none;\n  font-size: 14px;\n  width: 120px;\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 12px;\n    width: 100px;\n  }\n`;\n\nconst CardCvvSection = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 5px;\n  \n  @media (max-width: 768px) {\n    top: 15px;\n    right: 15px;\n  }\n`;\n\nconst CardCvvLabel = styled.div`\n  color: rgba(255, 255, 255, 0.8);\n  font-size: 12px;\n  font-weight: 600;\n  text-align: center;\n  \n  @media (max-width: 768px) {\n    font-size: 10px;\n  }\n`;\n\nconst CardCvvInput = styled.input`\n  width: 60px;\n  height: 30px;\n  background: rgba(255, 255, 255, 0.9);\n  border: none;\n  border-radius: 6px;\n  text-align: center;\n  font-size: 14px;\n  font-weight: 600;\n  color: #2d3748;\n  outline: none;\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n  \n  @media (max-width: 768px) {\n    width: 50px;\n    height: 25px;\n    font-size: 12px;\n  }\n`;\n\nconst CardForm = styled.div`\n  margin-top: 20px;\n  padding: 25px;\n  background: #f8fafc;\n  border-radius: 15px;\n  border: 1px solid #e2e8f0;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst CardFormTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst CardFormRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  margin-bottom: 15px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n  \n  @media (max-width: 480px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst CardInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 16px;\n  color: #2d3748;\n  background: white;\n  transition: all 0.2s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n    box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);\n  }\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px;\n    font-size: 14px;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  width: 100%;\n  padding: 16px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  font-size: 18px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 14px;\n    font-size: 16px;\n  }\n`;\n\nconst SuccessMessage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  padding: 20px;\n  background: #f0fff4;\n  border: 2px solid #68d391;\n  border-radius: 12px;\n  color: #22543d;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  padding: 15px;\n  background: #fff5f5;\n  border: 2px solid #f56565;\n  border-radius: 12px;\n  color: #742a2a;\n  font-weight: 600;\n  margin-bottom: 20px;\n  font-size: 14px;\n`;\n\nconst BalanceTopUp = ({ onClose, currentBalance = 0, onSuccess }) => {\n  const [amount, setAmount] = useState('');\n  const [cardNumber, setCardNumber] = useState('');\n  const [cardExpiry, setCardExpiry] = useState('');\n  const [cardCvv, setCardCvv] = useState('');\n  const [cardName, setCardName] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [error, setError] = useState('');\n\n  const quickAmounts = [100, 300, 500, 1000, 2000, 5000];\n\n  const handleAmountChange = (value) => {\n    setAmount(value);\n    \n    // Очищаем ошибку если поле пустое\n    if (!value || value === '') {\n      setError('');\n      return;\n    }\n    \n    const numValue = parseFloat(value);\n    \n    // Проверяем что это валидное число\n    if (isNaN(numValue)) {\n      setError('Пожалуйста, введите корректное число');\n      return;\n    }\n    \n    // Проверяем минимальную сумму\n    if (numValue > 0 && numValue < 100) {\n      setError('Минимальная сумма пополнения 100 рублей');\n    } else {\n      setError('');\n    }\n  };\n\n  const handleQuickAmount = (quickAmount) => {\n    setError('');\n    setAmount(quickAmount.toString());\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!amount || parseFloat(amount) <= 0) {\n      setError('Пожалуйста, введите сумму пополнения');\n      return;\n    }\n    \n    if (parseFloat(amount) < 100) {\n      setError('Минимальная сумма пополнения 100 рублей');\n      return;\n    }\n\n    if (!cardNumber || !cardExpiry || !cardCvv || !cardName) {\n      setError('Пожалуйста, заполните все поля карты');\n      return;\n    }\n\n    setError('');\n    setIsSubmitting(true);\n    \n    // Имитация отправки запроса\n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSuccess(true);\n      \n      if (onSuccess) {\n        onSuccess();\n      }\n      \n      // Сброс формы через 3 секунды\n      setTimeout(() => {\n        setIsSuccess(false);\n        if (onClose) {\n          onClose();\n        }\n      }, 3000);\n    }, 2000);\n  };\n\n  const formatCardNumber = (value) => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    const matches = v.match(/\\d{4,16}/g);\n    const match = matches && matches[0] || '';\n    const parts = [];\n    \n    for (let i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    \n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return v;\n    }\n  };\n\n  const formatExpiry = (value) => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    if (v.length >= 2) {\n      return v.substring(0, 2) + '/' + v.substring(2, 4);\n    }\n    return v;\n  };\n\n\n\n  if (isSuccess) {\n    return (\n      <TopUpContainer>\n        <SuccessMessage>\n          <CheckIcon />\n          Баланс успешно пополнен на {amount} 🦊!\n        </SuccessMessage>\n      </TopUpContainer>\n    );\n  }\n\n  return (\n    <TopUpContainer>\n      <TopUpHeader>\n        <TopUpTitle>Пополнение баланса</TopUpTitle>\n        <TopUpSubtitle>Текущий баланс: {currentBalance} 🦊</TopUpSubtitle>\n      </TopUpHeader>\n\n      <form onSubmit={handleSubmit}>\n        <AmountSection>\n          <AmountLabel>Сумма пополнения (🦊)</AmountLabel>\n          <AmountInput\n            type=\"number\"\n            placeholder=\"Введите сумму\"\n            value={amount}\n            onChange={(e) => handleAmountChange(e.target.value)}\n            min=\"1\"\n            step=\"1\"\n          />\n\n          {error && <ErrorMessage>{error}</ErrorMessage>}\n          <QuickAmounts>\n            {quickAmounts.map((quickAmount) => (\n              <QuickAmountButton\n                key={quickAmount}\n                type=\"button\"\n                className={amount === quickAmount.toString() ? 'selected' : ''}\n                onClick={() => handleQuickAmount(quickAmount)}\n              >\n                {quickAmount}\n              </QuickAmountButton>\n            ))}\n          </QuickAmounts>\n        </AmountSection>\n\n        <PaymentMethodSection>\n          <PaymentMethodLabel>Способ оплаты</PaymentMethodLabel>\n          <PaymentMethodOption>\n            <PaymentMethodInfo>\n              <PaymentMethodName>Банковская карта</PaymentMethodName>\n              <PaymentMethodDescription>Visa, MasterCard, МИР</PaymentMethodDescription>\n            </PaymentMethodInfo>\n            <PaymentMethodIcon>\n              <CreditCardIcon />\n            </PaymentMethodIcon>\n          </PaymentMethodOption>\n        </PaymentMethodSection>\n\n        {/* Интерактивная карта с полями ввода */}\n        <CardPreview>\n          <CardLogo>💳</CardLogo>\n          \n          {/* Поле для номера карты */}\n          <CardNumberInput\n            type=\"text\"\n            placeholder=\"**** **** **** ****\"\n            value={cardNumber}\n            onChange={(e) => setCardNumber(formatCardNumber(e.target.value))}\n            maxLength=\"19\"\n          />\n          \n          {/* Поля для имени и срока действия */}\n          <CardDetails>\n            <CardDetail>\n              <CardDetailLabel>ВЛАДЕЛЕЦ</CardDetailLabel>\n              <CardDetailInput\n                type=\"text\"\n                placeholder=\"ИМЯ ФАМИЛИЯ\"\n                value={cardName}\n                onChange={(e) => setCardName(e.target.value)}\n              />\n            </CardDetail>\n            <CardDetail>\n              <CardDetailLabel>СРОК ДЕЙСТВИЯ</CardDetailLabel>\n              <CardDetailInput\n                type=\"text\"\n                placeholder=\"MM/YY\"\n                value={cardExpiry}\n                onChange={(e) => setCardExpiry(formatExpiry(e.target.value))}\n                maxLength=\"5\"\n              />\n            </CardDetail>\n          </CardDetails>\n          \n          {/* Поле для CVV (справа от карты) */}\n          <CardCvvSection>\n            <CardCvvLabel>CVV</CardCvvLabel>\n            <CardCvvInput\n              type=\"text\"\n              placeholder=\"123\"\n              value={cardCvv}\n              onChange={(e) => setCardCvv(e.target.value.replace(/\\D/g, ''))}\n              maxLength=\"4\"\n            />\n          </CardCvvSection>\n        </CardPreview>\n\n        <SubmitButton type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? 'Обработка...' : `Пополнить на ${amount || 0} 🦊`}\n        </SubmitButton>\n      </form>\n    </TopUpContainer>\n  );\n};\n\nexport default BalanceTopUp;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Modal, ModalContent, ModalHeader, Button, CloseIcon } from './index.js';\n\nconst CropperContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  touch-action: none;\n  -webkit-overflow-scrolling: touch;\n  \n  @media (max-width: 768px) {\n    gap: 15px;\n  }\n`;\n\nconst ImagePreview = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 600px;\n  height: ${props => props.$height || '400px'};\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  overflow: hidden;\n  background: #f7fafc;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  touch-action: none;\n  -webkit-overflow-scrolling: touch;\n  \n  img {\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: contain;\n    pointer-events: none;\n  }\n  \n  @media (max-width: 768px) {\n    max-width: 100%;\n    height: ${props => props.$mobileHeight || '300px'};\n    border-radius: 8px;\n  }\n  \n  @media (max-width: 480px) {\n    height: ${props => props.$mobileHeight || '250px'};\n    border-radius: 6px;\n  }\n`;\n\nconst CropArea = styled.div`\n  position: absolute;\n  border: 2px solid #dc3522;\n  background: rgba(220, 53, 34, 0.1);\n  cursor: move;\n  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);\n  user-select: none;\n  touch-action: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  \n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    background: #dc3522;\n  }\n  \n  &::before {\n    top: 50%;\n    left: -2px;\n    right: -2px;\n    height: 2px;\n    transform: translateY(-50%);\n  }\n  \n  &::after {\n    left: 50%;\n    top: -2px;\n    bottom: -2px;\n    width: 2px;\n    transform: translateX(-50%);\n  }\n  \n  @media (max-width: 768px) {\n    border-width: 3px;\n    \n    &::before,\n    &::after {\n      background: #dc3522;\n    }\n  }\n`;\n\nconst CropHandle = styled.div`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  background: #dc3522;\n  border: 2px solid white;\n  border-radius: 50%;\n  cursor: ${props => props.$cursor || 'nw-resize'};\n  z-index: 10;\n  touch-action: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  \n  &.top-left { top: -6px; left: -6px; cursor: nw-resize; }\n  &.top-right { top: -6px; right: -6px; cursor: ne-resize; }\n  &.bottom-left { bottom: -6px; left: -6px; cursor: sw-resize; }\n  &.bottom-right { bottom: -6px; right: -6px; cursor: se-resize; }\n  \n  &:hover {\n    background: #ff6b58;\n    transform: scale(1.2);\n  }\n  \n  @media (max-width: 768px) {\n    width: 16px;\n    height: 16px;\n    border-width: 3px;\n    \n    &.top-left { top: -8px; left: -8px; }\n    &.top-right { top: -8px; right: -8px; }\n    &.bottom-left { bottom: -8px; left: -8px; }\n    &.bottom-right { bottom: -8px; right: -8px; }\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n  \n  @media (max-width: 768px) {\n    gap: 10px;\n    flex-direction: column;\n    width: 100%;\n    max-width: 300px;\n  }\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  line-height: 1.5;\n  max-width: 600px;\n  margin-bottom: 10px;\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n    margin-bottom: 15px;\n    padding: 0 10px;\n  }\n`;\n\nconst AvatarCropper = ({ \n  isOpen, \n  onClose, \n  imageFile, \n  onCrop, \n  aspectRatio = 1,\n  minSize = 100 \n}) => {\n  const [cropArea, setCropArea] = useState({ x: 0, y: 0, width: 200, height: 200 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeHandle, setResizeHandle] = useState(null);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [imageUrl, setImageUrl] = useState('');\n  const [containerSize, setContainerSize] = useState({ width: 400, height: 400 });\n  const [isMobile, setIsMobile] = useState(false);\n  \n  const imageRef = useRef();\n  const containerRef = useRef();\n\n  // Определяем мобильное устройство\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Инициализация изображения\n  useEffect(() => {\n    if (imageFile) {\n      const url = URL.createObjectURL(imageFile);\n      setImageUrl(url);\n      \n      const img = new Image();\n      img.onload = () => {\n        const { width, height } = img;\n        setImageSize({ width, height });\n        \n        // Вычисляем размеры контейнера на основе пропорций изображения\n        const maxContainerSize = isMobile ? 400 : 600;\n        let containerWidth, containerHeight;\n        \n        if (width > height) {\n          // Горизонтальное изображение\n          containerWidth = maxContainerSize;\n          containerHeight = (height / width) * maxContainerSize;\n        } else {\n          // Вертикальное или квадратное изображение\n          containerHeight = maxContainerSize;\n          containerWidth = (width / height) * maxContainerSize;\n        }\n        \n        // Ограничиваем минимальные размеры\n        containerWidth = Math.max(containerWidth, isMobile ? 250 : 300);\n        containerHeight = Math.max(containerHeight, isMobile ? 200 : 300);\n        \n        setContainerSize({ width: containerWidth, height: containerHeight });\n        \n        // Инициализируем область кропа по центру\n        const cropSize = Math.min(\n          isMobile ? 150 : 200, \n          Math.min(containerWidth, containerHeight) * 0.8\n        );\n        \n        setCropArea({\n          x: (containerWidth - cropSize) / 2,\n          y: (containerHeight - cropSize) / 2,\n          width: cropSize,\n          height: cropSize\n        });\n      };\n      img.src = url;\n      \n      return () => URL.revokeObjectURL(url);\n    }\n  }, [imageFile, isMobile]);\n\n  // Получаем координаты события (мышь или touch)\n  const getEventCoordinates = useCallback((e) => {\n    if (e.touches && e.touches[0]) {\n      return {\n        x: e.touches[0].clientX,\n        y: e.touches[0].clientY\n      };\n    }\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }, []);\n\n  // Обработчики событий мыши и touch\n  const handleStart = useCallback((e, type = 'move') => {\n    // Для touch событий preventDefault может не работать\n    if (e.type === 'touchstart') {\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    \n    const coords = getEventCoordinates(e);\n    \n    if (type === 'move') {\n      setIsDragging(true);\n      setDragStart({\n        x: coords.x - cropArea.x,\n        y: coords.y - cropArea.y\n      });\n    } else {\n      setIsResizing(true);\n      setResizeHandle(type);\n      setDragStart({\n        x: coords.x,\n        y: coords.y\n      });\n    }\n  }, [cropArea.x, cropArea.y, getEventCoordinates]);\n\n  const handleMove = useCallback((e) => {\n    if (!isDragging && !isResizing) return;\n    \n    // Для touch событий preventDefault может не работать\n    if (e.type === 'touchmove') {\n      e.preventDefault();\n    }\n    \n    const coords = getEventCoordinates(e);\n    \n    if (isDragging) {\n      const newX = coords.x - dragStart.x;\n      const newY = coords.y - dragStart.y;\n      \n      // Ограничиваем область кропа в пределах контейнера\n      const maxX = containerSize.width - cropArea.width;\n      const maxY = containerSize.height - cropArea.height;\n      \n      setCropArea(prev => ({\n        ...prev,\n        x: Math.max(0, Math.min(newX, maxX)),\n        y: Math.max(0, Math.min(newY, maxY))\n      }));\n    } else if (isResizing) {\n      const deltaX = coords.x - dragStart.x;\n      const deltaY = coords.y - dragStart.y;\n      \n      setCropArea(prev => {\n        let newWidth = prev.width;\n        let newHeight = prev.height;\n        let newX = prev.x;\n        let newY = prev.y;\n        \n        switch (resizeHandle) {\n          case 'top-left':\n            newWidth = Math.max(minSize, prev.width - deltaX);\n            newHeight = Math.max(minSize, prev.height - deltaY);\n            newX = prev.x + prev.width - newWidth;\n            newY = prev.y + prev.height - newHeight;\n            break;\n          case 'top-right':\n            newWidth = Math.max(minSize, prev.width + deltaX);\n            newHeight = Math.max(minSize, prev.height - deltaY);\n            newY = prev.y + prev.height - newHeight;\n            break;\n          case 'bottom-left':\n            newWidth = Math.max(minSize, prev.width - deltaX);\n            newHeight = Math.max(minSize, prev.height + deltaY);\n            newX = prev.x + prev.width - newWidth;\n            break;\n          case 'bottom-right':\n            newWidth = Math.max(minSize, prev.width + deltaX);\n            newHeight = Math.max(minSize, prev.height + deltaY);\n            break;\n          default:\n            return prev;\n        }\n        \n        // Поддерживаем квадратную форму\n        const size = Math.min(newWidth, newHeight);\n        \n        // Проверяем, что новая область не выходит за пределы контейнера\n        const maxX = containerSize.width - size;\n        const maxY = containerSize.height - size;\n        \n        return {\n          x: Math.max(0, Math.min(newX, maxX)),\n          y: Math.max(0, Math.min(newY, maxY)),\n          width: size,\n          height: size\n        };\n      });\n      \n      setDragStart({ x: coords.x, y: coords.y });\n    }\n  }, [isDragging, isResizing, cropArea, dragStart, resizeHandle, containerSize, minSize, getEventCoordinates]);\n\n  const handleEnd = useCallback((e) => {\n    // Для touch событий preventDefault может не работать\n    if (e && e.type === 'touchend') {\n      e.preventDefault();\n    }\n    \n    setIsDragging(false);\n    setIsResizing(false);\n    setResizeHandle(null);\n  }, []);\n\n  // Глобальные обработчики событий\n  useEffect(() => {\n    const handleGlobalMouseMove = (e) => handleMove(e);\n    const handleGlobalMouseUp = () => handleEnd();\n    const handleGlobalTouchMove = (e) => {\n      // Важно: preventDefault должен быть вызван до handleMove\n      e.preventDefault();\n      handleMove(e);\n    };\n    const handleGlobalTouchEnd = (e) => handleEnd(e);\n    \n    // Предотвращаем скролл на мобильных устройствах\n    const preventScroll = (e) => {\n      if (isDragging || isResizing) {\n        e.preventDefault();\n      }\n    };\n    \n    if (isDragging || isResizing) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      // Добавляем passive: false для touchmove, чтобы можно было вызвать preventDefault\n      document.addEventListener('touchmove', handleGlobalTouchMove, { passive: false });\n      document.addEventListener('touchend', handleGlobalTouchEnd, { passive: false });\n      // Предотвращаем скролл страницы\n      document.addEventListener('touchmove', preventScroll, { passive: false });\n      document.body.style.overflow = 'hidden';\n    }\n    \n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchmove', handleGlobalTouchMove);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n      document.removeEventListener('touchmove', preventScroll);\n      document.body.style.overflow = '';\n    };\n  }, [isDragging, isResizing, handleMove, handleEnd]);\n\n  // Добавляем touch event listeners напрямую через refs\n  useEffect(() => {\n    const cropAreaElement = containerRef.current;\n    if (!cropAreaElement) return;\n\n    const handleTouchStart = (e) => {\n      e.preventDefault();\n      handleStart(e, 'move');\n    };\n\n    const handleTouchStartTopLeft = (e) => {\n      e.preventDefault();\n      handleStart(e, 'top-left');\n    };\n\n    const handleTouchStartTopRight = (e) => {\n      e.preventDefault();\n      handleStart(e, 'top-right');\n    };\n\n    const handleTouchStartBottomLeft = (e) => {\n      e.preventDefault();\n      handleStart(e, 'bottom-left');\n    };\n\n    const handleTouchStartBottomRight = (e) => {\n      e.preventDefault();\n      handleStart(e, 'bottom-right');\n    };\n\n    // Предотвращаем скролл на контейнере\n    const preventScroll = (e) => {\n      e.preventDefault();\n    };\n\n    // Добавляем touch event listeners с passive: false\n    cropAreaElement.addEventListener('touchstart', handleTouchStart, { passive: false });\n    cropAreaElement.addEventListener('touchmove', preventScroll, { passive: false });\n    \n    // Находим и добавляем обработчики для маркеров\n    const handles = cropAreaElement.querySelectorAll('.crop-handle');\n    handles.forEach((handle, index) => {\n      const handler = [handleTouchStartTopLeft, handleTouchStartTopRight, handleTouchStartBottomLeft, handleTouchStartBottomRight][index];\n      handle.addEventListener('touchstart', handler, { passive: false });\n    });\n\n    return () => {\n      cropAreaElement.removeEventListener('touchstart', handleTouchStart);\n      cropAreaElement.removeEventListener('touchmove', preventScroll);\n      handles.forEach((handle, index) => {\n        const handler = [handleTouchStartTopLeft, handleTouchStartTopRight, handleTouchStartBottomLeft, handleTouchStartBottomRight][index];\n        handle.removeEventListener('touchstart', handler);\n      });\n    };\n  }, [handleStart]);\n\n  // Предотвращаем скролл на всем документе во время работы с кропом\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.position = 'fixed';\n      document.body.style.width = '100%';\n      \n      return () => {\n        document.body.style.overflow = '';\n        document.body.style.position = '';\n        document.body.style.width = '';\n      };\n    }\n  }, [isOpen]);\n\n  // Функция кропа\n  const handleCrop = useCallback(() => {\n    if (!imageRef.current) return;\n    \n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    \n    // Устанавливаем размер канваса равным размеру области кропа\n    canvas.width = cropArea.width;\n    canvas.height = cropArea.height;\n    \n    // Вычисляем масштаб между отображаемым изображением и оригиналом\n    const scaleX = imageSize.width / containerSize.width;\n    const scaleY = imageSize.height / containerSize.height;\n    \n    // Вычисляем координаты в оригинальном изображении\n    const sourceX = cropArea.x * scaleX;\n    const sourceY = cropArea.y * scaleY;\n    const sourceWidth = cropArea.width * scaleX;\n    const sourceHeight = cropArea.height * scaleY;\n    \n    // Рисуем обрезанное изображение\n    ctx.drawImage(\n      imageRef.current,\n      sourceX, sourceY, sourceWidth, sourceHeight,\n      0, 0, cropArea.width, cropArea.height\n    );\n    \n    // Конвертируем в Blob\n    canvas.toBlob((blob) => {\n      if (blob) {\n        const croppedFile = new File([blob], 'avatar.jpg', { type: 'image/jpeg' });\n        onCrop(croppedFile);\n        onClose();\n      }\n    }, 'image/jpeg', 0.9);\n  }, [cropArea, imageSize, containerSize, onCrop, onClose]);\n\n  // Сброс области кропа\n  const handleReset = useCallback(() => {\n    const cropSize = Math.min(\n      isMobile ? 150 : 200, \n      Math.min(containerSize.width, containerSize.height) * 0.8\n    );\n    \n    setCropArea({\n      x: (containerSize.width - cropSize) / 2,\n      y: (containerSize.height - cropSize) / 2,\n      width: cropSize,\n      height: cropSize\n    });\n  }, [containerSize, isMobile]);\n\n  if (!isOpen || !imageFile) return null;\n\n  return (\n    <Modal>\n      <ModalContent $maxWidth={isMobile ? \"95vw\" : \"800px\"}>\n        <ModalHeader>\n          <h2>Обрезка аватарки</h2>\n          <Button $variant=\"secondary\" onClick={onClose}>\n            <CloseIcon />\n          </Button>\n        </ModalHeader>\n        \n        <CropperContainer>\n          <Instructions>\n            {isMobile \n              ? \"Перетащите область выделения или используйте угловые маркеры для изменения размера. Аватарка будет квадратной формы.\"\n              : \"Перетащите область выделения или используйте угловые маркеры для изменения размера. Аватарка будет квадратной формы.\"\n            }\n          </Instructions>\n          \n          <ImagePreview\n            ref={containerRef}\n            $height={`${containerSize.height}px`}\n            $mobileHeight={`${Math.min(containerSize.height, 300)}px`}\n          >\n            <img\n              ref={imageRef}\n              src={imageUrl}\n              alt=\"Предварительный просмотр\"\n              draggable={false}\n            />\n            \n            <CropArea\n              style={{\n                left: cropArea.x,\n                top: cropArea.y,\n                width: cropArea.width,\n                height: cropArea.height\n              }}\n              onMouseDown={(e) => handleStart(e, 'move')}\n            >\n              <CropHandle \n                className=\"crop-handle top-left\" \n                $cursor=\"nw-resize\"\n                onMouseDown={(e) => handleStart(e, 'top-left')}\n              />\n              <CropHandle \n                className=\"crop-handle top-right\" \n                $cursor=\"ne-resize\"\n                onMouseDown={(e) => handleStart(e, 'top-right')}\n              />\n              <CropHandle \n                className=\"crop-handle bottom-left\" \n                $cursor=\"sw-resize\"\n                onMouseDown={(e) => handleStart(e, 'bottom-left')}\n              />\n              <CropHandle \n                className=\"crop-handle bottom-right\" \n                $cursor=\"se-resize\"\n                onMouseDown={(e) => handleStart(e, 'bottom-right')}\n              />\n            </CropArea>\n          </ImagePreview>\n          \n          <Controls>\n            <Button $variant=\"secondary\" onClick={handleReset}>\n              Сбросить\n            </Button>\n            <Button onClick={handleCrop}>\n              Обрезать и сохранить\n            </Button>\n          </Controls>\n        </CropperContainer>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default AvatarCropper;\n","import styled from 'styled-components';\n\n// Иконки\nexport const EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nexport const EyeOffIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n  </svg>\n);\n\nexport const SearchIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"m21 21-4.35-4.35\"/>\n  </svg>\n);\n\nexport const SendIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"/>\n    <polygon points=\"22,2 15,22 11,13 2,9 22,2\"/>\n  </svg>\n);\n\nexport const HeartIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"/>\n  </svg>\n);\n\nexport const MessageIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n  </svg>\n);\n\nexport const CloseIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n  </svg>\n);\n\nexport const PlusIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n  </svg>\n);\n\nexport const EditIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n  </svg>\n);\n\nexport const BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nexport const CheckIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,6 9,17 4,12\"/>\n  </svg>\n);\n\nexport const TrashIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\nexport const FilterIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nexport const GiftIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,12 20,22 4,22 4,12\"/>\n    <rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"/>\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"/>\n    <path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"/>\n    <path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"/>\n  </svg>\n);\n\nexport const StarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"12,2 15.09,8.26 22,9 17,14.74 18.18,21.02 12,17.77 5.82,21.02 7,14.74 2,9 8.91,8.26 12,2\"/>\n  </svg>\n);\n\nexport const UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nexport const CrownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M6 6l6-4 6 4\"/>\n    <path d=\"M6 6v14h12V6\"/>\n    <circle cx=\"12\" cy=\"13\" r=\"2\"/>\n  </svg>\n);\n\nexport const ChevronUpIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"18,15 12,9 6,15\"/>\n  </svg>\n);\n\nexport const ChevronDownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"6,9 12,15 18,9\"/>\n  </svg>\n);\n\nexport const TrophyIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n    <path d=\"M5.7 8H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h3.7\"/>\n    <path d=\"M18.3 8H22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-3.7\"/>\n    <path d=\"M5.7 8v5.7C5.7 17 8.3 19 12 19s6.3-2 6.3-5.3V8\"/>\n  </svg>\n);\n\n// Контейнеры\nexport const PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${props => props.$gradient ? \n    'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : \n    props.theme.colors.background\n  };\n  padding: ${props => props.$noPadding ? '0' : '20px'};\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$noPadding ? '0' : '10px'};\n  }\n`;\n\nexport const ContentCard = styled.div`\n  width: 100%;\n  max-width: ${props => props.$maxWidth || '900px'};\n  margin: 0 auto;\n  background: white;\n  border-radius: 20px;\n  padding: ${props => props.$padding || '40px'};\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s ease-out;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$mobilePadding || '20px'};\n    max-width: 100%;\n    border-radius: 15px;\n  }\n`;\n\n// Секции и заголовки\nexport const LogoSection = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const Logo = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: ${props => props.$size || '80px'};\n  height: ${props => props.$size || '80px'};\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 20px;\n  color: white;\n  font-size: ${props => props.$fontSize || '32px'};\n  font-weight: bold;\n  margin-bottom: 15px;\n  box-shadow: 0 10px 30px rgba(220, 53, 34, 0.3);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$mobileSize || '60px'};\n    height: ${props => props.$mobileSize || '60px'};\n    font-size: ${props => props.$mobileFontSize || '24px'};\n  }\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0 0 10px 0;\n  color: #2d3748;\n  font-size: ${props => props.$size === 'large' ? '32px' : '28px'};\n  font-weight: 700;\n  \n  @media (max-width: 768px) {\n    font-size: ${props => props.$size === 'large' ? '28px' : '24px'};\n  }\n`;\n\nexport const Subtitle = styled.p`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  margin-bottom: 30px;\n`;\n\nexport const SectionTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #dc3522;\n  display: inline-block;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n// Формы\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const FormSection = styled.div`\n  background: #f7fafc;\n  padding: 25px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n`;\n\nexport const FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n`;\n\nexport const FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(${props => props.$minWidth || '240px'}, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n  color: #4a5568;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  .required {\n    color: #dc3522;\n    font-weight: bold;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\n// Поля ввода\nexport const InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n  \n  &[type=\"password\"] {\n    padding-right: 45px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L6 6L11 1' stroke='%234A5568' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 16px center;\n  padding-right: 40px;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background-color: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  min-height: ${props => props.$minHeight || '100px'};\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    min-height: 80px;\n  }\n`;\n\n// Кнопки\nexport const Button = styled.button`\n  padding: ${props => props.$size === 'small' ? '8px 16px' : '14px 28px'};\n  background: ${props => {\n    if (props.$variant === 'secondary') return 'white';\n    if (props.$variant === 'danger') return '#f56565';\n    return 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)';\n  }};\n  color: ${props => props.$variant === 'secondary' ? '#dc3522' : 'white'};\n  border: ${props => props.$variant === 'secondary' ? '2px solid #dc3522' : 'none'};\n  border-radius: 10px;\n  font-size: ${props => props.$size === 'small' ? '14px' : '16px'};\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: ${props => props.$variant === 'secondary' ? 'none' : '0 4px 15px rgba(220, 53, 34, 0.3)'};\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    transform: ${props => props.$variant === 'secondary' ? 'none' : 'translateY(-2px)'};\n    box-shadow: ${props => {\n      if (props.$variant === 'secondary') return '0 2px 10px rgba(220, 53, 34, 0.2)';\n      if (props.$variant === 'danger') return '0 6px 20px rgba(245, 101, 101, 0.4)';\n      return '0 6px 20px rgba(220, 53, 34, 0.4)';\n    }};\n    background: ${props => {\n      if (props.$variant === 'secondary') return '#fff5f5';\n      if (props.$variant === 'danger') return '#e53e3e';\n      return 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)';\n    }};\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    background: linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%);\n    cursor: not-allowed;\n    box-shadow: none;\n    transform: none;\n    border-color: ${props => props.$variant === 'secondary' ? '#cbd5e0' : 'transparent'};\n    color: ${props => props.$variant === 'secondary' ? '#a0aec0' : 'white'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: ${props => props.$size === 'small' ? '6px 12px' : '12px 24px'};\n    font-size: ${props => props.$size === 'small' ? '13px' : '15px'};\n  }\n`;\n\nexport const IconButton = styled.button`\n  width: ${props => props.$size || '40px'};\n  height: ${props => props.$size || '40px'};\n  border-radius: 50%;\n  border: none;\n  background: ${props => props.$variant === 'secondary' ? '#f7fafc' : '#dc3522'};\n  color: ${props => props.$variant === 'secondary' ? '#4a5568' : 'white'};\n  cursor: pointer;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$variant === 'secondary' ? '#e2e8f0' : '#ff6b58'};\n    transform: scale(1.1);\n  }\n  \n  &:focus {\n    outline: none;\n  }\n  \n  &:disabled {\n    background: #e2e8f0;\n    color: #a0aec0;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\n// Элементы ошибок\nexport const ErrorText = styled.span`\n  color: #f56565;\n  font-size: 13px;\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⚠';\n    font-size: 12px;\n  }\n`;\n\n// Карточки и контейнеры\nexport const Card = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: ${props => props.$padding || '20px'};\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: all 0.3s ease;\n  border: 1px solid #e2e8f0;\n  \n  &:hover {\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    transform: translateY(-2px);\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: ${props => props.$size || '40px'};\n  height: ${props => props.$size || '40px'};\n  border-radius: 50%;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-color: ${props => props.$bgColor || '#dc3522'};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  font-size: ${props => props.$fontSize || '16px'};\n  border: ${props => props.$border || '2px solid #e2e8f0'};\n  cursor: ${props => props.$clickable ? 'pointer' : 'default'};\n  transition: all 0.2s ease;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    ${props => props.$clickable && `\n      border-color: #dc3522;\n      transform: scale(1.05);\n    `}\n  }\n  \n  ${props => props.$online && `\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: 2px;\n      right: 2px;\n      width: 12px;\n      height: 12px;\n      background: #4caf50;\n      border-radius: 50%;\n      border: 2px solid white;\n    }\n  `}\n  \n  /* Адаптивные размеры для разных экранов */\n  /* Большие экраны - аватарка 50px */\n  @media (min-width: 1440px) {\n    ${props => props.$size === '45px' && `\n      width: 50px;\n      height: 50px;\n      font-size: 20px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Средне-большие экраны - аватарка 47px */\n  @media (min-width: 1240px) and (max-width: 1439px) {\n    ${props => props.$size === '45px' && `\n      width: 47px;\n      height: 47px;\n      font-size: 19px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Средние экраны - аватарка 45px */\n  @media (max-width: 1200px) {\n    ${props => props.$size === '45px' && `\n      width: 45px;\n      height: 45px;\n      font-size: 18px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Планшеты в альбомной ориентации - аватарка 42px */\n  @media (max-width: 1024px) {\n    ${props => props.$size === '45px' && `\n      width: 42px;\n      height: 42px;\n      font-size: 17px;\n      border-width: 2px;\n    `}\n  }\n  \n  /* Планшеты в портретной ориентации - аватарка 40px */\n  @media (max-width: 768px) {\n    ${props => props.$size === '45px' && `\n      width: 40px;\n      height: 40px;\n      font-size: 16px;\n      border-width: 1.5px;\n    `}\n  }\n  \n  /* Большие мобильные - аватарка 38px */\n  @media (max-width: 576px) {\n    ${props => props.$size === '45px' && `\n      width: 38px;\n      height: 38px;\n      font-size: 15px;\n      border-width: 1.5px;\n    `}\n  }\n  \n  /* Маленькие мобильные - аватарка 34px */\n  @media (max-width: 360px) {\n    ${props => props.$size === '45px' && `\n      width: 34px;\n      height: 34px;\n      font-size: 13px;\n      border-width: 1px;\n    `}\n  }\n`;\n\n// Модальные окна\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  padding: 20px;\n  backdrop-filter: blur(5px);\n`;\n\nexport const ModalContent = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  max-width: ${props => props.$maxWidth || '500px'};\n  width: 100%;\n  max-height: 90vh;\n  overflow-y: auto;\n  animation: modalSlideUp 0.3s ease-out;\n  \n  @keyframes modalSlideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px) scale(0.95);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0) scale(1);\n    }\n  }\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  \n  h2 {\n    margin: 0;\n    color: #2d3748;\n    font-size: 24px;\n    font-weight: 700;\n  }\n`;\n\n// Утилиты\nexport const FlexContainer = styled.div`\n  display: flex;\n  align-items: ${props => props.$align || 'center'};\n  justify-content: ${props => props.$justify || 'flex-start'};\n  gap: ${props => props.$gap || '10px'};\n  flex-direction: ${props => props.$direction || 'row'};\n  flex-wrap: ${props => props.$wrap ? 'wrap' : 'nowrap'};\n  \n  @media (max-width: 768px) {\n    flex-direction: ${props => props.$mobileDirection || props.$direction || 'row'};\n    gap: ${props => props.$mobileGap || props.$gap || '10px'};\n  }\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.$columns || 'repeat(auto-fit, minmax(250px, 1fr))'};\n  gap: ${props => props.$gap || '20px'};\n  \n  @media (max-width: 768px) {\n    grid-template-columns: ${props => props.$mobileColumns || '1fr'};\n    gap: ${props => props.$mobileGap || '15px'};\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  \n  &::after {\n    content: '';\n    width: 40px;\n    height: 40px;\n    border: 4px solid #e2e8f0;\n    border-top: 4px solid #dc3522;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nexport const ProgressBar = styled.div`\n  height: 4px;\n  background: #e2e8f0;\n  border-radius: 2px;\n  margin: 20px 0;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: ${props => props.$progress || 0}%;\n    background: linear-gradient(90deg, #dc3522 0%, #ff6b58 100%);\n    transition: width 0.3s ease;\n  }\n`;\n\nexport const ThumbsUpIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n  </svg>\n);\n\nexport const ThumbsDownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" transform=\"rotate(180)\">\n    <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path>\n  </svg>\n);\n\nexport const LockIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"/>\n    <circle cx=\"12\" cy=\"16\" r=\"1\"/>\n    <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/>\n  </svg>\n);\n\nexport const CreditCardIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"1\" y=\"4\" width=\"22\" height=\"16\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"1\" y1=\"10\" x2=\"23\" y2=\"10\"/>\n  </svg>\n);\n\nexport const WalletIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 12V7H5a2 2 0 0 1 0-4h14v4\"/>\n    <path d=\"M3 5v14a2 2 0 0 0 2 2h16v-5\"/>\n    <path d=\"M18 12a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v-6Z\"/>\n  </svg>\n);\n\nexport { default as Checkbox } from './Checkbox';\n\nexport { default as BalanceTopUp } from './BalanceTopUp';\nexport { default as AvatarCropper } from './AvatarCropper';","// Единая система брейкпоинтов для SwingFox\nexport const BREAKPOINTS = {\n  // Мобильные устройства\n  TINY: '320px',        // Самые маленькие устройства\n  MOBILE: '480px',      // Стандартные мобильные\n  MOBILE_LARGE: '576px', // Большие мобильные\n  \n  // Планшеты\n  TABLET: '768px',      // Планшеты портретные\n  TABLET_LARGE: '992px', // Планшеты альбомные\n  \n  // Десктопы (мобильное меню до 1170px)\n  DESKTOP_MOBILE: '1170px', // Граница мобильного меню\n  DESKTOP: '1200px',    // Стандартные десктопы\n  DESKTOP_LARGE: '1440px', // Большие мониторы\n  DESKTOP_XL: '1920px'  // Ultra wide/4K мониторы\n};\n\n// Медиа-запросы для styled-components\nexport const MEDIA = {\n  // Mobile first подход\n  mobile: `@media (min-width: ${BREAKPOINTS.MOBILE})`,\n  mobileLarge: `@media (min-width: ${BREAKPOINTS.MOBILE_LARGE})`,\n  tablet: `@media (min-width: ${BREAKPOINTS.TABLET})`,\n  tabletLarge: `@media (min-width: ${BREAKPOINTS.TABLET_LARGE})`,\n  desktopMobile: `@media (min-width: ${BREAKPOINTS.DESKTOP_MOBILE})`,\n  desktop: `@media (min-width: ${BREAKPOINTS.DESKTOP})`,\n  desktopLarge: `@media (min-width: ${BREAKPOINTS.DESKTOP_LARGE})`,\n  desktopXL: `@media (min-width: ${BREAKPOINTS.DESKTOP_XL})`,\n  \n  // Max-width медиа-запросы для edge cases\n  maxMobile: `@media (max-width: ${parseInt(BREAKPOINTS.MOBILE) - 1}px)`,\n  maxMobileLarge: `@media (max-width: ${parseInt(BREAKPOINTS.MOBILE_LARGE) - 1}px)`,\n  maxTablet: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET) - 1}px)`,\n  maxTabletLarge: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET_LARGE) - 1}px)`,\n  maxDesktopMobile: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP_MOBILE) - 1}px)`,\n  maxDesktop: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP) - 1}px)`,\n  maxDesktopLarge: `@media (max-width: ${parseInt(BREAKPOINTS.DESKTOP_LARGE) - 1}px)`,\n  \n  // Комбинированные диапазоны\n  mobileOnly: `@media (max-width: ${parseInt(BREAKPOINTS.TABLET) - 1}px)`,\n  tabletOnly: `@media (min-width: ${BREAKPOINTS.TABLET}) and (max-width: ${parseInt(BREAKPOINTS.DESKTOP_MOBILE) - 1}px)`,\n  desktopOnly: `@media (min-width: ${BREAKPOINTS.DESKTOP_MOBILE})`,\n  \n  // Ориентация\n  landscape: '@media (orientation: landscape)',\n  portrait: '@media (orientation: portrait)',\n  \n  // Высокое разрешение\n  retina: '@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n};\n\n// Функция для получения значения брейкпоинта без 'px'\nexport const getBreakpointValue = (breakpoint) => {\n  return parseInt(BREAKPOINTS[breakpoint]) || parseInt(breakpoint);\n};\n\n// Вспомогательная функция для создания кастомных медиа-запросов\nexport const createMediaQuery = (minWidth, maxWidth = null) => {\n  if (maxWidth) {\n    return `@media (min-width: ${minWidth}) and (max-width: ${maxWidth})`;\n  }\n  return `@media (min-width: ${minWidth})`;\n};","import { BREAKPOINTS } from './breakpoints';\n\n// Адаптивные размеры для элементов шапки\nexport const HEADER_SIZES = {\n  // Высота шапки\n  height: {\n    tiny: '50px',\n    mobile: '55px',\n    mobileLarge: '58px',\n    tablet: '62px',\n    tabletLarge: '66px',\n    desktop: '70px',\n    desktopLarge: '75px',\n    desktopXL: '80px'\n  },\n  \n  // Отступы контейнера\n  padding: {\n    tiny: '0 8px',\n    mobile: '0 12px',\n    mobileLarge: '0 15px',\n    tablet: '0 18px',\n    tabletLarge: '0 22px',\n    desktop: '0 25px',\n    desktopLarge: '0 30px',\n    desktopXL: '0 35px'\n  },\n  \n  // Логотип иконка\n  logoIcon: {\n    tiny: '32px',\n    mobile: '36px',\n    mobileLarge: '38px',\n    tablet: '40px',\n    tabletLarge: '42px',\n    desktop: '45px',\n    desktopLarge: '48px',\n    desktopXL: '52px'\n  },\n  \n  // Размер шрифта иконки логотипа\n  logoIconFont: {\n    tiny: '13px',\n    mobile: '14px',\n    mobileLarge: '15px',\n    tablet: '16px',\n    tabletLarge: '17px',\n    desktop: '18px',\n    desktopLarge: '19px',\n    desktopXL: '21px'\n  },\n  \n  // Текст логотипа\n  logoText: {\n    tiny: '16px',\n    mobile: '18px',\n    mobileLarge: '19px',\n    tablet: '20px',\n    tabletLarge: '22px',\n    desktop: '24px',\n    desktopLarge: '26px',\n    desktopXL: '28px'\n  },\n  \n  // Навигационные ссылки\n  navLink: {\n    padding: {\n      tiny: '6px 8px',\n      mobile: '8px 10px',\n      mobileLarge: '8px 12px',\n      tablet: '10px 14px',\n      tabletLarge: '10px 16px',\n      desktop: '12px 16px',\n      desktopLarge: '12px 18px',\n      desktopXL: '14px 20px'\n    },\n    fontSize: {\n      tiny: '12px',\n      mobile: '13px',\n      mobileLarge: '13px',\n      tablet: '14px',\n      tabletLarge: '14px',\n      desktop: '15px',\n      desktopLarge: '15px',\n      desktopXL: '16px'\n    },\n    gap: {\n      tiny: '4px',\n      mobile: '5px',\n      mobileLarge: '6px',\n      tablet: '6px',\n      tabletLarge: '7px',\n      desktop: '8px',\n      desktopLarge: '8px',\n      desktopXL: '10px'\n    }\n  },\n  \n  // Контейнер навигационных ссылок\n  navLinks: {\n    gap: {\n      tiny: '2px',\n      mobile: '4px',\n      mobileLarge: '6px',\n      tablet: '6px',\n      tabletLarge: '8px',\n      desktop: '8px',\n      desktopLarge: '10px',\n      desktopXL: '12px'\n    }\n  },\n  \n  // Аватар пользователя\n  userAvatar: {\n    tiny: '34px',\n    mobile: '36px',\n    mobileLarge: '38px',\n    tablet: '40px',\n    tabletLarge: '42px',\n    desktop: '45px',\n    desktopLarge: '48px',\n    desktopXL: '52px'\n  },\n  \n  // VIP индикатор\n  vipIndicator: {\n    tiny: '14px',\n    mobile: '16px',\n    mobileLarge: '17px',\n    tablet: '18px',\n    tabletLarge: '19px',\n    desktop: '20px',\n    desktopLarge: '22px',\n    desktopXL: '24px'\n  },\n  \n  // Бейдж уведомлений\n  notificationBadge: {\n    tiny: '14px',\n    mobile: '16px',\n    mobileLarge: '17px',\n    tablet: '17px',\n    tabletLarge: '18px',\n    desktop: '18px',\n    desktopLarge: '20px',\n    desktopXL: '22px'\n  },\n  \n  // Мобильное меню\n  mobileMenu: {\n    padding: {\n      tiny: '12px',\n      mobile: '15px',\n      mobileLarge: '18px',\n      tablet: '20px',\n      tabletLarge: '22px'\n    },\n    linkPadding: {\n      tiny: '12px',\n      mobile: '14px',\n      mobileLarge: '16px',\n      tablet: '16px',\n      tabletLarge: '18px'\n    },\n    fontSize: {\n      tiny: '14px',\n      mobile: '15px',\n      mobileLarge: '15px',\n      tablet: '16px',\n      tabletLarge: '16px'\n    }\n  },\n  \n  // Dropdown меню\n  dropdown: {\n    minWidth: {\n      tiny: '200px',\n      mobile: '220px',\n      mobileLarge: '240px',\n      tablet: '250px',\n      tabletLarge: '260px',\n      desktop: '280px',\n      desktopLarge: '300px',\n      desktopXL: '320px'\n    },\n    padding: {\n      tiny: '6px',\n      mobile: '8px',\n      mobileLarge: '8px',\n      tablet: '10px',\n      tabletLarge: '10px',\n      desktop: '12px',\n      desktopLarge: '12px',\n      desktopXL: '14px'\n    }\n  }\n};\n\n// Функция для получения размера по брейкпоинту\nexport const getSize = (sizePath, currentBreakpoint = 'desktop') => {\n  const pathArray = sizePath.split('.');\n  let value = HEADER_SIZES;\n  \n  for (const path of pathArray) {\n    value = value[path];\n    if (!value) return null;\n  }\n  \n  // Проверяем доступные размеры и возвращаем подходящий\n  const availableSizes = Object.keys(value);\n  \n  // Приоритет по убыванию размера экрана\n  const priorities = ['desktopXL', 'desktopLarge', 'desktop', 'tabletLarge', 'tablet', 'mobileLarge', 'mobile', 'tiny'];\n  \n  // Находим индекс текущего брейкпоинта\n  const currentIndex = priorities.indexOf(currentBreakpoint);\n  \n  // Ищем подходящий размер, начиная с текущего и идя вниз по приоритету\n  for (let i = currentIndex; i < priorities.length; i++) {\n    const priority = priorities[i];\n    if (availableSizes.includes(priority)) {\n      return value[priority];\n    }\n  }\n  \n  // Если ничего не найдено, возвращаем первый доступный\n  return value[availableSizes[0]] || null;\n};\n\n// Функция для создания адаптивного CSS с размерами\nexport const createResponsiveCSS = (sizePath, cssProp = 'font-size') => {\n  const pathArray = sizePath.split('.');\n  let sizeObj = HEADER_SIZES;\n  \n  for (const path of pathArray) {\n    sizeObj = sizeObj[path];\n    if (!sizeObj) return '';\n  }\n  \n  let css = '';\n  \n  // Базовый размер (mobile first)\n  if (sizeObj.tiny) {\n    css += `${cssProp}: ${sizeObj.tiny};\\n`;\n  }\n  \n  // Медиа-запросы по возрастанию\n  const breakpointOrder = [\n    { key: 'mobile', bp: BREAKPOINTS.MOBILE },\n    { key: 'mobileLarge', bp: BREAKPOINTS.MOBILE_LARGE },\n    { key: 'tablet', bp: BREAKPOINTS.TABLET },\n    { key: 'tabletLarge', bp: BREAKPOINTS.TABLET_LARGE },\n    { key: 'desktop', bp: BREAKPOINTS.DESKTOP },\n    { key: 'desktopLarge', bp: BREAKPOINTS.DESKTOP_LARGE },\n    { key: 'desktopXL', bp: BREAKPOINTS.DESKTOP_XL }\n  ];\n  \n  for (const { key, bp } of breakpointOrder) {\n    if (sizeObj[key]) {\n      css += `\\n@media (min-width: ${bp}) {\\n  ${cssProp}: ${sizeObj[key]};\\n}`;\n    }\n  }\n  \n  return css;\n};\n\n// Экспорт утилит для быстрого доступа\nexport const UTILS = {\n  getSize,\n  createResponsiveCSS,\n  BREAKPOINTS,\n  HEADER_SIZES\n};","import React, { useState, useRef, useEffect } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useQueryClient, useQuery } from 'react-query';\nimport toast from 'react-hot-toast';\nimport { apiUtils, notificationsAPI } from '../services/api';\nimport { Avatar, FlexContainer, IconButton } from './UI';\nimport { MEDIA } from '../styles/breakpoints';\nimport { HEADER_SIZES } from '../styles/headerSizes';\n\n// Иконки\nconst HomeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\n    <polyline points=\"9,22 9,12 15,12 15,22\"/>\n  </svg>\n);\n\nconst ChatIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"/>\n  </svg>\n);\n\nconst AdsIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n  </svg>\n);\n\nconst AdminIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M12 1l3 6 6 3-6 3-3 6-3-6-6-3 6-3z\"/>\n  </svg>\n);\n\nconst BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nconst GiftIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"20,12 20,22 4,22 4,12\"/>\n    <rect x=\"2\" y=\"7\" width=\"20\" height=\"5\"/>\n    <line x1=\"12\" y1=\"22\" x2=\"12\" y2=\"7\"/>\n    <path d=\"M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z\"/>\n    <path d=\"M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z\"/>\n  </svg>\n);\n\nconst ClubsIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M3 21h18\"/>\n    <path d=\"M5 21V7l8-4v18\"/>\n    <path d=\"M19 21V11l-6-4\"/>\n    <path d=\"M9 9v.01\"/>\n    <path d=\"M9 12v.01\"/>\n    <path d=\"M9 15v.01\"/>\n    <path d=\"M9 18v.01\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst CrownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M6 3h12l4 6-10 13L2 9z\"/>\n    <path d=\"M11 3L8 9l4 13 4-13-3-6\"/>\n    <path d=\"M2 9l4.5 13L11 9\"/>\n    <path d=\"M13 9l4.5 13L22 9\"/>\n  </svg>\n);\n\nconst TrophyIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"/>\n    <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"/>\n    <path d=\"M5.7 8H2a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h3.7\"/>\n    <path d=\"M18.3 8H22a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2h-3.7\"/>\n    <path d=\"M5.7 8v5.7C5.7 17 8.3 19 12 19s6.3-2 6.3-5.3V8\"/>\n  </svg>\n);\n\nconst SearchIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"M21 21l-4.35-4.35\"/>\n  </svg>\n);\n\nconst MenuIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"/>\n    <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"/>\n  </svg>\n);\n\nconst ProfileIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n  </svg>\n);\n\nconst SettingsIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n    <path d=\"M12 1v6m0 6v6m11-7h-6m-6 0H1\"/>\n  </svg>\n);\n\nconst LogoutIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/>\n    <polyline points=\"16,17 21,12 16,7\"/>\n    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"/>\n  </svg>\n);\n\nconst NavContainer = styled.nav`\n  background: white;\n  border-bottom: 1px solid #e2e8f0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  position: sticky;\n  top: 0;\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n  \n  /* Классы для устранения конфликтов с старым CSS */\n  &.react-navigation-container {\n    position: sticky !important;\n    top: 0 !important;\n    z-index: 1000 !important;\n    width: 100% !important;\n    background: white !important;\n    border-bottom: 1px solid #e2e8f0 !important;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08) !important;\n    backdrop-filter: blur(10px) !important;\n  }\n`;\n\nconst NavContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  /* Высота и отступы по новой системе */\n  height: ${HEADER_SIZES.height.tiny};\n  padding: ${HEADER_SIZES.padding.tiny};\n  \n  ${MEDIA.mobile} {\n    height: ${HEADER_SIZES.height.mobile};\n    padding: ${HEADER_SIZES.padding.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    height: ${HEADER_SIZES.height.mobileLarge};\n    padding: ${HEADER_SIZES.padding.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    height: ${HEADER_SIZES.height.tablet};\n    padding: ${HEADER_SIZES.padding.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    height: ${HEADER_SIZES.height.tabletLarge};\n    padding: ${HEADER_SIZES.padding.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    height: ${HEADER_SIZES.height.desktop};\n    padding: ${HEADER_SIZES.padding.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    height: ${HEADER_SIZES.height.desktopLarge};\n    padding: ${HEADER_SIZES.padding.desktopLarge};\n    max-width: 1400px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    height: ${HEADER_SIZES.height.desktopXL};\n    padding: ${HEADER_SIZES.padding.desktopXL};\n    max-width: 1600px;\n  }\n`;\n\nconst LogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst LogoIcon = styled.div`\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 12px;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.logoIcon.tiny};\n  height: ${HEADER_SIZES.logoIcon.tiny};\n  font-size: ${HEADER_SIZES.logoIconFont.tiny};\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.logoIcon.mobile};\n    height: ${HEADER_SIZES.logoIcon.mobile};\n    font-size: ${HEADER_SIZES.logoIconFont.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.logoIcon.mobileLarge};\n    height: ${HEADER_SIZES.logoIcon.mobileLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.logoIcon.tablet};\n    height: ${HEADER_SIZES.logoIcon.tablet};\n    font-size: ${HEADER_SIZES.logoIconFont.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.logoIcon.tabletLarge};\n    height: ${HEADER_SIZES.logoIcon.tabletLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.logoIcon.desktop};\n    height: ${HEADER_SIZES.logoIcon.desktop};\n    font-size: ${HEADER_SIZES.logoIconFont.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.logoIcon.desktopLarge};\n    height: ${HEADER_SIZES.logoIcon.desktopLarge};\n    font-size: ${HEADER_SIZES.logoIconFont.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.logoIcon.desktopXL};\n    height: ${HEADER_SIZES.logoIcon.desktopXL};\n    font-size: ${HEADER_SIZES.logoIconFont.desktopXL};\n  }\n  \n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 6px 20px rgba(220, 53, 34, 0.4);\n  }\n`;\n\nconst LogoText = styled.div`\n  font-weight: bold;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  transition: all 0.3s ease;\n  user-select: none;\n  \n  /* Адаптивные размеры шрифта */\n  font-size: ${HEADER_SIZES.logoText.tiny};\n  \n  ${MEDIA.mobile} {\n    font-size: ${HEADER_SIZES.logoText.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    font-size: ${HEADER_SIZES.logoText.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    font-size: ${HEADER_SIZES.logoText.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    font-size: ${HEADER_SIZES.logoText.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    font-size: ${HEADER_SIZES.logoText.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    font-size: ${HEADER_SIZES.logoText.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    font-size: ${HEADER_SIZES.logoText.desktopXL};\n  }\n  \n  /* Скрываем на самых маленьких экранах */\n  ${MEDIA.maxMobile} {\n    display: none;\n  }\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  align-items: center;\n  \n  /* Адаптивный gap */\n  gap: ${HEADER_SIZES.navLinks.gap.tiny};\n  \n  ${MEDIA.mobile} {\n    gap: ${HEADER_SIZES.navLinks.gap.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    gap: ${HEADER_SIZES.navLinks.gap.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    gap: ${HEADER_SIZES.navLinks.gap.desktopXL};\n  }\n  \n  /* Скрываем при ширине меньше 1170px */\n  ${MEDIA.maxDesktopMobile} {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  border-radius: 12px;\n  color: #4a5568;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  position: relative;\n  white-space: nowrap;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.navLink.padding.tiny};\n  font-size: ${HEADER_SIZES.navLink.fontSize.tiny};\n  gap: ${HEADER_SIZES.navLink.gap.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.navLink.padding.mobile};\n    font-size: ${HEADER_SIZES.navLink.fontSize.mobile};\n    gap: ${HEADER_SIZES.navLink.gap.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.mobileLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.mobileLarge};\n    gap: ${HEADER_SIZES.navLink.gap.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.navLink.padding.tablet};\n    font-size: ${HEADER_SIZES.navLink.fontSize.tablet};\n    gap: ${HEADER_SIZES.navLink.gap.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.tabletLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.tabletLarge};\n    gap: ${HEADER_SIZES.navLink.gap.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    padding: ${HEADER_SIZES.navLink.padding.desktop};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktop};\n    gap: ${HEADER_SIZES.navLink.gap.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    padding: ${HEADER_SIZES.navLink.padding.desktopLarge};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktopLarge};\n    gap: ${HEADER_SIZES.navLink.gap.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    padding: ${HEADER_SIZES.navLink.padding.desktopXL};\n    font-size: ${HEADER_SIZES.navLink.fontSize.desktopXL};\n    gap: ${HEADER_SIZES.navLink.gap.desktopXL};\n  }\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    color: #dc3522;\n    text-decoration: none;\n    transform: translateY(-1px);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  /* Иконки в ссылках */\n  svg {\n    width: 18px;\n    height: 18px;\n    flex-shrink: 0;\n    \n    ${MEDIA.desktopLarge} {\n      width: 20px;\n      height: 20px;\n    }\n    \n    ${MEDIA.desktopXL} {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst UserSection = styled.div`\n  position: relative;\n`;\n\nconst UserMenuButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 50%;\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst VipIndicator = styled.div`\n  position: absolute;\n  bottom: -2px;\n  right: -2px;\n  border-radius: 50%;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid white;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.vipIndicator.tiny};\n  height: ${HEADER_SIZES.vipIndicator.tiny};\n  font-size: 8px;\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.vipIndicator.mobile};\n    height: ${HEADER_SIZES.vipIndicator.mobile};\n    font-size: 9px;\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.vipIndicator.mobileLarge};\n    height: ${HEADER_SIZES.vipIndicator.mobileLarge};\n    font-size: 9px;\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.vipIndicator.tablet};\n    height: ${HEADER_SIZES.vipIndicator.tablet};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.vipIndicator.tabletLarge};\n    height: ${HEADER_SIZES.vipIndicator.tabletLarge};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.vipIndicator.desktop};\n    height: ${HEADER_SIZES.vipIndicator.desktop};\n    font-size: 10px;\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.vipIndicator.desktopLarge};\n    height: ${HEADER_SIZES.vipIndicator.desktopLarge};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.vipIndicator.desktopXL};\n    height: ${HEADER_SIZES.vipIndicator.desktopXL};\n    font-size: 12px;\n  }\n`;\n\nconst DropdownMenu = styled.div`\n  position: absolute;\n  top: calc(100% + 10px);\n  right: 0;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 15px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.dropdown.padding.tiny};\n  min-width: ${HEADER_SIZES.dropdown.minWidth.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.dropdown.padding.mobile};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.mobileLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.dropdown.padding.tablet};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.tabletLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.tabletLarge};\n  }\n  \n  ${MEDIA.desktop} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktop};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktop};\n  }\n  \n  ${MEDIA.desktopLarge} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktopLarge};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktopLarge};\n  }\n  \n  ${MEDIA.desktopXL} {\n    padding: ${HEADER_SIZES.dropdown.padding.desktopXL};\n    min-width: ${HEADER_SIZES.dropdown.minWidth.desktopXL};\n  }\n  \n  ${props => !props.$show && 'display: none;'}\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -8px;\n    right: 20px;\n    width: 16px;\n    height: 16px;\n    background: white;\n    border-left: 1px solid #e2e8f0;\n    border-top: 1px solid #e2e8f0;\n    transform: rotate(45deg);\n  }\n`;\n\nconst DropdownItem = styled.button`\n  width: 100%;\n  padding: 12px 16px;\n  text-align: left;\n  background: none;\n  border: none;\n  cursor: pointer;\n  border-radius: 10px;\n  transition: all 0.2s ease;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  color: #4a5568;\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    color: #dc3522;\n  }\n  \n  &.danger {\n    color: #f56565;\n    \n    &:hover {\n      background: rgba(245, 101, 101, 0.1);\n    }\n  }\n`;\n\nconst MobileMenuButton = styled(IconButton)`\n  display: none;\n  transition: all 0.3s ease;\n  \n  /* Показываем при ширине меньше 1170px */\n  ${MEDIA.maxDesktopMobile} {\n    display: flex;\n  }\n  \n  /* Адаптивные размеры для иконки меню */\n  svg {\n    width: 22px;\n    height: 22px;\n    \n    ${MEDIA.mobile} {\n      width: 24px;\n      height: 24px;\n    }\n    \n    ${MEDIA.tablet} {\n      width: 26px;\n      height: 26px;\n    }\n  }\n  \n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nconst MobileMenu = styled.div.attrs({\n  className: 'react-mobile-menu'\n})`\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border-top: 1px solid #e2e8f0;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  z-index: 999;\n  \n  /* Адаптивные отступы */\n  padding: ${HEADER_SIZES.mobileMenu.padding.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.padding.tabletLarge};\n  }\n  \n  ${MEDIA.maxDesktopMobile} {\n    display: ${props => props.$show ? 'block' : 'none'};\n  }\n`;\n\nconst MobileNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: #4a5568;\n  text-decoration: none;\n  border-radius: 12px;\n  margin-bottom: 8px;\n  transition: all 0.2s ease;\n  font-weight: 500;\n  \n  /* Адаптивные размеры */\n  padding: ${HEADER_SIZES.mobileMenu.linkPadding.tiny};\n  gap: 10px;\n  font-size: ${HEADER_SIZES.mobileMenu.fontSize.tiny};\n  \n  ${MEDIA.mobile} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.mobile};\n    gap: 12px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.mobile};\n  }\n  \n  ${MEDIA.mobileLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.mobileLarge};\n    gap: 12px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.mobileLarge};\n  }\n  \n  ${MEDIA.tablet} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.tablet};\n    gap: 14px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.tablet};\n  }\n  \n  ${MEDIA.tabletLarge} {\n    padding: ${HEADER_SIZES.mobileMenu.linkPadding.tabletLarge};\n    gap: 14px;\n    font-size: ${HEADER_SIZES.mobileMenu.fontSize.tabletLarge};\n  }\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  &:hover:not(.active) {\n    background: #f7fafc;\n    text-decoration: none;\n    transform: translateX(4px);\n  }\n  \n  /* Иконки в мобильном меню */\n  svg {\n    width: 20px;\n    height: 20px;\n    flex-shrink: 0;\n    \n    ${MEDIA.tablet} {\n      width: 22px;\n      height: 22px;\n    }\n  }\n`;\n\nconst NotificationBadge = styled.span`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background: #f56565;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  box-shadow: 0 2px 8px rgba(245, 101, 101, 0.4);\n  transition: all 0.3s ease;\n  \n  /* Адаптивные размеры */\n  width: ${HEADER_SIZES.notificationBadge.tiny};\n  height: ${HEADER_SIZES.notificationBadge.tiny};\n  font-size: 10px;\n  \n  ${MEDIA.mobile} {\n    width: ${HEADER_SIZES.notificationBadge.mobile};\n    height: ${HEADER_SIZES.notificationBadge.mobile};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.mobileLarge} {\n    width: ${HEADER_SIZES.notificationBadge.mobileLarge};\n    height: ${HEADER_SIZES.notificationBadge.mobileLarge};\n    font-size: 11px;\n  }\n  \n  ${MEDIA.tablet} {\n    width: ${HEADER_SIZES.notificationBadge.tablet};\n    height: ${HEADER_SIZES.notificationBadge.tablet};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.tabletLarge} {\n    width: ${HEADER_SIZES.notificationBadge.tabletLarge};\n    height: ${HEADER_SIZES.notificationBadge.tabletLarge};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.desktop} {\n    width: ${HEADER_SIZES.notificationBadge.desktop};\n    height: ${HEADER_SIZES.notificationBadge.desktop};\n    font-size: 12px;\n  }\n  \n  ${MEDIA.desktopLarge} {\n    width: ${HEADER_SIZES.notificationBadge.desktopLarge};\n    height: ${HEADER_SIZES.notificationBadge.desktopLarge};\n    font-size: 13px;\n  }\n  \n  ${MEDIA.desktopXL} {\n    width: ${HEADER_SIZES.notificationBadge.desktopXL};\n    height: ${HEADER_SIZES.notificationBadge.desktopXL};\n    font-size: 14px;\n  }\n`;\n\n// Компонент счетчика уведомлений\nconst NotificationCounter = () => {\n  const { data: unreadCountData } = useQuery(\n    'unread-notifications-count',\n    () => notificationsAPI.getUnreadCount(),\n    {\n      refetchInterval: 30000, // Обновляем каждые 30 секунд\n      retry: 1,\n      enabled: apiUtils.isAuthenticated(), // Проверяем авторизацию\n      onError: (error) => {\n        // Тихо игнорируем ошибки для счетчика, но логируем 401\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in Navigation notification counter');\n        }\n      }\n    }\n  );\n\n  const unreadCount = unreadCountData?.total_unread || 0;\n\n  if (!unreadCount || unreadCount === 0) return null;\n\n  return (\n    <NotificationBadge>\n      {unreadCount > 99 ? '99+' : unreadCount}\n    </NotificationBadge>\n  );\n};\n\nconst Navigation = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const userMenuRef = useRef(null);\n  \n  // Получаем актуальные данные пользователя при монтировании\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = apiUtils.getCurrentUser();\n        if (user) {\n          setCurrentUser(user);\n          \n          // Если нет аватарки в кэше, пытаемся обновить данные\n          if (!user.ava) {\n            const updatedUser = await apiUtils.refreshCurrentUser();\n            if (updatedUser) {\n              setCurrentUser(updatedUser);\n            }\n          }\n        }\n      } catch (error) {\n        console.warn('Ошибка получения данных пользователя:', error);\n        setCurrentUser(apiUtils.getCurrentUser());\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  // Подписываемся на изменения в localStorage для синхронизации между табами\n  useEffect(() => {\n    const handleStorageChange = (event) => {\n      if (event.key === 'swingfox_user_cache' || event.key === 'swingfox_token') {\n        const user = apiUtils.getCurrentUser();\n        setCurrentUser(user);\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    return () => window.removeEventListener('storage', handleStorageChange);\n  }, []);\n\n  // Функция для принудительного обновления данных пользователя\n  const refreshUserData = async () => {\n    try {\n      const updatedUser = await apiUtils.refreshCurrentUser();\n      if (updatedUser) {\n        setCurrentUser(updatedUser);\n      }\n    } catch (error) {\n      console.warn('Ошибка обновления данных пользователя:', error);\n    }\n  };\n\n  // Добавляем глобальный обработчик для обновления навигации\n  useEffect(() => {\n    window.refreshNavigation = refreshUserData;\n    return () => {\n      delete window.refreshNavigation;\n    };\n  }, []);\n\n  const handleLogout = () => {\n    if (window.confirm('Выйти из аккаунта?')) {\n      apiUtils.logout();\n      queryClient.clear();\n      toast.success('Вы вышли из аккаунта');\n      navigate('/login');\n    }\n  };\n\n  const handleProfileClick = () => {\n    navigate('/profile');\n    setShowUserMenu(false);\n  };\n\n  const isActiveRoute = (path) => {\n    return location.pathname === path;\n  };\n\n  // Закрытие меню при клике вне\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      // Закрытие пользовательского меню\n      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n        setShowUserMenu(false);\n      }\n      \n      // Закрытие мобильного меню только если клик не по кнопке меню и не внутри самого меню\n      const mobileMenuButton = event.target.closest('[data-mobile-menu-button]');\n      const mobileMenuContent = event.target.closest('.react-mobile-menu');\n      \n      if (!mobileMenuButton && !mobileMenuContent && showMobileMenu) {\n        setShowMobileMenu(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [showMobileMenu]);\n\n  if (!currentUser) return null;\n\n  return (\n    <NavContainer className=\"react-navigation-container\">\n      <NavContent>\n        <LogoContainer>\n          <Link to=\"/\" style={{ textDecoration: 'none', display: 'flex', alignItems: 'center', gap: '12px' }}>\n            <LogoIcon>SF</LogoIcon>\n            <LogoText>SwingFox</LogoText>\n          </Link>\n        </LogoContainer>\n\n        <NavLinks>\n          <NavLink\n            to=\"/\"\n            className={isActiveRoute('/') ? 'active' : ''}\n          >\n            <HomeIcon />\n            Свайп\n          </NavLink>\n          \n          <NavLink\n            to=\"/catalog\"\n            className={isActiveRoute('/catalog') ? 'active' : ''}\n          >\n            <SearchIcon />\n            Каталог\n          </NavLink>\n          \n          <NavLink\n            to=\"/chat\"\n            className={location.pathname.startsWith('/chat') ? 'active' : ''}\n          >\n            <ChatIcon />\n            Чат\n            {/* Здесь можно добавить бейдж с количеством непрочитанных сообщений */}\n          </NavLink>\n          \n          <NavLink\n            to=\"/notifications\"\n            className={isActiveRoute('/notifications') ? 'active' : ''}\n            style={{ position: 'relative' }}\n          >\n            <BellIcon />\n            Уведомления\n            <NotificationCounter />\n          </NavLink>\n          \n\n          \n          <NavLink\n            to=\"/clubs\"\n            className={isActiveRoute('/clubs') ? 'active' : ''}\n          >\n            <UsersIcon />\n            Клубы\n          </NavLink>\n          \n          <NavLink\n            to=\"/subscriptions\"\n            className={isActiveRoute('/subscriptions') ? 'active' : ''}\n          >\n            <CrownIcon />\n            VIP\n          </NavLink>\n          \n          <NavLink\n            to=\"/ratings\"\n            className={isActiveRoute('/ratings') ? 'active' : ''}\n          >\n            <TrophyIcon />\n            Рейтинг\n          </NavLink>\n          \n          <NavLink\n            to=\"/ads\"\n            className={isActiveRoute('/ads') ? 'active' : ''}\n          >\n            <AdsIcon />\n            Объявления\n          </NavLink>\n          \n          {currentUser.is_admin && (\n            <NavLink \n              to=\"/admin\" \n              className={location.pathname.startsWith('/admin') ? 'active' : ''}\n            >\n              <AdminIcon />\n              Админ\n            </NavLink>\n          )}\n        </NavLinks>\n\n        <FlexContainer $gap=\"12px\">\n          <UserSection ref={userMenuRef}>\n            <UserMenuButton onClick={() => setShowUserMenu(!showUserMenu)}>\n              <Avatar\n                $src={currentUser.ava ? `/uploads/${currentUser.ava}` : ''}\n                $size={HEADER_SIZES.userAvatar.desktop}\n                $fontSize=\"18px\"\n                $clickable\n                css={`\n                  width: ${HEADER_SIZES.userAvatar.tiny};\n                  height: ${HEADER_SIZES.userAvatar.tiny};\n                  \n                  ${MEDIA.mobile} {\n                    width: ${HEADER_SIZES.userAvatar.mobile};\n                    height: ${HEADER_SIZES.userAvatar.mobile};\n                  }\n                  \n                  ${MEDIA.mobileLarge} {\n                    width: ${HEADER_SIZES.userAvatar.mobileLarge};\n                    height: ${HEADER_SIZES.userAvatar.mobileLarge};\n                  }\n                  \n                  ${MEDIA.tablet} {\n                    width: ${HEADER_SIZES.userAvatar.tablet};\n                    height: ${HEADER_SIZES.userAvatar.tablet};\n                  }\n                  \n                  ${MEDIA.tabletLarge} {\n                    width: ${HEADER_SIZES.userAvatar.tabletLarge};\n                    height: ${HEADER_SIZES.userAvatar.tabletLarge};\n                  }\n                  \n                  ${MEDIA.desktop} {\n                    width: ${HEADER_SIZES.userAvatar.desktop};\n                    height: ${HEADER_SIZES.userAvatar.desktop};\n                  }\n                  \n                  ${MEDIA.desktopLarge} {\n                    width: ${HEADER_SIZES.userAvatar.desktopLarge};\n                    height: ${HEADER_SIZES.userAvatar.desktopLarge};\n                  }\n                  \n                  ${MEDIA.desktopXL} {\n                    width: ${HEADER_SIZES.userAvatar.desktopXL};\n                    height: ${HEADER_SIZES.userAvatar.desktopXL};\n                  }\n                `}\n              >\n                {!currentUser.ava && currentUser.login.charAt(0).toUpperCase()}\n              </Avatar>\n              {apiUtils.isVip(currentUser) && (\n                <VipIndicator $color={apiUtils.getVipBadgeColor(currentUser.vipType)}>\n                  {apiUtils.getVipBadgeIcon(currentUser.vipType)}\n                </VipIndicator>\n              )}\n            </UserMenuButton>\n            \n            <DropdownMenu $show={showUserMenu}>\n              <DropdownItem onClick={handleProfileClick}>\n                <ProfileIcon />\n                Мой профиль\n              </DropdownItem>\n              <DropdownItem onClick={() => navigate('/profile?tab=settings')}>\n                <SettingsIcon />\n                Настройки\n              </DropdownItem>\n              <DropdownItem onClick={() => navigate('/club/login')}>\n                <UsersIcon />\n                Вход для клубов\n              </DropdownItem>\n              <DropdownItem className=\"danger\" onClick={handleLogout}>\n                <LogoutIcon />\n                Выйти\n              </DropdownItem>\n            </DropdownMenu>\n          </UserSection>\n\n          <MobileMenuButton\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowMobileMenu(!showMobileMenu);\n            }}\n            data-mobile-menu-button=\"true\"\n            $variant=\"secondary\"\n          >\n            <MenuIcon />\n          </MobileMenuButton>\n        </FlexContainer>\n      </NavContent>\n\n      <MobileMenu $show={showMobileMenu}>\n        <MobileNavLink\n          to=\"/\"\n          className={isActiveRoute('/') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <HomeIcon />\n          Свайп\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/catalog\"\n          className={isActiveRoute('/catalog') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <SearchIcon />\n          Каталог\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/chat\"\n          className={location.pathname.startsWith('/chat') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <ChatIcon />\n          Чат\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/notifications\"\n          className={isActiveRoute('/notifications') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n          style={{ position: 'relative' }}\n        >\n          <BellIcon />\n          Уведомления\n          <NotificationCounter />\n        </MobileNavLink>\n        \n\n        \n        <MobileNavLink\n          to=\"/clubs\"\n          className={isActiveRoute('/clubs') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <UsersIcon />\n          Клубы\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/subscriptions\"\n          className={isActiveRoute('/subscriptions') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <CrownIcon />\n          VIP\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/ratings\"\n          className={isActiveRoute('/ratings') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <TrophyIcon />\n          Рейтинг\n        </MobileNavLink>\n        \n        <MobileNavLink\n          to=\"/ads\"\n          className={isActiveRoute('/ads') ? 'active' : ''}\n          onClick={() => setShowMobileMenu(false)}\n        >\n          <AdsIcon />\n          Объявления\n        </MobileNavLink>\n        \n        {currentUser.is_admin && (\n          <MobileNavLink \n            to=\"/admin\" \n            className={location.pathname.startsWith('/admin') ? 'active' : ''}\n            onClick={() => setShowMobileMenu(false)}\n          >\n            <AdminIcon />\n            Админ\n          </MobileNavLink>\n        )}\n        \n        <MobileNavLink \n          to=\"/profile\" \n          onClick={() => setShowMobileMenu(false)}\n        >\n          <ProfileIcon />\n          Профиль\n        </MobileNavLink>\n        \n        <DropdownItem className=\"danger\" onClick={handleLogout}>\n          <LogoutIcon />\n          Выйти\n        </DropdownItem>\n      </MobileMenu>\n    </NavContainer>\n  );\n};\n\nexport default Navigation;","import React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Avatar, Button } from './UI';\n\nconst slideIn = keyframes`\n  from {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  to {\n    transform: translateX(0);\n    opacity: 1;\n  }\n`;\n\nconst slideOut = keyframes`\n  from {\n    transform: translateX(0);\n    opacity: 1;\n  }\n  to {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n`;\n\nconst heartFloat = keyframes`\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  25% { transform: translateY(-10px) rotate(2deg); }\n  75% { transform: translateY(-5px) rotate(-2deg); }\n`;\n\nconst sparkleAnimation = keyframes`\n  0% { transform: scale(0) rotate(0deg); opacity: 0; }\n  50% { transform: scale(1) rotate(180deg); opacity: 1; }\n  100% { transform: scale(0) rotate(360deg); opacity: 0; }\n`;\n\nconst PopupOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 9999;\n  pointer-events: none;\n`;\n\nconst PopupContainer = styled(motion.div)`\n  position: fixed;\n  top: 20px;\n  right: 20px;\n  width: 350px;\n  max-width: calc(100vw - 40px);\n  background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 50%, #ffa8a8 100%);\n  border-radius: 20px;\n  padding: 20px;\n  color: white;\n  box-shadow: 0 15px 35px rgba(255, 107, 107, 0.4);\n  pointer-events: all;\n  overflow: hidden;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -20px;\n    right: -20px;\n    width: 60px;\n    height: 60px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 50%;\n    animation: ${sparkleAnimation} 2s infinite;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -10px;\n    left: -10px;\n    width: 40px;\n    height: 40px;\n    background: rgba(255, 255, 255, 0.05);\n    border-radius: 50%;\n    animation: ${sparkleAnimation} 3s infinite 0.5s;\n  }\n  \n  @media (max-width: 768px) {\n    width: calc(100vw - 20px);\n    right: 10px;\n    top: 10px;\n    padding: 15px;\n  }\n`;\n\nconst PopupHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 15px;\n  position: relative;\n  z-index: 2;\n`;\n\nconst HeartIcon = styled.div`\n  font-size: 32px;\n  animation: ${heartFloat} 3s infinite;\n  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.6));\n`;\n\nconst PopupTitle = styled.h4`\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst PopupContent = styled.div`\n  position: relative;\n  z-index: 2;\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 15px;\n`;\n\nconst UserDetails = styled.div`\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 2px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst UserSubtext = styled.div`\n  font-size: 13px;\n  opacity: 0.9;\n  \n  @media (max-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nconst PopupActions = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-top: 15px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ChatButton = styled(Button)`\n  flex: 1;\n  background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);\n  border: none;\n  padding: 10px 16px;\n  font-size: 14px;\n  font-weight: 600;\n  box-shadow: 0 4px 12px rgba(68, 160, 141, 0.3);\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45b7b8 0%, #3d8b7a 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 6px 16px rgba(68, 160, 141, 0.4);\n  }\n`;\n\nconst DismissButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 10px 16px;\n  font-size: 14px;\n  \n  &:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: rgba(255, 255, 255, 0.2);\n  border: none;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  transition: all 0.2s ease;\n  z-index: 3;\n  \n  &:hover {\n    background: rgba(255, 255, 255, 0.3);\n    transform: scale(1.1);\n  }\n`;\n\nconst ProgressBar = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 3px;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 0 0 20px 20px;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    background: rgba(255, 255, 255, 0.8);\n    border-radius: inherit;\n    animation: progress ${props => props.$duration}ms linear;\n  }\n  \n  @keyframes progress {\n    from { width: 100%; }\n    to { width: 0%; }\n  }\n`;\n\nconst MatchPopup = ({ \n  notification, \n  onClose, \n  onStartChat,\n  onViewProfile,\n  autoCloseDelay = 8000 \n}) => {\n  const [isVisible, setIsVisible] = useState(true);\n\n  const matchUser = notification?.data?.match_user || notification?.from_user;\n  const userData = notification?.from_user_data;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleClose();\n    }, autoCloseDelay);\n\n    return () => clearTimeout(timer);\n  }, [autoCloseDelay]);\n\n  const handleClose = () => {\n    setIsVisible(false);\n    setTimeout(() => {\n      if (onClose) onClose();\n    }, 300);\n  };\n\n  const handleStartChat = () => {\n    if (onStartChat) {\n      onStartChat(matchUser);\n    }\n    handleClose();\n  };\n\n  const handleViewProfile = () => {\n    if (onViewProfile) {\n      onViewProfile(matchUser);\n    }\n    handleClose();\n  };\n\n  if (!notification) return null;\n\n  return createPortal(\n    <PopupOverlay>\n      <AnimatePresence>\n        {isVisible && (\n          <PopupContainer\n            initial={{ x: '100%', opacity: 0, scale: 0.8 }}\n            animate={{ x: 0, opacity: 1, scale: 1 }}\n            exit={{ x: '100%', opacity: 0, scale: 0.8 }}\n            transition={{ \n              type: \"spring\", \n              duration: 0.6,\n              bounce: 0.3 \n            }}\n          >\n            <CloseButton onClick={handleClose}>\n              ✕\n            </CloseButton>\n\n            <PopupHeader>\n              <HeartIcon>💕</HeartIcon>\n              <PopupTitle>Новый мэтч!</PopupTitle>\n            </PopupHeader>\n\n            <PopupContent>\n              <UserInfo>\n                <Avatar\n                  $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n                  $size=\"50px\"\n                  $fontSize=\"20px\"\n                  $online={true}\n                >\n                  {!userData?.avatar && (matchUser ? matchUser.charAt(0).toUpperCase() : '?')}\n                </Avatar>\n                \n                <UserDetails>\n                  <UserName>@{matchUser || 'Пользователь'}</UserName>\n                  <UserSubtext>У вас взаимная симпатия!</UserSubtext>\n                </UserDetails>\n              </UserInfo>\n\n              <PopupActions>\n                <ChatButton onClick={handleStartChat}>\n                  💬 Чат\n                </ChatButton>\n                \n                <DismissButton onClick={handleViewProfile}>\n                  👀 Профиль\n                </DismissButton>\n              </PopupActions>\n            </PopupContent>\n\n            <ProgressBar $duration={autoCloseDelay} />\n          </PopupContainer>\n        )}\n      </AnimatePresence>\n    </PopupOverlay>,\n    document.body\n  );\n};\n\nexport default MatchPopup;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { notificationsAPI, apiUtils } from '../services/api';\nimport MatchPopup from '../components/MatchPopup';\n\nconst NotificationContext = createContext();\n\nexport const useNotifications = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  return context;\n};\n\nexport const NotificationProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const [activePopups, setActivePopups] = useState([]);\n  const [lastChecked, setLastChecked] = useState(Date.now());\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [isMounted, setIsMounted] = useState(false);\n  const [isRouterReady, setIsRouterReady] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  // Проверяем авторизацию\n  useEffect(() => {\n    const checkAuth = () => {\n      const authenticated = apiUtils.isAuthenticated();\n      setIsAuthenticated(authenticated);\n      \n      // Сбрасываем счетчик уведомлений при разлогине\n      if (!authenticated) {\n        setUnreadCount(0);\n        setActivePopups([]);\n      }\n    };\n\n    checkAuth();\n\n    // Слушаем события изменения авторизации\n    const handleAuthChange = () => {\n      checkAuth();\n    };\n\n    window.addEventListener('auth-logout', handleAuthChange);\n    window.addEventListener('storage', handleAuthChange);\n    \n    return () => {\n      window.removeEventListener('auth-logout', handleAuthChange);\n      window.removeEventListener('storage', handleAuthChange);\n    };\n  }, []);\n\n  // Проверяем, что Router контекст доступен\n  useEffect(() => {\n    if (navigate && typeof navigate === 'function') {\n      setIsRouterReady(true);\n      console.log('Router context is ready in NotificationProvider');\n    } else {\n      console.log('Router context not ready yet in NotificationProvider');\n    }\n  }, [navigate]);\n\n  // Проверяем, что navigate доступен\n  useEffect(() => {\n    if (!navigate) {\n      console.warn('Navigation not available in NotificationProvider');\n    } else {\n      console.log('Navigation is available in NotificationProvider');\n    }\n  }, [navigate]);\n\n  // Проверяем новые уведомления каждые 15 секунд\n  const { data: notificationsCount } = useQuery(\n    'unread-notifications-count',\n    () => notificationsAPI.getUnreadCount(),\n    {\n      refetchInterval: 15000,\n      enabled: isRouterReady && isAuthenticated, // Не запускаем запросы пока роутер не готов И пользователь авторизован\n      onSuccess: (data) => {\n        setUnreadCount(data?.total_unread || 0);\n      },\n      onError: (error) => {\n        // Если получаем 401, сбрасываем авторизацию\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in notifications query, resetting auth state');\n          setIsAuthenticated(false);\n          setUnreadCount(0);\n        }\n      }\n    }\n  );\n\n  // Проверяем новые уведомления для попапов\n  const { data: latestNotifications } = useQuery(\n    ['latest-notifications', lastChecked],\n    () => notificationsAPI.getNotifications({\n      unread: true,\n      limit: 10\n    }),\n    {\n      refetchInterval: 10000,\n      enabled: isRouterReady && isAuthenticated, // Не запускаем запросы пока роутер не готов И пользователь авторизован\n      onSuccess: async (data) => {\n        if (data?.notifications) {\n          await checkForNewMatchNotifications(data.notifications);\n        }\n      },\n      onError: (error) => {\n        // Если получаем 401, сбрасываем авторизацию\n        if (error.response?.status === 401) {\n          console.log('Unauthorized in latest notifications query, resetting auth state');\n          setIsAuthenticated(false);\n        }\n      }\n    }\n  );\n\n  const checkForNewMatchNotifications = async (notifications) => {\n    const now = Date.now();\n    const recentTime = now - (2 * 60 * 1000); // Последние 2 минуты\n    \n    const newMatchNotifications = notifications.filter(notification => {\n      const notificationTime = new Date(notification.created_at).getTime();\n      return (\n        notification.type === 'match' &&\n        notificationTime > recentTime &&\n        notificationTime > lastChecked &&\n        !activePopups.find(popup => popup.id === notification.id)\n      );\n    });\n\n    if (newMatchNotifications.length > 0) {\n      // Проверяем каждый мэтч на существование\n      for (const notification of newMatchNotifications) {\n        try {\n          const { chatAPI } = await import('../services/api');\n          const matchStatus = await chatAPI.getMatchStatus(notification.from_user);\n          \n          // Показываем попап только если мэтча еще не было\n          if (!matchStatus.hasMatch) {\n            await showMatchPopup(notification);\n          } else {\n            console.log('Match already exists with', notification.from_user, 'skipping notification popup');\n          }\n        } catch (error) {\n          console.error('Error checking existing match for notification:', error);\n          // В случае ошибки показываем попап для безопасности\n          await showMatchPopup(notification);\n        }\n      }\n      setLastChecked(now);\n    }\n  };\n\n  const showMatchPopup = async (notification) => {\n    // Не показываем попапы пока роутер не готов или пользователь не авторизован\n    if (!isRouterReady || !isAuthenticated) {\n      console.log('Router not ready or user not authenticated, skipping popup:', notification.id);\n      return;\n    }\n\n    // Проверяем, не было ли уже мэтча с этим пользователем\n    if (notification.type === 'match' && notification.from_user) {\n      try {\n        const { chatAPI } = await import('../services/api');\n        const matchStatus = await chatAPI.getMatchStatus(notification.from_user);\n        \n        // Если мэтч уже существует, не показываем попап\n        if (matchStatus.hasMatch) {\n          console.log('Match already exists with', notification.from_user, 'skipping popup:', notification.id);\n          return;\n        }\n      } catch (error) {\n        console.error('Error checking existing match in showMatchPopup:', error);\n        // В случае ошибки продолжаем показ попапа для безопасности\n      }\n    }\n\n    const popup = {\n      id: notification.id,\n      notification,\n      timestamp: Date.now()\n    };\n\n    setActivePopups(prev => [...prev, popup]);\n\n    // Автоматически убираем попап через 8 секунд\n    setTimeout(() => {\n      removePopup(notification.id);\n    }, 8000);\n  };\n\n  const removePopup = (notificationId) => {\n    setActivePopups(prev => prev.filter(popup => popup.id !== notificationId));\n  };\n\n  const markNotificationAsRead = async (notificationId) => {\n    try {\n      await notificationsAPI.markAsRead(notificationId);\n      removePopup(notificationId);\n      // Обновляем счетчик\n      setUnreadCount(prev => Math.max(0, prev - 1));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  const showCustomMatchPopup = async (matchData) => {\n    // Не показываем попапы пока роутер не готов или пользователь не авторизован\n    if (!isRouterReady || !isAuthenticated) {\n      console.log('Router not ready or user not authenticated, skipping custom popup');\n      return;\n    }\n\n    // Проверяем, не было ли уже мэтча с этим пользователем\n    try {\n      const { chatAPI } = await import('../services/api');\n      const matchStatus = await chatAPI.getMatchStatus(matchData.username);\n      \n      // Если мэтч уже существует, не показываем попап\n      if (matchStatus.hasMatch) {\n        console.log('Match already exists with', matchData.username, 'skipping popup');\n        return;\n      }\n    } catch (error) {\n      console.error('Error checking existing match in popup:', error);\n      // В случае ошибки продолжаем показ попапа для безопасности\n    }\n\n    const notification = {\n      id: `custom-${Date.now()}`,\n      type: 'match',\n      title: 'Взаимная симпатия!',\n      message: `У вас взаимная симпатия с ${matchData.username}!`,\n      from_user: matchData.username,\n      from_user_data: matchData.userData,\n      data: { match_user: matchData.username },\n      created_at: new Date().toISOString(),\n      priority: 'high'\n    };\n\n    await showMatchPopup(notification);\n  };\n\n  const contextValue = {\n    unreadCount,\n    activePopups,\n    showMatchPopup: showCustomMatchPopup,\n    removePopup,\n    markNotificationAsRead\n  };\n\n  return (\n    <NotificationContext.Provider value={contextValue}>\n      {children}\n      \n      {/* Рендерим активные попапы только после монтирования, готовности роутера и авторизации */}\n      {isMounted && isRouterReady && isAuthenticated && activePopups.map(popup => (\n        <MatchPopup\n          key={popup.id}\n          notification={popup.notification}\n          onClose={() => removePopup(popup.id)}\n          onStartChat={(username) => {\n            markNotificationAsRead(popup.id);\n            if (navigate && typeof navigate === 'function') {\n              try {\n                navigate(`/chat/${username}`);\n              } catch (error) {\n                console.error('Navigation error:', error);\n                // Fallback: could redirect to a different page or show an error\n                window.location.href = `/chat/${username}`;\n              }\n            } else {\n              // Fallback if navigate is not available\n              window.location.href = `/chat/${username}`;\n            }\n          }}\n          onViewProfile={(username) => {\n            markNotificationAsRead(popup.id);\n            if (navigate && typeof navigate === 'function') {\n              try {\n                navigate(`/profile/${username}`);\n              } catch (error) {\n                console.error('Navigation error:', error);\n                // Fallback: could redirect to a different page or show an error\n                window.location.href = `/profile/${username}`;\n              }\n            } else {\n              // Fallback if navigate is not available\n              window.location.href = `/profile/${username}`;\n            }\n          }}\n          autoCloseDelay={8000}\n        />\n      ))}\n    </NotificationContext.Provider>\n  );\n};\n\nexport default NotificationProvider;","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { authAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  LogoSection,\n  Logo,\n  Title,\n  Subtitle,\n  Form,\n  FormGroup,\n  Label,\n  InputWrapper,\n  Input,\n  Button,\n  ErrorText,\n  FlexContainer,\n  EyeIcon,\n  EyeOffIcon,\n  IconButton\n} from '../components/UI';\nimport '../styles/AuthPages.css';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n\n  // Проверяем, не авторизован ли уже пользователь\n  React.useEffect(() => {\n    const checkExistingAuth = async () => {\n      if (apiUtils.isAuthenticated()) {\n        try {\n          // Проверяем валидность токена\n          await apiUtils.refreshCurrentUser();\n          navigate('/', { replace: true });\n        } catch (error) {\n          // Токен невалиден, очищаем\n          console.warn('Токен невалиден при входе в Login');\n          apiUtils.logout();\n        }\n      }\n    };\n\n    checkExistingAuth();\n  }, [navigate]);\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    \n    try {\n      const response = await authAPI.login({\n        login: data.login,\n        password: data.password\n      });\n      \n      if (response.success) {\n        toast.success('Успешная авторизация!');\n        navigate('/', { replace: true });\n      }\n    } catch (error) {\n      const errorMessage = apiUtils.handleError(error);\n      toast.error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <PageContainer $gradient>\n      {/* Декоративные круги */}\n      <div className=\"auth-decoration auth-decoration-top-right\"></div>\n      <div className=\"auth-decoration auth-decoration-bottom-left\"></div>\n      \n      <ContentCard $maxWidth=\"450px\">\n        <LogoSection>\n          <Logo>SF</Logo>\n          <Title>SwingFox</Title>\n          <Subtitle>Добро пожаловать! Войдите в свой аккаунт</Subtitle>\n        </LogoSection>\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label htmlFor=\"login\">Логин или Email</Label>\n            <Input\n              type=\"text\"\n              id=\"login\"\n              placeholder=\"Введите логин или email\"\n              autoComplete=\"username\"\n              {...register('login', {\n                required: 'Логин или email обязателен',\n                minLength: {\n                  value: 3,\n                  message: 'Минимум 3 символа'\n                }\n              })}\n              className={errors.login ? 'error' : ''}\n            />\n            {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Пароль</Label>\n            <InputWrapper>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                placeholder=\"Введите пароль\"\n                autoComplete=\"current-password\"\n                {...register('password', {\n                  required: 'Пароль обязателен',\n                  minLength: {\n                    value: 6,\n                    message: 'Минимум 6 символов'\n                  }\n                })}\n                className={errors.password ? 'error' : ''}\n              />\n              <IconButton\n                type=\"button\"\n                $variant=\"secondary\"\n                onClick={() => setShowPassword(!showPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  background: 'none',\n                  color: '#718096'\n                }}\n              >\n                {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </IconButton>\n            </InputWrapper>\n            {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n          </FormGroup>\n\n          <Button type=\"submit\" disabled={isLoading} style={{ width: '100%' }}>\n            {isLoading ? 'Вход...' : 'Войти'}\n          </Button>\n        </Form>\n\n        <FlexContainer $justify=\"center\" $gap=\"20px\" style={{ marginTop: '25px' }}>\n          <Link \n            to=\"/register\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Регистрация\n          </Link>\n          <span style={{ color: '#cbd5e0' }}>|</span>\n          <Link \n            to=\"/forgot-password\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Забыли пароль?\n          </Link>\n        </FlexContainer>\n\n        {/* Кнопки для клубов */}\n        <div style={{ \n          marginTop: '30px', \n          paddingTop: '20px', \n          borderTop: '1px solid #e2e8f0',\n          textAlign: 'center'\n        }}>\n          <p style={{ \n            color: '#718096', \n            fontSize: '14px', \n            marginBottom: '15px',\n            fontWeight: '500'\n          }}>\n            Вы представляете клуб?\n          </p>\n          <FlexContainer $justify=\"center\" $gap=\"15px\">\n            <Link \n              to=\"/club/login\" \n              style={{ \n                background: 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)',\n                color: 'white',\n                textDecoration: 'none',\n                fontWeight: '600',\n                fontSize: '14px',\n                padding: '10px 20px',\n                borderRadius: '8px',\n                transition: 'all 0.3s ease',\n                boxShadow: '0 4px 15px rgba(220, 53, 34, 0.3)'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.transform = 'translateY(-2px)';\n                e.target.style.boxShadow = '0 6px 20px rgba(220, 53, 34, 0.4)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 4px 15px rgba(220, 53, 34, 0.3)';\n              }}\n            >\n              Вход для клубов\n            </Link>\n            <Link \n              to=\"/club/register\" \n              style={{ \n                background: 'white',\n                color: '#dc3522',\n                textDecoration: 'none',\n                fontWeight: '600',\n                fontSize: '14px',\n                padding: '10px 20px',\n                borderRadius: '8px',\n                border: '2px solid #dc3522',\n                transition: 'all 0.3s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.background = '#dc3522';\n                e.target.style.color = 'white';\n                e.target.style.transform = 'translateY(-2px)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.background = 'white';\n                e.target.style.color = '#dc3522';\n                e.target.style.transform = 'translateY(0)';\n              }}\n            >\n              Регистрация клуба\n            </Link>\n          </FlexContainer>\n        </div>\n      </ContentCard>\n    </PageContainer>\n  );\n};\n\nexport default Login;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Input, Label, ErrorText, LoadingSpinner } from '../UI';\n\nconst SelectorContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  background: white;\n  border: 2px solid #e2e8f0;\n  border-top: none;\n  border-radius: 0 0 10px 10px;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  display: ${props => props.$show ? 'block' : 'none'};\n`;\n\nconst DropdownItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 15px;\n  border-bottom: 1px solid #f7fafc;\n  \n  &:hover {\n    background: #f7fafc;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &.selected {\n    background: #dc3522;\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #718096;\n  font-size: 14px;\n  gap: 8px;\n`;\n\nconst NoResultsText = styled.div`\n  padding: 20px 16px;\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  font-style: italic;\n`;\n\nconst CountrySelector = ({\n  value = '',\n  onChange,\n  onSelect,\n  error,\n  placeholder = 'Выберите страну...',\n  label,\n  required = false,\n  disabled = false,\n  className\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(value);\n  const [countries, setCountries] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  \n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n  // Загрузка списка стран при монтировании\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  // Обновление поискового значения при изменении value извне\n  useEffect(() => {\n    setSearchValue(value);\n  }, [value]);\n\n  // Фильтрация стран при изменении поискового значения\n  useEffect(() => {\n    if (countries.length > 0) {\n      const filtered = countries.filter(country =>\n        country.country.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredCountries(filtered);\n      setSelectedIndex(-1);\n    }\n  }, [searchValue, countries]);\n\n  // Закрытие выпадающего списка при клике вне компонента\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        setIsOpen(false);\n        setSelectedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const fetchCountries = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/geo/countries');\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки стран');\n      }\n      const data = await response.json();\n      setCountries(data.data || []);\n      setFilteredCountries(data.data || []);\n    } catch (error) {\n      console.error('Ошибка загрузки стран:', error);\n      setCountries([]);\n      setFilteredCountries([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const newValue = e.target.value;\n    setSearchValue(newValue);\n    setIsOpen(true);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const handleInputFocus = () => {\n    setIsOpen(true);\n    if (countries.length === 0) {\n      fetchCountries();\n    }\n  };\n\n  const handleCountrySelect = (country) => {\n    setSearchValue(country.country);\n    setIsOpen(false);\n    setSelectedIndex(-1);\n    \n    if (onChange) {\n      onChange(country.country);\n    }\n    \n    if (onSelect) {\n      onSelect(country);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < filteredCountries.length - 1 ? prev + 1 : prev\n        );\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && filteredCountries[selectedIndex]) {\n          handleCountrySelect(filteredCountries[selectedIndex]);\n        }\n        break;\n      \n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        inputRef.current?.blur();\n        break;\n      \n      default:\n        break;\n    }\n  };\n\n  // Прокрутка к выбранному элементу\n  useEffect(() => {\n    if (selectedIndex >= 0 && dropdownRef.current) {\n      const selectedElement = dropdownRef.current.children[selectedIndex];\n      if (selectedElement) {\n        selectedElement.scrollIntoView({\n          block: 'nearest',\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [selectedIndex]);\n\n  return (\n    <SelectorContainer ref={containerRef} className={className}>\n      {label && (\n        <Label>\n          {label} {required && <span className=\"required\">*</span>}\n        </Label>\n      )}\n      \n      <Input\n        ref={inputRef}\n        type=\"text\"\n        value={searchValue}\n        onChange={handleInputChange}\n        onFocus={handleInputFocus}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        disabled={disabled}\n        className={error ? 'error' : ''}\n        autoComplete=\"off\"\n      />\n      \n      <DropdownContainer $show={isOpen && !disabled} ref={dropdownRef}>\n        {isLoading ? (\n          <LoadingContainer>\n            <LoadingSpinner />\n            Загрузка стран...\n          </LoadingContainer>\n        ) : filteredCountries.length > 0 ? (\n          filteredCountries.map((country, index) => (\n            <DropdownItem\n              key={country.country}\n              onClick={() => handleCountrySelect(country)}\n              className={index === selectedIndex ? 'selected' : ''}\n            >\n              {country.country}\n            </DropdownItem>\n          ))\n        ) : (\n          <NoResultsText>\n            {searchValue ? 'Страны не найдены' : 'Загрузка...'}\n          </NoResultsText>\n        )}\n      </DropdownContainer>\n      \n      {error && <ErrorText>{error}</ErrorText>}\n    </SelectorContainer>\n  );\n};\n\nexport default CountrySelector;","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Input, Label, ErrorText, LoadingSpinner } from '../UI';\n\nconst SelectorContainer = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst DropdownContainer = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  background: white;\n  border: 2px solid #e2e8f0;\n  border-top: none;\n  border-radius: 0 0 10px 10px;\n  max-height: 200px;\n  overflow-y: auto;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  display: ${props => props.$show ? 'block' : 'none'};\n`;\n\nconst DropdownItem = styled.div`\n  padding: 12px 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  font-size: 15px;\n  border-bottom: 1px solid #f7fafc;\n  \n  &:hover {\n    background: #f7fafc;\n  }\n  \n  &:last-child {\n    border-bottom: none;\n  }\n  \n  &.selected {\n    background: #dc3522;\n    color: white;\n  }\n  \n  .city-name {\n    font-weight: 500;\n  }\n  \n  .region-name {\n    font-size: 13px;\n    color: #718096;\n    margin-top: 2px;\n  }\n  \n  &.selected .region-name {\n    color: rgba(255, 255, 255, 0.8);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    \n    .region-name {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #718096;\n  font-size: 14px;\n  gap: 8px;\n`;\n\nconst NoResultsText = styled.div`\n  padding: 20px 16px;\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  font-style: italic;\n`;\n\nconst DisabledText = styled.div`\n  padding: 12px 16px;\n  color: #a0aec0;\n  font-size: 14px;\n  font-style: italic;\n  background: #f7fafc;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n`;\n\nconst CitySelector = ({\n  country = '',\n  value = '',\n  onChange,\n  onSelect,\n  error,\n  placeholder = 'Выберите город...',\n  label,\n  required = false,\n  disabled = false,\n  className\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(value);\n  const [cities, setCities] = useState([]);\n  const [filteredCities, setFilteredCities] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  \n  const inputRef = useRef(null);\n  const containerRef = useRef(null);\n  const dropdownRef = useRef(null);\n\n  // Обновление поискового значения при изменении value извне\n  useEffect(() => {\n    setSearchValue(value);\n  }, [value]);\n\n  // Загрузка городов при изменении страны\n  useEffect(() => {\n    if (country) {\n      fetchCities(country);\n    } else {\n      setCities([]);\n      setFilteredCities([]);\n      setSearchValue('');\n      if (onChange) {\n        onChange('');\n      }\n    }\n  }, [country]);\n\n  // Фильтрация городов при изменении поискового значения\n  useEffect(() => {\n    if (cities.length > 0) {\n      const filtered = cities.filter(city =>\n        city.city.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setFilteredCities(filtered);\n      setSelectedIndex(-1);\n    }\n  }, [searchValue, cities]);\n\n  // Закрытие выпадающего списка при клике вне компонента\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        setIsOpen(false);\n        setSelectedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const fetchCities = async (selectedCountry) => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`/api/geo/cities/${encodeURIComponent(selectedCountry)}?limit=500`);\n      if (!response.ok) {\n        throw new Error('Ошибка загрузки городов');\n      }\n      const data = await response.json();\n      setCities(data.data || []);\n      setFilteredCities(data.data || []);\n    } catch (error) {\n      console.error('Ошибка загрузки городов:', error);\n      setCities([]);\n      setFilteredCities([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const newValue = e.target.value;\n    setSearchValue(newValue);\n    setIsOpen(true);\n    \n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  const handleInputFocus = () => {\n    if (country) {\n      setIsOpen(true);\n    }\n  };\n\n  const handleCitySelect = (city) => {\n    setSearchValue(city.city);\n    setIsOpen(false);\n    setSelectedIndex(-1);\n    \n    if (onChange) {\n      onChange(city.city);\n    }\n    \n    if (onSelect) {\n      onSelect(city);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (!isOpen || !country) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < filteredCities.length - 1 ? prev + 1 : prev\n        );\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && filteredCities[selectedIndex]) {\n          handleCitySelect(filteredCities[selectedIndex]);\n        }\n        break;\n      \n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        inputRef.current?.blur();\n        break;\n      \n      default:\n        break;\n    }\n  };\n\n  // Прокрутка к выбранному элементу\n  useEffect(() => {\n    if (selectedIndex >= 0 && dropdownRef.current) {\n      const selectedElement = dropdownRef.current.children[selectedIndex];\n      if (selectedElement) {\n        selectedElement.scrollIntoView({\n          block: 'nearest',\n          behavior: 'smooth'\n        });\n      }\n    }\n  }, [selectedIndex]);\n\n  const isDisabledByCountry = !country;\n  const isFullyDisabled = disabled || isDisabledByCountry;\n\n  return (\n    <SelectorContainer ref={containerRef} className={className}>\n      {label && (\n        <Label>\n          {label} {required && <span className=\"required\">*</span>}\n        </Label>\n      )}\n      \n      {isDisabledByCountry ? (\n        <DisabledText>\n          Сначала выберите страну\n        </DisabledText>\n      ) : (\n        <>\n          <Input\n            ref={inputRef}\n            type=\"text\"\n            value={searchValue}\n            onChange={handleInputChange}\n            onFocus={handleInputFocus}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholder}\n            disabled={isFullyDisabled}\n            className={error ? 'error' : ''}\n            autoComplete=\"off\"\n          />\n          \n          <DropdownContainer $show={isOpen && !isFullyDisabled} ref={dropdownRef}>\n            {isLoading ? (\n              <LoadingContainer>\n                <LoadingSpinner />\n                Загрузка городов...\n              </LoadingContainer>\n            ) : filteredCities.length > 0 ? (\n              filteredCities.map((city, index) => (\n                <DropdownItem\n                  key={`${city.city}-${city.region || 'no-region'}`}\n                  onClick={() => handleCitySelect(city)}\n                  className={index === selectedIndex ? 'selected' : ''}\n                >\n                  <div className=\"city-name\">{city.city}</div>\n                  {city.region && (\n                    <div className=\"region-name\">{city.region}</div>\n                  )}\n                </DropdownItem>\n              ))\n            ) : (\n              <NoResultsText>\n                {searchValue ? 'Города не найдены' : country ? 'Загрузка...' : 'Выберите страну'}\n              </NoResultsText>\n            )}\n          </DropdownContainer>\n        </>\n      )}\n      \n      {error && <ErrorText>{error}</ErrorText>}\n    </SelectorContainer>\n  );\n};\n\nexport default CitySelector;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { FormGroup, FormRow } from '../UI';\nimport CountrySelector from './CountrySelector';\nimport CitySelector from './CitySelector';\n\nconst LocationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100%;\n`;\n\nconst LocationRow = styled.div`\n  display: grid;\n  grid-template-columns: ${props => props.$layout === 'stacked' ? '1fr' : '1fr 1fr'};\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n`;\n\nconst ValidationInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 13px;\n  color: ${props => props.$valid ? '#38a169' : '#718096'};\n  margin-top: 5px;\n  \n  &::before {\n    content: '${props => props.$valid ? '✓' : 'ⓘ'}';\n    font-size: 12px;\n    color: ${props => props.$valid ? '#38a169' : '#a0aec0'};\n  }\n`;\n\nconst LocationSelector = ({\n  // Значения\n  countryValue = '',\n  cityValue = '',\n  \n  // Обработчики\n  onCountryChange,\n  onCityChange,\n  onCountrySelect,\n  onCitySelect,\n  onLocationChange, // Callback когда изменяется полное местоположение\n  \n  // Ошибки валидации\n  countryError,\n  cityError,\n  \n  // Настройки отображения\n  layout = 'side-by-side', // 'side-by-side' | 'stacked'\n  countryLabel = 'Страна',\n  cityLabel = 'Город',\n  countryPlaceholder = 'Выберите страну...',\n  cityPlaceholder = 'Выберите город...',\n  \n  // Флаги\n  required = false,\n  disabled = false,\n  showValidation = false,\n  \n  // Стили\n  className\n}) => {\n  const [isValidLocation, setIsValidLocation] = useState(false);\n\n  const handleCountryChange = (country) => {\n    // Сбрасываем город при смене страны\n    if (onCityChange && cityValue) {\n      onCityChange('');\n    }\n    \n    if (onCountryChange) {\n      onCountryChange(country);\n    }\n    \n    // Вызываем общий callback изменения местоположения\n    if (onLocationChange) {\n      onLocationChange({\n        country,\n        city: '', // Сбрасываем город\n        isComplete: false\n      });\n    }\n    \n    setIsValidLocation(false);\n  };\n\n  const handleCityChange = (city) => {\n    if (onCityChange) {\n      onCityChange(city);\n    }\n    \n    // Проверяем полноту местоположения\n    const isComplete = !!(countryValue && city);\n    setIsValidLocation(isComplete);\n    \n    // Вызываем общий callback изменения местоположения\n    if (onLocationChange) {\n      onLocationChange({\n        country: countryValue,\n        city,\n        isComplete\n      });\n    }\n  };\n\n  const handleCountrySelect = (countryData) => {\n    if (onCountrySelect) {\n      onCountrySelect(countryData);\n    }\n  };\n\n  const handleCitySelect = (cityData) => {\n    // Проверяем полноту местоположения\n    const isComplete = !!(countryValue && cityData.city);\n    setIsValidLocation(isComplete);\n    \n    if (onCitySelect) {\n      onCitySelect(cityData);\n    }\n    \n    // Вызываем общий callback с полными данными\n    if (onLocationChange) {\n      onLocationChange({\n        country: countryValue,\n        city: cityData.city,\n        region: cityData.region,\n        isComplete,\n        fullData: {\n          country: countryValue,\n          city: cityData.city,\n          region: cityData.region\n        }\n      });\n    }\n  };\n\n  const renderValidationInfo = () => {\n    if (!showValidation) return null;\n    \n    if (isValidLocation) {\n      return (\n        <ValidationInfo $valid={true}>\n          Местоположение подтверждено\n        </ValidationInfo>\n      );\n    }\n    \n    if (countryValue && !cityValue) {\n      return (\n        <ValidationInfo $valid={false}>\n          Выберите город для завершения\n        </ValidationInfo>\n      );\n    }\n    \n    if (!countryValue) {\n      return (\n        <ValidationInfo $valid={false}>\n          Начните с выбора страны\n        </ValidationInfo>\n      );\n    }\n    \n    return null;\n  };\n\n  return (\n    <LocationContainer className={className}>\n      <LocationRow $layout={layout}>\n        <CountrySelector\n          value={countryValue}\n          onChange={handleCountryChange}\n          onSelect={handleCountrySelect}\n          error={countryError}\n          label={countryLabel}\n          placeholder={countryPlaceholder}\n          required={required}\n          disabled={disabled}\n        />\n        \n        <CitySelector\n          country={countryValue}\n          value={cityValue}\n          onChange={handleCityChange}\n          onSelect={handleCitySelect}\n          error={cityError}\n          label={cityLabel}\n          placeholder={cityPlaceholder}\n          required={required}\n          disabled={disabled}\n        />\n      </LocationRow>\n      \n      {renderValidationInfo()}\n    </LocationContainer>\n  );\n};\n\n// Хук для удобного использования LocationSelector в формах\nexport const useLocationSelector = (initialCountry = '', initialCity = '') => {\n  const [country, setCountry] = useState(initialCountry);\n  const [city, setCity] = useState(initialCity);\n  const [isComplete, setIsComplete] = useState(!!(initialCountry && initialCity));\n\n  const handleLocationChange = ({ country: newCountry, city: newCity, isComplete: complete }) => {\n    setCountry(newCountry);\n    setCity(newCity);\n    setIsComplete(complete);\n  };\n\n  const reset = () => {\n    setCountry('');\n    setCity('');\n    setIsComplete(false);\n  };\n\n  const setLocation = (newCountry, newCity) => {\n    setCountry(newCountry);\n    setCity(newCity);\n    setIsComplete(!!(newCountry && newCity));\n  };\n\n  return {\n    country,\n    city,\n    isComplete,\n    handleLocationChange,\n    reset,\n    setLocation,\n    // Для удобного использования в react-hook-form\n    setValue: (field, value) => {\n      if (field === 'country') {\n        setCountry(value);\n        if (value !== country) {\n          setCity(''); // Сброс города при смене страны\n          setIsComplete(false);\n        }\n      } else if (field === 'city') {\n        setCity(value);\n        setIsComplete(!!(country && value));\n      }\n    }\n  };\n};\n\nexport default LocationSelector;","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { authAPI, apiUtils } from '../services/api';\nimport { LocationSelector } from '../components/Geography';\nimport '../styles/AuthPages.css';\n\n// Иконки для глаза (показать/скрыть пароль)\nconst EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nconst EyeOffIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n  </svg>\n);\n\nconst RegisterContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n  \n  @media (max-width: 768px) {\n    padding: 10px;\n  }\n`;\n\nconst RegisterCard = styled.div`\n  width: 100%;\n  max-width: 900px;\n  background: white;\n  border-radius: 20px;\n  padding: 40px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  animation: slideUp 0.4s ease-out;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    max-width: 100%;\n    border-radius: 15px;\n  }\n`;\n\nconst LogoSection = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst Logo = styled.div`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 80px;\n  height: 80px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  border-radius: 20px;\n  color: white;\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 15px;\n  box-shadow: 0 10px 30px rgba(220, 53, 34, 0.3);\n  \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n    font-size: 24px;\n  }\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin: 0 0 10px 0;\n  color: #2d3748;\n  font-size: 28px;\n  font-weight: 700;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst Subtitle = styled.p`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  margin-bottom: 30px;\n`;\n\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n  position: relative;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    right: 25%;\n    height: 2px;\n    background: #e2e8f0;\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n`;\n\nconst Step = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : '#e2e8f0'};\n  color: ${props => props.$active ? 'white' : '#a0aec0'};\n  font-weight: 600;\n  font-size: 14px;\n  transition: all 0.3s ease;\n  position: relative;\n  z-index: 1;\n  margin: 0 40px;\n  box-shadow: ${props => props.$active ? '0 4px 15px rgba(220, 53, 34, 0.3)' : 'none'};\n  \n  @media (max-width: 480px) {\n    width: 30px;\n    height: 30px;\n    font-size: 12px;\n    margin: 0 25px;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst FormSection = styled.div`\n  background: #f7fafc;\n  padding: 25px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  border: 1px solid #e2e8f0;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n`;\n\nconst SectionTitle = styled.h3`\n  margin: 0 0 20px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #dc3522;\n  display: inline-block;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  position: relative;\n`;\n\nconst Label = styled.label`\n  font-weight: 500;\n  color: #4a5568;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  .required {\n    color: #dc3522;\n    font-weight: bold;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n  \n  &[type=\"password\"] {\n    padding-right: 45px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst PasswordToggle = styled.button`\n  position: absolute;\n  right: 12px;\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color 0.2s ease;\n  \n  &:hover {\n    color: #dc3522;\n  }\n  \n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='12' height='8' viewBox='0 0 12 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L6 6L11 1' stroke='%234A5568' stroke-width='2' stroke-linecap='round'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: right 16px center;\n  padding-right: 40px;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background-color: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n  }\n`;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  font-size: 15px;\n  min-height: 100px;\n  resize: vertical;\n  font-family: inherit;\n  transition: all 0.3s ease;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n  \n  &:hover:not(:focus) {\n    border-color: #cbd5e0;\n  }\n  \n  &.error {\n    border-color: #f56565;\n    background: #fff5f5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    font-size: 14px;\n    min-height: 80px;\n  }\n`;\n\nconst ErrorText = styled.span`\n  color: #f56565;\n  font-size: 13px;\n  margin-top: 4px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⚠';\n    font-size: 12px;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 14px 28px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(220, 53, 34, 0.4);\n  }\n  \n  &:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  &:disabled {\n    background: linear-gradient(135deg, #cbd5e0 0%, #a0aec0 100%);\n    cursor: not-allowed;\n    box-shadow: none;\n    transform: none;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 24px;\n    font-size: 15px;\n  }\n`;\n\nconst SecondaryButton = styled(Button)`\n  background: white;\n  color: #dc3522;\n  border: 2px solid #dc3522;\n  box-shadow: none;\n  padding: 10px 20px;\n  font-size: 14px;\n  \n  &:hover:not(:disabled) {\n    background: #fff5f5;\n    transform: none;\n    box-shadow: 0 2px 10px rgba(220, 53, 34, 0.2);\n  }\n  \n  &:disabled {\n    background: #f7fafc;\n    border-color: #cbd5e0;\n    color: #a0aec0;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px;\n    font-size: 13px;\n  }\n`;\n\nconst FormRow = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst LoginLink = styled.div`\n  text-align: center;\n  margin-top: 25px;\n  color: #718096;\n  font-size: 14px;\n  \n  a {\n    color: #dc3522;\n    text-decoration: none;\n    font-weight: 600;\n    transition: all 0.2s ease;\n    \n    &:hover {\n      text-decoration: underline;\n      color: #ff6b58;\n    }\n  }\n`;\n\nconst StatusOptions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n  gap: 12px;\n  margin-top: 12px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst StatusOption = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 12px 16px;\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: white;\n  position: relative;\n  overflow: hidden;\n  \n  &:hover {\n    border-color: #dc3522;\n    background: #fff5f5;\n  }\n  \n  &.selected {\n    border-color: #dc3522;\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n    \n    &::after {\n      content: '✓';\n      position: absolute;\n      top: 8px;\n      right: 12px;\n      color: #dc3522;\n      font-weight: bold;\n      font-size: 16px;\n    }\n  }\n  \n  input[type=\"radio\"] {\n    width: 0;\n    height: 0;\n    opacity: 0;\n    position: absolute;\n  }\n  \n  span {\n    font-size: 14px;\n    color: #4a5568;\n    font-weight: 500;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 14px;\n    \n    span {\n      font-size: 13px;\n    }\n  }\n`;\n\nconst EmailCodeSection = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: flex-start;\n  \n  .email-input-wrapper {\n    flex: 1;\n  }\n  \n  .code-button-wrapper {\n    padding-top: 0;\n  }\n  \n  @media (max-width: 576px) {\n    flex-direction: column;\n    \n    .code-button-wrapper {\n      width: 100%;\n      \n      button {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst CodeInputSection = styled.div`\n  max-width: 250px;\n  \n  @media (max-width: 576px) {\n    max-width: 100%;\n  }\n`;\n\nconst CodeTimer = styled.div`\n  color: #718096;\n  font-size: 13px;\n  margin-top: 6px;\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  \n  &::before {\n    content: '⏱';\n    font-size: 14px;\n  }\n`;\n\nconst ProgressBar = styled.div`\n  height: 4px;\n  background: #e2e8f0;\n  border-radius: 2px;\n  margin: 20px 0;\n  overflow: hidden;\n  \n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    width: ${props => props.$progress}%;\n    background: linear-gradient(90deg, #dc3522 0%, #ff6b58 100%);\n    transition: width 0.3s ease;\n  }\n`;\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [emailCode, setEmailCode] = useState('');\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  const [codeTimer, setCodeTimer] = useState(0);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [formProgress, setFormProgress] = useState(0);\n  \n  const {\n    register,\n    handleSubmit,\n    watch,\n    getValues,\n    setValue,\n    clearErrors,\n    formState: { errors }\n  } = useForm({\n    defaultValues: {\n      country: 'Россия',\n      city: ''\n    }\n  });\n\n  const password = watch('password');\n  const email = watch('email');\n  const allFields = watch();\n\n  // Вычисление прогресса заполнения формы\n  useEffect(() => {\n    let requiredFields = ['login', 'email', 'password', 'confirmPassword', 'searchStatus', 'searchAge', 'city'];\n    \n    // Добавляем поля в зависимости от статуса\n    if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n      requiredFields.push('manBirthday', 'womanBirthday');\n    } else if (selectedStatus === 'Мужчина') {\n      requiredFields.push('manBirthday');\n    } else if (selectedStatus === 'Женщина') {\n      requiredFields.push('womanBirthday');\n    }\n    \n    // Проверяем, что выбрано хотя бы одно место для встреч\n    if (allFields.location && Array.isArray(allFields.location) && allFields.location.length > 0) {\n      requiredFields.push('location');\n    }\n    \n    const filledFields = requiredFields.filter(field => {\n      if (field === 'location') {\n        return allFields.location && Array.isArray(allFields.location) && allFields.location.length > 0;\n      }\n      return allFields[field];\n    });\n    \n    const progress = (filledFields.length / requiredFields.length) * 100;\n    setFormProgress(progress);\n  }, [allFields, selectedStatus]);\n\n  // Таймер для повторной отправки кода\n  useEffect(() => {\n    let interval;\n    if (codeTimer > 0) {\n      interval = setInterval(() => {\n        setCodeTimer(prev => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [codeTimer]);\n\n  // Мутация для отправки кода\n  const sendCodeMutation = useMutation(authAPI.sendCode, {\n    onSuccess: () => {\n      toast.success('Код отправлен на ваш email');\n      setIsCodeSent(true);\n      setCodeTimer(120); // 2 минуты\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Мутация для регистрации\n  const registerMutation = useMutation(authAPI.register, {\n    onSuccess: (data) => {\n      toast.success('Регистрация успешна! Добро пожаловать в SwingFox!');\n      navigate('/');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const handleSendCode = () => {\n    if (!email) {\n      toast.error('Введите email адрес');\n      return;\n    }\n    sendCodeMutation.mutate(email);\n  };\n\n  const onSubmit = (data) => {\n    if (!emailCode) {\n      toast.error('Введите код подтверждения из email');\n      return;\n    }\n\n    if (!selectedStatus) {\n      toast.error('Выберите ваш статус');\n      return;\n    }\n\n    // Формируем данные в зависимости от статуса\n    let individualData = {};\n    \n    if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n      // Для пар - объединяем данные через подчеркивание\n      individualData = {\n        date: `${data.manBirthday}_${data.womanBirthday}`,\n        height: `${data.manHeight || ''}_${data.womanHeight || ''}`,\n        weight: `${data.manWeight || ''}_${data.womanWeight || ''}`,\n        smoking: `${data.manSmoking || 'no_matter'}_${data.womanSmoking || 'no_matter'}`,\n        alko: `${data.manAlko || 'no_matter'}_${data.womanAlko || 'no_matter'}`\n      };\n    } else {\n      // Для одиночек - только мужские или женские данные\n      if (selectedStatus === 'Мужчина') {\n        individualData = {\n          date: data.manBirthday,\n          height: data.manHeight || '',\n          weight: data.manWeight || '',\n          smoking: data.manSmoking || 'no_matter',\n          alko: data.manAlko || 'no_matter'\n        };\n      } else if (selectedStatus === 'Женщина') {\n        individualData = {\n          date: data.womanBirthday,\n          height: data.womanHeight || '',\n          weight: data.womanWeight || '',\n          smoking: data.womanSmoking || 'no_matter',\n          alko: data.womanAlko || 'no_matter'\n        };\n      }\n    }\n\n    // Обработка поля location (массив чекбоксов)\n    const locationArray = Array.isArray(data.location) ? data.location : [];\n    const locationString = locationArray.join('&&');\n\n    const submitData = {\n      email: data.email,\n      mail_code: emailCode,\n      login: data.login,\n      password: data.password,\n      about: {\n        status: selectedStatus,\n        country: data.country || 'Россия',\n        city: data.city,\n        search_status: data.searchStatus,\n        search_age: data.searchAge,\n        location: locationString,\n        mobile: data.mobile || '',\n        info: data.info || ''\n      },\n      individual: individualData\n    };\n\n    registerMutation.mutate(submitData);\n  };\n\n  const statusTypes = [\n    { value: 'Семейная пара(М+Ж)', label: 'Семейная пара(М+Ж)' },\n    { value: 'Несемейная пара(М+Ж)', label: 'Несемейная пара(М+Ж)' },\n    { value: 'Мужчина', label: 'Мужчина' },\n    { value: 'Женщина', label: 'Женщина' }\n  ];\n\n  const searchStatusTypes = [\n    { value: 'Семейная пара(М+Ж)', label: 'Семейную пару(М+Ж)' },\n    { value: 'Несемейная пара(М+Ж)', label: 'Несемейную пару(М+Ж)' },\n    { value: 'Мужчина', label: 'Мужчину' },\n    { value: 'Женщина', label: 'Женщину' }\n  ];\n\n  const ageRanges = [\n    { value: 'Возраст значения не имеет', label: 'Возраст значения не имеет' },\n    { value: 'С ровестниками', label: 'С ровестниками' },\n    { value: 'С ровестниками или с разницей +/- 5 лет', label: 'С ровестниками или с разницей +/- 5 лет' },\n    { value: 'С ровестниками или с разницей +/- 10 лет', label: 'С ровестниками или с разницей +/- 10 лет' }\n  ];\n\n  const smokingOptions = [\n    { value: 'Не курю и не переношу табачного дыма', label: 'Не курю и не переношу табачного дыма' },\n    { value: 'Не курю, но терпимо отношусь к табачному дыму', label: 'Не курю, но терпимо отношусь к табачному дыму' },\n    { value: 'Курю, но могу обойтись какое-то время без сигарет', label: 'Курю, но могу обойтись какое-то время без сигарет' },\n    { value: 'Не могу отказаться от курения ни при каких обстоятельствах', label: 'Не могу отказаться от курения ни при каких обстоятельствах' }\n  ];\n\n  const alkoOptions = [\n    { value: 'Не употребляю вообще', label: 'Не употребляю вообще' },\n    { value: 'В незначительных дозах, количество выпитого не отражается на моем поведении', label: 'В незначительных дозах, количество выпитого не отражается на моем поведении' },\n    { value: 'Умеренно, до легкого опьянения, контролирую свое поведение', label: 'Умеренно, до легкого опьянения, контролирую свое поведение' },\n    { value: 'Могу напиться, потерять контроль над своим поведением', label: 'Могу напиться, потерять контроль над своим поведением' }\n  ];\n\n  // Определение текущего шага на основе заполненных полей\n  useEffect(() => {\n    if (allFields.searchStatus && allFields.searchAge && selectedStatus) {\n      // Проверяем, что заполнены все необходимые поля для выбранного статуса\n      let canProceed = true;\n      \n      if (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') {\n        canProceed = allFields.manBirthday && allFields.womanBirthday;\n      } else if (selectedStatus === 'Мужчина') {\n        canProceed = allFields.manBirthday;\n      } else if (selectedStatus === 'Женщина') {\n        canProceed = allFields.womanBirthday;\n      }\n      \n      if (canProceed) {\n        setCurrentStep(3);\n      } else {\n        setCurrentStep(2);\n      }\n    } else if (allFields.login && allFields.email && allFields.password) {\n      setCurrentStep(2);\n    } else {\n      setCurrentStep(1);\n    }\n  }, [allFields, selectedStatus]);\n\n  return (\n    <RegisterContainer>\n      {/* Декоративные круги */}\n      <div className=\"auth-decoration auth-decoration-top-right\"></div>\n      <div className=\"auth-decoration auth-decoration-bottom-left\"></div>\n      \n      <RegisterCard>\n        <LogoSection>\n          <Logo>SF</Logo>\n          <Title>Присоединиться к SwingFox</Title>\n          <Subtitle>Создайте аккаунт и найдите единомышленников</Subtitle>\n        </LogoSection>\n        \n        <StepIndicator>\n          <Step $active={currentStep >= 1}>1</Step>\n          <Step $active={currentStep >= 2}>2</Step>\n          <Step $active={currentStep >= 3}>3</Step>\n        </StepIndicator>\n\n        <ProgressBar $progress={formProgress} />\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          {/* Основная информация */}\n          <FormSection>\n            <SectionTitle>Основная информация</SectionTitle>\n            \n            <FormRow>\n              <FormGroup>\n                <Label>Логин <span className=\"required\">*</span></Label>\n                <Input\n                  {...register('login', {\n                    required: 'Логин обязателен',\n                    minLength: {\n                      value: 3,\n                      message: 'Минимум 3 символа'\n                    },\n                    pattern: {\n                      value: /^[a-zA-Z0-9_-]+$/,\n                      message: 'Только латинские буквы, цифры, _ и -'\n                    }\n                  })}\n                  className={errors.login ? 'error' : ''}\n                  placeholder=\"Ваш логин\"\n                  autoComplete=\"username\"\n                />\n                {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Email <span className=\"required\">*</span></Label>\n                <EmailCodeSection>\n                  <div className=\"email-input-wrapper\">\n                    <Input\n                      type=\"email\"\n                      {...register('email', {\n                        required: 'Email обязателен',\n                        pattern: {\n                          value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                          message: 'Неверный формат email'\n                        }\n                      })}\n                      className={errors.email ? 'error' : ''}\n                      placeholder=\"your@email.com\"\n                      autoComplete=\"email\"\n                    />\n                    {errors.email && <ErrorText>{errors.email.message}</ErrorText>}\n                  </div>\n                  <div className=\"code-button-wrapper\">\n                    <SecondaryButton\n                      type=\"button\"\n                      onClick={handleSendCode}\n                      disabled={!email || sendCodeMutation.isLoading || codeTimer > 0}\n                    >\n                      {sendCodeMutation.isLoading ? 'Отправка...' : \n                       codeTimer > 0 ? `${codeTimer}с` : 'Код'}\n                    </SecondaryButton>\n                  </div>\n                </EmailCodeSection>\n                {codeTimer > 0 && (\n                  <CodeTimer>\n                    Повторная отправка через {codeTimer} секунд\n                  </CodeTimer>\n                )}\n              </FormGroup>\n            </FormRow>\n\n            <FormRow>\n              <CodeInputSection>\n                <FormGroup>\n                  <Label>Код из email <span className=\"required\">*</span></Label>\n                  <Input\n                    type=\"text\"\n                    inputMode=\"numeric\"\n                    pattern=\"[0-9]*\"\n                    value={emailCode}\n                    onChange={(e) => {\n                      // Разрешаем только цифры и максимум 6 символов\n                      const value = e.target.value.replace(/\\D/g, '').slice(0, 6);\n                      setEmailCode(value);\n                    }}\n                    placeholder=\"123456\"\n                    disabled={!isCodeSent}\n                    maxLength=\"6\"\n                    style={{\n                      textAlign: 'center',\n                      letterSpacing: '8px',\n                      fontWeight: 'bold',\n                      fontSize: '18px',\n                      fontFamily: 'monospace'\n                    }}\n                  />\n                  {!isCodeSent && (\n                    <ErrorText>Сначала отправьте код на email</ErrorText>\n                  )}\n                  {emailCode.length > 0 && emailCode.length < 6 && isCodeSent && (\n                    <ErrorText>Код должен содержать 6 цифр</ErrorText>\n                  )}\n                </FormGroup>\n              </CodeInputSection>\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Пароль <span className=\"required\">*</span></Label>\n                <InputWrapper>\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    {...register('password', {\n                      required: 'Пароль обязателен',\n                      minLength: {\n                        value: 6,\n                        message: 'Минимум 6 символов'\n                      }\n                    })}\n                    className={errors.password ? 'error' : ''}\n                    placeholder=\"Пароль\"\n                    autoComplete=\"new-password\"\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n                  </PasswordToggle>\n                </InputWrapper>\n                {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Подтверждение пароля <span className=\"required\">*</span></Label>\n                <InputWrapper>\n                  <Input\n                    type={showConfirmPassword ? 'text' : 'password'}\n                    {...register('confirmPassword', {\n                      required: 'Подтвердите пароль',\n                      validate: value =>\n                        value === password || 'Пароли не совпадают'\n                    })}\n                    className={errors.confirmPassword ? 'error' : ''}\n                    placeholder=\"Повторите пароль\"\n                    autoComplete=\"new-password\"\n                  />\n                  <PasswordToggle\n                    type=\"button\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  >\n                    {showConfirmPassword ? <EyeOffIcon /> : <EyeIcon />}\n                  </PasswordToggle>\n                </InputWrapper>\n                {errors.confirmPassword && <ErrorText>{errors.confirmPassword.message}</ErrorText>}\n              </FormGroup>\n            </FormRow>\n          </FormSection>\n\n          {/* Статус и поиск */}\n          <FormSection>\n            <SectionTitle>Ваш статус и предпочтения</SectionTitle>\n            \n            <FormGroup>\n              <Label>Ваш статус <span className=\"required\">*</span></Label>\n              <StatusOptions>\n                {statusTypes.map(status => (\n                  <StatusOption\n                    key={status.value}\n                    className={selectedStatus === status.value ? 'selected' : ''}\n                  >\n                    <input\n                      type=\"radio\"\n                      name=\"status\"\n                      value={status.value}\n                      checked={selectedStatus === status.value}\n                      onChange={(e) => setSelectedStatus(e.target.value)}\n                      required\n                    />\n                    <span>{status.label}</span>\n                  </StatusOption>\n                ))}\n              </StatusOptions>\n            </FormGroup>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Кого ищете <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('searchStatus', {\n                    required: 'Выберите кого ищете'\n                  })}\n                  className={errors.searchStatus ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите...</option>\n                  {searchStatusTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.searchStatus && <ErrorText>{errors.searchStatus.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Возрастной диапазон <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('searchAge', {\n                    required: 'Выберите возрастной диапазон'\n                  })}\n                  className={errors.searchAge ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите...</option>\n                  {ageRanges.map(range => (\n                    <option key={range.value} value={range.value}>\n                      {range.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.searchAge && <ErrorText>{errors.searchAge.message}</ErrorText>}\n              </FormGroup>\n            </FormRow>\n          </FormSection>\n\n          {/* Личная информация */}\n          <FormSection>\n            <SectionTitle>Личная информация</SectionTitle>\n            \n            <FormRow>\n              <FormGroup>\n                <Label>Дата рождения {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''} <span className=\"required\">*</span></Label>\n                <Input\n                  type=\"date\"\n                  {...register('manBirthday', {\n                    required: 'Дата рождения обязательна',\n                    validate: value => {\n                      const today = new Date();\n                      const birthDate = new Date(value);\n                      const age = today.getFullYear() - birthDate.getFullYear();\n                      return age >= 18 || 'Вам должно быть больше 18 лет';\n                    }\n                  })}\n                  className={errors.manBirthday ? 'error' : ''}\n                />\n                {errors.manBirthday && <ErrorText>{errors.manBirthday.message}</ErrorText>}\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Дата рождения (Женщина) <span className=\"required\">*</span></Label>\n                  <Input\n                    type=\"date\"\n                    {...register('womanBirthday', {\n                      required: 'Дата рождения партнера обязательна',\n                      validate: value => {\n                        const today = new Date();\n                        const birthDate = new Date(value);\n                        const age = today.getFullYear() - birthDate.getFullYear();\n                        return age >= 18 || 'Партнеру должно быть больше 18 лет';\n                      }\n                    })}\n                    className={errors.womanBirthday ? 'error' : ''}\n                  />\n                  {errors.womanBirthday && <ErrorText>{errors.womanBirthday.message}</ErrorText>}\n                </FormGroup>\n              )}\n\n              <LocationSelector\n                countryValue={watch('country')}\n                cityValue={watch('city')}\n                onCountryChange={(value) => {\n                  setValue('country', value);\n                  clearErrors('country');\n                  // Сброс города при смене страны\n                  if (watch('city')) {\n                    setValue('city', '');\n                    clearErrors('city');\n                  }\n                }}\n                onCityChange={(value) => {\n                  setValue('city', value);\n                  clearErrors('city');\n                }}\n                countryError={errors.country?.message}\n                cityError={errors.city?.message}\n                required={true}\n                showValidation={true}\n                layout=\"stacked\"\n              />\n              \n              {/* Скрытые поля для react-hook-form валидации */}\n              <input\n                type=\"hidden\"\n                {...register('country', { required: 'Страна обязательна' })}\n              />\n              <input\n                type=\"hidden\"\n                {...register('city', { required: 'Город обязателен' })}\n              />\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Мобильный телефон</Label>\n                <Input\n                  type=\"tel\"\n                  {...register('mobile')}\n                  placeholder=\"+7 (999) 123-45-67\"\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Предпочитаемые места для встреч</Label>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\n                  {[\n                    { id: 'У себя дома (пригласим к себе)', label: 'У себя дома (пригласим к себе)' },\n                    { id: 'У вас дома (примем приглашение)', label: 'У вас дома (примем приглашение)' },\n                    { id: 'В свинг-клубе или на закрытой вечеринке', label: 'В свинг-клубе или на закрытой вечеринке' },\n                    { id: 'В сауне', label: 'В сауне' },\n                    { id: 'В гостинице или на съемной квартире', label: 'В гостинице или на съемной квартире' }\n                  ].map(option => (\n                    <label key={option.id} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <input\n                        type=\"checkbox\"\n                        value={option.id}\n                        {...register('location')}\n                      />\n                      <span style={{ fontSize: '14px' }}>{option.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </FormGroup>\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Рост (см) {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Input\n                  type=\"number\"\n                  {...register('manHeight')}\n                  placeholder=\"175\"\n                  min=\"140\"\n                  max=\"220\"\n                />\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Рост (см) (Женщина)</Label>\n                  <Input\n                    type=\"number\"\n                    {...register('womanHeight')}\n                    placeholder=\"165\"\n                    min=\"140\"\n                    max=\"200\"\n                  />\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Вес (кг) {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Input\n                  type=\"number\"\n                  {...register('manWeight')}\n                  placeholder=\"70\"\n                  min=\"40\"\n                  max=\"200\"\n                />\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Вес (кг) (Женщина)</Label>\n                  <Input\n                    type=\"number\"\n                    {...register('womanWeight')}\n                    placeholder=\"55\"\n                    min=\"40\"\n                    max=\"150\"\n                  />\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Отношение к курению {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Select {...register('manSmoking')}>\n                  {smokingOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Отношение к курению (Женщина)</Label>\n                  <Select {...register('womanSmoking')}>\n                    {smokingOptions.map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormRow>\n              <FormGroup>\n                <Label>Отношение к алкоголю {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') ? '(Мужчина)' : ''}</Label>\n                <Select {...register('manAlko')}>\n                  {alkoOptions.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n\n              {selectedStatus && (selectedStatus === 'Семейная пара(М+Ж)' || selectedStatus === 'Несемейная пара(М+Ж)') && (\n                <FormGroup>\n                  <Label>Отношение к алкоголю (Женщина)</Label>\n                  <Select {...register('womanAlko')}>\n                    {alkoOptions.map(option => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </Select>\n                </FormGroup>\n              )}\n            </FormRow>\n\n            <FormGroup>\n              <Label>О себе</Label>\n              <TextArea\n                {...register('info')}\n                placeholder=\"Расскажите о себе, ваших интересах и предпочтениях...\"\n              />\n            </FormGroup>\n          </FormSection>\n\n          <Button\n            type=\"submit\"\n            disabled={registerMutation.isLoading || !emailCode}\n          >\n            {registerMutation.isLoading ? 'Регистрация...' : 'Зарегистрироваться'}\n          </Button>\n        </Form>\n\n        <LoginLink>\n          Уже есть аккаунт? <Link to=\"/login\">Войти</Link>\n        </LoginLink>\n\n        {/* Кнопки для клубов */}\n        <div style={{ \n          marginTop: '30px', \n          paddingTop: '20px', \n          borderTop: '1px solid #e2e8f0',\n          textAlign: 'center'\n        }}>\n          <p style={{ \n            color: '#718096', \n            fontSize: '14px', \n            marginBottom: '15px',\n            fontWeight: '500'\n          }}>\n            Вы представляете клуб?\n          </p>\n          <div style={{ \n            display: 'flex', \n            justifyContent: 'center', \n            gap: '15px',\n            flexWrap: 'wrap'\n          }}>\n            <Link \n              to=\"/club/login\" \n              style={{ \n                background: 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)',\n                color: 'white',\n                textDecoration: 'none',\n                fontWeight: '600',\n                fontSize: '14px',\n                padding: '10px 20px',\n                borderRadius: '8px',\n                transition: 'all 0.3s ease',\n                boxShadow: '0 4px 15px rgba(220, 53, 34, 0.3)'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.transform = 'translateY(-2px)';\n                e.target.style.boxShadow = '0 6px 20px rgba(220, 53, 34, 0.4)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 4px 15px rgba(220, 53, 34, 0.3)';\n              }}\n            >\n              Вход для клубов\n            </Link>\n            <Link \n              to=\"/club/register\" \n              style={{ \n                background: 'white',\n                color: '#dc3522',\n                textDecoration: 'none',\n                fontWeight: '600',\n                fontSize: '14px',\n                padding: '10px 20px',\n                borderRadius: '8px',\n                border: '2px solid #dc3522',\n                transition: 'all 0.3s ease'\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.background = '#dc3522';\n                e.target.style.color = 'white';\n                e.target.style.transform = 'translateY(-2px)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.background = 'white';\n                e.target.style.color = '#dc3522';\n                e.target.style.transform = 'translateY(0)';\n              }}\n            >\n              Регистрация клуба\n            </Link>\n          </div>\n        </div>\n      </RegisterCard>\n    </RegisterContainer>\n  );\n};\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Link } from 'react-router-dom'; // Добавляем импорт Link\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { swipeAPI, apiUtils } from '../services/api';\nimport { useNotifications } from '../contexts/NotificationContext';\n// Импортируем функции из бэкенда через API\n// import { formatAge, formatWomanAge } from '../../src/utils/helpers';\n// Убираем импорт getStatusDisplayName, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  Avatar,\n  Button,\n  IconButton,\n  LoadingSpinner,\n  FlexContainer,\n  Card,\n  HeartIcon,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  CloseIcon,\n  TextArea\n} from '../components/UI';\n\n// Иконки для действий\nconst DislikeIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n  </svg>\n);\n\nconst SuperlikeIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"12,2 15.09,8.26 22,9 17,14.74 18.18,21.02 12,17.77 5.82,21.02 7,14.74 2,9 8.91,8.26 12,2\"/>\n  </svg>\n);\n\nconst BackIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M19 12H6m6-7l-7 7 7 7\"/>\n  </svg>\n);\n\nconst LocationIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"/>\n    <circle cx=\"12\" cy=\"10\" r=\"3\"/>\n  </svg>\n);\n\nconst InfoIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"12\"/>\n    <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\"/>\n  </svg>\n);\n\nconst HomeContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  background: white;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  backdrop-filter: blur(10px);\n  border-bottom: 1px solid #e2e8f0;\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    padding: 25px;\n    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    padding: 20px;\n    box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    padding: 18px;\n    box-shadow: 0 3px 16px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    padding: 15px;\n    box-shadow: 0 3px 15px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    padding: 12px;\n    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    padding: 10px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n  }\n  \n  /* Маленькие мобильные */\n  @media (max-width: 360px) {\n    padding: 8px;\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.08);\n  }\n`;\n\nconst HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    max-width: 1400px;\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    max-width: 100%;\n  }\n  \n  /* Планшеты */\n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n    align-items: flex-start;\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    gap: 12px;\n  }\n`;\n\nconst WelcomeText = styled.div`\n  h1 {\n    margin: 0 0 5px 0;\n    font-size: 28px;\n    font-weight: 700;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  p {\n    margin: 0;\n    color: #718096;\n    font-size: 14px;\n  }\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    h1 {\n      font-size: 32px;\n    }\n    \n    p {\n      font-size: 16px;\n    }\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    h1 {\n      font-size: 28px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    h1 {\n      font-size: 26px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    h1 {\n      font-size: 24px;\n    }\n    \n    p {\n      font-size: 13px;\n    }\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    h1 {\n      font-size: 22px;\n    }\n    \n    p {\n      font-size: 13px;\n    }\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    h1 {\n      font-size: 20px;\n    }\n    \n    p {\n      font-size: 12px;\n    }\n  }\n  \n  /* Маленькие мобильные */\n  @media (max-width: 360px) {\n    h1 {\n      font-size: 18px;\n    }\n    \n    p {\n      font-size: 11px;\n    }\n  }\n`;\n\nconst UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  \n  .user-details {\n    text-align: right;\n    \n    .username {\n      font-weight: 600;\n      color: #2d3748;\n      margin: 0;\n    }\n    \n    .status {\n      font-size: 12px;\n      color: #718096;\n      margin: 0;\n    }\n  }\n  \n  /* Большие экраны */\n  @media (min-width: 1440px) {\n    gap: 15px;\n    \n    .user-details .username {\n      font-size: 16px;\n    }\n    \n    .user-details .status {\n      font-size: 13px;\n    }\n  }\n  \n  /* Средние экраны */\n  @media (max-width: 1200px) {\n    gap: 12px;\n  }\n  \n  /* Планшеты в альбомной ориентации */\n  @media (max-width: 1024px) {\n    gap: 10px;\n    \n    .user-details .username {\n      font-size: 15px;\n    }\n    \n    .user-details .status {\n      font-size: 12px;\n    }\n  }\n  \n  /* Планшеты в портретной ориентации */\n  @media (max-width: 768px) {\n    gap: 8px;\n    \n    .user-details .username {\n      font-size: 14px;\n    }\n    \n    .user-details .status {\n      font-size: 11px;\n    }\n  }\n  \n  /* Большие мобильные */\n  @media (max-width: 576px) {\n    gap: 6px;\n    \n    .user-details .username {\n      font-size: 13px;\n    }\n    \n    .user-details .status {\n      font-size: 10px;\n    }\n  }\n  \n  /* Мобильные */\n  @media (max-width: 480px) {\n    .user-details {\n      display: none;\n    }\n  }\n`;\n\nconst SwipeContainer = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 40px 20px;\n  position: relative;\n  max-width: 500px;\n  margin: 0 auto;\n  width: 100%;\n  \n  @media (max-width: 768px) {\n    padding: 20px 15px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    max-width: 900px;\n    padding: 40px;\n  }\n`;\n\nconst ProfileCard = styled(motion.div)`\n  width: 100%;\n  max-width: 400px;\n  height: 650px;\n  background: white;\n  border-radius: 25px;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  overflow: hidden;\n  position: relative;\n  cursor: grab;\n  \n  &:active {\n    cursor: grabbing;\n  }\n  \n  @media (max-width: 768px) {\n    height: 650px; /* Увеличиваем высоту для мобильной версии */\n    max-width: 100%;\n  }\n  \n  @media (max-width: 480px) {\n    height: 600px; /* Оптимальная высота для маленьких экранов */\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    max-width: 800px;\n    height: 500px;\n    display: flex;\n    flex-direction: row;\n  }\n`;\n\nconst ProfileImage = styled.div`\n  width: 100%;\n  height: 65%;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center;\n  background-color: #f7fafc;\n  position: relative;\n  transition: all 0.3s ease;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      to bottom,\n      transparent 0%,\n      transparent 40%,\n      rgba(0,0,0,0.2) 70%,\n      rgba(0,0,0,0.8) 100%\n    );\n    transition: all 0.3s ease;\n  }\n  \n  ${props => !props.$src && `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%);\n    color: #a0aec0;\n    font-size: 48px;\n    font-weight: bold;\n    \n    &::before {\n      display: none;\n    }\n  `}\n  \n  @media (max-width: 768px) {\n    height: 60%; /* Уменьшаем высоту изображения в мобильной версии */\n  }\n  \n  @media (max-width: 480px) {\n    height: 55%; /* Еще больше уменьшаем для маленьких экранов */\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 50%;\n    height: 100%;\n    \n    &::before {\n      background: linear-gradient(\n        to bottom,\n        transparent 0%,\n        transparent 40%,\n        rgba(0,0,0,0.2) 70%,\n        rgba(0,0,0,0.8) 100%\n      );\n    }\n  }\n`;\n\nconst ProfileOverlay = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 20px;\n  color: white;\n  z-index: 2;\n  transition: all 0.3s ease;\n  \n  .username {\n    font-size: 24px;\n    font-weight: 700;\n    margin: 0 0 6px 0;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n    transition: all 0.3s ease;\n  }\n  \n  .location {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 14px;\n    opacity: 0.9;\n    margin-bottom: 3px;\n    transition: all 0.3s ease;\n  }\n  \n  .age {\n    font-size: 14px;\n    opacity: 0.9;\n    transition: all 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n    \n    .username {\n      font-size: 20px;\n    }\n    \n    .location, .age {\n      font-size: 12px;\n    }\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    padding: 30px;\n    \n    .username {\n      font-size: 28px;\n    }\n    \n    .location, .age {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst ProfileDetails = styled.div`\n  padding: 20px;\n  height: 35%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  overflow-y: auto; /* Добавляем вертикальный скролл */\n  overflow-x: hidden; /* Предотвращаем горизонтальный скролл */\n  transition: all 0.3s ease;\n  \n  /* Стили для скроллбара */\n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n  \n  .status-badge {\n    display: inline-flex;\n    align-items: center;\n    gap: 6px;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 16px;\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 10px;\n    align-self: flex-start;\n    box-shadow: 0 4px 12px rgba(220, 53, 34, 0.3);\n    transition: all 0.3s ease;\n  }\n  \n  .compatibility-badge {\n    background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);\n    border-radius: 16px;\n    padding: 12px 16px;\n    color: white;\n    font-size: 12px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);\n    margin: 8px 0;\n    transition: all 0.3s ease;\n    \n    .percentage {\n      font-weight: bold;\n      font-size: 13px;\n    }\n    \n    .progress-bar {\n      flex: 1;\n      height: 6px;\n      background: rgba(255, 255, 255, 0.3);\n      border-radius: 3px;\n      overflow: hidden;\n      \n      .progress-fill {\n        height: 100%;\n        background: linear-gradient(90deg, #ffffff 0%, #e6fffa 100%);\n        border-radius: 3px;\n        transition: width 0.3s ease;\n      }\n    }\n  }\n  \n  .partner-info {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    border-radius: 16px;\n    padding: 8px 12px;\n    color: white;\n    font-size: 12px;\n    margin: 8px 0;\n    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n    transition: all 0.3s ease;\n    \n    .title {\n      font-weight: bold;\n      margin-bottom: 4px;\n      display: flex;\n      align-items: center;\n      gap: 6px;\n    }\n    \n    .details {\n      opacity: 0.9;\n      font-size: 11px;\n      \n      div {\n        margin-bottom: 2px;\n        \n        &:last-child {\n          margin-bottom: 0;\n        }\n        \n        strong {\n          color: #e2e8f0;\n        }\n      }\n    }\n    \n    /* Специальные стили для блока поиска */\n    &.search-info {\n      background: linear-gradient(135deg, #805ad5 0%, #6b46c1 100%);\n      box-shadow: 0 4px 12px rgba(128, 90, 213, 0.3);\n      \n      .title {\n        color: #f7fafc;\n      }\n      \n      .details {\n        div {\n          strong {\n            color: #e2e8f0;\n          }\n          \n          /* Стили для списка мест встречи */\n          div {\n            margin-top: 4px;\n            margin-left: 8px;\n            \n            div {\n              margin-bottom: 2px;\n              font-size: 10px;\n              color: #e2e8f0;\n              \n              &:last-child {\n                margin-bottom: 0;\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    /* Специальные стили для блока места встречи */\n    &.location-info {\n      background: linear-gradient(135deg, #38a169 0%, #2f855a 100%);\n      box-shadow: 0 4px 12px rgba(56, 161, 105, 0.3);\n      \n      .title {\n        color: #f7fafc;\n      }\n      \n      .details {\n        div {\n          strong {\n            color: #e2e8f0;\n          }\n          \n          /* Стили для списка мест встречи */\n          div {\n            margin-top: 4px;\n            margin-left: 8px;\n            \n            div {\n              margin-bottom: 2px;\n              font-size: 10px;\n              color: #e2e8f0;\n              \n              &:last-child {\n                margin-bottom: 0;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  .additional-info {\n    display: grid;\n    grid-template-columns: 1fr; /* В мобильной версии всегда одна колонка */\n    gap: 6px;\n    margin: 8px 0;\n    \n    .info-item {\n      display: flex;\n      align-items: flex-start; /* Выравниваем по верху для многострочного текста */\n      gap: 8px;\n      font-size: 11px;\n      color: #4a5568;\n      padding: 8px 10px;\n      background: #f7fafc;\n      border-radius: 8px;\n      border: 1px solid #e2e8f0;\n      transition: all 0.3s ease;\n      \n      .emoji {\n        font-size: 14px;\n        flex-shrink: 0; /* Эмодзи не сжимается */\n        margin-top: 1px; /* Небольшое выравнивание по верху */\n      }\n      \n      .text {\n        font-weight: 500;\n        flex: 1; /* Текст занимает все доступное место */\n        line-height: 1.4;\n        \n        /* Стили для вложенных элементов (для пар) */\n        div {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n          \n          span {\n            font-size: 11px;\n            line-height: 1.3;\n            color: #4a5568;\n          }\n        }\n      }\n      \n      &:hover {\n        background: #edf2f7;\n        border-color: #cbd5e0;\n        transform: translateY(-1px);\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n      }\n    }\n  }\n  \n  .info {\n    color: #4a5568;\n    font-size: 13px;\n    line-height: 1.4;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    margin-top: 12px;\n    transition: all 0.3s ease;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n    height: 40%; /* Увеличиваем высоту в мобильной версии */\n    \n    .status-badge {\n      font-size: 11px;\n      padding: 5px 10px;\n    }\n    \n    .compatibility-badge, .partner-info {\n      font-size: 11px;\n      padding: 6px 10px;\n    }\n    \n    .partner-info.search-info {\n      .details div {\n        font-size: 10px;\n        \n        /* Стили для списка мест встречи */\n        div div {\n          font-size: 9px;\n        }\n      }\n    }\n    \n    .partner-info.location-info {\n      .details div {\n        font-size: 9px;\n        \n        /* Стили для списка мест встречи */\n        div div {\n          font-size: 8px;\n        }\n      }\n    }\n    \n    .additional-info {\n      gap: 4px;\n      \n      .info-item {\n        font-size: 10px;\n        padding: 6px 8px;\n        \n        .emoji {\n          font-size: 12px;\n        }\n        \n        .text {\n          font-size: 10px;\n          \n          div {\n            span {\n              font-size: 10px;\n            }\n          }\n        }\n      }\n    }\n    \n    .info {\n      font-size: 12px;\n      -webkit-line-clamp: 2;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    padding: 12px;\n    height: 45%; /* Еще больше увеличиваем высоту для маленьких экранов */\n    \n    .additional-info {\n      gap: 3px;\n      \n      .info-item {\n        padding: 5px 6px;\n        \n        .emoji {\n          font-size: 11px;\n        }\n        \n        .text {\n          font-size: 9px;\n          \n          div {\n            span {\n              font-size: 9px;\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 50%;\n    height: 100%;\n    padding: 30px;\n    overflow-y: auto; /* Сохраняем скролл для десктопа */\n    \n    .status-badge {\n      font-size: 14px;\n      padding: 8px 16px;\n    }\n    \n    .compatibility-badge {\n      font-size: 14px;\n      padding: 16px 20px;\n      \n      .percentage {\n        font-size: 15px;\n      }\n    }\n    \n    .partner-info {\n      font-size: 14px;\n      padding: 12px 16px;\n      \n      .details {\n        font-size: 13px;\n      }\n      \n      &.search-info {\n        .details div {\n          font-size: 12px;\n          \n          /* Стили для списка мест встречи */\n          div div {\n            font-size: 11px;\n          }\n        }\n      }\n      \n      &.location-info {\n        .details div {\n          font-size: 12px;\n          \n          /* Стили для списка мест встречи */\n          div div {\n            font-size: 11px;\n          }\n        }\n      }\n    }\n    \n    .additional-info {\n      grid-template-columns: 1fr 1fr; /* В десктопной версии делаем две колонки */\n      gap: 8px;\n      \n      .info-item {\n        font-size: 13px;\n        padding: 8px 12px;\n        \n        .text {\n          font-size: 11px;\n          line-height: 1.4;\n          \n          /* Стили для вложенных элементов */\n          div {\n            span {\n              font-size: 11px;\n              line-height: 1.3;\n            }\n          }\n        }\n      }\n    }\n    \n    .info {\n      font-size: 15px;\n      -webkit-line-clamp: 4;\n    }\n  }\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 25px;\n  padding: 30px 20px 40px;\n  transition: all 0.3s ease;\n  \n  @media (max-width: 768px) {\n    gap: 20px;\n    padding: 25px 15px 35px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    gap: 30px;\n    padding: 40px;\n  }\n`;\n\nconst ActionButton = styled(IconButton)`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%);\n    transform: translateX(-100%);\n    transition: transform 0.6s ease;\n  }\n  \n  &:hover::before {\n    transform: translateX(100%);\n  }\n  \n  &.dislike {\n    background: linear-gradient(135deg, #f56565 0%, #e53e3e 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #e53e3e 0%, #c53030 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(245, 101, 101, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.like {\n    background: linear-gradient(135deg, #48bb78 0%, #38a169 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #38a169 0%, #2f855a 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(72, 187, 120, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.superlike {\n    background: linear-gradient(135deg, #f6ad55 0%, #ed8936 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #ed8936 0%, #dd6b20 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(246, 173, 85, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n  \n  &.back {\n    background: linear-gradient(135deg, #a0aec0 0%, #718096 100%);\n    \n    &:hover:not(:disabled) {\n      background: linear-gradient(135deg, #718096 0%, #4a5568 100%);\n      transform: scale(1.15) translateY(-5px);\n      box-shadow: 0 15px 40px rgba(160, 174, 192, 0.5);\n    }\n    \n    &:active {\n      transform: scale(0.95);\n    }\n  }\n    \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n  }\n  \n  @media (max-width: 480px) {\n    width: 55px;\n    height: 55px;\n  }\n  \n  /* Десктопная версия */\n  @media (min-width: 1024px) {\n    width: 80px;\n    height: 80px;\n  }\n`;\n\nconst NoMoreProfiles = styled.div`\n  text-align: center;\n  color: #718096;\n  padding: 60px 20px;\n  animation: fadeInUp 0.6s ease-out;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px;\n  \n  .icon {\n    font-size: 72px;\n    margin-bottom: 54px; /* Увеличиваем с 24px до 54px (24 + 30) */\n    opacity: 0.7;\n    animation: bounce 2s ease-in-out infinite;\n    line-height: 1;\n    display: block;\n    text-align: center;\n    width: 100%;\n    transform: translateX(-2px);\n  }\n  \n  h3 {\n    margin: 0 0 16px 0;\n    font-size: 28px;\n    color: #2d3748;\n    font-weight: 700;\n    animation: slideInUp 0.8s ease-out 0.2s both;\n    line-height: 1.2;\n    text-align: center;\n    width: 100%;\n  }\n  \n  p {\n    margin: 0 0 32px 0;\n    font-size: 16px;\n    line-height: 1.6;\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    animation: slideInUp 0.8s ease-out 0.4s both;\n    color: #718096;\n    text-align: center;\n  }\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes slideInUp {\n    from {\n      opacity: 0;\n      transform: translateY(20px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  \n  @keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n      transform: translateY(0) translateX(-2px);\n    }\n    40% {\n      transform: translateY(-10px) translateX(-2px);\n    }\n    60% {\n      transform: translateY(-5px) translateX(-2px);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px;\n    min-height: 300px;\n    \n    .icon {\n      font-size: 56px;\n      margin-bottom: 50px; /* Увеличиваем с 20px до 50px (20 + 30) */\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 24px;\n      margin-bottom: 14px;\n    }\n    \n    p {\n      font-size: 15px;\n      margin-bottom: 28px;\n      max-width: 280px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    padding: 30px 16px;\n    min-height: 250px;\n    \n    .icon {\n      font-size: 48px;\n      margin-bottom: 48px; /* Увеличиваем с 18px до 48px (18 + 30) */\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 22px;\n      margin-bottom: 12px;\n    }\n    \n    p {\n      font-size: 14px;\n      margin-bottom: 24px;\n      max-width: 260px;\n    }\n  }\n`;\n\nconst SwipeHint = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 15px 25px;\n  border-radius: 15px;\n  font-size: 14px;\n  text-align: center;\n  pointer-events: none;\n  opacity: ${props => props.$show ? 1 : 0};\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  \n  /* Красивая анимация появления */\n  ${props => props.$show && `\n    animation: hintPulse 2s ease-in-out infinite;\n  `}\n  \n  @keyframes hintPulse {\n    0%, 100% {\n      transform: translate(-50%, -50%) scale(1);\n    }\n    50% {\n      transform: translate(-50%, -50%) scale(1.05);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 20px;\n    font-size: 13px;\n  }\n`;\n\n// Добавляем стилизованный компонент для кликабельного никнейма\nconst ClickableUsername = styled(Link)`\n  font-size: 24px;\n  font-weight: 700;\n  margin: 0 0 6px 0;\n  text-shadow: 0 2px 4px rgba(0,0,0,0.3);\n  color: white;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: block;\n  \n  &:hover {\n    color: #ffd700;\n    text-shadow: 0 2px 8px rgba(255, 215, 0, 0.5);\n    transform: scale(1.02);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Home = () => {\n  const [currentProfile, setCurrentProfile] = useState(null);\n  const [showHint, setShowHint] = useState(false);\n  const [showSuperlikeModal, setShowSuperlikeModal] = useState(false);\n  const [superlikeMessage, setSuperlikeMessage] = useState('');\n  const [swipeDirection, setSwipeDirection] = useState(null); // 'left' для дизлайка, 'right' для лайка\n  const [profileQueue, setProfileQueue] = useState([]); // Очередь предзагруженных профилей\n  const [isPreloading, setIsPreloading] = useState(false); // Флаг предзагрузки\n  \n  // Добавляем состояние для истории профилей\n  const [profileHistory, setProfileHistory] = useState([]); // История предыдущих профилей (максимум 3)\n  const [historyIndex, setHistoryIndex] = useState(-1); // Индекс в истории (-1 = нет истории)\n  \n  // ДОБАВИТЬ ЭТО: уникальный ключ для каждого показа профиля\n  const [profileShowKey, setProfileShowKey] = useState(0);\n  \n  // Состояние для отслеживания восстановления\n  const [isRestoring, setIsRestoring] = useState(true);\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n  const { showMatchPopup } = useNotifications();\n\n  // Функции для сохранения и восстановления состояния\n  const saveProfilesState = () => {\n    try {\n      const stateToSave = {\n        currentProfile,\n        profileQueue,\n        profileHistory,\n        historyIndex,\n        profileShowKey,\n        timestamp: Date.now()\n      };\n      sessionStorage.setItem('home-profiles-state', JSON.stringify(stateToSave));\n      console.log('💾 Состояние анкет сохранено в sessionStorage');\n    } catch (error) {\n      console.error('Ошибка сохранения состояния:', error);\n    }\n  };\n\n  const restoreProfilesState = () => {\n    try {\n      const savedState = sessionStorage.getItem('home-profiles-state');\n      if (savedState) {\n        const parsedState = JSON.parse(savedState);\n        const now = Date.now();\n        const timeDiff = now - parsedState.timestamp;\n        \n        // Восстанавливаем состояние только если оно не старше 30 минут\n        if (timeDiff < 30 * 60 * 1000) {\n          setCurrentProfile(parsedState.currentProfile);\n          setProfileQueue(parsedState.profileQueue || []);\n          setProfileHistory(parsedState.profileHistory || []);\n          setHistoryIndex(parsedState.historyIndex || -1);\n          setProfileShowKey(parsedState.profileShowKey || 0);\n          console.log('🔄 Состояние анкет восстановлено из sessionStorage');\n          return true;\n        } else {\n          console.log('⏰ Сохраненное состояние устарело, очищаем');\n          sessionStorage.removeItem('home-profiles-state');\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка восстановления состояния:', error);\n      sessionStorage.removeItem('home-profiles-state');\n    }\n    \n    // Устанавливаем флаг восстановления в false\n    setIsRestoring(false);\n    return false;\n  };\n\n  const clearProfilesState = () => {\n    try {\n      sessionStorage.removeItem('home-profiles-state');\n      console.log('🗑️ Состояние анкет очищено из sessionStorage');\n    } catch (error) {\n      console.error('Ошибка очистки состояния:', error);\n    }\n  };\n\n\n\n  // Функция для добавления профиля в историю\n  const addToHistory = (profile) => {\n    if (!profile) return;\n    \n    setProfileHistory(prev => {\n      const newHistory = [...prev, profile];\n      // Ограничиваем историю 3 профилями\n      if (newHistory.length > 3) {\n        return newHistory.slice(-3);\n      }\n      return newHistory;\n    });\n    setHistoryIndex(prev => Math.min(prev + 1, 2)); // Максимум индекс 2 (3 профиля)\n    \n    // Отладочная информация\n    console.log('Добавлен в историю:', profile.login, 'История:', profileHistory.length + 1);\n  };\n\n  // Функция предзагрузки профилей\n  const preloadProfiles = async (count = 10) => {\n    if (isPreloading) return;\n    \n    setIsPreloading(true);\n    \n    try {\n      // Не исключаем уже просмотренные анкеты, разрешаем дублирование\n      \n      console.log('🔄 === ПРЕДЗАГРУЗКА ПРОФИЛЕЙ ===');\n      console.log('📊 Запрашиваем профили:', { count, currentQueueLength: profileQueue.length });\n      \n      // Загружаем профили одним batch запросом\n      const newProfiles = await swipeAPI.getProfilesBatch(count, []);\n      \n      console.log('📥 === ПРОФИЛИ ПОЛУЧЕНЫ С БЭКЕНДА ===');\n      console.log('📋 Общее количество полученных профилей:', newProfiles?.length || 0);\n      \n      if (newProfiles && newProfiles.length > 0) {\n        // Логируем каждый полученный профиль\n        newProfiles.forEach((profile, index) => {\n          console.log(`👤 Профиль ${index + 1}:`, {\n            id: profile.id,\n            login: profile.login,\n            ava: profile.ava,\n            status: profile.status,\n            city: profile.city,\n            distance: profile.distance,\n            age: profile.age,\n            viptype: profile.viptype,\n            isCouple: profile.isCouple,\n            height: profile.height,\n            weight: profile.weight,\n            smoking: profile.smoking,\n            alko: profile.alko\n          });\n        });\n        \n        if (profileQueue.length === 0 && !currentProfile) {\n          // Если нет текущего профиля, первый становится текущим\n          console.log('🎯 Устанавливаем первый профиль как текущий:', newProfiles[0].login);\n          setCurrentProfile(newProfiles[0]);\n          setProfileQueue(newProfiles.slice(1));\n          console.log('📚 Остальные профили добавлены в очередь:', newProfiles.slice(1).map(p => p.login));\n        } else {\n          // Иначе добавляем в очередь\n          console.log('📚 Добавляем профили в существующую очередь');\n          const oldQueueLength = profileQueue.length;\n          setProfileQueue(prev => [...prev, ...newProfiles]);\n          console.log(`📊 Размер очереди: ${oldQueueLength} → ${oldQueueLength + newProfiles.length}`);\n        }\n      } else {\n        console.warn('⚠️ Получен пустой массив профилей или null');\n      }\n      \n      console.log('✅ === ПРЕДЗАГРУЗКА ЗАВЕРШЕНА ===');\n      \n    } catch (error) {\n      // Игнорируем ошибки предзагрузки, но логируем для отладки\n      console.error('❌ Ошибка предзагрузки профилей:', error);\n    } finally {\n      setIsPreloading(false);\n    }\n  };\n\n  // Функция получения следующего профиля\n  const getNextProfile = () => {\n    console.log('🔄 === ПОЛУЧЕНИЕ СЛЕДУЮЩЕГО ПРОФИЛЯ ===');\n    console.log('📊 Текущее состояние:', {\n      currentProfile: currentProfile?.login || 'null',\n      profileQueueLength: profileQueue.length,\n      historyLength: profileHistory.length,\n      historyIndex\n    });\n    \n    if (profileQueue.length > 0) {\n      // Сохраняем текущий профиль в историю\n      if (currentProfile) {\n        console.log('📚 Добавляем в историю:', currentProfile.login);\n        addToHistory(currentProfile);\n      }\n      \n      // Берем профиль из очереди\n      const nextProfile = profileQueue[0];\n      console.log('👉 Следующий профиль из очереди:', nextProfile.login);\n      \n      // Мгновенно обновляем состояние\n      setProfileQueue(prev => prev.slice(1));\n      setCurrentProfile(nextProfile);\n      \n      // ДОБАВИТЬ ЭТО: генерируем новый уникальный ключ\n      setProfileShowKey(prev => prev + 1);\n      \n      console.log('📊 Обновленное состояние:', {\n        newCurrentProfile: nextProfile.login,\n        newQueueLength: profileQueue.length - 1,\n        newProfileShowKey: profileShowKey + 1\n      });\n      \n      // Если в очереди осталось 3 профиля, подгружаем еще 10\n      if (profileQueue.length <= 3) {\n        console.log('🔄 Запускаем предзагрузку (очередь <= 3)');\n        preloadProfiles(10);\n      }\n      \n      console.log('✅ === ПРОФИЛЬ УСПЕШНО ПОЛУЧЕН ===');\n      return nextProfile;\n    } else {\n      // Если очередь пуста, загружаем новую партию\n      console.log('⚠️ Очередь пуста, запускаем предзагрузку');\n      preloadProfiles(10);\n      \n      // ВАЖНО: возвращаем текущий профиль, чтобы анимация не сломалась\n      // Это позволит показать ту же анкету снова (что нормально для пары)\n      console.log('🔄 Возвращаем текущий профиль для предотвращения дергания:', currentProfile?.login);\n      console.log('✅ === ПРОФИЛЬ ВОЗВРАЩЕН (ДУБЛИРОВАНИЕ) ===');\n      return currentProfile;\n    }\n  };\n\n  // Получение профилей - теперь загружаем batch сразу\n  const { data: initialProfiles, isLoading, refetch } = useQuery(\n    'initial-profiles',\n    () => swipeAPI.getProfilesBatch(10, []), // Не исключаем анкеты\n    {\n      enabled: !currentProfile && profileQueue.length === 0, // Загружаем только если нет восстановленного состояния\n      onSuccess: (data) => {\n        if (data && data.length > 0) {\n          // Первый профиль становится текущим\n          setCurrentProfile(data[0]);\n          // Остальные идут в очередь\n          setProfileQueue(data.slice(1));\n          // ДОБАВИТЬ ЭТО: устанавливаем начальный ключ\n          setProfileShowKey(1);\n          // Запускаем предзагрузку следующей партии\n          preloadProfiles(10);\n        } else {\n          setCurrentProfile(null);\n        }\n        setSwipeDirection(null);\n      },\n      onError: (error) => {\n        console.error('Error loading initial profiles:', error);\n        if (error.response?.data?.error === 'no_profiles') {\n          setCurrentProfile(null);\n        } else {\n          toast.error(apiUtils.handleError(error));\n        }\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  // Мутации для лайков\n  const likeMutation = useMutation(\n    ({ targetUser, source }) => swipeAPI.like(targetUser, source),\n    {\n      onSuccess: async (data) => {\n        if (data.result === 'reciprocal_like' || data.match_created) {\n          // Проверяем, не было ли уже мэтча с этим пользователем\n          if (currentProfile) {\n            try {\n              const matchStatus = await swipeAPI.checkExistingMatch(currentProfile.login);\n              \n              // Показываем попап только если мэтча еще не было\n              if (!matchStatus.hasMatch) {\n                showMatchPopup({\n                  username: currentProfile.login,\n                  userData: {\n                    avatar: currentProfile.ava,\n                    login: currentProfile.login\n                  }\n                });\n                toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n              } else {\n                toast.success('Лайк отправлен! ��');\n              }\n            } catch (error) {\n              console.error('Error checking existing match:', error);\n              // В случае ошибки показываем попап для безопасности\n              showMatchPopup({\n                username: currentProfile.login,\n                userData: {\n                  avatar: currentProfile.ava,\n                  login: currentProfile.login\n                }\n              });\n              toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n            }\n          }\n        } else {\n          toast.success('Лайк отправлен! 💖');\n        }\n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        getNextProfile(); // Теперь всегда возвращает валидный профиль\n        \n        if (!currentProfile) {\n          // Если нет следующего профиля, показываем состояние загрузки\n          setCurrentProfile(null);\n          // Или можно показать спиннер загрузки\n        }\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  const dislikeMutation = useMutation(\n    ({ targetUser, source }) => swipeAPI.dislike(targetUser, source),\n    {\n      onSuccess: () => {\n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        getNextProfile(); // Теперь всегда возвращает валидный профиль\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n        setSwipeDirection(null);\n      }\n    }\n  );\n\n  const superlikeMutation = useMutation(\n    ({ targetUser, message }) => swipeAPI.superlike({ targetUser, message }),\n    {\n      onSuccess: async (data) => {\n        setShowSuperlikeModal(false);\n        setSuperlikeMessage('');\n        \n        // Суперлайки часто создают мэтчи - показываем попап если есть\n        if (currentProfile && (data.result === 'reciprocal_like' || data.match_created)) {\n          try {\n            const matchStatus = await swipeAPI.checkExistingMatch(currentProfile.login);\n            \n            // Показываем попап только если мэтча еще не было\n            if (!matchStatus.hasMatch) {\n              showMatchPopup({\n                username: currentProfile.login,\n                userData: {\n                  avatar: currentProfile.ava,\n                  login: currentProfile.login\n                }\n              });\n              toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n            } else {\n              toast.success('Суперлайк отправлен! ⭐');\n            }\n          } catch (error) {\n            console.error('Error checking existing match:', error);\n            // В случае ошибки показываем попап для безопасности\n            showMatchPopup({\n              username: currentProfile.login,\n              userData: {\n                avatar: currentProfile.ava,\n                login: currentProfile.login\n              }\n            });\n            toast.success('Взаимная симпатия! 💕', { duration: 6000 });\n          }\n        } else {\n          toast.success('Суперлайк отправлен! ⭐');\n        }\n        \n        // Мгновенно получаем следующий профиль\n        setSwipeDirection(null);\n        getNextProfile(); // Теперь всегда возвращает валидный профиль\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Показать подсказку для новых пользователей\n  useEffect(() => {\n    const hasSeenHint = localStorage.getItem('swipe-hint-seen');\n    if (!hasSeenHint && currentProfile) {\n      setShowHint(true);\n      setTimeout(() => {\n        setShowHint(false);\n        localStorage.setItem('swipe-hint-seen', 'true');\n      }, 3000);\n    }\n  }, [currentProfile]);\n\n  // Автоматическая предзагрузка при инициализации\n  useEffect(() => {\n    if (currentProfile && profileQueue.length === 0) {\n      preloadProfiles(5);\n    }\n  }, [currentProfile]);\n\n  // Автоматическое сохранение состояния при изменениях\n  useEffect(() => {\n    if (currentProfile || profileQueue.length > 0 || profileHistory.length > 0) {\n      saveProfilesState();\n    }\n  }, [currentProfile, profileQueue, profileHistory, historyIndex, profileShowKey]);\n\n  // Восстановление состояния при монтировании компонента\n  useEffect(() => {\n    const stateRestored = restoreProfilesState();\n    \n    // Если состояние не восстановлено, загружаем начальные профили\n    if (!stateRestored) {\n      console.log('🔄 Состояние не восстановлено, загружаем начальные профили');\n      setIsRestoring(false);\n    } else {\n      console.log('✅ Состояние восстановлено, проверяем необходимость предзагрузки');\n      // Если в очереди мало профилей, подгружаем еще\n      if (profileQueue.length <= 3) {\n        preloadProfiles(10);\n      }\n      setIsRestoring(false);\n    }\n\n    // Очистка состояния при размонтировании\n    return () => {\n      // Сохраняем состояние перед размонтированием\n      saveProfilesState();\n    };\n  }, []);\n\n  // Очистка состояния при выходе пользователя\n  useEffect(() => {\n    const handleAuthLogout = () => {\n      console.log('🚪 Пользователь вышел, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleAuthLogin = () => {\n      console.log('🔑 Пользователь вошел, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleProfileUpdate = () => {\n      console.log('⚙️ Профиль обновлен, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleLocationChange = () => {\n      console.log('📍 Местоположение изменилось, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleFiltersChange = () => {\n      console.log('🔍 Фильтры изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleSubscriptionChange = () => {\n      console.log('💎 Подписка изменилась, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handlePrivacyChange = () => {\n      console.log('🔒 Настройки приватности изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleNotificationsChange = () => {\n      console.log('🔔 Настройки уведомлений изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleLanguageChange = () => {\n      console.log('🌐 Язык изменился, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleThemeChange = () => {\n      console.log('🎨 Тема изменилась, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleMessageNotificationsChange = () => {\n      console.log('💬 Настройки уведомлений о сообщениях изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleLikeNotificationsChange = () => {\n      console.log('❤️ Настройки уведомлений о лайках изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleMatchNotificationsChange = () => {\n      console.log('💕 Настройки уведомлений о мэтчах изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleVisitNotificationsChange = () => {\n      console.log('👁️ Настройки уведомлений о посещениях изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleCommentNotificationsChange = () => {\n      console.log('💭 Настройки уведомлений о комментариях изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleGiftNotificationsChange = () => {\n      console.log('🎁 Настройки уведомлений о подарках изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleEventNotificationsChange = () => {\n      console.log('🎉 Настройки уведомлений о событиях изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleClubNotificationsChange = () => {\n      console.log('🏢 Настройки уведомлений о клубах изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleRatingNotificationsChange = () => {\n      console.log('⭐ Настройки уведомлений о рейтингах изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleReportNotificationsChange = () => {\n      console.log('🚨 Настройки уведомлений о репортах изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleModerationNotificationsChange = () => {\n      console.log('🛡️ Настройки уведомлений о модерации изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    const handleSystemNotificationsChange = () => {\n      console.log('⚙️ Настройки уведомлений о системных событиях изменились, очищаем состояние анкет');\n      clearProfilesState();\n    };\n\n    window.addEventListener('auth-logout', handleAuthLogout);\n    window.addEventListener('auth-login', handleAuthLogin);\n    window.addEventListener('profile-updated', handleProfileUpdate);\n    window.addEventListener('location-changed', handleLocationChange);\n    window.addEventListener('filters-changed', handleFiltersChange);\n    window.addEventListener('subscription-changed', handleSubscriptionChange);\n    window.addEventListener('privacy-changed', handlePrivacyChange);\n    window.addEventListener('notifications-changed', handleNotificationsChange);\n    window.addEventListener('language-changed', handleLanguageChange);\n    window.addEventListener('theme-changed', handleThemeChange);\n    window.addEventListener('message-notifications-changed', handleMessageNotificationsChange);\n    window.addEventListener('like-notifications-changed', handleLikeNotificationsChange);\n    window.addEventListener('match-notifications-changed', handleMatchNotificationsChange);\n    window.addEventListener('visit-notifications-changed', handleVisitNotificationsChange);\n    window.addEventListener('comment-notifications-changed', handleCommentNotificationsChange);\n    window.addEventListener('gift-notifications-changed', handleGiftNotificationsChange);\n    window.addEventListener('event-notifications-changed', handleEventNotificationsChange);\n    window.addEventListener('club-notifications-changed', handleClubNotificationsChange);\n    window.addEventListener('rating-notifications-changed', handleRatingNotificationsChange);\n    window.addEventListener('report-notifications-changed', handleReportNotificationsChange);\n    window.addEventListener('moderation-notifications-changed', handleModerationNotificationsChange);\n    window.addEventListener('system-notifications-changed', handleSystemNotificationsChange);\n    \n    return () => {\n      window.removeEventListener('auth-logout', handleAuthLogout);\n      window.removeEventListener('auth-login', handleAuthLogin);\n      window.removeEventListener('profile-updated', handleProfileUpdate);\n      window.removeEventListener('location-changed', handleLocationChange);\n      window.removeEventListener('filters-changed', handleFiltersChange);\n      window.removeEventListener('subscription-changed', handleSubscriptionChange);\n      window.removeEventListener('privacy-changed', handlePrivacyChange);\n      window.removeEventListener('notifications-changed', handleNotificationsChange);\n      window.removeEventListener('language-changed', handleLanguageChange);\n      window.removeEventListener('theme-changed', handleThemeChange);\n      window.removeEventListener('message-notifications-changed', handleMessageNotificationsChange);\n      window.removeEventListener('like-notifications-changed', handleLikeNotificationsChange);\n      window.removeEventListener('match-notifications-changed', handleMatchNotificationsChange);\n      window.removeEventListener('visit-notifications-changed', handleVisitNotificationsChange);\n      window.removeEventListener('comment-notifications-changed', handleCommentNotificationsChange);\n      window.removeEventListener('gift-notifications-changed', handleGiftNotificationsChange);\n      window.removeEventListener('event-notifications-changed', handleEventNotificationsChange);\n      window.removeEventListener('club-notifications-changed', handleClubNotificationsChange);\n      window.removeEventListener('rating-notifications-changed', handleRatingNotificationsChange);\n      window.removeEventListener('report-notifications-changed', handleReportNotificationsChange);\n      window.removeEventListener('moderation-notifications-changed', handleModerationNotificationsChange);\n      window.removeEventListener('system-notifications-changed', handleSystemNotificationsChange);\n    };\n  }, []);\n\n  // Обработчик принудительной перезагрузки профилей\n  const handleRefreshProfiles = () => {\n    console.log('🔄 Принудительная перезагрузка профилей');\n    clearProfilesState(); // Очищаем сохраненное состояние\n    setCurrentProfile(null);\n    setProfileQueue([]);\n    setProfileHistory([]);\n    setHistoryIndex(-1);\n    setProfileShowKey(0);\n    setIsRestoring(false);\n    refetch(); // Запускаем загрузку заново\n  };\n\n  // Обработчики действий\n  const handleLike = () => {\n    if (currentProfile) {\n      setSwipeDirection('right');\n      // Мгновенно отправляем лайк\n      likeMutation.mutate({\n        targetUser: currentProfile.login,\n        source: 'button'\n      });\n    }\n  };\n\n  const handleDislike = () => {\n    if (currentProfile) {\n      setSwipeDirection('left');\n      // Мгновенно отправляем дизлайк\n      dislikeMutation.mutate({\n        targetUser: currentProfile.login,\n        source: 'button'\n      });\n    }\n  };\n\n  const handleSuperlike = () => {\n    if (currentProfile) {\n      setShowSuperlikeModal(true);\n    }\n  };\n\n  const handleSendSuperlike = () => {\n    if (currentProfile && superlikeMessage.trim()) {\n      superlikeMutation.mutate({\n        targetUser: currentProfile.login,\n        message: superlikeMessage.trim()\n      });\n    }\n  };\n\n  const handleCloseSuperlikeModal = () => {\n    setShowSuperlikeModal(false);\n    setSuperlikeMessage('');\n  };\n\n  const handleBack = () => {\n    if (historyIndex >= 0 && profileHistory.length > 0) {\n      // Сохраняем текущий профиль в начало очереди\n      if (currentProfile) {\n        setProfileQueue(prev => [currentProfile, ...prev]);\n      }\n      \n      // Берем предыдущий профиль из истории\n      const previousProfile = profileHistory[historyIndex];\n      setCurrentProfile(previousProfile);\n      \n      // Уменьшаем индекс истории\n      setHistoryIndex(prev => prev - 1);\n      \n      // Удаляем профиль из истории (так как он теперь текущий)\n      setProfileHistory(prev => prev.slice(0, historyIndex));\n      \n      // Отладочная информация\n      console.log('Возврат к профилю:', previousProfile.login, 'Индекс истории:', historyIndex - 1);\n    } else {\n      toast.error('Нет предыдущих профилей');\n      console.log('Попытка вернуться назад, но история пуста. Индекс:', historyIndex, 'История:', profileHistory.length);\n    }\n  };\n\n  // Обработка свайпов\n  const handleDragEnd = (event, info) => {\n    const threshold = 100;\n    \n    if (info.offset.x > threshold) {\n      // Свайп вправо - лайк\n      if (currentProfile) {\n        setSwipeDirection('right');\n        // Мгновенно отправляем лайк\n        likeMutation.mutate({\n          targetUser: currentProfile.login,\n          source: 'gesture'\n        });\n      }\n    } else if (info.offset.x < -threshold) {\n      // Свайп влево - дизлайк\n      if (currentProfile) {\n        setSwipeDirection('left');\n        // Мгновенно отправляем дизлайк\n        dislikeMutation.mutate({\n          targetUser: currentProfile.login,\n          source: 'gesture'\n        });\n      }\n    }\n  };\n\n  if (isLoading || isRestoring) {\n    return (\n      <HomeContainer>\n        <Header>\n          <HeaderContent>\n            <WelcomeText>\n              <h1>SwingFox</h1>\n              <p>{isRestoring ? 'Восстанавливаем состояние...' : 'Загружаем профили...'}</p>\n            </WelcomeText>\n          </HeaderContent>\n        </Header>\n        <LoadingSpinner />\n      </HomeContainer>\n    );\n  }\n\n  return (\n    <HomeContainer>\n      <Header>\n        <HeaderContent>\n          <WelcomeText>\n            <h1>Найдите свою пару</h1>\n            <p>Свайпайте и знакомьтесь с интересными людьми</p>\n          </WelcomeText>\n          <UserInfo>\n            <div className=\"user-details\">\n              <p className=\"username\">@{currentUser?.login}</p>\n              <p className=\"status\">Онлайн</p>\n            </div>\n            <Avatar\n              $src={currentUser?.ava ? `/uploads/${currentUser.ava}` : ''}\n              $size=\"50px\"\n              $fontSize=\"20px\"\n            >\n              {!currentUser?.ava && currentUser?.login?.charAt(0).toUpperCase()}\n            </Avatar>\n          </UserInfo>\n        </HeaderContent>\n      </Header>\n\n      <SwipeContainer>\n        <SwipeHint $show={showHint}>\n          Свайпайте влево/вправо или используйте кнопки ниже\n        </SwipeHint>\n        \n        <AnimatePresence mode=\"wait\">\n          {currentProfile ? (\n            <ProfileCard\n              // ИЗМЕНИТЬ ЭТО: использовать комбинацию login + profileShowKey\n              key={`${currentProfile.login}-${profileShowKey}`}\n              drag=\"x\"\n              dragConstraints={{ left: 0, right: 0 }}\n              onDragEnd={handleDragEnd}\n              initial={{ scale: 0, opacity: 0, rotateY: 90 }}\n              animate={{ \n                scale: 1, \n                opacity: 1, \n                rotateY: 0,\n                x: swipeDirection === 'left' ? -400 : swipeDirection === 'right' ? 400 : 0,\n                rotate: swipeDirection === 'left' ? -20 : swipeDirection === 'right' ? 20 : 0\n              }}\n              exit={{ \n                scale: 0, \n                opacity: 0, \n                rotateY: swipeDirection === 'left' ? -90 : 90,\n                x: swipeDirection === 'left' ? -400 : 400,\n                rotate: swipeDirection === 'left' ? -20 : 20\n              }}\n              transition={{ \n                duration: swipeDirection ? 0.1 : 0.2,\n                type: swipeDirection ? \"tween\" : \"spring\",\n                stiffness: swipeDirection ? undefined : 200\n              }}\n              whileDrag={{ scale: 1.02, rotate: 2 }}\n              onLoad={() => {\n                console.log('=== ПРОФИЛЬ ЗАГРУЖЕН ===');\n                console.log('Основные данные:', {\n                  login: currentProfile.login,\n                  date: currentProfile.date,\n                  age: currentProfile.age,\n                  distance: currentProfile.distance,\n                  city: currentProfile.city,\n                  height: currentProfile.height,\n                  weight: currentProfile.weight,\n                  smoking: currentProfile.smoking,\n                  alko: currentProfile.alko,\n                  isCouple: currentProfile.isCouple,\n                  partnerData: currentProfile.partnerData\n                });\n                \n                // Логируем поля поиска\n                console.log('Поля поиска:', {\n                  searchStatus: currentProfile.searchStatus,\n                  searchAge: currentProfile.searchAge,\n                  location: currentProfile.location\n                });\n                \n                // Парсим даты если есть\n                if (currentProfile.date && currentProfile.date.includes('_')) {\n                  const ages = getAgeFromDate(currentProfile.date);\n                  console.log('Возраст из date:', ages);\n                }\n                \n                console.log('=== КОНЕЦ ПРОФИЛЯ ===');\n              }}\n            >\n              <ProfileImage $src={currentProfile.ava ? `/uploads/${currentProfile.ava}` : ''}>\n                {!currentProfile.ava && '👤'}\n                <ProfileOverlay>\n                  <ClickableUsername to={`/profile/${currentProfile.login}`}>\n                    @{currentProfile.login}\n                  </ClickableUsername>\n                  <div className=\"location\">\n                    <LocationIcon />\n                    {currentProfile.city}, {currentProfile.distance}км\n                  </div>\n                  <div className=\"age\">\n                    {currentProfile.age || 'Возраст не указан'}\n                  </div>\n                </ProfileOverlay>\n              </ProfileImage>\n              \n              <ProfileDetails>\n                <div>\n                  <div className=\"status-badge\">\n                    <InfoIcon />\n                    {currentProfile.status}\n                  </div>\n                  \n                  {/* Отображение совместимости */}\n                  {currentProfile.compatibility && (\n                    <div className=\"compatibility-badge\">\n                      <span style={{ fontSize: '14px' }}>💚</span>\n                      <span>Совместимость:</span>\n                      <span className=\"percentage\">\n                        {Math.round(currentProfile.compatibility.totalScore * 100)}%\n                      </span>\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill\" \n                          style={{ \n                            width: `${Math.round(currentProfile.compatibility.totalScore * 100)}%` \n                          }}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Информация о том, кого ищет пользователь */}\n                  {currentProfile.searchStatus && (\n                    <div className=\"partner-info search-info\">\n                      <div className=\"title\">🔍 Кого ищет</div>\n                      <div className=\"details\">\n                        <div>\n                          <strong>Ищет:</strong> {currentProfile.searchStatus}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Предпочитаемое место встречи */}\n                  {currentProfile.location && (\n                    <div className=\"partner-info location-info\">\n                      <div className=\"title\">📍 Где знакомиться</div>\n                      <div className=\"details\">\n                        <div>\n                          <strong>Предпочитает:</strong>\n                          <div style={{ marginTop: '4px', marginLeft: '8px' }}>\n                            {currentProfile.location.split('&&').map((place, index) => (\n                              <div key={index} style={{ marginBottom: '2px' }}>\n                                • {place.trim()}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  \n                  \n                  {/* Дополнительная информация - убрана для упрощения интерфейса */}\n                  \n                  {/* Основная информация */}\n                  <div className=\"info\">\n                    {currentProfile.info ? \n                      (currentProfile.info.length > 120 ? currentProfile.info.substring(0, 120) + '...' : currentProfile.info) \n                      : 'Информация не указана'\n                    }\n                  </div>\n                </div>\n              </ProfileDetails>\n            </ProfileCard>\n          ) : (\n            <NoMoreProfiles>\n              <div className=\"icon\">🎯</div>\n              <h3>Профили закончились!</h3>\n              <p>Попробуйте позже или расширьте критерии поиска в настройках</p>\n              <Button onClick={handleRefreshProfiles}>\n                Обновить\n              </Button>\n            </NoMoreProfiles>\n          )}\n        </AnimatePresence>\n      </SwipeContainer>\n\n      {currentProfile && (\n        <ActionButtons>\n          <ActionButton \n            className=\"back\" \n            onClick={handleBack} \n            title=\"Вернуться к предыдущему профилю\"\n            disabled={historyIndex < 0} // Отключаем, если нет истории\n          >\n            <BackIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"dislike\" \n            onClick={handleDislike} \n            title=\"Не нравится\"\n            disabled={dislikeMutation.isLoading}\n          >\n            <DislikeIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"superlike\" \n            onClick={handleSuperlike} \n            title=\"Суперлайк с сообщением\"\n            disabled={superlikeMutation.isLoading}\n          >\n            <SuperlikeIcon />\n          </ActionButton>\n          \n          <ActionButton \n            className=\"like\" \n            onClick={handleLike} \n            title=\"Нравится\"\n            disabled={likeMutation.isLoading}\n          >\n            <HeartIcon />\n          </ActionButton>\n        </ActionButtons>\n      )}\n\n      {/* Модальное окно для суперлайка */}\n      {showSuperlikeModal && (\n        <Modal onClick={handleCloseSuperlikeModal}>\n          <ModalContent $maxWidth=\"500px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить суперлайк</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={handleCloseSuperlikeModal}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            \n            <div style={{ padding: '20px' }}>\n              <p style={{\n                marginBottom: '20px',\n                color: '#4a5568',\n                lineHeight: '1.5'\n              }}>\n                Суперлайк поможет выделиться среди других пользователей.\n                Напишите сообщение для <strong>@{currentProfile?.login}</strong>:\n              </p>\n              \n              <TextArea\n                value={superlikeMessage}\n                onChange={(e) => setSuperlikeMessage(e.target.value)}\n                placeholder=\"Привет! Ты мне очень понравился(лась)...\"\n                $minHeight=\"120px\"\n                style={{ marginBottom: '20px' }}\n                maxLength={500}\n              />\n              \n              <div style={{\n                display: 'flex',\n                gap: '15px',\n                justifyContent: 'flex-end'\n              }}>\n                <Button\n                  $variant=\"secondary\"\n                  onClick={handleCloseSuperlikeModal}\n                >\n                  Отмена\n                </Button>\n                <Button\n                  onClick={handleSendSuperlike}\n                  disabled={!superlikeMessage.trim() || superlikeMutation.isLoading}\n                >\n                  {superlikeMutation.isLoading ? 'Отправляем...' : 'Отправить суперлайк'}\n                </Button>\n              </div>\n              \n              <p style={{\n                marginTop: '15px',\n                fontSize: '12px',\n                color: '#718096',\n                textAlign: 'center'\n              }}>\n                У вас осталось суперлайков: ∞\n              </p>\n            </div>\n          </ModalContent>\n        </Modal>\n      )}\n    </HomeContainer>\n  );\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from 'react-query';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { Link } from 'react-router-dom';\nimport { catalogAPI, apiUtils } from '../services/api';\n// Убираем импорт функций маппинга, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  Avatar,\n  Button,\n  LoadingSpinner,\n  FlexContainer,\n  Card\n} from '../components/UI';\n\nconst CatalogContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  background: white;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-bottom: 1px solid #e2e8f0;\n  margin-bottom: 30px;\n`;\n\nconst HeaderContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  \n  h1 {\n    margin: 0;\n    font-size: 28px;\n    font-weight: 700;\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    text-align: center;\n  }\n  \n  p {\n    margin: 10px 0 0 0;\n    color: #718096;\n    text-align: center;\n    font-size: 16px;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 25px;\n  margin: 0 auto 30px auto;\n  max-width: 800px;\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n`;\n\nconst FilterSection = styled.div`\n  margin-bottom: 20px;\n  \n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst FilterLabel = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #2d3748;\n`;\n\nconst CheckboxGroup = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nconst CheckboxItem = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  \n  &:hover {\n    background-color: #f7fafc;\n  }\n  \n  input[type=\"checkbox\"] {\n    accent-color: #dc3522;\n  }\n  \n  span {\n    font-size: 14px;\n    color: #4a5568;\n  }\n`;\n\nconst InputGroup = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  \n  label {\n    font-size: 14px;\n    font-weight: 500;\n    color: #4a5568;\n  }\n  \n  select, input {\n    padding: 12px;\n    border: 1px solid #e2e8f0;\n    border-radius: 8px;\n    font-size: 14px;\n    transition: border-color 0.2s;\n    \n    &:focus {\n      outline: none;\n      border-color: #dc3522;\n      box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n    }\n  }\n`;\n\nconst FilterActions = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n`;\n\nconst ProfilesGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px;\n`;\n\nconst ProfileCard = styled(Card)`\n  padding: 20px;\n  text-align: center;\n  transition: transform 0.2s, box-shadow 0.2s;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ProfileAvatar = styled(Avatar)`\n  margin: 0 auto 15px auto;\n`;\n\nconst ProfileInfo = styled.div`\n  .status {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    padding: 6px 12px;\n    border-radius: 12px;\n    font-size: 12px;\n    font-weight: 600;\n    margin-bottom: 10px;\n    display: inline-block;\n  }\n  \n  .age {\n    color: #718096;\n    font-size: 14px;\n    margin-bottom: 8px;\n  }\n  \n  .location {\n    color: #4a5568;\n    font-size: 14px;\n    margin-bottom: 15px;\n  }\n  \n  .username {\n    font-weight: 600;\n    color: #dc3522;\n    text-decoration: none;\n    font-size: 16px;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst NoResults = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px; /* Увеличиваем с 300px до 400px как в NoMoreProfiles */\n  \n  .icon {\n    font-size: 72px;\n    margin-bottom: 54px;\n    opacity: 0.7;\n    line-height: 1;\n    display: block;\n    text-align: center;\n    width: 100%;\n    transform: translateX(-2px);\n  }\n  \n  h3 {\n    margin: 0 0 16px 0;\n    font-size: 28px;\n    color: #2d3748;\n    font-weight: 700;\n    line-height: 1.2;\n    text-align: center;\n    width: 100%;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n    color: #718096;\n    text-align: center;\n    line-height: 1.6;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px;\n    min-height: 300px; /* Увеличиваем с 250px до 300px */\n    \n    .icon {\n      font-size: 56px;\n      margin-bottom: 50px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 24px;\n      margin-bottom: 14px;\n    }\n    \n    p {\n      font-size: 15px;\n      max-width: 280px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    padding: 30px 16px;\n    min-height: 250px; /* Увеличиваем с 200px до 250px */\n    \n    .icon {\n      font-size: 48px;\n      margin-bottom: 48px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 22px;\n      margin-bottom: 12px;\n    }\n    \n    p {\n      font-size: 14px;\n      max-width: 260px;\n    }\n  }\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  margin: 30px 0;\n  \n  .page-info {\n    color: #718096;\n    font-size: 14px;\n  }\n`;\n\nconst Catalog = () => {\n  const [filters, setFilters] = useState({\n    status: [],\n    country: '',\n    city: '',\n    limit: 14,\n    offset: 0\n  });\n\n  const [availableFilters, setAvailableFilters] = useState({\n    statuses: [],\n    countries: [],\n    cities: {}\n  });\n\n  // Получение доступных фильтров\n  const { data: filtersData } = useQuery(\n    'catalog-filters',\n    catalogAPI.getFilters,\n    {\n      onSuccess: (data) => {\n        setAvailableFilters(data);\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Обработчики фильтров\n  const handleStatusChange = (status, checked) => {\n    setFilters(prev => ({\n      ...prev,\n      status: checked \n        ? [...prev.status, status]\n        : prev.status.filter(s => s !== status),\n      offset: 0 // Сбрасываем пагинацию при изменении фильтров\n    }));\n  };\n\n\n\n  // Функция для преобразования фильтров перед отправкой на сервер\n  const getServerFilters = () => {\n    const serverFilters = { ...filters };\n    \n    // Статусы уже на русском языке, преобразование не нужно\n    return serverFilters;\n  };\n\n  // Получение профилей с преобразованными фильтрами\n  const { data: profilesData, isLoading, refetch } = useQuery(\n    ['catalog-profiles', filters],\n    () => catalogAPI.getProfiles(getServerFilters()),\n    {\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const handleCountryChange = (country) => {\n    setFilters(prev => ({\n      ...prev,\n      country,\n      city: '', // Сбрасываем город при смене страны\n      offset: 0\n    }));\n  };\n\n  const handleCityChange = (city) => {\n    setFilters(prev => ({\n      ...prev,\n      city,\n      offset: 0\n    }));\n  };\n\n  const handleClearFilters = () => {\n    setFilters({\n      status: [],\n      country: '',\n      city: '',\n      limit: 14,\n      offset: 0\n    });\n  };\n\n  const handlePageChange = (newOffset) => {\n    setFilters(prev => ({\n      ...prev,\n      offset: newOffset\n    }));\n    // Скролл вверх при смене страницы\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  // Получение городов для выбранной страны\n  const availableCities = filters.country && availableFilters.cities[filters.country] \n    ? availableFilters.cities[filters.country] \n    : [];\n\n  return (\n    <CatalogContainer>\n      <Header>\n        <HeaderContent>\n          <h1>Каталог анкет</h1>\n          <p>Умная система рекомендаций на основе совместимости</p>\n          <p style={{ fontSize: '14px', marginTop: '5px', opacity: 0.8 }}>\n            Показываем всех, но сортируем по вероятности совместимости\n          </p>\n        </HeaderContent>\n      </Header>\n\n      <FiltersContainer>\n        <FilterSection>\n          <FilterLabel>С кем хотите познакомиться?</FilterLabel>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px', fontStyle: 'italic' }}>\n            Фильтры помогают сузить поиск, но система покажет всех подходящих\n          </p>\n          <p style={{ fontSize: '12px', color: '#888', marginBottom: '15px', fontStyle: 'italic' }}>\n            Сортировка по совместимости: статус, возраст, география, образ жизни\n          </p>\n          <CheckboxGroup>\n            {availableFilters.statuses.map(status => (\n              <CheckboxItem key={status}>\n                <input\n                  type=\"checkbox\"\n                  checked={filters.status.includes(status)}\n                  onChange={(e) => handleStatusChange(status, e.target.checked)}\n                />\n                <span>{status}</span>\n              </CheckboxItem>\n            ))}\n          </CheckboxGroup>\n        </FilterSection>\n\n\n\n        <FilterSection>\n          <FilterLabel>Местоположение</FilterLabel>\n          <p style={{ fontSize: '14px', color: '#666', marginBottom: '15px', fontStyle: 'italic' }}>\n            Варианты загружаются из базы географических данных\n          </p>\n          <InputGroup>\n            <InputField>\n              <label>Страна</label>\n              <select\n                value={filters.country}\n                onChange={(e) => handleCountryChange(e.target.value)}\n              >\n                <option value=\"\">Все страны</option>\n                {availableFilters.countries.map(country => (\n                  <option key={country} value={country}>\n                    {country}\n                  </option>\n                ))}\n              </select>\n            </InputField>\n\n            <InputField>\n              <label>Город</label>\n              <select\n                value={filters.city}\n                onChange={(e) => handleCityChange(e.target.value)}\n                disabled={!filters.country}\n              >\n                <option value=\"\">Все города</option>\n                {availableCities.map(city => (\n                  <option key={city} value={city}>\n                    {city}\n                  </option>\n                ))}\n              </select>\n            </InputField>\n          </InputGroup>\n        </FilterSection>\n\n        <FilterActions>\n          <Button onClick={() => refetch()}>\n            Обновить результаты\n          </Button>\n          <Button variant=\"secondary\" onClick={handleClearFilters}>\n            Очистить фильтры\n          </Button>\n        </FilterActions>\n      </FiltersContainer>\n\n      {isLoading ? (\n        <LoadingSpinner />\n      ) : (\n        <>\n          {profilesData?.users && profilesData.users.length > 0 ? (\n            <>\n              <ProfilesGrid>\n                {profilesData.users.map(user => (\n                  <ProfileCard key={user.login}>\n                    <ProfileAvatar\n                      $src={user.ava ? `/uploads/${user.ava}` : ''}\n                      $size=\"80px\"\n                      $fontSize=\"32px\"\n                    >\n                      {!user.ava && user.login?.charAt(0).toUpperCase()}\n                    </ProfileAvatar>\n                    \n                    <ProfileInfo>\n                                    <div className=\"status\">{user.status}</div>\n              <div className=\"age\">{user.age}</div>\n              {user.compatibility && (\n                <div className=\"compatibility\" style={{ \n                  background: `linear-gradient(90deg, #4CAF50 ${user.compatibility.percentage}%, #e0e0e0 ${user.compatibility.percentage}%)`,\n                  color: 'white',\n                  padding: '4px 8px',\n                  borderRadius: '12px',\n                  fontSize: '12px',\n                  fontWeight: 'bold',\n                  textAlign: 'center',\n                  marginTop: '5px'\n                }}>\n                  Совместимость: {user.compatibility.percentage}%\n                </div>\n              )}\n                      \n                      <div className=\"location\">\n                        {user.city}, {user.distance}км\n                      </div>\n                      \n                      {/* Дополнительная информация */}\n                      <div className=\"additional-info\" style={{ fontSize: '11px', marginTop: '5px', color: '#666' }}>\n                        {user.height && <span>📏 {user.height}см </span>}\n                        {user.smoking && <span>🚬 {user.smoking.length > 20 ? user.smoking.substring(0, 20) + '...' : user.smoking} </span>}\n                      </div>\n                      \n                      {/* Показываем кого ищет пользователь */}\n                      {user.searchStatus && (\n                        <div className=\"search-info\" style={{ \n                          fontSize: '11px', \n                          marginTop: '5px', \n                          padding: '5px', \n                          background: 'rgba(34, 197, 94, 0.1)', \n                          borderRadius: '5px',\n                          border: '1px solid rgba(34, 197, 94, 0.2)',\n                          color: '#166534'\n                        }}>\n                          <div style={{ fontWeight: 'bold', marginBottom: '3px' }}>🔍 Ищет:</div>\n                          <div>{user.searchStatus}</div>\n                          {user.searchAge && (\n                            <div style={{ fontSize: '10px', marginTop: '3px', opacity: 0.8 }}>\n                              Возраст: {user.searchAge}\n                            </div>\n                          )}\n                          <div style={{ fontSize: '10px', marginTop: '3px', opacity: 0.7, fontStyle: 'italic' }}>\n                            ✅ Взаимно совместимы\n                          </div>\n                        </div>\n                      )}\n                      \n                      <Link\n                        to={`/profile/${user.login}`}\n                        className=\"username\"\n                      >\n                        @{user.login}\n                      </Link>\n                    </ProfileInfo>\n                  </ProfileCard>\n                ))}\n              </ProfilesGrid>\n\n              {profilesData.pagination && (\n                <Pagination>\n                  <Button\n                    variant=\"secondary\"\n                    disabled={profilesData.pagination.offset === 0}\n                    onClick={() => handlePageChange(Math.max(0, profilesData.pagination.offset - profilesData.pagination.limit))}\n                  >\n                    ← Назад\n                  </Button>\n                  \n                  <div className=\"page-info\">\n                    {profilesData.pagination.offset + 1} - {Math.min(profilesData.pagination.offset + profilesData.pagination.limit, profilesData.pagination.total)} из {profilesData.pagination.total}\n                  </div>\n                  \n                  <Button\n                    variant=\"secondary\"\n                    disabled={!profilesData.pagination.hasMore}\n                    onClick={() => handlePageChange(profilesData.pagination.offset + profilesData.pagination.limit)}\n                  >\n                    Вперед →\n                  </Button>\n                </Pagination>\n              )}\n            </>\n          ) : (\n            <NoResults>\n              <div className=\"icon\">🔍</div>\n              <h3>Нет результатов</h3>\n              <p>Попробуйте изменить критерии поиска или очистить фильтры</p>\n            </NoResults>\n          )}\n        </>\n      )}\n    </CatalogContainer>\n  );\n};\n\nexport default Catalog;","import React, { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { ratingAPI } from '../services/api';\nimport { StarIcon, ThumbsUpIcon, ThumbsDownIcon } from './UI';\n\nconst RatingContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst RatingHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  \n  .title {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .total-rating {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 24px;\n    font-weight: 700;\n    color: #dc3522;\n  }\n`;\n\nconst RatingStats = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  gap: 15px;\n  margin-bottom: 20px;\n  \n  .stat {\n    text-align: center;\n    padding: 10px;\n    background: #f7fafc;\n    border-radius: 10px;\n    \n    .value {\n      font-size: 20px;\n      font-weight: 700;\n      color: #2d3748;\n      margin-bottom: 5px;\n    }\n    \n    .label {\n      font-size: 12px;\n      color: #718096;\n      text-transform: uppercase;\n      font-weight: 600;\n    }\n  }\n`;\n\nconst VotingButtons = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  \n  .vote-btn {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 25px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s ease;\n    \n    &.positive {\n      background: ${props => props.$userVote === 1 ? '#4caf50' : 'linear-gradient(135deg, #e8f5e8 0%, #f0f9f0 100%)'};\n      color: ${props => props.$userVote === 1 ? 'white' : '#4caf50'};\n      border: 2px solid #4caf50;\n      \n      &:hover:not(:disabled) {\n        background: #4caf50;\n        color: white;\n        transform: translateY(-2px);\n      }\n    }\n    \n    &.negative {\n      background: ${props => props.$userVote === -1 ? '#f44336' : 'linear-gradient(135deg, #fdeaea 0%, #fef2f2 100%)'};\n      color: ${props => props.$userVote === -1 ? 'white' : '#f44336'};\n      border: 2px solid #f44336;\n      \n      &:hover:not(:disabled) {\n        background: #f44336;\n        color: white;\n        transform: translateY(-2px);\n      }\n    }\n    \n    &:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      transform: none;\n    }\n  }\n`;\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  height: 8px;\n  background: #e2e8f0;\n  border-radius: 4px;\n  overflow: hidden;\n  margin: 10px 0;\n  \n  .fill {\n    height: 100%;\n    background: linear-gradient(90deg, #f44336 0%, #ff9800 50%, #4caf50 100%);\n    border-radius: 4px;\n    transition: width 0.3s ease;\n    width: ${props => props.$percentage}%;\n  }\n`;\n\nconst DisabledMessage = styled.div`\n  text-align: center;\n  padding: 15px;\n  background: #f7fafc;\n  border-radius: 10px;\n  color: #718096;\n  font-style: italic;\n`;\n\nconst RatingDisplay = ({ targetUser, rating, userVote, canVote }) => {\n  const [isVoting, setIsVoting] = useState(false);\n  const queryClient = useQueryClient();\n\n  const voteMutation = useMutation(\n    (value) => ratingAPI.rateUser(targetUser, value),\n    {\n      onMutate: () => {\n        setIsVoting(true);\n      },\n      onSuccess: (data) => {\n        toast.success(data.message || 'Оценка отправлена');\n        // Инвалидируем связанные запросы\n        queryClient.invalidateQueries(['profile', targetUser]);\n        queryClient.invalidateQueries(['leaderboard']);\n        queryClient.invalidateQueries(['my-rating-stats']);\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при оценке');\n      },\n      onSettled: () => {\n        setIsVoting(false);\n      }\n    }\n  );\n\n  const deleteVoteMutation = useMutation(\n    () => ratingAPI.deleteRating(targetUser),\n    {\n      onSuccess: () => {\n        toast.success('Оценка удалена');\n        queryClient.invalidateQueries(['profile', targetUser]);\n        queryClient.invalidateQueries(['leaderboard']);\n        queryClient.invalidateQueries(['my-rating-stats']);\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при удалении оценки');\n      }\n    }\n  );\n\n  const handleVote = (value) => {\n    if (userVote === value) {\n      // Если голосуем повторно тем же значением - удаляем оценку\n      deleteVoteMutation.mutate();\n    } else {\n      // Иначе ставим новую оценку\n      voteMutation.mutate(value);\n    }\n  };\n\n  if (!rating) {\n    return null;\n  }\n\n  const {\n    total_rating = 0,\n    total_votes = 0,\n    positive_votes = 0,\n    negative_votes = 0,\n    percentage_positive = 0\n  } = rating;\n\n  return (\n    <RatingContainer>\n      <RatingHeader>\n        <div className=\"title\">\n          <StarIcon />\n          Рейтинг пользователя\n        </div>\n        <div className=\"total-rating\">\n          <StarIcon />\n          {total_rating}\n        </div>\n      </RatingHeader>\n\n      <RatingStats>\n        <div className=\"stat\">\n          <div className=\"value\">{total_votes}</div>\n          <div className=\"label\">Всего оценок</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{positive_votes}</div>\n          <div className=\"label\">Положительных</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{negative_votes}</div>\n          <div className=\"label\">Отрицательных</div>\n        </div>\n        <div className=\"stat\">\n          <div className=\"value\">{percentage_positive}%</div>\n          <div className=\"label\">Позитивность</div>\n        </div>\n      </RatingStats>\n\n      {total_votes > 0 && (\n        <ProgressBar $percentage={percentage_positive}>\n          <div className=\"fill\" />\n        </ProgressBar>\n      )}\n\n      {canVote ? (\n        <VotingButtons $userVote={userVote}>\n          <motion.button\n            className=\"vote-btn positive\"\n            onClick={() => handleVote(1)}\n            disabled={isVoting}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <ThumbsUpIcon />\n            {userVote === 1 ? 'Убрать лайк' : 'Нравится'}\n          </motion.button>\n          \n          <motion.button\n            className=\"vote-btn negative\"\n            onClick={() => handleVote(-1)}\n            disabled={isVoting}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <ThumbsDownIcon />\n            {userVote === -1 ? 'Убрать дизлайк' : 'Не нравится'}\n          </motion.button>\n        </VotingButtons>\n      ) : (\n        <DisabledMessage>\n          {targetUser === 'self' \n            ? 'Нельзя оценивать собственный профиль' \n            : 'Войдите в систему, чтобы оценить пользователя'\n          }\n        </DisabledMessage>\n      )}\n    </RatingContainer>\n  );\n};\n\nexport default RatingDisplay;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI } from '../services/api';\nimport {\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  TextArea,\n  Avatar,\n  LoadingSpinner,\n  CloseIcon,\n  EditIcon,\n  TrashIcon,\n  SendIcon\n} from './UI';\n\nconst CommentsContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n`;\n\nconst CommentsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  \n  .title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .count {\n    background: #dc3522;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 20px;\n    font-size: 12px;\n    font-weight: 600;\n  }\n`;\n\nconst CommentForm = styled(Form)`\n  margin-bottom: 20px;\n  \n  .form-row {\n    display: flex;\n    gap: 10px;\n    align-items: flex-end;\n  }\n  \n  .comment-input {\n    flex: 1;\n  }\n`;\n\nconst CommentsList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst CommentItem = styled(motion.div)`\n  display: flex;\n  gap: 12px;\n  padding: 15px;\n  border-radius: 12px;\n  background: #f7fafc;\n  margin-bottom: 10px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #edf2f7;\n  }\n  \n  .comment-avatar {\n    flex-shrink: 0;\n  }\n  \n  .comment-content {\n    flex: 1;\n    min-width: 0;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 5px;\n  }\n  \n  .comment-author {\n    font-weight: 600;\n    color: #2d3748;\n    font-size: 14px;\n  }\n  \n  .comment-time {\n    font-size: 12px;\n    color: #718096;\n  }\n  \n  .comment-text {\n    color: #4a5568;\n    font-size: 14px;\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n  \n  .comment-actions {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  \n  .edit-indicator {\n    font-size: 11px;\n    color: #718096;\n    font-style: italic;\n  }\n`;\n\nconst EditForm = styled.div`\n  margin-top: 10px;\n  \n  .edit-row {\n    display: flex;\n    gap: 8px;\n    align-items: flex-end;\n  }\n  \n  .edit-input {\n    flex: 1;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 15px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\nconst LoadMoreButton = styled(Button)`\n  width: 100%;\n  margin-top: 15px;\n`;\n\nconst PhotoComments = ({ filename, currentUser }) => {\n  // Проверяем, что filename передан\n  if (!filename) {\n    return (\n      <CommentsContainer>\n        <div style={{ textAlign: 'center', padding: '20px', color: '#718096' }}>\n          Ошибка: не указано имя файла для комментариев\n        </div>\n      </CommentsContainer>\n    );\n  }\n  const [commentText, setCommentText] = useState('');\n  const [editingComment, setEditingComment] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [page, setPage] = useState(1);\n  const queryClient = useQueryClient();\n\n  // Получение комментариев\n  const { data: commentsData, isLoading, error } = useQuery(\n    ['photo-comments', filename, page],\n    () => usersAPI.getPhotoComments(filename, page, 10),\n    {\n      keepPreviousData: true,\n      enabled: !!filename, // Запрос выполняется только если есть filename\n      onError: (error) => {\n        toast.error('Ошибка при загрузке комментариев');\n      }\n    }\n  );\n\n  // Мутации\n  const createCommentMutation = useMutation(\n    async (data) => {\n      console.log('Mutation function called with data:', data);\n      console.log('Data types:', {\n        filename: typeof data.filename,\n        commentText: typeof data.commentText\n      });\n      \n      if (typeof data.filename !== 'string') {\n        throw new Error(`Filename must be string, got ${typeof data.filename}: ${data.filename}`);\n      }\n      \n      return await usersAPI.createPhotoComment(data.filename, data.commentText);\n    },\n    {\n    onSuccess: () => {\n      toast.success('Комментарий добавлен');\n      setCommentText('');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n      setPage(1); // Сбрасываем на первую страницу\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при добавлении комментария');\n    }\n  });\n\n  const updateCommentMutation = useMutation(\n    (data) => usersAPI.updatePhotoComment(data.commentId, data.commentText),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий обновлен');\n      setEditingComment(null);\n      setEditText('');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при обновлении комментария');\n    }\n  });\n\n  const deleteCommentMutation = useMutation(\n    (data) => usersAPI.deletePhotoComment(data.commentId),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий удален');\n      queryClient.invalidateQueries(['photo-comments', filename]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при удалении комментария');\n    }\n  });\n\n  // Обработчики\n  const handleSubmitComment = (e) => {\n    e.preventDefault();\n    \n    // Добавляем отладочную информацию\n    console.log('Submitting comment:', {\n      commentText,\n      trimmed: commentText.trim(),\n      length: commentText.length,\n      trimmedLength: commentText.trim().length\n    });\n    \n    if (!commentText || commentText.trim().length === 0) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    \n    const commentData = {\n      filename, \n      commentText: commentText.trim() \n    };\n    \n    console.log('Calling createCommentMutation with:', commentData);\n    console.log('CommentData types:', {\n      filename: typeof commentData.filename,\n      commentText: typeof commentData.commentText\n    });\n    console.log('Filename value:', commentData.filename);\n    \n    // Дополнительная проверка\n    if (typeof commentData.filename !== 'string') {\n      console.error('Filename is not a string in commentData:', commentData.filename);\n      toast.error('Ошибка: неправильный формат имени файла');\n      return;\n    }\n    \n    createCommentMutation.mutate(commentData);\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingComment(comment.id);\n    setEditText(comment.text);\n  };\n\n  const handleUpdateComment = () => {\n    if (!editText.trim()) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    updateCommentMutation.mutate({ commentId: editingComment, commentText: editText.trim() });\n  };\n\n  const handleDeleteComment = (commentId) => {\n    if (window.confirm('Вы уверены, что хотите удалить этот комментарий?')) {\n      deleteCommentMutation.mutate(commentId);\n    }\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const canEditComment = (comment) => {\n    return currentUser && comment.user?.login === currentUser;\n  };\n\n  const canDeleteComment = (comment) => {\n    return currentUser && comment.user?.login === currentUser;\n  };\n\n  if (isLoading && page === 1) {\n    return (\n      <CommentsContainer>\n        <LoadingSpinner />\n      </CommentsContainer>\n    );\n  }\n\n  const comments = commentsData?.comments || [];\n  const totalComments = commentsData?.pagination?.total || commentsData?.total || 0;\n  const hasMore = comments.length < totalComments;\n\n  return (\n    <CommentsContainer>\n      <CommentsHeader>\n        <div className=\"title\">Комментарии</div>\n        <div className=\"count\">{totalComments}</div>\n      </CommentsHeader>\n\n      {/* Форма добавления комментария */}\n      {currentUser && (\n        <CommentForm onSubmit={handleSubmitComment}>\n          <FormGroup className=\"comment-input\">\n            <Label>Добавить комментарий</Label>\n            <TextArea\n              placeholder=\"Напишите ваш комментарий...\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              $minHeight=\"80px\"\n              maxLength={1000}\n            />\n          </FormGroup>\n          <div className=\"form-row\">\n            <div style={{ fontSize: '12px', color: '#718096' }}>\n              {commentText.length}/1000 символов\n            </div>\n            <Button \n              type=\"submit\" \n              disabled={createCommentMutation.isLoading || !commentText.trim()}\n              $size=\"small\"\n            >\n              <SendIcon />\n              {createCommentMutation.isLoading ? 'Отправка...' : 'Отправить'}\n            </Button>\n          </div>\n        </CommentForm>\n      )}\n\n      {/* Список комментариев */}\n      <CommentsList>\n        {comments.length > 0 ? (\n          <AnimatePresence>\n            {comments.map((comment) => (\n              <CommentItem\n                key={comment.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div className=\"comment-avatar\">\n                  <Avatar \n                    src={comment.user?.avatar ? `/uploads/${comment.user.avatar}` : null}\n                    alt={comment.user?.name || comment.user?.login}\n                    size=\"40px\"\n                  />\n                </div>\n                \n                <div className=\"comment-content\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">\n                      {comment.user?.name || comment.user?.login}\n                    </span>\n                    <span className=\"comment-time\">\n                      {usersAPI.utils?.formatTimeAgo?.(comment.created_at) || \n                       new Date(comment.created_at).toLocaleDateString()}\n                    </span>\n                    {comment.is_edited && (\n                      <span className=\"edit-indicator\">(отредактировано)</span>\n                    )}\n                  </div>\n                  \n                  {editingComment === comment.id ? (\n                    <EditForm>\n                      <TextArea\n                        value={editText}\n                        onChange={(e) => setEditText(e.target.value)}\n                        $minHeight=\"60px\"\n                        maxLength={1000}\n                      />\n                      <div className=\"edit-row\">\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {editText.length}/1000 символов\n                        </div>\n                        <Button \n                          onClick={handleUpdateComment}\n                          disabled={updateCommentMutation.isLoading || !editText.trim()}\n                          $size=\"small\"\n                        >\n                          Сохранить\n                        </Button>\n                        <Button \n                          onClick={() => setEditingComment(null)}\n                          $variant=\"secondary\"\n                          $size=\"small\"\n                        >\n                          Отмена\n                        </Button>\n                      </div>\n                    </EditForm>\n                  ) : (\n                    <div className=\"comment-text\">{comment.text}</div>\n                  )}\n                  \n                  <div className=\"comment-actions\">\n                    {canEditComment(comment) && editingComment !== comment.id && (\n                      <IconButton\n                        onClick={() => handleEditComment(comment)}\n                        $size=\"small\"\n                        $variant=\"secondary\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    )}\n                    \n                    {canDeleteComment(comment) && (\n                      <IconButton\n                        onClick={() => handleDeleteComment(comment.id)}\n                        $size=\"small\"\n                        $variant=\"danger\"\n                      >\n                        <TrashIcon />\n                      </IconButton>\n                    )}\n                  </div>\n                </div>\n              </CommentItem>\n            ))}\n          </AnimatePresence>\n        ) : (\n          <EmptyState>\n            <div className=\"icon\">💬</div>\n            <h3>Нет комментариев</h3>\n            <p>Будьте первым, кто оставит комментарий к этой фотографии</p>\n          </EmptyState>\n        )}\n      </CommentsList>\n\n      {/* Кнопка \"Загрузить еще\" */}\n      {hasMore && (\n        <LoadMoreButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          $variant=\"secondary\"\n        >\n          {isLoading ? 'Загрузка...' : 'Загрузить еще'}\n        </LoadMoreButton>\n      )}\n    </CommentsContainer>\n  );\n};\n\nexport default PhotoComments;\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI } from '../services/api';\nimport {\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  TextArea,\n  Avatar,\n  LoadingSpinner,\n  CloseIcon,\n  EditIcon,\n  TrashIcon,\n  SendIcon,\n  LockIcon,\n  EyeIcon\n} from './UI';\n\nconst CommentsContainer = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin: 15px 0;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n`;\n\nconst CommentsHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  \n  .title {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n  }\n  \n  .count {\n    background: #dc3522;\n    color: white;\n    padding: 4px 12px;\n    border-radius: 20px;\n    font-size: 12px;\n    font-weight: 600;\n  }\n`;\n\nconst CommentForm = styled(Form)`\n  margin-bottom: 20px;\n  \n  .form-row {\n    display: flex;\n    gap: 10px;\n    align-items: flex-end;\n  }\n  \n  .comment-input {\n    flex: 1;\n  }\n  \n  .form-options {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    margin-top: 10px;\n  }\n  \n  .privacy-toggle {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    cursor: pointer;\n    \n    input[type=\"checkbox\"] {\n      margin: 0;\n    }\n    \n    .toggle-label {\n      font-size: 14px;\n      color: #4a5568;\n    }\n  }\n`;\n\nconst CommentsList = styled.div`\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst CommentItem = styled(motion.div)`\n  display: flex;\n  gap: 12px;\n  padding: 15px;\n  border-radius: 12px;\n  background: #f7fafc;\n  margin-bottom: 10px;\n  transition: all 0.2s ease;\n  border-left: 4px solid ${props => props.$isPublic ? '#38a169' : '#805ad5'};\n  \n  &:hover {\n    background: #edf2f7;\n  }\n  \n  .comment-avatar {\n    flex-shrink: 0;\n  }\n  \n  .comment-content {\n    flex: 1;\n    min-width: 0;\n  }\n  \n  .comment-header {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    margin-bottom: 5px;\n  }\n  \n  .comment-author {\n    font-weight: 600;\n    color: #2d3748;\n    font-size: 14px;\n  }\n  \n  .comment-time {\n    font-size: 12px;\n    color: #718096;\n  }\n  \n  .comment-text {\n    color: #4a5568;\n    font-size: 14px;\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n  \n  .comment-actions {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n  }\n  \n  .edit-indicator {\n    font-size: 11px;\n    color: #718096;\n    font-style: italic;\n  }\n  \n  .privacy-badge {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 11px;\n    padding: 2px 6px;\n    border-radius: 10px;\n    background: ${props => props.$isPublic ? '#c6f6d5' : '#e9d8fd'};\n    color: ${props => props.$isPublic ? '#22543d' : '#553c9a'};\n  }\n`;\n\nconst EditForm = styled.div`\n  margin-top: 10px;\n  \n  .edit-row {\n    display: flex;\n    gap: 8px;\n    align-items: flex-end;\n  }\n  \n  .edit-input {\n    flex: 1;\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 48px;\n    margin-bottom: 15px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 16px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 14px;\n  }\n`;\n\nconst LoadMoreButton = styled(Button)`\n  width: 100%;\n  margin-top: 15px;\n`;\n\nconst ProfileComments = ({ username, currentUser, isOwnProfile = false }) => {\n  // Проверяем, что username передан\n  if (!username) {\n    return (\n      <CommentsContainer>\n        <div style={{ textAlign: 'center', padding: '20px', color: '#718096' }}>\n          Ошибка: не указан пользователь для комментариев\n        </div>\n      </CommentsContainer>\n    );\n  }\n  const [commentText, setCommentText] = useState('');\n  const [isPublic, setIsPublic] = useState(true);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [page, setPage] = useState(1);\n  const [includePrivate, setIncludePrivate] = useState(false);\n  const queryClient = useQueryClient();\n\n  // Получение комментариев\n  const { data: commentsData, isLoading, error } = useQuery(\n    ['profile-comments', username, page, includePrivate],\n    () => usersAPI.getProfileComments(username, page, 10, includePrivate),\n    {\n      keepPreviousData: true,\n      enabled: !!username, // Запрос выполняется только если есть username\n      onError: (error) => {\n        toast.error('Ошибка при загрузке комментариев');\n      }\n    }\n  );\n\n  // Мутации\n  const createCommentMutation = useMutation(\n    async (data) => {\n      console.log('Mutation function called with data:', data);\n      console.log('Data types:', {\n        username: typeof data.username,\n        commentText: typeof data.commentText,\n        isPublic: typeof data.isPublic\n      });\n      \n      if (typeof data.username !== 'string') {\n        throw new Error(`Username must be string, got ${typeof data.username}: ${data.username}`);\n      }\n      \n      return await usersAPI.createProfileComment(data.username, data.commentText, data.isPublic);\n    },\n    {\n    onSuccess: () => {\n      toast.success('Комментарий добавлен');\n      setCommentText('');\n      queryClient.invalidateQueries(['profile-comments', username]);\n      setPage(1); // Сбрасываем на первую страницу\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при добавлении комментария');\n    }\n  });\n\n  const updateCommentMutation = useMutation(\n    (data) => usersAPI.updateProfileComment(data.commentId, data.commentText),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий обновлен');\n      setEditingComment(null);\n      setEditText('');\n      queryClient.invalidateQueries(['profile-comments', username]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при обновлении комментария');\n    }\n  });\n\n  const deleteCommentMutation = useMutation(\n    (data) => usersAPI.deleteProfileComment(data.commentId),\n    {\n    onSuccess: () => {\n      toast.success('Комментарий удален');\n      queryClient.invalidateQueries(['profile-comments', username]);\n    },\n    onError: (error) => {\n      toast.error(error.response?.data?.message || 'Ошибка при удалении комментария');\n    }\n  });\n\n  // Обработчики\n  const handleSubmitComment = (e) => {\n    e.preventDefault();\n    \n    // Добавляем отладочную информацию\n    console.log('Submitting profile comment:', {\n      commentText,\n      trimmed: commentText.trim(),\n      length: commentText.length,\n      trimmedLength: commentText.trim().length,\n      username,\n      isPublic\n    });\n    \n    if (!commentText || commentText.trim().length === 0) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    \n    const commentData = {\n      username, \n      commentText: commentText.trim(),\n      isPublic \n    };\n    \n    console.log('Calling createProfileCommentMutation with:', commentData);\n    console.log('CommentData types:', {\n      username: typeof commentData.username,\n      commentText: typeof commentData.commentText,\n      isPublic: typeof commentData.isPublic\n    });\n    console.log('Username value:', commentData.username);\n    \n    // Дополнительная проверка\n    if (typeof commentData.username !== 'string') {\n      console.error('Username is not a string in commentData:', commentData.username);\n      toast.error('Ошибка: неправильный формат имени пользователя');\n      return;\n    }\n    \n    createCommentMutation.mutate(commentData);\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingComment(comment.id);\n    setEditText(comment.text);\n  };\n\n  const handleUpdateComment = () => {\n    if (!editText.trim()) {\n      toast.error('Введите текст комментария');\n      return;\n    }\n    updateCommentMutation.mutate({ \n      commentId: editingComment, \n      commentText: editText.trim() \n    });\n  };\n\n  const handleDeleteComment = (commentId) => {\n    if (window.confirm('Вы уверены, что хотите удалить этот комментарий?')) {\n      deleteCommentMutation.mutate(commentId);\n    }\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const canEditComment = (comment) => {\n    return currentUser && comment.author?.login === currentUser;\n  };\n\n  const canDeleteComment = (comment) => {\n    return currentUser && (comment.author?.login === currentUser || username === currentUser);\n  };\n\n  if (isLoading && page === 1) {\n    return (\n      <CommentsContainer>\n        <LoadingSpinner />\n      </CommentsContainer>\n    );\n  }\n\n  const comments = commentsData?.comments || [];\n  const totalComments = commentsData?.pagination?.total || commentsData?.total || 0;\n  const hasMore = comments.length < totalComments;\n\n  return (\n    <CommentsContainer>\n      <CommentsHeader>\n        <div className=\"title\">Комментарии к профилю</div>\n        <div className=\"count\">{totalComments}</div>\n      </CommentsHeader>\n\n      {/* Форма добавления комментария */}\n      {currentUser && !isOwnProfile && (\n        <CommentForm onSubmit={handleSubmitComment}>\n          <FormGroup className=\"comment-input\">\n            <Label>Добавить комментарий</Label>\n            <TextArea\n              placeholder=\"Напишите ваш комментарий к профилю...\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              $minHeight=\"80px\"\n              maxLength={1000}\n            />\n          </FormGroup>\n          \n          <div className=\"form-options\">\n            <div className=\"privacy-toggle\">\n              <input\n                type=\"checkbox\"\n                id=\"comment-privacy\"\n                checked={isPublic}\n                onChange={(e) => setIsPublic(e.target.checked)}\n              />\n              <label htmlFor=\"comment-privacy\" className=\"toggle-label\">\n                {isPublic ? 'Публичный комментарий' : 'Приватный комментарий'}\n              </label>\n            </div>\n            \n            <div style={{ fontSize: '12px', color: '#718096' }}>\n              {commentText.length}/1000 символов\n            </div>\n          </div>\n          \n          <div className=\"form-row\">\n            <Button \n              type=\"submit\" \n              disabled={createCommentMutation.isLoading || !commentText.trim()}\n              $size=\"small\"\n            >\n              <SendIcon />\n              {createCommentMutation.isLoading ? 'Отправка...' : 'Отправить'}\n            </Button>\n          </div>\n        </CommentForm>\n      )}\n\n      {/* Переключатель приватных комментариев (только для владельца профиля) */}\n      {isOwnProfile && (\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>\n            <input\n              type=\"checkbox\"\n              checked={includePrivate}\n              onChange={(e) => setIncludePrivate(e.target.checked)}\n            />\n            <span style={{ fontSize: '14px', color: '#4a5568' }}>\n              Показать приватные комментарии\n            </span>\n          </label>\n        </div>\n      )}\n\n      {/* Список комментариев */}\n      <CommentsList>\n        {comments.length > 0 ? (\n          <AnimatePresence>\n            {comments.map((comment) => (\n              <CommentItem\n                key={comment.id}\n                $isPublic={comment.is_public}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.2 }}\n              >\n                <div className=\"comment-avatar\">\n                  <Avatar \n                    src={comment.author?.avatar ? `/uploads/${comment.author.avatar}` : null}\n                    alt={comment.author?.name || comment.author?.login}\n                    size=\"40px\"\n                  />\n                </div>\n                \n                <div className=\"comment-content\">\n                  <div className=\"comment-header\">\n                    <span className=\"comment-author\">\n                      {comment.author?.name || comment.author?.login}\n                    </span>\n                    <span className=\"comment-time\">\n                      {usersAPI.utils?.formatTimeAgo?.(comment.created_at) || \n                       new Date(comment.created_at).toLocaleDateString()}\n                    </span>\n                    {comment.is_edited && (\n                      <span className=\"edit-indicator\">(отредактировано)</span>\n                    )}\n                    <div className=\"privacy-badge\">\n                      {comment.is_public ? (\n                        <>\n                          <EyeIcon />\n                          Публичный\n                        </>\n                      ) : (\n                        <>\n                          <LockIcon />\n                          Приватный\n                        </>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {editingComment === comment.id ? (\n                    <EditForm>\n                      <TextArea\n                        value={editText}\n                        onChange={(e) => setEditText(e.target.value)}\n                        $minHeight=\"60px\"\n                        maxLength={1000}\n                      />\n                      <div className=\"edit-row\">\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {editText.length}/1000 символов\n                        </div>\n                        <Button \n                          onClick={handleUpdateComment}\n                          disabled={updateCommentMutation.isLoading || !editText.trim()}\n                          $size=\"small\"\n                        >\n                          Сохранить\n                        </Button>\n                        <Button \n                          onClick={() => setEditingComment(null)}\n                          $variant=\"secondary\"\n                          $size=\"small\"\n                        >\n                          Отмена\n                        </Button>\n                      </div>\n                    </EditForm>\n                  ) : (\n                    <div className=\"comment-text\">{comment.text}</div>\n                  )}\n                  \n                  <div className=\"comment-actions\">\n                    {canEditComment(comment) && editingComment !== comment.id && (\n                      <IconButton\n                        onClick={() => handleEditComment(comment)}\n                        $size=\"small\"\n                        $variant=\"secondary\"\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    )}\n                    \n                    {canDeleteComment(comment) && (\n                      <IconButton\n                        onClick={() => handleDeleteComment(comment.id)}\n                        $size=\"small\"\n                        $variant=\"danger\"\n                      >\n                        <TrashIcon />\n                      </IconButton>\n                    )}\n                  </div>\n                </div>\n              </CommentItem>\n            ))}\n          </AnimatePresence>\n        ) : (\n          <EmptyState>\n            <div className=\"icon\">💬</div>\n            <h3>Нет комментариев</h3>\n            <p>Будьте первым, кто оставит комментарий к этому профилю</p>\n          </EmptyState>\n        )}\n      </CommentsList>\n\n      {/* Кнопка \"Загрузить еще\" */}\n      {hasMore && (\n        <LoadMoreButton\n          onClick={handleLoadMore}\n          disabled={isLoading}\n          $variant=\"secondary\"\n        >\n          {isLoading ? 'Загрузка...' : 'Загрузить еще'}\n        </LoadMoreButton>\n      )}\n    </CommentsContainer>\n  );\n};\n\nexport default ProfileComments;\n","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { reactionsAPI } from '../services/api';\n\nconst ReactionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst ReactionsBar = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst ReactionButton = styled(motion.button)`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 8px 12px;\n  border: 2px solid ${props => props.$isActive ? props.$activeColor : '#e2e8f0'};\n  border-radius: 20px;\n  background: ${props => props.$isActive ? props.$activeColor : 'white'};\n  color: ${props => props.$isActive ? 'white' : props.$textColor};\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n  \n  .emoji {\n    font-size: 16px;\n  }\n  \n  .count {\n    font-size: 12px;\n    opacity: 0.9;\n  }\n`;\n\nconst ReactionsStats = styled.div`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  align-items: center;\n  \n  .stat-item {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    font-size: 12px;\n    color: #718096;\n    padding: 4px 8px;\n    background: #f7fafc;\n    border-radius: 12px;\n    \n    .emoji {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst ReactionsModal = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst ReactionsModalContent = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  max-width: 400px;\n  width: 90%;\n  text-align: center;\n  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);\n`;\n\nconst ReactionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 15px;\n  margin: 20px 0;\n`;\n\nconst ReactionOption = styled(motion.button)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  padding: 20px 15px;\n  border: 2px solid #e2e8f0;\n  border-radius: 15px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    border-color: ${props => props.$color};\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n  }\n  \n  .emoji {\n    font-size: 32px;\n  }\n  \n  .label {\n    font-size: 12px;\n    font-weight: 600;\n    color: #4a5568;\n  }\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 20px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n  color: #718096;\n  \n  &:hover {\n    color: #2d3748;\n  }\n`;\n\n// Конфигурация реакций\nconst REACTION_CONFIG = {\n  like: {\n    emoji: '👍',\n    label: 'Нравится',\n    color: '#4caf50',\n    textColor: '#4caf50'\n  },\n  love: {\n    emoji: '❤️',\n    label: 'Любовь',\n    color: '#e91e63',\n    textColor: '#e91e63'\n  },\n  laugh: {\n    emoji: '😂',\n    label: 'Смех',\n    color: '#ff9800',\n    textColor: '#ff9800'\n  },\n  wow: {\n    emoji: '😮',\n    label: 'Удивление',\n    color: '#9c27b0',\n    textColor: '#9c27b0'\n  },\n  sad: {\n    emoji: '😢',\n    label: 'Грусть',\n    color: '#2196f3',\n    textColor: '#2196f3'\n  },\n  angry: {\n    emoji: '😠',\n    label: 'Гнев',\n    color: '#f44336',\n    textColor: '#f44336'\n  }\n};\n\nconst Reactions = ({ objectType, objectId, currentUser, showStats = true }) => {\n  // Проверяем, что все необходимые параметры переданы\n  if (!objectType || !objectId) {\n    return (\n      <ReactionsContainer>\n        <div style={{ textAlign: 'center', padding: '10px', color: '#718096', fontSize: '14px' }}>\n          Ошибка: не указаны параметры для реакций\n        </div>\n      </ReactionsContainer>\n    );\n  }\n  const [showModal, setShowModal] = useState(false);\n  const [selectedReaction, setSelectedReaction] = useState(null);\n  const queryClient = useQueryClient();\n\n  // Получение реакций\n  const { data: reactionsData, isLoading } = useQuery(\n    ['reactions', objectType, objectId],\n    () => reactionsAPI.getObjectReactions(objectType, objectId),\n    {\n      enabled: !!(objectType && objectId), // Запрос выполняется только если есть objectType и objectId\n      onError: (error) => {\n        console.error('Error fetching reactions:', error);\n      }\n    }\n  );\n\n  // Мутации\n  const setReactionMutation = useMutation(\n    (data) => reactionsAPI.setReaction(objectType, objectId, data.reactionType, data.value),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['reactions', objectType, objectId]);\n        toast.success('Реакция добавлена');\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при установке реакции');\n      }\n    }\n  );\n\n  const removeReactionMutation = useMutation(\n    () => reactionsAPI.removeReaction(objectType, objectId),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['reactions', objectType, objectId]);\n        toast.success('Реакция удалена');\n      },\n      onError: (error) => {\n        toast.error(error.response?.data?.message || 'Ошибка при удалении реакции');\n      }\n    }\n  );\n\n  // Обработчики\n  const handleReactionClick = (reactionType) => {\n    if (!currentUser) {\n      toast.error('Войдите в систему, чтобы оставить реакцию');\n      return;\n    }\n\n    const userReaction = reactionsData?.user_reaction;\n    \n    if (userReaction && userReaction.type === reactionType) {\n      // Если нажимаем на ту же реакцию - удаляем её\n      removeReactionMutation.mutate();\n    } else {\n      // Иначе устанавливаем новую реакцию\n      setReactionMutation.mutate({\n        reactionType,\n        value: 1\n      });\n    }\n    \n    setShowModal(false);\n  };\n\n  const openReactionsModal = () => {\n    if (!currentUser) {\n      toast.error('Войдите в систему, чтобы оставить реакцию');\n      return;\n    }\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  if (isLoading) {\n    return <ReactionsContainer>Загрузка реакций...</ReactionsContainer>;\n  }\n\n  const reactions = reactionsData?.reactions || {};\n  const userReaction = reactionsData?.user_reaction;\n  const totalReactions = reactions.total || 0;\n\n  // Получаем топ-3 реакции для отображения\n  const topReactions = Object.entries(reactions)\n    .filter(([key, value]) => key !== 'total' && key !== 'users' && value > 0)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, 3);\n\n  return (\n    <ReactionsContainer>\n      {/* Основная панель реакций */}\n      <ReactionsBar>\n        {/* Кнопка для открытия модала с реакциями */}\n        <ReactionButton\n          onClick={openReactionsModal}\n          $isActive={!!userReaction}\n          $activeColor={userReaction ? REACTION_CONFIG[userReaction.type]?.color : '#e2e8f0'}\n          $textColor={userReaction ? 'white' : '#4a5568'}\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <span className=\"emoji\">\n            {userReaction ? REACTION_CONFIG[userReaction.type]?.emoji : '😊'}\n          </span>\n          <span className=\"label\">\n            {userReaction ? REACTION_CONFIG[userReaction.type]?.label : 'Реагировать'}\n          </span>\n          {totalReactions > 0 && (\n            <span className=\"count\">{totalReactions}</span>\n          )}\n        </ReactionButton>\n\n        {/* Быстрые реакции (топ-3) */}\n        {topReactions.map(([reactionType, count]) => (\n          <ReactionButton\n            key={reactionType}\n            onClick={() => handleReactionClick(reactionType)}\n            $isActive={userReaction?.type === reactionType}\n            $activeColor={REACTION_CONFIG[reactionType]?.color}\n            $textColor={REACTION_CONFIG[reactionType]?.textColor}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <span className=\"emoji\">{REACTION_CONFIG[reactionType]?.emoji}</span>\n            <span className=\"count\">{count}</span>\n          </ReactionButton>\n        ))}\n      </ReactionsBar>\n\n      {/* Статистика реакций */}\n      {showStats && totalReactions > 0 && (\n        <ReactionsStats>\n          {Object.entries(reactions).map(([reactionType, count]) => {\n            if (reactionType === 'total' || reactionType === 'users' || count === 0) return null;\n            \n            return (\n              <div key={reactionType} className=\"stat-item\">\n                <span className=\"emoji\">{REACTION_CONFIG[reactionType]?.emoji}</span>\n                <span>{count}</span>\n              </div>\n            );\n          })}\n        </ReactionsStats>\n      )}\n\n      {/* Модал выбора реакции */}\n      <AnimatePresence>\n        {showModal && (\n          <ReactionsModal\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={closeModal}\n          >\n            <ReactionsModalContent onClick={(e) => e.stopPropagation()}>\n              <CloseButton onClick={closeModal}>&times;</CloseButton>\n              \n              <h3 style={{ margin: '0 0 20px 0', color: '#2d3748' }}>\n                Выберите реакцию\n              </h3>\n              \n              <ReactionsGrid>\n                {Object.entries(REACTION_CONFIG).map(([type, config]) => (\n                  <ReactionOption\n                    key={type}\n                    onClick={() => handleReactionClick(type)}\n                    $color={config.color}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <div className=\"emoji\">{config.emoji}</div>\n                    <div className=\"label\">{config.label}</div>\n                  </ReactionOption>\n                ))}\n              </ReactionsGrid>\n              \n              <p style={{ margin: '20px 0 0 0', fontSize: '14px', color: '#718096' }}>\n                Нажмите на реакцию, чтобы поставить её\n              </p>\n            </ReactionsModalContent>\n          </ReactionsModal>\n        )}\n      </AnimatePresence>\n    </ReactionsContainer>\n  );\n};\n\nexport default Reactions;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useParams, Navigate, useNavigate, useLocation } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { usersAPI, swipeAPI, chatAPI, giftsAPI, ratingAPI, subscriptionsAPI, apiUtils, privacyAPI } from '../services/api';\nimport { LocationSelector } from '../components/Geography';\nimport RatingDisplay from '../components/RatingDisplay';\nimport PhotoComments from '../components/PhotoComments';\nimport ProfileComments from '../components/ProfileComments';\nimport Reactions from '../components/Reactions';\n// Убираем импорт getStatusDisplayName, так как теперь статусы уже русские\nimport {\n  PageContainer,\n  ContentCard,\n  Avatar,\n  Button,\n  IconButton,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  TextArea,\n  Checkbox,\n  LoadingSpinner,\n  Grid,\n  Card,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  CloseIcon,\n  EditIcon,\n  HeartIcon,\n  GiftIcon,\n  StarIcon,\n  MessageIcon,\n  SendIcon,\n  CrownIcon,\n  CreditCardIcon,\n  WalletIcon,\n  CheckIcon,\n  AvatarCropper\n} from '../components/UI';\n\n// Дополнительные иконки\nconst CameraIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"/>\n    <circle cx=\"12\" cy=\"13\" r=\"4\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2 2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\n// Конфигурация подарков\nconst GIFT_CONFIG = {\n  '1': { emoji: '🌹', name: 'Роза', cost: 50 },\n  '2': { emoji: '💐', name: 'Букет цветов', cost: 100 },\n  '3': { emoji: '🍾', name: 'Шампанское', cost: 200 },\n  '4': { emoji: '🎁', name: 'Подарок', cost: 150 },\n  '5': { emoji: '🍽️', name: 'Романтический ужин', cost: 500 },\n  '6': { emoji: '✈️', name: 'Путешествие', cost: 1000 },\n  '7': { emoji: '💎', name: 'Украшение', cost: 800 },\n  '10': { emoji: '🏆', name: 'Эксклюзивный подарок', cost: 3000 }\n};\n\n// Стили\nconst ProfileContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst ProfileHeader = styled.div`\n  position: relative;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  padding: 60px 40px 40px;\n  border-radius: 25px 25px 0 0;\n  color: white;\n  text-align: center;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\") repeat;\n    opacity: 0.3;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 40px 20px 30px;\n  }\n`;\n\nconst AvatarSection = styled.div`\n  position: relative;\n  display: inline-block;\n  margin-bottom: 20px;\n  z-index: 1;\n  text-align: center;\n  \n  /* Центрируем аватарку */\n  .avatar-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n  }\n`;\n\nconst AvatarOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0;\n  transition: all 0.3s ease;\n  z-index: 2;\n  \n  &:hover {\n    opacity: 1;\n    background: rgba(220, 53, 34, 0.8);\n  }\n  \n  svg {\n    color: white;\n    width: 24px;\n    height: 24px;\n  }\n  \n  @media (max-width: 768px) {\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nconst UserInfo = styled.div`\n  position: relative;\n  z-index: 1;\n  \n  h2 {\n    margin: 0 0 8px 0;\n    font-size: 32px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  }\n  \n  p {\n    margin: 0;\n    opacity: 0.9;\n    font-size: 16px;\n  }\n  \n  @media (max-width: 768px) {\n    h2 {\n      font-size: 28px;\n    }\n    \n    p {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  padding: 30px 40px;\n  background: white;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    gap: 10px;\n    flex-wrap: wrap;\n  }\n`;\n\nconst ActionButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 20px;\n  border-radius: 12px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  border: none;\n  \n  &.like {\n    background: linear-gradient(135deg, #e91e63 0%, #f06292 100%);\n    color: white;\n  }\n  \n  &.gift {\n    background: linear-gradient(135deg, #ff9800 0%, #ffb74d 100%);\n    color: white;\n  }\n  \n  &.chat {\n    background: linear-gradient(135deg, #4caf50 0%, #66bb6a 100%);\n    color: white;\n  }\n  \n  &.superlike {\n    background: linear-gradient(135deg, #2196f3 0%, #42a5f5 100%);\n    color: white;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 0;\n  overflow: hidden;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'white'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 16px;\n  transition: all 0.3s ease;\n  border-bottom: ${props => props.$active ? 'none' : '1px solid #e2e8f0'};\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n    font-size: 14px;\n  }\n`;\n\nconst TabContent = styled.div`\n  padding: 40px;\n  background: white;\n  border-radius: 0 0 25px 25px;\n  min-height: 400px;\n  \n  @media (max-width: 768px) {\n    padding: 25px 20px;\n  }\n`;\n\nconst RatingSection = styled.div`\n  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n  border-radius: 15px;\n  padding: 20px;\n  margin: 20px 40px;\n  border: 1px solid #dee2e6;\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n  }\n`;\n\nconst InfoSection = styled.div`\n  margin-bottom: 30px;\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 20px;\n    font-weight: 600;\n    color: #2d3748;\n    border-bottom: 2px solid #e2e8f0;\n    padding-bottom: 8px;\n  }\n`;\n\nconst InfoItem = styled.p`\n  margin: 0 0 8px 0;\n  color: #4a5568;\n  font-size: 15px;\n  \n  strong {\n    color: #2d3748;\n    font-weight: 600;\n  }\n`;\n\nconst ImageGallery = styled(Grid)`\n  margin-top: 30px;\n`;\n\nconst ImageCard = styled(Card)`\n  position: relative;\n  aspect-ratio: 1;\n  overflow: hidden;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n  \n  ${ImageCard}:hover & {\n    transform: scale(1.1);\n  }\n`;\n\nconst ImageOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(220, 53, 34, 0.8) 0%, rgba(255, 107, 88, 0.8) 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  \n  ${ImageCard}:hover & {\n    opacity: 1;\n  }\n`;\n\nconst UploadArea = styled.div`\n  border: 3px dashed #cbd5e0;\n  border-radius: 15px;\n  padding: 60px 30px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  \n  &:hover {\n    border-color: #dc3522;\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst GiftGrid = styled(Grid)`\n  margin-bottom: 20px;\n`;\n\nconst GiftOption = styled(motion.div)`\n  background: white;\n  border: 2px solid ${props => props.$selected ? '#dc3522' : '#e2e8f0'};\n  border-radius: 15px;\n  padding: 15px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    border-color: #dc3522;\n    transform: translateY(-2px);\n  }\n  \n  .emoji {\n    font-size: 32px;\n    margin-bottom: 8px;\n    display: block;\n  }\n  \n  .name {\n    font-size: 14px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 4px;\n  }\n  \n  .cost {\n    font-size: 12px;\n    color: #dc3522;\n    font-weight: 600;\n  }\n`;\n\nconst GiftCard = styled(Card)`\n  background: linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%);\n  border: 2px solid #fed7d7;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 8px 25px rgba(220, 53, 34, 0.15);\n    border-color: #dc3522;\n  }\n`;\n\nconst BalanceSection = styled.div`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 15px;\n  padding: 25px;\n  margin: 20px 40px;\n  color: white;\n  text-align: center;\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n    padding: 20px;\n  }\n`;\n\nconst BalanceTitle = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 20px;\n  font-weight: 600;\n  color: white;\n`;\n\nconst BalanceAmount = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nconst BalanceButton = styled(Button)`\n  background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);\n  color: #2d3748;\n  font-weight: 600;\n  padding: 12px 24px;\n  border-radius: 25px;\n  box-shadow: 0 4px 15px rgba(255, 215, 0, 0.4);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(255, 215, 0, 0.6);\n  }\n`;\n\nconst VipAdSection = styled.div`\n  background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);\n  border-radius: 15px;\n  padding: 25px;\n  margin: 20px 40px;\n  text-align: center;\n  box-shadow: 0 8px 25px rgba(255, 215, 0, 0.3);\n  border: 2px solid #ffd700;\n  \n  @media (max-width: 768px) {\n    margin: 20px 20px;\n    padding: 20px;\n  }\n`;\n\nconst VipAdTitle = styled.h3`\n  margin: 0 0 15px 0;\n  font-size: 22px;\n  font-weight: 700;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n`;\n\nconst VipAdText = styled.p`\n  margin: 0 0 20px 0;\n  font-size: 16px;\n  color: #4a5568;\n  line-height: 1.6;\n`;\n\nconst VipAdButton = styled(Button)`\n  background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);\n  color: white;\n  font-weight: 600;\n  padding: 12px 30px;\n  border-radius: 25px;\n  box-shadow: 0 4px 15px rgba(45, 55, 72, 0.4);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(45, 55, 72, 0.6);\n  }\n`;\n\nconst GiftEmoji = styled.div`\n  font-size: 48px;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nconst GiftSender = styled.div`\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 14px;\n  font-weight: 600;\n  margin: 10px 0;\n  display: inline-block;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n`;\n\nconst GiftMessage = styled.div`\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 10px;\n  padding: 12px;\n  margin: 10px 0;\n  font-style: italic;\n  color: #4a5568;\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AvatarHint = styled.div`\n  position: absolute;\n  bottom: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 8px 12px;\n  border-radius: 8px;\n  font-size: 12px;\n  white-space: nowrap;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  z-index: 3;\n  \n  ${AvatarSection}:hover & {\n    opacity: 1;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 11px;\n    padding: 6px 10px;\n    bottom: -25px;\n  }\n`;\n\nconst Profile = () => {\n  const { login } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryClient = useQueryClient();\n  \n  // Получение параметра tab из URL\n  const searchParams = new URLSearchParams(location.search);\n  const tabFromUrl = searchParams.get('tab');\n  \n  const [activeTab, setActiveTab] = useState('profile');\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showGiftModal, setShowGiftModal] = useState(false);\n  const [selectedGift, setSelectedGift] = useState(null);\n  const [giftMessage, setGiftMessage] = useState('');\n  const [showSuperlikeModal, setShowSuperlikeModal] = useState(false);\n  const [superlikeMessage, setSuperlikeMessage] = useState('');\n\n  // Устанавливаем активную вкладку на основе URL параметра\n  useEffect(() => {\n    if (tabFromUrl && ['profile', 'photos', 'gifts', 'settings'].includes(tabFromUrl)) {\n      setActiveTab(tabFromUrl);\n    }\n  }, [tabFromUrl]);\n\n  const currentUser = apiUtils.getCurrentUser();\n  \n  // Определяем, чей это профиль\n  const isOwnProfile = !login || (currentUser && currentUser.login === login);\n  const targetLogin = isOwnProfile ? currentUser?.login : login;\n\n  // Отладочная информация\n  useEffect(() => {\n    console.log('Profile component debug:', {\n      login,\n      currentUser: apiUtils.getCurrentUser() ? { login: apiUtils.getCurrentUser().login, hasLogin: !!apiUtils.getCurrentUser().login } : null,\n      isOwnProfile,\n      targetLogin,\n      hasTargetLogin: !!targetLogin\n    });\n  }, [login, currentUser, isOwnProfile, targetLogin]);\n  \n  // Состояния\n  // const [activeTab, setActiveTab] = useState('profile');\n  // const [showImageModal, setShowImageModal] = useState(false);\n  // const [selectedImage, setSelectedImage] = useState(null);\n  // const [showGiftModal, setShowGiftModal] = useState(false);\n  // const [showSuperlikeModal, setShowSuperlikeModal] = useState(false);\n  // const [selectedGift, setSelectedGift] = useState(null);\n  // const [giftMessage, setGiftMessage] = useState('');\n  // const [superlikeMessage, setSuperlikeMessage] = useState('');\n\n  // Получение полученных подарков\n  const { data: receivedGiftsData = { gifts: [] } } = useQuery(\n    ['receivedGifts', targetLogin],\n    () => giftsAPI.getReceivedGifts(20, 0, targetLogin),\n    {\n      enabled: !!targetLogin,\n      onError: (error) => {\n        console.error('Ошибка при получении подарков:', error);\n      }\n    }\n  );\n\n  // Получение настроек приватности\n  const { data: privacySettings } = useQuery(\n    ['privacySettings'],\n    () => privacyAPI.getSettings(),\n    {\n      enabled: isOwnProfile,\n      onError: (error) => {\n        console.error('Ошибка при получении настроек приватности:', error);\n      }\n    }\n  );\n\n  // Отладочная информация\n  useEffect(() => {\n    if (receivedGiftsData) {\n      console.log('Received gifts data:', receivedGiftsData);\n      console.log('Received gifts:', receivedGiftsData.gifts);\n    }\n  }, [receivedGiftsData]);\n\n  // Отладочная информация для подписки\n  useEffect(() => {\n    if (subscriptionStatus) {\n      console.log('Subscription status:', subscriptionStatus);\n    }\n  }, [subscriptionStatus]);\n\n  const avatarInputRef = useRef();\n  const imagesInputRef = useRef();\n\n  // Добавляем состояние для кропа аватарки\n  const [showAvatarCropper, setShowAvatarCropper] = useState(false);\n  const [avatarFileToCrop, setAvatarFileToCrop] = useState(null);\n\n  // Функция для перехода в профиль отправителя подарка\n  const handleGiftSenderClick = (senderLogin) => {\n    if (senderLogin && senderLogin !== currentUser?.login) {\n      navigate(`/profile/${senderLogin}`);\n    }\n  };\n\n  // Проверка авторизации\n  if (!currentUser) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Дополнительная проверка targetLogin\n  if (!targetLogin) {\n    console.warn('Profile: targetLogin is undefined', { login, currentUser, isOwnProfile });\n    return (\n      <ProfileContainer>\n        <ContentCard $maxWidth=\"600px\">\n          <div style={{ textAlign: 'center', padding: '60px 20px' }}>\n            <h2>Ошибка</h2>\n            <p>Не удалось определить профиль для просмотра</p>\n            <p style={{ fontSize: '14px', color: '#718096', marginTop: '10px' }}>\n              Debug: login={String(login)}, currentUser={currentUser ? 'exists' : 'null'}, isOwnProfile={String(isOwnProfile)}\n            </p>\n            <Button onClick={() => navigate('/catalog')}>\n              Вернуться к каталогу\n            </Button>\n          </div>\n        </ContentCard>\n      </ProfileContainer>\n    );\n  }\n\n  // Получение профиля\n  const { data: profile, isLoading, error } = useQuery(\n    ['profile', targetLogin],\n    () => usersAPI.getProfile(targetLogin),\n    {\n      enabled: !!targetLogin,\n      onError: (error) => {\n        console.error('Profile API error:', {\n          targetLogin,\n          error: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        \n        if (error.response?.status === 404) {\n          toast.error('Пользователь не найден');\n          navigate('/catalog');\n        } else {\n          toast.error(`Ошибка загрузки профиля: ${error.message}`);\n        }\n      }\n    }\n  );\n\n  // Получение статуса мэтча (только для чужих профилей)\n  const { data: matchStatus } = useQuery(\n    ['match-status', targetLogin],\n    () => chatAPI.getMatchStatus(targetLogin),\n    {\n      enabled: !isOwnProfile && !!targetLogin,\n      retry: false,\n      onError: (error) => {\n        console.error('Match status API error:', {\n          targetLogin,\n          error: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n      }\n    }\n  );\n\n  // Получение статуса подписки (только для своего профиля)\n  const { data: subscriptionStatus, isLoading: isLoadingSubscription } = useQuery(\n    ['subscription-status'],\n    subscriptionsAPI.getStatus,\n    {\n      enabled: isOwnProfile,\n      onError: (error) => {\n        console.error('Subscription status API error:', {\n          error: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n      }\n    }\n  );\n\n  // Form для редактирования профиля\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors }\n  } = useForm({\n    values: profile\n  });\n\n  // Мутации\n  const updateProfileMutation = useMutation(usersAPI.updateProfile, {\n    onSuccess: () => {\n      toast.success('Профиль обновлен!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      \n      if (window.refreshNavigation) {\n        window.refreshNavigation();\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const uploadAvatarMutation = useMutation(usersAPI.uploadAvatar, {\n    onSuccess: () => {\n      toast.success('Аватар обновлен!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      \n      if (window.refreshNavigation) {\n        window.refreshNavigation();\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const uploadImageMutation = useMutation(usersAPI.uploadImages, {\n    onSuccess: (data) => {\n      console.log('Upload success:', data);\n      toast.success('Фото добавлено!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n      // Принудительно обновляем профиль\n      if (isOwnProfile) {\n        queryClient.invalidateQueries(['profile', currentUser?.login]);\n      }\n    },\n    onError: (error) => {\n      console.error('Upload error:', error);\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteImageMutation = useMutation(usersAPI.deleteImage, {\n    onSuccess: () => {\n      toast.success('Фото удалено!');\n      queryClient.invalidateQueries(['profile']);\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const likeMutation = useMutation(swipeAPI.like, {\n    onSuccess: (data) => {\n      if (data.result === 'reciprocal_like') {\n        toast.success('🎉 Взаимная симпатия! Теперь можете общаться');\n        if (targetLogin) {\n          queryClient.invalidateQueries(['match-status', targetLogin]);\n        }\n      } else {\n        toast.success('Лайк отправлен!');\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const superlikeMutation = useMutation(swipeAPI.superlike, {\n    onSuccess: () => {\n      toast.success('Суперлайк отправлен!');\n      setShowSuperlikeModal(false);\n      setSuperlikeMessage('');\n      if (targetLogin) {\n        queryClient.invalidateQueries(['match-status', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Мутация для отправки подарка\n  const sendGiftMutation = useMutation(giftsAPI.sendGift, {\n    onSuccess: (data) => {\n      toast.success('Подарок успешно отправлен!');\n      setShowGiftModal(false);\n      setSelectedGift(null);\n      setGiftMessage('');\n      \n      // Обновляем данные профиля\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Мутация для сохранения настроек приватности\n  const privacyMutation = useMutation(privacyAPI.updateSettings, {\n    onSuccess: (data) => {\n      toast.success('Настройки приватности обновлены');\n      \n      // Обновляем данные пользователя\n      queryClient.invalidateQueries(['currentUser']);\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Регистрация посещения\n  const visitMutation = useMutation(usersAPI.registerVisit, {\n    onSuccess: () => {\n      if (targetLogin) {\n        queryClient.invalidateQueries(['profile', targetLogin]);\n      }\n    },\n    onError: (error) => {\n      console.warn('Visit registration failed:', error);\n    }\n  });\n\n  // Эффекты\n  useEffect(() => {\n    if (!isOwnProfile && targetLogin && profile) {\n      visitMutation.mutate(targetLogin);\n    }\n  }, [targetLogin, profile, isOwnProfile]);\n\n  // Обработчики\n  const onSubmit = (data) => {\n    updateProfileMutation.mutate(data);\n  };\n\n  // Обновляем функцию загрузки аватарки\n  const handleAvatarUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Проверяем, что это изображение\n      if (!file.type.startsWith('image/')) {\n        toast.error('Пожалуйста, выберите файл изображения');\n        return;\n      }\n      \n      // Открываем кроппер\n      setAvatarFileToCrop(file);\n      setShowAvatarCropper(true);\n      \n      // Очищаем input\n      event.target.value = '';\n    }\n  };\n\n  // Добавляем функцию обработки обрезанной аватарки\n  const handleAvatarCrop = (croppedFile) => {\n    const formData = new FormData();\n    formData.append('avatar', croppedFile);\n    uploadAvatarMutation.mutate(formData);\n  };\n\n  const handleImageUpload = (event) => {\n    const files = Array.from(event.target.files);\n    if (files.length > 0) {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('images', file);\n      });\n      uploadImageMutation.mutate(formData);\n      \n      // Очищаем input после загрузки\n      event.target.value = '';\n    }\n  };\n\n  const handleDeleteImage = (imageId) => {\n    if (window.confirm('Удалить это фото?')) {\n      deleteImageMutation.mutate(imageId);\n    }\n  };\n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    setShowImageModal(true);\n  };\n\n  const handleLike = () => {\n    if (likeMutation.isLoading) return;\n    \n    if (!targetLogin) {\n      toast.error('Ошибка: не указан получатель лайка');\n      return;\n    }\n    \n    likeMutation.mutate(targetLogin);\n  };\n\n  const handleSuperlike = () => {\n    if (!superlikeMessage.trim()) {\n      toast.error('Введите сообщение для суперлайка');\n      return;\n    }\n    \n    if (!targetLogin) {\n      toast.error('Ошибка: не указан получатель суперлайка');\n      return;\n    }\n    \n    superlikeMutation.mutate({\n      targetUser: targetLogin,\n      message: superlikeMessage ? superlikeMessage.trim() : ''\n    });\n  };\n\n  // Функция для отправки подарка\n  const handleSendGift = async () => {\n    if (!selectedGift) {\n      toast.error('Выберите подарок');\n      return;\n    }\n\n    try {\n      await sendGiftMutation.mutateAsync({\n        to_user: targetLogin,\n        gift_type: selectedGift,\n        message: giftMessage\n      });\n    } catch (error) {\n      console.error('Ошибка при отправке подарка:', error);\n    }\n  };\n\n  // Функция для сохранения настроек приватности\n  const handlePrivacySubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const currentSettings = queryClient.getQueryData(['privacySettings']);\n      if (currentSettings) {\n        await privacyMutation.mutateAsync({\n          privacy: currentSettings.privacy,\n          notifications: currentSettings.notifications\n        });\n      }\n    } catch (error) {\n      console.error('Ошибка при сохранении настроек:', error);\n    }\n  };\n\n  const handleGoToChat = () => {\n    if (!targetLogin) {\n      toast.error('Ошибка: не указан пользователь для чата');\n      return;\n    }\n    \n    navigate(`/chat/${targetLogin}`);\n  };\n\n  if (isLoading) {\n    return (\n      <ProfileContainer>\n        <LoadingSpinner />\n      </ProfileContainer>\n    );\n  }\n\n  if (error || !profile) {\n    return (\n      <ProfileContainer>\n        <ContentCard $maxWidth=\"600px\">\n          <div style={{ textAlign: 'center', padding: '60px 20px' }}>\n            <h2>Профиль не найден</h2>\n            <p>Пользователь {targetLogin} не существует или был удален</p>\n            <Button onClick={() => navigate('/catalog')}>\n              Вернуться к каталогу\n            </Button>\n          </div>\n        </ContentCard>\n      </ProfileContainer>\n    );\n  }\n\n  // Проверяем наличие взаимного мэтча\n  const hasMatch = matchStatus?.hasMatch || false;\n  const hasUserLiked = matchStatus?.userHasLiked || false;\n\n  return (\n    <ProfileContainer>\n      <ContentCard $maxWidth=\"1000px\" $padding=\"0\">\n        <ProfileHeader>\n          <AvatarSection>\n            <div className=\"avatar-container\">\n              <Avatar\n                $src={profile.ava ? `/uploads/${profile.ava}` : ''}\n                $size=\"120px\"\n                $fontSize=\"48px\"\n                $clickable={isOwnProfile}\n              >\n                {!profile.ava && profile.login?.charAt(0).toUpperCase()}\n              </Avatar>\n              {isOwnProfile && (\n                <>\n                  <AvatarOverlay onClick={() => avatarInputRef.current?.click()}>\n                    <CameraIcon />\n                  </AvatarOverlay>\n                  <HiddenInput\n                    ref={avatarInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleAvatarUpload}\n                  />\n                  <AvatarHint>\n                    Нажмите для загрузки аватарки\n                  </AvatarHint>\n                </>\n              )}\n            </div>\n          </AvatarSection>\n          \n          <UserInfo>\n            <h2>@{profile.login}</h2>\n            <p>{profile.city} • {profile.status} {profile.distance > 0 && `• ${profile.distance}км от вас`}</p>\n          </UserInfo>\n        </ProfileHeader>\n\n        {/* Секция баланса (только для своего профиля) */}\n        {isOwnProfile && (\n          <BalanceSection>\n            <BalanceTitle>💰 Ваш баланс</BalanceTitle>\n            <BalanceAmount>{profile.balance || 0} 🦊</BalanceAmount>\n            <BalanceButton onClick={() => navigate('/balance-topup')}>\n              Пополнить баланс\n            </BalanceButton>\n          </BalanceSection>\n        )}\n\n        {/* Кнопки действий (только для чужих профилей) */}\n        {!isOwnProfile && (\n          <ActionsContainer>\n            <ActionButton \n              className=\"gift\" \n              onClick={() => setShowGiftModal(true)}\n            >\n              <GiftIcon />\n              Подарок\n            </ActionButton>\n            \n            {hasMatch ? (\n              <ActionButton\n                className=\"chat\"\n                onClick={handleGoToChat}\n              >\n                <MessageIcon />\n                Написать\n              </ActionButton>\n            ) : !hasUserLiked ? (\n              <>\n                <ActionButton \n                  className=\"like\" \n                  onClick={handleLike}\n                  disabled={likeMutation.isLoading}\n                >\n                  <HeartIcon />\n                  {likeMutation.isLoading ? 'Отправляем...' : 'Лайк'}\n                </ActionButton>\n                \n                <ActionButton \n                  className=\"superlike\" \n                  onClick={() => setShowSuperlikeModal(true)}\n                >\n                  <StarIcon />\n                  Суперлайк\n                </ActionButton>\n              </>\n            ) : null}\n          </ActionsContainer>\n        )}\n\n        {/* Интеграция рейтинговой системы */}\n        {!isOwnProfile && (\n          <RatingSection>\n                        <RatingDisplay\n              targetUser={targetLogin}\n              onRatingSubmit={() => {\n                if (targetLogin) {\n                  queryClient.invalidateQueries(['profile', targetLogin]);\n                }\n              }}\n            />\n          </RatingSection>\n        )}\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'profile'}\n            onClick={() => setActiveTab('profile')}\n          >\n            Профиль\n          </Tab>\n          <Tab\n            $active={activeTab === 'photos'}\n            onClick={() => setActiveTab('photos')}\n          >\n            Фотографии\n          </Tab>\n          <Tab\n            $active={activeTab === 'gifts'}\n            onClick={() => setActiveTab('gifts')}\n          >\n                              🎁 Подарки {receivedGiftsData.gifts && receivedGiftsData.gifts.length > 0 && `(${receivedGiftsData.gifts.length})`}\n          </Tab>\n          {isOwnProfile && (\n            <Tab\n              $active={activeTab === 'settings'}\n              onClick={() => setActiveTab('settings')}\n            >\n              Настройки\n            </Tab>\n          )}\n        </TabsContainer>\n\n        <TabContent>\n          {activeTab === 'profile' && (\n            <div>\n              {isOwnProfile ? (\n                <>\n                  <Form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup>\n                      <Label>Имя</Label>\n                      <Input\n                        {...register('name')}\n                        placeholder=\"Ваше имя\"\n                      />\n                    </FormGroup>\n\n                    <LocationSelector\n                      countryValue={watch('country')}\n                      cityValue={watch('city')}\n                      onCountryChange={(value) => {\n                        setValue('country', value);\n                        clearErrors('country');\n                        if (watch('city')) {\n                          setValue('city', '');\n                          clearErrors('city');\n                        }\n                      }}\n                      onCityChange={(value) => {\n                        setValue('city', value);\n                        clearErrors('city');\n                      }}\n                      countryError={errors.country?.message}\n                      cityError={errors.city?.message}\n                      required={true}\n                      showValidation={true}\n                      layout=\"side-by-side\"\n                    />\n\n                    <FormGroup>\n                      <Label>О себе</Label>\n                      <TextArea\n                        {...register('info')}\n                        placeholder=\"Расскажите о себе...\"\n                        $minHeight=\"120px\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Label>Что ищете</Label>\n                      <TextArea\n                        {...register('looking_for')}\n                        placeholder=\"Опишите, кого или что вы ищете...\"\n                        $minHeight=\"120px\"\n                      />\n                    </FormGroup>\n\n                    <Button\n                      type=\"submit\"\n                      disabled={updateProfileMutation.isLoading}\n                    >\n                      {updateProfileMutation.isLoading ? 'Сохранение...' : 'Сохранить изменения'}\n                    </Button>\n                  </Form>\n                  \n                  {/* Реклама подписки (только для своего профиля и только если нет активной подписки) */}\n                  {!isLoadingSubscription && (!subscriptionStatus?.has_subscription || subscriptionStatus?.plan === 'free') && (\n                    <VipAdSection>\n                      <VipAdTitle>\n                        👑 \n                        Переходите на подписку!\n                      </VipAdTitle>\n                      <VipAdText>\n                        Получите эксклюзивные возможности: больше лайков, \n                        приоритет в поиске, расширенная статистика и многое другое!\n                        Доступны планы VIP и PREMIUM.\n                      </VipAdText>\n                      <VipAdButton onClick={() => navigate('/subscriptions')}>\n                        Перейти к подписке\n                      </VipAdButton>\n                    </VipAdSection>\n                  )}\n\n                  {/* Информация о текущей подписке (если есть активная подписка) */}\n                  {!isLoadingSubscription && subscriptionStatus?.has_subscription && subscriptionStatus?.plan !== 'free' && (\n                    <VipAdSection style={{ \n                      background: 'linear-gradient(135deg, #48bb78 0%, #38a169 100%)',\n                      borderColor: '#48bb78'\n                    }}>\n                      <VipAdTitle style={{ color: 'white' }}>\n                        👑 \n                        У вас активна {subscriptionStatus.plan === 'vip' ? 'VIP' : 'PREMIUM'} подписка!\n                      </VipAdTitle>\n                      <VipAdText style={{ color: 'white' }}>\n                        Ваша подписка активна до {new Date(subscriptionStatus.expires_at).toLocaleDateString('ru-RU')}.\n                        {subscriptionStatus.auto_renew && ' Автопродление включено.'}\n                      </VipAdText>\n                      <VipAdButton \n                        onClick={() => navigate('/subscriptions')}\n                        style={{\n                          background: 'linear-gradient(135deg, #2d3748 0%, #4a5568 100%)',\n                          color: 'white'\n                        }}\n                      >\n                        Управление подпиской\n                      </VipAdButton>\n                    </VipAdSection>\n                  )}\n\n                  {/* Индикатор загрузки статуса подписки */}\n                  {isLoadingSubscription && (\n                    <VipAdSection style={{ \n                      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n                      borderColor: '#cbd5e0'\n                    }}>\n                      <VipAdTitle style={{ color: '#4a5568' }}>\n                        ⏳ \n                        Проверяем статус подписки...\n                      </VipAdTitle>\n                      <VipAdText style={{ color: '#718096' }}>\n                        Загружаем информацию о вашей подписке\n                      </VipAdText>\n                    </VipAdSection>\n                  )}\n                </>\n              ) : (\n                <div>\n                  <InfoSection>\n                    <h3>Основная информация</h3>\n                    <InfoItem><strong>Страна:</strong> {profile.country}</InfoItem>\n                    <InfoItem><strong>Город:</strong> {profile.city}</InfoItem>\n                    <InfoItem><strong>Статус:</strong> {profile.status}</InfoItem>\n                    {profile.distance > 0 && (\n                      <InfoItem><strong>Расстояние:</strong> {profile.distance} км от вас</InfoItem>\n                    )}\n                  </InfoSection>\n\n                  {/* Показываем данные партнера для пар */}\n                  {profile.isCouple && profile.partnerData && (\n                    <InfoSection>\n                      <h3>👫 Данные пары</h3>\n                      <div style={{ \n                        display: 'grid', \n                        gridTemplateColumns: '1fr 1fr', \n                        gap: '15px',\n                        padding: '15px',\n                        background: 'rgba(220, 53, 34, 0.05)',\n                        borderRadius: '10px',\n                        border: '1px solid rgba(220, 53, 34, 0.1)'\n                      }}>\n                        <div>\n                          <h4 style={{ margin: '0 0 10px 0', color: '#dc3522', fontSize: '16px' }}>👨 Мужчина</h4>\n                          {profile.partnerData.manDate && (\n                            <InfoItem><strong>Дата рождения:</strong> {new Date(profile.partnerData.manDate).toLocaleDateString('ru-RU')}</InfoItem>\n                          )}\n                          {profile.partnerData.manHeight && (\n                            <InfoItem><strong>Рост:</strong> {profile.partnerData.manHeight} см</InfoItem>\n                          )}\n                          {profile.partnerData.manWeight && (\n                            <InfoItem><strong>Вес:</strong> {profile.partnerData.manWeight} кг</InfoItem>\n                          )}\n                          {profile.partnerData.manSmoking && (\n                            <InfoItem><strong>Курение:</strong> {profile.partnerData.manSmoking}</InfoItem>\n                          )}\n                          {profile.partnerData.manAlko && (\n                            <InfoItem><strong>Алкоголь:</strong> {profile.partnerData.manAlko}</InfoItem>\n                          )}\n                        </div>\n                        <div>\n                          <h4 style={{ margin: '0 0 10px 0', color: '#dc3522', fontSize: '16px' }}>👩 Женщина</h4>\n                          {profile.partnerData.womanDate && (\n                            <InfoItem><strong>Дата рождения:</strong> {new Date(profile.partnerData.womanDate).toLocaleDateString('ru-RU')}</InfoItem>\n                          )}\n                          {profile.partnerData.womanHeight && (\n                            <InfoItem><strong>Рост:</strong> {profile.partnerData.womanHeight} см</InfoItem>\n                          )}\n                          {profile.partnerData.womanWeight && (\n                            <InfoItem><strong>Вес:</strong> {profile.partnerData.womanWeight} кг</InfoItem>\n                          )}\n                          {profile.partnerData.womanSmoking && (\n                            <InfoItem><strong>Курение:</strong> {profile.partnerData.womanSmoking}</InfoItem>\n                          )}\n                          {profile.partnerData.womanAlko && (\n                            <InfoItem><strong>Алкоголь:</strong> {profile.partnerData.womanAlko}</InfoItem>\n                          )}\n                        </div>\n                      </div>\n                    </InfoSection>\n                  )}\n\n                  {/* Дополнительная информация */}\n                  {(profile.height || profile.weight || profile.smoking || profile.alko) && (\n                    <InfoSection>\n                      <h3>Дополнительная информация</h3>\n                      {profile.height && <InfoItem><strong>Рост:</strong> {profile.height} см</InfoItem>}\n                      {profile.weight && <InfoItem><strong>Вес:</strong> {profile.weight} кг</InfoItem>}\n                      {profile.smoking && <InfoItem><strong>Отношение к курению:</strong> {profile.smoking}</InfoItem>}\n                      {profile.alko && <InfoItem><strong>Отношение к алкоголю:</strong> {profile.alko}</InfoItem>}\n                    </InfoSection>\n                  )}\n\n                  {/* Предпочтения в поиске */}\n                  {(profile.searchStatus || profile.searchAge || profile.location) && (\n                    <InfoSection>\n                      <h3>Что ищет</h3>\n                      {profile.searchStatus && <InfoItem><strong>Статус:</strong> {profile.searchStatus}</InfoItem>}\n                      {profile.searchAge && <InfoItem><strong>Возраст:</strong> {profile.searchAge}</InfoItem>}\n                      {profile.location && <InfoItem><strong>Места для встреч:</strong> {profile.location}</InfoItem>}\n                    </InfoSection>\n                  )}\n\n                  {profile.info && (\n                    <InfoSection>\n                      <h3>О пользователе</h3>\n                      <InfoItem>{profile.info}</InfoItem>\n                    </InfoSection>\n                  )}\n\n                  {/* Подарки (для всех профилей) */}\n                  {receivedGiftsData.gifts && receivedGiftsData.gifts.length > 0 && (\n                    <InfoSection>\n                      <h3>🎁 Полученные подарки</h3>\n                      <div style={{ \n                        display: 'grid', \n                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', \n                        gap: '15px',\n                        marginTop: '15px'\n                      }}>\n                        {receivedGiftsData.gifts.slice(0, 6).map((gift, index) => (\n                          <div key={index} style={{\n                            background: 'linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%)',\n                            border: '2px solid #fed7d7',\n                            borderRadius: '12px',\n                            padding: '15px',\n                            textAlign: 'center',\n                            transition: 'all 0.3s ease'\n                          }}>\n                            <div style={{ fontSize: '32px', marginBottom: '8px' }}>\n                              {GIFT_CONFIG[gift.gift_type]?.emoji || '🎁'}\n                            </div>\n                            <div style={{ \n                              fontSize: '12px', \n                              color: '#dc3522', \n                              fontWeight: '600',\n                              marginBottom: '5px'\n                            }}>\n                              {GIFT_CONFIG[gift.gift_type]?.name || 'Подарок'}\n                            </div>\n                            {gift.message && (\n                              <div style={{ \n                                fontSize: '11px', \n                                color: '#4a5568', \n                                fontStyle: 'italic',\n                                marginBottom: '5px'\n                              }}>\n                                \"{gift.message}\"\n                              </div>\n                            )}\n                            <div style={{ \n                              fontSize: '10px', \n                              color: '#718096'\n                            }}>\n                              {new Date(gift.created_at).toLocaleDateString('ru-RU')}\n                            </div>\n                          </div>\n                        ))}\n                        {receivedGiftsData.gifts && receivedGiftsData.gifts.length > 6 && (\n                          <div style={{\n                            background: 'rgba(220, 53, 34, 0.1)',\n                            border: '2px dashed #dc3522',\n                            borderRadius: '12px',\n                            padding: '15px',\n                            textAlign: 'center',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            cursor: 'pointer'\n                          }} onClick={() => setActiveTab('gifts')}>\n                            <div style={{ color: '#dc3522', fontSize: '14px', fontWeight: '600' }}>\n                              +{receivedGiftsData.gifts.length - 6} еще\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </InfoSection>\n                  )}\n                  \n                  {/* Комментарии к профилю */}\n                  <div style={{ marginTop: '30px' }}>\n                    <ProfileComments \n                      username={login} \n                      currentUser={currentUser?.login}\n                      isOwnProfile={isOwnProfile}\n                    />\n                  </div>\n                  \n                  {/* Реакции на профиль */}\n                  <div style={{ marginTop: '20px' }}>\n                    <Reactions \n                      objectType=\"profile\" \n                      objectId={login} \n                      currentUser={currentUser?.login}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'photos' && (\n            <div>\n              {isOwnProfile && (\n                <>\n                  <UploadArea onClick={() => imagesInputRef.current?.click()}>\n                    <div style={{ fontSize: '48px', marginBottom: '15px', opacity: 0.6 }}>📸</div>\n                    <h4 style={{ margin: '0 0 8px 0', color: '#2d3748', fontSize: '18px' }}>Загрузить фотографии</h4>\n                    <p style={{ margin: 0, color: '#718096', fontSize: '14px' }}>\n                      Нажмите, чтобы выбрать файлы. Поддерживаются JPG, PNG. Максимум 5MB на файл.\n                    </p>\n                  </UploadArea>\n                  \n                  <HiddenInput\n                    ref={imagesInputRef}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleImageUpload}\n                  />\n                </>\n              )}\n\n\n\n              <ImageGallery $columns=\"repeat(auto-fill, minmax(200px, 1fr))\" $gap=\"20px\">\n                {profile?.images && Array.isArray(profile.images) && profile.images.map((image, index) => (\n                  <ImageCard key={index} onClick={() => handleImageClick(image)}>\n                    <Image src={`/uploads/${image}`} alt={`Фото ${index + 1}`} />\n                    {isOwnProfile && (\n                      <ImageOverlay>\n                        <IconButton\n                          $variant=\"danger\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDeleteImage(image);\n                          }}\n                        >\n                          <TrashIcon />\n                        </IconButton>\n                      </ImageOverlay>\n                    )}\n                  </ImageCard>\n                ))}\n              </ImageGallery>\n              \n              {/* Комментарии к фотографиям */}\n              {profile?.images && Array.isArray(profile.images) && profile.images.length > 0 && (\n                <div style={{ marginTop: '30px' }}>\n                  <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                    Комментарии к фотографиям\n                  </h3>\n                  {profile.images.map((image, index) => (\n                    <div key={index} style={{ marginBottom: '30px' }}>\n                      <div style={{ \n                        display: 'flex', \n                        alignItems: 'center', \n                        gap: '15px', \n                        marginBottom: '15px',\n                        padding: '15px',\n                        background: '#f7fafc',\n                        borderRadius: '12px'\n                      }}>\n                        <img \n                          src={`/uploads/${image}`} \n                          alt={`Фото ${index + 1}`}\n                          style={{\n                            width: '80px',\n                            height: '80px',\n                            objectFit: 'cover',\n                            borderRadius: '8px',\n                            border: '2px solid #e2e8f0'\n                          }}\n                        />\n                        <div>\n                          <h4 style={{ margin: '0 0 5px 0', color: '#2d3748' }}>\n                            Фото {index + 1}\n                          </h4>\n                          <p style={{ margin: 0, color: '#718096', fontSize: '14px' }}>\n                            Нажмите на фото для просмотра\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <PhotoComments \n                        filename={image} \n                        currentUser={currentUser?.login}\n                      />\n                      \n                      {/* Реакции на фотографию */}\n                      <div style={{ marginTop: '20px' }}>\n                        <Reactions \n                          objectType=\"image\" \n                          objectId={image} \n                          currentUser={currentUser?.login}\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'gifts' && (\n            <div>\n              <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                🎁 Подарки\n              </h3>\n              \n                                {receivedGiftsData.gifts && receivedGiftsData.gifts.length === 0 ? (\n                <div style={{ textAlign: 'center', padding: '40px 20px', color: '#718096' }}>\n                  <div style={{ fontSize: '64px', marginBottom: '20px', opacity: 0.5 }}>🎁</div>\n                  <h4 style={{ margin: '0 0 10px 0', color: '#2d3748' }}>\n                    {isOwnProfile ? 'Вы пока не получили подарков' : 'Пользователь пока не получил подарков'}\n                  </h4>\n                  <p style={{ margin: 0, fontSize: '14px' }}>\n                    {isOwnProfile \n                      ? 'Подарки появятся здесь, когда кто-то отправит их вам'\n                      : 'Подарки появятся здесь, когда кто-то отправит их пользователю'\n                    }\n                  </p>\n                </div>\n              ) : (\n                <>\n                  {/* Статистика подарков */}\n                  <div style={{ \n                    background: 'linear-gradient(135deg, #fff5f5 0%, #fed7d7 100%)',\n                    border: '2px solid #fed7d7',\n                    borderRadius: '15px',\n                    padding: '20px',\n                    marginBottom: '25px',\n                    textAlign: 'center'\n                  }}>\n                    <h4 style={{ margin: '0 0 15px 0', color: '#dc3522' }}>\n                      📊 Статистика подарков\n                    </h4>\n                    <div style={{ \n                      display: 'grid', \n                      gridTemplateColumns: 'repeat(auto-fit, minmax(120px, 1fr))', \n                      gap: '15px'\n                    }}>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {receivedGiftsData.gifts ? receivedGiftsData.gifts.length : 0}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>Всего получено</div>\n                      </div>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {receivedGiftsData.gifts ? receivedGiftsData.gifts.filter(g => g.message).length : 0}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>С сообщениями</div>\n                      </div>\n                      <div>\n                        <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#dc3522' }}>\n                          {receivedGiftsData.gifts ? new Set(receivedGiftsData.gifts.map(g => g.from_user)).size : 0}\n                        </div>\n                        <div style={{ fontSize: '12px', color: '#4a5568' }}>Отправителей</div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Список подарков */}\n                  <Grid $columns=\"repeat(auto-fill, minmax(280px, 1fr))\" $gap=\"20px\">\n                    {receivedGiftsData.gifts && receivedGiftsData.gifts.map((gift, index) => (\n                      <GiftCard key={index}>\n                        <GiftEmoji>{GIFT_CONFIG[gift.gift_type]?.emoji || '🎁'}</GiftEmoji>\n                        <GiftSender onClick={() => handleGiftSenderClick(gift.from_user)}>\n                          {gift.from_user}\n                        </GiftSender>\n                        <GiftMessage>{gift.message || 'Нет сообщения'}</GiftMessage>\n                        <p style={{ margin: '0 0 10px 0', color: '#4a5568', fontSize: '14px' }}>\n                          Тип: {GIFT_CONFIG[gift.gift_type]?.name || 'Неизвестный подарок'}\n                        </p>\n                        <p style={{ margin: '0 0 10px 0', color: '#4a5568', fontSize: '14px' }}>\n                          Дата: {new Date(gift.created_at).toLocaleDateString('ru-RU')}\n                        </p>\n                      </GiftCard>\n                    ))}\n                  </Grid>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'settings' && isOwnProfile && (\n            <div>\n              <InfoSection>\n                <h3>Настройки профиля</h3>\n                \n                <Form onSubmit={handlePrivacySubmit}>\n                  <FormGroup>\n                    <Label>Приватность</Label>\n                    \n                    <Checkbox\n                      label=\"Анонимные посещения профилей\"\n                      checked={privacySettings?.privacy?.anonymous_visits || false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            anonymous_visits: e.target.checked\n                          }\n                        };\n                        // Обновляем локальное состояние\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Показывать статус онлайн\"\n                      checked={privacySettings?.privacy?.show_online_status !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            show_online_status: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Показывать время последнего посещения\"\n                      checked={privacySettings?.privacy?.show_last_seen !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            show_last_seen: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Разрешить сообщения от всех\"\n                      checked={privacySettings?.privacy?.allow_messages !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            allow_messages: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Разрешить подарки от всех\"\n                      checked={privacySettings?.privacy?.allow_gifts !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            allow_gifts: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Разрешить оценки профиля\"\n                      checked={privacySettings?.privacy?.allow_ratings !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            allow_ratings: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Разрешить комментарии\"\n                      checked={privacySettings?.privacy?.allow_comments !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          privacy: {\n                            ...privacySettings?.privacy,\n                            allow_comments: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                  </FormGroup>\n                  \n                  <FormGroup>\n                    <Label>Уведомления</Label>\n                    \n                    <Checkbox\n                      label=\"Новые мэтчи\"\n                      checked={privacySettings?.notifications?.new_matches !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          notifications: {\n                            ...privacySettings?.notifications,\n                            new_matches: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Сообщения\"\n                      checked={privacySettings?.notifications?.messages !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          notifications: {\n                            ...privacySettings?.notifications,\n                            messages: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Лайки\"\n                      checked={privacySettings?.notifications?.likes !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          notifications: {\n                            ...privacySettings?.notifications,\n                            likes: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Подарки\"\n                      checked={privacySettings?.notifications?.gifts !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          notifications: {\n                            ...privacySettings?.notifications,\n                            gifts: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                    \n                    <Checkbox\n                      label=\"Посещения профиля\"\n                      checked={privacySettings?.notifications?.profile_visits !== false}\n                      onChange={(e) => {\n                        const newSettings = {\n                          ...privacySettings,\n                          notifications: {\n                            ...privacySettings?.notifications,\n                            profile_visits: e.target.checked\n                          }\n                        };\n                        queryClient.setQueryData(['privacySettings'], newSettings);\n                      }}\n                    />\n                  </FormGroup>\n                  \n                  <Button type=\"submit\" disabled={privacyMutation.isLoading}>\n                    {privacyMutation.isLoading ? 'Сохранение...' : 'Сохранить настройки'}\n                  </Button>\n                </Form>\n              </InfoSection>\n            </div>\n          )}\n        </TabContent>\n      </ContentCard>\n\n      {/* Модальные окна */}\n      {/* Модальное окно для просмотра изображений */}\n      {showImageModal && selectedImage && (\n        <Modal onClick={() => setShowImageModal(false)}>\n          <ModalContent $maxWidth=\"800px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Просмотр фотографии</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowImageModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            <img\n              src={`/uploads/${selectedImage}`}\n              alt=\"Просмотр\"\n              style={{\n                width: '100%',\n                borderRadius: '15px',\n                maxHeight: '70vh',\n                objectFit: 'contain'\n              }}\n            />\n          </ModalContent>\n        </Modal>\n      )}\n\n      {/* Модальное окно подарков */}\n      {showGiftModal && (\n        <Modal onClick={() => setShowGiftModal(false)}>\n          <ModalContent $maxWidth=\"600px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить подарок</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowGiftModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n            \n            <GiftGrid $columns=\"repeat(auto-fit, minmax(120px, 1fr))\" $gap=\"15px\">\n              {Object.entries(GIFT_CONFIG).map(([id, gift]) => (\n                <GiftOption\n                  key={id}\n                  $selected={selectedGift === id}\n                  onClick={() => setSelectedGift(id)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  <div className=\"emoji\">{gift.emoji}</div>\n                  <div className=\"name\">{gift.name}</div>\n                  <div className=\"cost\">{gift.cost} 🦊</div>\n                </GiftOption>\n              ))}\n            </GiftGrid>\n\n            <FormGroup>\n              <Label>Сообщение (необязательно)</Label>\n              <TextArea\n                value={giftMessage}\n                onChange={(e) => setGiftMessage(e.target.value)}\n                placeholder=\"Добавьте личное сообщение к подарку...\"\n                $minHeight=\"80px\"\n              />\n            </FormGroup>\n\n            <Button\n              onClick={handleSendGift}\n              disabled={sendGiftMutation.isLoading || !selectedGift}\n              style={{ width: '100%' }}\n            >\n              {sendGiftMutation.isLoading ? 'Отправляем...' : 'Отправить подарок'}\n            </Button>\n          </ModalContent>\n        </Modal>\n      )}\n\n      {/* Модальное окно суперлайка */}\n      {showSuperlikeModal && (\n        <Modal onClick={() => setShowSuperlikeModal(false)}>\n          <ModalContent $maxWidth=\"500px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>Отправить суперлайк</h2>\n              <IconButton\n                $variant=\"secondary\"\n                onClick={() => setShowSuperlikeModal(false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </ModalHeader>\n\n            <FormGroup>\n              <Label>Сообщение *</Label>\n              <TextArea\n                value={superlikeMessage}\n                onChange={(e) => setSuperlikeMessage(e.target.value)}\n                placeholder=\"Напишите сообщение для суперлайка...\"\n                $minHeight=\"120px\"\n                required\n              />\n            </FormGroup>\n\n            <Button\n              onClick={handleSuperlike}\n              disabled={superlikeMutation.isLoading || !superlikeMessage.trim()}\n              style={{ width: '100%' }}\n            >\n              {superlikeMutation.isLoading ? 'Отправляем...' : 'Отправить суперлайк'}\n            </Button>\n          </ModalContent>\n        </Modal>\n      )}\n\n      {/* Модальное окно кропа аватарки */}\n      {showAvatarCropper && (\n        <AvatarCropper\n          isOpen={showAvatarCropper}\n          onClose={() => setShowAvatarCropper(false)}\n          imageFile={avatarFileToCrop}\n          onCrop={handleAvatarCrop}\n          aspectRatio={1}\n          minSize={100}\n        />\n      )}\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;","import React, { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { chatAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  Avatar,\n  IconButton,\n  FlexContainer,\n  // SearchIcon, // Убираем этот импорт\n  SendIcon,\n  PlusIcon\n} from '../components/UI';\n\n// Иконки\nconst BackIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M19 12H6m6-7l-7 7 7 7\"/>\n  </svg>\n);\n\nconst AttachIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66L9.64 16.2a2 2 0 0 1-2.83-2.83l8.49-8.49\"/>\n  </svg>\n);\n\nconst MoreIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"1\"/>\n    <circle cx=\"19\" cy=\"12\" r=\"1\"/>\n    <circle cx=\"5\" cy=\"12\" r=\"1\"/>\n  </svg>\n);\n\n// Стили\nconst ChatContainer = styled(PageContainer)`\n  display: flex;\n  height: 100vh;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  padding: 0;\n  overflow: hidden;\n`;\n\nconst ChatSidebar = styled.div`\n  width: 400px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$selectedChat ? '0' : '100%'};\n    position: ${props => props.$selectedChat ? 'absolute' : 'relative'};\n    left: ${props => props.$selectedChat ? '-100%' : '0'};\n    transition: all 0.3s ease;\n    z-index: 10;\n  }\n`;\n\nconst ChatHeader = styled.div`\n  padding: 30px 25px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  text-align: center;\n  \n  h3 {\n    margin: 0 0 8px 0;\n    font-size: 28px;\n    font-weight: 700;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n  \n  p {\n    margin: 0;\n    opacity: 0.9;\n    font-size: 16px;\n    font-weight: 300;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 25px 20px;\n    \n    h3 {\n      font-size: 24px;\n    }\n  }\n`;\n\nconst SearchContainer = styled.div`\n  padding: 20px 25px;\n  background: rgba(255, 255, 255, 0.8);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n`;\n\nconst SearchInput = styled.div`\n  position: relative;\n  \n  input {\n    width: 100%;\n    padding: 15px 50px 15px 20px;\n    border: 2px solid rgba(220, 53, 34, 0.2);\n    border-radius: 25px;\n    font-size: 16px;\n    background: white;\n    transition: all 0.3s ease;\n    \n    &:focus {\n      outline: none;\n      border-color: #dc3522;\n      box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n    }\n    \n    &::placeholder {\n      color: #a0aec0;\n    }\n  }\n  \n  /* Используем псевдоэлемент для иконки */\n  &::after {\n    content: \"🔍\";\n    position: absolute;\n    right: 18px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #a0aec0;\n    font-size: 18px;\n    z-index: 2;\n    cursor: pointer;\n    pointer-events: none;\n  }\n`;\n\nconst ChatsContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  background: white;\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n`;\n\nconst ChatItem = styled.div`\n  padding: 20px 25px;\n  border-bottom: 1px solid #f7fafc;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n  \n  &:hover {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.05) 0%, rgba(255, 107, 88, 0.05) 100%);\n  }\n  \n  &.active {\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n    border-right: 4px solid #dc3522;\n  }\n  \n  .chat-info {\n    flex: 1;\n    min-width: 0;\n    \n    .name {\n      font-weight: 600;\n      margin-bottom: 6px;\n      color: #2d3748;\n      font-size: 16px;\n    }\n    \n    .last-message {\n      color: #718096;\n      font-size: 14px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      line-height: 1.4;\n      \n              .new-match-indicator {\n          color: #dc3522;\n          font-weight: 600;\n        }\n    }\n    \n    .time {\n      font-size: 12px;\n      color: #a0aec0;\n      margin-top: 4px;\n    }\n  }\n  \n  .unread-badge {\n    background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n    color: white;\n    border-radius: 12px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    font-weight: bold;\n    position: absolute;\n    top: 15px;\n    right: 20px;\n  }\n  \n  .new-match-badge {\n    background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 100%);\n    color: white;\n    border-radius: 12px;\n    width: 24px;\n    height: 24px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    position: absolute;\n    top: 15px;\n    right: 20px;\n    animation: pulse 2s infinite;\n  }\n  \n  @keyframes pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.1); }\n    100% { transform: scale(1); }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px 20px;\n    \n    .chat-info {\n      .name {\n        font-size: 15px;\n      }\n      \n      .last-message {\n        font-size: 13px;\n      }\n    }\n  }\n`;\n\nconst ChatWindow = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(20px);\n  \n  @media (max-width: 768px) {\n    width: ${props => props.$selectedChat ? '100%' : '0'};\n    position: ${props => props.$selectedChat ? 'relative' : 'absolute'};\n    right: ${props => props.$selectedChat ? '0' : '-100%'};\n    transition: all 0.3s ease;\n  }\n`;\n\nconst ChatWindowHeader = styled.div`\n  padding: 20px 30px;\n  background: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n  \n  .back-button {\n    @media (min-width: 769px) {\n      display: none;\n    }\n  }\n  \n  .user-info {\n    flex: 1;\n    \n    .name {\n      font-weight: 600;\n      color: #2d3748;\n      font-size: 18px;\n      margin-bottom: 2px;\n    }\n    \n    .status {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      font-size: 14px;\n      color: #718096;\n      \n      .online-dot {\n        width: 8px;\n        height: 8px;\n        background: #48bb78;\n        border-radius: 50%;\n        animation: pulse 2s infinite;\n      }\n    }\n  }\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  \n  &::-webkit-scrollbar {\n    width: 6px;\n  }\n  \n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n  \n  &::-webkit-scrollbar-thumb {\n    background: #c1c1c1;\n    border-radius: 3px;\n  }\n  \n  &::-webkit-scrollbar-thumb:hover {\n    background: #a8a8a8;\n  }\n`;\n\nconst MessageGroup = styled.div`\n  display: flex;\n  justify-content: ${props => props.$isOwn ? 'flex-end' : 'flex-start'};\n  margin-bottom: 20px;\n`;\n\nconst Message = styled.div`\n  max-width: 70%;\n  padding: 15px 20px;\n  border-radius: 20px;\n  background: ${props => props.$isOwn \n    ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' \n    : 'white'};\n  color: ${props => props.$isOwn ? 'white' : '#2d3748'};\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  position: relative;\n  \n  .message-text {\n    font-size: 16px;\n    line-height: 1.5;\n    margin-bottom: 8px;\n  }\n  \n  .message-file {\n    margin-top: 10px;\n    \n    img {\n      border-radius: 10px;\n      max-width: 100%;\n      height: auto;\n    }\n  }\n  \n  .message-time {\n    font-size: 12px;\n    opacity: 0.7;\n    text-align: right;\n    margin-top: 5px;\n  }\n  \n  @media (max-width: 768px) {\n    max-width: 85%;\n    padding: 12px 16px;\n    \n    .message-text {\n      font-size: 15px;\n    }\n  }\n`;\n\nconst TypingIndicator = styled.div`\n  padding: 15px 20px;\n  background: white;\n  border-radius: 20px;\n  color: #718096;\n  font-style: italic;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n`;\n\nconst MessageInputWrapper = styled.div`\n  padding: 20px 30px;\n  background: white;\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n  opacity: ${props => props.$disabled ? 0.5 : 1};\n  pointer-events: ${props => props.$disabled ? 'none' : 'auto'};\n`;\n\nconst MessageInput = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 12px;\n  background: #f7fafc;\n  border-radius: 25px;\n  padding: 8px;\n  border: 2px solid transparent;\n  transition: all 0.3s ease;\n  \n  &:focus-within {\n    border-color: #dc3522;\n    box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n  }\n`;\n\nconst InputContainer = styled.div`\n  flex: 1;\n`;\n\nconst TextInput = styled.textarea`\n  width: 100%;\n  min-height: 20px;\n  max-height: 120px;\n  padding: 12px 16px;\n  border: none;\n  background: transparent;\n  font-size: 16px;\n  resize: none;\n  outline: none;\n  font-family: inherit;\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n`;\n\nconst ActionButton = styled.button`\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  background: ${props => props.$primary \n    ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' \n    : 'rgba(220, 53, 34, 0.1)'};\n  color: ${props => props.$primary ? 'white' : '#dc3522'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    transform: scale(1.1);\n    box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\nconst EmptyState = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  color: #718096;\n  padding: 40px 20px;\n  min-height: 400px;\n  \n  .content {\n    max-width: 400px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    .icon {\n      font-size: 80px;\n      margin-bottom: 74px; /* Увеличиваем с 54px до 74px - поднимаем эмодзи еще на 20px выше */\n      opacity: 0.7;\n      line-height: 1;\n      display: block;\n      text-align: center;\n      width: 100%;\n      transform: translateX(-2px);\n    }\n    \n    h3 {\n      font-size: 28px;\n      font-weight: 700;\n      color: #2d3748;\n      margin: 0 0 16px 0;\n      line-height: 1.2;\n      text-align: center;\n      width: 100%;\n    }\n    \n    p {\n      font-size: 16px;\n      line-height: 1.6;\n      margin: 0;\n      max-width: 320px;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 300px;\n    padding: 30px 16px;\n    \n    .content {\n      .icon {\n        font-size: 64px;\n        margin-bottom: 70px; /* Увеличиваем с 50px до 70px */\n        transform: translateX(-1px);\n      }\n      \n      h3 {\n        font-size: 24px;\n        margin-bottom: 14px;\n      }\n      \n      p {\n        font-size: 15px;\n        max-width: 280px;\n      }\n    }\n  }\n  \n  @media (max-width: 480px) {\n    min-height: 250px;\n    padding: 25px 12px;\n    \n    .content {\n      .icon {\n        font-size: 56px;\n        margin-bottom: 68px; /* Увеличиваем с 48px до 68px */\n        transform: translateX(-1px);\n      }\n      \n      h3 {\n        font-size: 22px;\n        margin-bottom: 12px;\n      }\n      \n      p {\n        font-size: 14px;\n        max-width: 260px;\n      }\n    }\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  text-align: center;\n  color: #e53e3e;\n  padding: 40px 20px;\n  \n  p {\n    font-size: 18px;\n    margin-bottom: 20px;\n  }\n  \n      button {\n      padding: 12px 24px;\n      background: #dc3522;\n      color: white;\n      border: none;\n      border-radius: 8px;\n      cursor: pointer;\n      font-size: 16px;\n      \n      &:hover {\n        background: #b8291e;\n      }\n    }\n`;\n\nconst NewChatWelcome = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  padding: 40px 20px;\n  \n  .welcome-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    max-width: 500px;\n  }\n  \n  .match-icon {\n    font-size: 80px;\n    animation: bounce 2s infinite;\n  }\n  \n  @keyframes bounce {\n    0%, 20%, 50%, 80%, 100% {\n      transform: translateY(0);\n    }\n    40% {\n      transform: translateY(-10px);\n    }\n    60% {\n      transform: translateY(-5px);\n    }\n  }\n  \n      h3 {\n      font-size: 32px;\n      font-weight: 700;\n      color: #2d3748;\n      margin: 0;\n      background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n      background-clip: text;\n    }\n  \n  p {\n    font-size: 18px;\n    color: #718096;\n    margin: 0;\n  }\n  \n  .subtitle {\n    font-size: 16px;\n    color: #a0aec0;\n  }\n  \n  .suggestions {\n    margin-top: 30px;\n    width: 100%;\n    \n    h4 {\n      font-size: 18px;\n      font-weight: 600;\n      color: #2d3748;\n      margin: 0 0 20px 0;\n    }\n  }\n  \n  .suggestion-buttons {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n  \n  .suggestion-btn {\n    padding: 15px 20px;\n    background: white;\n    border: 2px solid rgba(102, 126, 234, 0.2);\n    border-radius: 15px;\n    font-size: 15px;\n    color: #2d3748;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    \n    &:hover {\n      background: rgba(102, 126, 234, 0.05);\n      border-color: #667eea;\n      transform: translateY(-2px);\n      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.2);\n    }\n  }\n  \n  @media (max-width: 768px) {\n    padding: 30px 20px;\n    \n    .match-icon {\n      font-size: 60px;\n    }\n    \n    h3 {\n      font-size: 24px;\n    }\n    \n    p {\n      font-size: 16px;\n    }\n    \n    .subtitle {\n      font-size: 14px;\n    }\n    \n    .suggestion-btn {\n      padding: 12px 16px;\n      font-size: 14px;\n    }\n  }\n`;\n\nconst MatchStatusBanner = styled.div`\n  padding: 15px 20px;\n  margin: 0 20px 20px 20px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  \n  background: ${props => {\n    switch (props.$status) {\n      case 'match':\n        return 'linear-gradient(135deg, #48bb78 0%, #38a169 100%)';\n      case 'liked':\n        return 'linear-gradient(135deg, #ed8936 0%, #dd6b20 100%)';\n      case 'liked_by':\n        return 'linear-gradient(135deg, #e53e3e 0%, #c53030 100%)';\n      default:\n        return 'linear-gradient(135deg, #a0aec0 0%, #718096 100%)';\n    }\n  }};\n  color: white;\n  \n  .icon {\n    font-size: 16px;\n  }\n  \n  .message {\n    flex: 1;\n  }\n`;\n\nconst Chat = () => {\n  const { username: chatId } = useParams();\n  const navigate = useNavigate();\n  const [selectedChat, setSelectedChat] = useState(chatId || null);\n  const [messageText, setMessageText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [matchStatus, setMatchStatus] = useState(null);\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const queryClient = useQueryClient();\n  const lastSelectedChatRef = useRef(null); // Ref для отслеживания последнего выбранного чата\n  \n  const currentUser = apiUtils.getCurrentUser();\n\n  // Получение списка чатов\n  const { data: chats = [], error: chatsError, isLoading: chatsLoading } = useQuery(\n    'conversations',\n    () => chatAPI.getConversations(50, 0), // Увеличим лимит для лучшего UX\n    {\n      refetchInterval: 5000, // Обновляем каждые 5 секунд\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 3000, // Данные считаются свежими 3 секунды\n      onError: (error) => {\n        console.error('Ошибка при получении списка чатов:', error);\n        toast.error('Не удалось загрузить список чатов');\n      }\n    }\n  );\n\n  // Создаем виртуальный чат для нового мэтча, если перешли через уведомления\n  const existingChat = chats?.conversations?.find(chat => chat.companion === chatId);\n  const virtualChat = chatId && !existingChat && !chatsLoading ? {\n    companion: chatId,\n    last_message: null,\n    last_message_date: null,\n    last_message_by: null,\n    unread_count: 0,\n    has_images: false,\n    companion_info: {\n      login: chatId,\n      ava: 'no_photo.jpg',\n      status: 'Новый мэтч',\n      online: null,\n      viptype: 'FREE'\n    }\n  } : null;\n\n  // Принудительно создаем виртуальный чат, если есть chatId и нет чатов\n  const forceVirtualChat = chatId && !chatsLoading && (!chats?.conversations || chats.conversations.length === 0) ? {\n    companion: chatId,\n    last_message: null,\n    last_message_date: null,\n    last_message_by: null,\n    unread_count: 0,\n    has_images: false,\n    companion_info: {\n      login: chatId,\n      ava: 'no_photo.jpg',\n      status: 'Новый мэтч',\n      online: null,\n      viptype: 'FREE'\n    }\n  } : null;\n\n  // Объединяем реальные чаты с виртуальным\n  const allChats = (virtualChat || forceVirtualChat)\n    ? [(virtualChat || forceVirtualChat), ...(chats?.conversations || [])]\n    : (chats?.conversations || []);\n\n  // Отладочная информация (только при изменениях)\n  useEffect(() => {\n    console.log('Chat Debug:', {\n      chatId,\n      chats: chats?.conversations,\n      existingChat,\n      virtualChat,\n      forceVirtualChat,\n      allChats,\n      selectedChat,\n      lastSelectedChatRef: lastSelectedChatRef.current,\n      chatsLoading,\n      userInfo,\n      timestamp: new Date().toISOString()\n    });\n  }, [chatId, chats?.conversations, selectedChat, chatsLoading, userInfo]);\n\n\n  // Получение сообщений текущего чата\n  const { data: messages = [], error: messagesError, isLoading: messagesLoading } = useQuery(\n    ['messages', selectedChat],\n    () => chatAPI.getMessages(selectedChat, 100, 0), // Увеличим лимит сообщений\n    {\n      enabled: !!selectedChat && !chatsLoading,\n      refetchInterval: 2000, // Обновляем каждые 2 секунды\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 1000, // Данные считаются свежими 1 секунду\n      onError: (error) => {\n        console.error('Ошибка при получении сообщений:', error);\n        toast.error('Не удалось загрузить сообщения');\n      },\n      onSuccess: (data) => {\n        // Сохраняем информацию о мэтче из ответа\n        if (data?.match_status) {\n          setMatchStatus(data.match_status);\n        }\n      }\n    }\n  );\n\n  // Получение статуса мэтча для текущего чата\n  const { data: matchData } = useQuery(\n    ['match-status', selectedChat],\n    () => chatAPI.getMatchStatus(selectedChat),\n    {\n      enabled: !!selectedChat && !chatsLoading,\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 30000, // Данные считаются свежими 30 секунд\n      onError: (error) => {\n        console.error('Ошибка при получении статуса мэтча:', error);\n      },\n      onSuccess: (data) => {\n        if (data) {\n          setMatchStatus(data);\n        }\n      }\n    }\n  );\n\n  // Получение информации о пользователе для виртуального чата\n  const { data: userInfo } = useQuery(\n    ['user-info', chatId],\n    () => apiUtils.getUserInfo(chatId),\n    {\n      enabled: !!chatId && !!virtualChat && !chatsLoading,\n      refetchOnWindowFocus: false, // Не обновляем при фокусе окна\n      staleTime: 60000, // Данные считаются свежими 1 минуту\n      onError: (error) => {\n        console.error('Ошибка при получении информации о пользователе:', error);\n      }\n    }\n  );\n\n  // Обновляем виртуальный чат с информацией о пользователе\n  useEffect(() => {\n    if (virtualChat && userInfo && userInfo.login && !chatsLoading) {\n      // Проверяем, не обновляем ли мы уже актуальные данные\n      if (virtualChat.companion_info?.login !== userInfo.login ||\n          virtualChat.companion_info?.ava !== userInfo.ava ||\n          virtualChat.companion_info?.status !== userInfo.status) {\n        virtualChat.companion_info = {\n          login: userInfo.login,\n          ava: userInfo.ava || 'no_photo.jpg',\n          status: userInfo.status || 'Новый мэтч',\n          online: userInfo.online,\n          viptype: userInfo.viptype || 'FREE'\n        };\n      }\n    }\n  }, [virtualChat, userInfo, chatsLoading]);\n\n  // Мутации\n  const sendMessageMutation = useMutation(chatAPI.sendMessage, {\n    onSuccess: (data) => {\n      setMessageText('');\n      queryClient.invalidateQueries(['messages', selectedChat]);\n      queryClient.invalidateQueries('conversations');\n      \n      // Показываем предупреждение если есть\n      if (data?.match_warning) {\n        toast.warning(data.match_warning);\n      }\n    },\n    onError: (error) => {\n      console.error('Ошибка отправки сообщения:', error);\n      // Обрабатываем ошибки мэтча отдельно\n      if (error.response?.data?.error === 'no_match') {\n        toast.error('Для отправки сообщений нужен взаимный лайк! 💕');\n      } else if (error.response?.status === 404) {\n        toast.error('Пользователь не найден или чат недоступен');\n      } else if (error.response?.status === 403) {\n        toast.error('У вас нет прав для отправки сообщений в этот чат');\n      } else {\n        toast.error(apiUtils.handleError(error) || 'Ошибка отправки сообщения');\n      }\n    }\n  });\n\n  const sendFileMutation = useMutation(chatAPI.sendMessage, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['messages', selectedChat]);\n      queryClient.invalidateQueries('conversations');\n      toast.success('Файл успешно отправлен');\n    },\n    onError: (error) => {\n      console.error('Ошибка отправки файла:', error);\n      if (error.response?.data?.error === 'no_match') {\n        toast.error('Для отправки файлов нужен взаимный лайк! 💕');\n      } else if (error.response?.status === 413) {\n        toast.error('Файл слишком большой');\n      } else {\n        toast.error(apiUtils.handleError(error) || 'Ошибка отправки файла');\n      }\n    }\n  });\n\n  // Эффекты\n  useEffect(() => {\n    if (chatId && chatId !== selectedChat && chatId !== lastSelectedChatRef.current && !chatsLoading) {\n      lastSelectedChatRef.current = chatId;\n      setSelectedChat(chatId);\n    }\n  }, [chatId, chatsLoading]); // Добавляем chatsLoading в зависимости\n\n  // Автоматически выбираем виртуальный чат, если перешли через уведомления\n  useEffect(() => {\n    if ((virtualChat || forceVirtualChat) && !selectedChat && chatId && chatId !== lastSelectedChatRef.current && !chatsLoading) {\n      lastSelectedChatRef.current = chatId;\n      setSelectedChat(chatId);\n    }\n  }, [virtualChat, forceVirtualChat, chatId, chatsLoading]); // Добавляем chatsLoading в зависимости\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Очистка при размонтировании\n  useEffect(() => {\n    return () => {\n      lastSelectedChatRef.current = null;\n    };\n  }, []);\n\n  // Фильтрация чатов по поиску\n  const filteredChats = allChats.filter(chat =>\n    chat.companion.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Обработчики\n  const handleChatSelect = (chatUser) => {\n    // Проверяем, не пытаемся ли мы перейти к тому же чату\n    if (chatUser === selectedChat || chatUser === lastSelectedChatRef.current || chatsLoading) {\n      return;\n    }\n    \n    lastSelectedChatRef.current = chatUser;\n    setSelectedChat(chatUser);\n    // Обновляем URL только если он отличается\n    if (chatUser !== chatId) {\n      navigate(`/chat/${chatUser}`);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (messageText.trim() && selectedChat) {\n      // Проверяем статус мэтча перед отправкой\n      if (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown') {\n        toast.error(`${matchStatus.message} ${matchStatus.icon}`);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('to_user', selectedChat);\n      formData.append('message', messageText.trim());\n      sendMessageMutation.mutate(formData);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file && selectedChat) {\n      // Проверяем статус мэтча перед отправкой файла\n      if (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown') {\n        toast.error(`${matchStatus.message} ${matchStatus.icon}`);\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('images', file);\n      formData.append('to_user', selectedChat);\n      sendFileMutation.mutate(formData);\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const selectedChatData = allChats.find(chat => chat.companion === selectedChat);\n\n  return (\n    <ChatContainer>\n      <ChatSidebar $selectedChat={selectedChat}>\n        <ChatHeader>\n          <h3>Сообщения</h3>\n          <p>Найдите интересных собеседников</p>\n        </ChatHeader>\n        \n        <SearchContainer>\n          <SearchInput>\n            <input\n              type=\"text\"\n              placeholder=\"Поиск чатов...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            {/* Убираем <span className=\"search-icon\">🔍</span> */}\n          </SearchInput>\n        </SearchContainer>\n        \n        <ChatsContainer>\n          {chatsError ? (\n            <ErrorMessage>\n              <p>Ошибка загрузки чатов</p>\n              <button onClick={() => window.location.reload()}>Попробовать снова</button>\n            </ErrorMessage>\n          ) : chatsLoading ? (\n            <EmptyState>\n              <p>Загрузка чатов...</p>\n            </EmptyState>\n          ) : (filteredChats.length > 0 || forceVirtualChat) ? (\n            <>\n              {/* Принудительно показываем виртуальный чат, если он есть */}\n              {forceVirtualChat && !filteredChats.find(chat => chat.companion === forceVirtualChat.companion) && (\n                <ChatItem\n                  key={forceVirtualChat.companion}\n                  className={selectedChat === forceVirtualChat.companion ? 'active' : ''}\n                  onClick={() => handleChatSelect(forceVirtualChat.companion)}\n                >\n                  <Avatar\n                    $src={forceVirtualChat.companion_info?.ava ? `/uploads/${forceVirtualChat.companion_info.ava}` : ''}\n                    $size=\"50px\"\n                    $fontSize=\"20px\"\n                    $online={forceVirtualChat.companion_info?.online}\n                  >\n                    {!forceVirtualChat.companion_info?.ava && forceVirtualChat.companion.charAt(0).toUpperCase()}\n                  </Avatar>\n                  \n                  <div className=\"chat-info\">\n                    <div className=\"name\">@{forceVirtualChat.companion}</div>\n                    <div className=\"last-message\">\n                      <span className=\"new-match-indicator\">💕 Новый мэтч - начните общение</span>\n                    </div>\n                    <div className=\"time\">Сейчас</div>\n                  </div>\n                  \n                  <div className=\"new-match-badge\">💕</div>\n                </ChatItem>\n              )}\n              \n                            {/* Показываем остальные чаты */}\n              {filteredChats.map(chat => (\n                <ChatItem\n                  key={chat.companion}\n                  className={selectedChat === chat.companion ? 'active' : ''}\n                  onClick={() => handleChatSelect(chat.companion)}\n                >\n                  <Avatar\n                    $src={chat.companion_info?.ava ? `/uploads/${chat.companion_info.ava}` : ''}\n                    $size=\"50px\"\n                    $fontSize=\"20px\"\n                    $online={chat.companion_info?.online}\n                  >\n                    {!chat.companion_info?.ava && chat.companion.charAt(0).toUpperCase()}\n                  </Avatar>\n                  \n                  <div className=\"chat-info\">\n                    <div className=\"name\">@{chat.companion}</div>\n                    <div className=\"last-message\">\n                      {chat.last_message ? (\n                        chat.last_message\n                      ) : (\n                        <span className=\"new-match-indicator\">💕 Новый мэтч - начните общение</span>\n                      )}\n                    </div>\n                    <div className=\"time\">\n                      {chat.last_message_date ? formatTime(chat.last_message_date) : 'Сейчас'}\n                    </div>\n                  </div>\n                  \n                  {chat.unread_count > 0 ? (\n                    <div className=\"unread-badge\">{chat.unread_count}</div>\n                  ) : !chat.last_message && (\n                    <div className=\"new-match-badge\">💕</div>\n                  )}\n                </ChatItem>\n              ))}\n            </>\n          ) : (\n            <EmptyState>\n              <p>Нет активных чатов</p>\n              <p>Найдите интересных собеседников в каталоге</p>\n            </EmptyState>\n          )}\n        </ChatsContainer>\n      </ChatSidebar>\n\n      <ChatWindow $selectedChat={selectedChat}>\n        {selectedChat ? (\n          <>\n            <ChatWindowHeader>\n              <IconButton \n                className=\"back-button\"\n                $variant=\"secondary\"\n                onClick={() => {\n                  setSelectedChat(null);\n                  navigate('/chat');\n                }}\n              >\n                <BackIcon />\n              </IconButton>\n              \n              <Avatar\n                $src={selectedChatData?.companion_info?.ava ? `/uploads/${selectedChatData.companion_info.ava}` : ''}\n                $size=\"45px\"\n                $fontSize=\"18px\"\n              >\n                {!selectedChatData?.companion_info?.ava && selectedChat.charAt(0).toUpperCase()}\n              </Avatar>\n              \n              <div className=\"user-info\">\n                <div className=\"name\">@{selectedChat}</div>\n                <div className=\"status\">\n                  {selectedChatData?.companion_info?.online && <div className=\"online-dot\" />}\n                  {selectedChatData?.companion_info?.online ? 'онлайн' : 'не в сети'}\n                </div>\n              </div>\n              \n              <IconButton $variant=\"secondary\">\n                <MoreIcon />\n              </IconButton>\n            </ChatWindowHeader>\n\n            {/* Баннер статуса мэтча */}\n            {matchStatus && matchStatus.status !== 'unknown' && (\n              <MatchStatusBanner $status={matchStatus.status}>\n                <span className=\"icon\">{matchStatus.icon}</span>\n                <span className=\"message\">{matchStatus.message}</span>\n              </MatchStatusBanner>\n            )}\n\n            <MessagesContainer>\n              {messagesError ? (\n                <ErrorMessage>\n                  <p>Ошибка загрузки сообщений</p>\n                  <button onClick={() => window.location.reload()}>Попробовать снова</button>\n                </ErrorMessage>\n              ) : messagesLoading ? (\n                <EmptyState>\n                  <p>Загрузка сообщений...</p>\n                </EmptyState>\n              ) : (messages?.messages || []).length > 0 ? (\n                (messages?.messages || []).map((message, index) => {\n                  const isOwn = message.by_user === currentUser.login;\n                  const prevMessage = messages.messages[index - 1];\n                  const isNewGroup = !prevMessage ||\n                    prevMessage.by_user !== message.by_user ||\n                    (new Date(message.date) - new Date(prevMessage.date)) > 300000;\n\n                  return (\n                    <MessageGroup key={message.id} $isOwn={isOwn}>\n                      <Message $isOwn={isOwn}>\n                        {message.message && (\n                          <div className=\"message-text\">{message.message}</div>\n                        )}\n                        {message.images && Array.isArray(message.images) && message.images.length > 0 && (\n                          <div className=\"message-file\">\n                            {message.images.map((image, idx) => (\n                              <img\n                                key={idx}\n                                src={`/uploads/${image}`}\n                                alt=\"Вложение\"\n                                style={{ margin: '2px', maxWidth: '250px' }}\n                              />\n                            ))}\n                          </div>\n                        )}\n                        <div className=\"message-time\">\n                          {formatTime(message.date)}\n                        </div>\n                      </Message>\n                    </MessageGroup>\n                  );\n                })\n              ) : (\n                <NewChatWelcome>\n                  <div className=\"welcome-content\">\n                    <div className=\"match-icon\">💕</div>\n                    <h3>Взаимная симпатия!</h3>\n                    <p>У вас совпадение с @{selectedChat}</p>\n                    <p className=\"subtitle\">Начните общение первым сообщением</p>\n                    \n                    <div className=\"suggestions\">\n                      <h4>Идеи для первого сообщения:</h4>\n                      <div className=\"suggestion-buttons\">\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Рад нашему совпадению 😊')}\n                        >\n                          Привет! Рад нашему совпадению 😊\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Как дела?')}\n                        >\n                          Привет! Как дела?\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Интересно познакомиться поближе')}\n                        >\n                          Интересно познакомиться поближе\n                        </button>\n                        <button \n                          className=\"suggestion-btn\"\n                          onClick={() => setMessageText('Привет! Что планируешь на выходные?')}\n                        >\n                          Что планируешь на выходные?\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </NewChatWelcome>\n              )}\n              \n              {isTyping && (\n                <TypingIndicator>\n                  @{selectedChat} печатает...\n                </TypingIndicator>\n              )}\n              \n              <div ref={messagesEndRef} />\n            </MessagesContainer>\n\n            <MessageInputWrapper $disabled={matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown'}>\n              <MessageInput>\n              <InputContainer>\n                <TextInput\n                  value={messageText}\n                  onChange={(e) => setMessageText(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Напишите сообщение...\"\n                  rows={1}\n                />\n              </InputContainer>\n              \n              <ActionButton \n                className=\"attach\"\n                onClick={() => fileInputRef.current?.click()}\n              >\n                <AttachIcon />\n              </ActionButton>\n              \n              <ActionButton\n                onClick={handleSendMessage}\n                disabled={\n                  !messageText.trim() ||\n                  sendMessageMutation.isLoading ||\n                  (matchStatus && !matchStatus.canChat && matchStatus.status !== 'unknown')\n                }\n              >\n                <SendIcon />\n              </ActionButton>\n              \n              <HiddenInput\n                ref={fileInputRef}\n                type=\"file\"\n                onChange={handleFileUpload}\n              />\n            </MessageInput>\n            </MessageInputWrapper>\n          </>\n        ) : (\n          <EmptyState>\n            <div className=\"content\">\n              <div className=\"icon\">💬</div>\n              <h3>Выберите чат</h3>\n              <p>Выберите диалог из списка, чтобы начать общение, или найдите нового собеседника</p>\n            </div>\n          </EmptyState>\n        )}\n      </ChatWindow>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;","import React, { useState, useMemo, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { adsAPI, apiUtils, clubsAPI } from '../services/api';\nimport { LocationSelector, CitySelector } from '../components/Geography';\nimport {\n  PageContainer,\n  ContentCard,\n  Button,\n  Input,\n  Select,\n  TextArea,\n  Form,\n  FormGroup,\n  Label,\n  ErrorText,\n  Grid,\n  Card,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Avatar,\n  FlexContainer,\n  LoadingSpinner,\n  SearchIcon,\n  PlusIcon,\n  CloseIcon,\n  EditIcon,\n  MessageIcon\n} from '../components/UI';\n\n// Дополнительные иконки\nconst FilterIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst AdsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst Header = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst HeaderContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n    align-items: stretch;\n  }\n`;\n\nconst Title = styled.h1`\n  margin: 0;\n  font-size: 32px;\n  font-weight: 700;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  \n  @media (max-width: 768px) {\n    font-size: 28px;\n    text-align: center;\n  }\n`;\n\nconst Filters = styled(ContentCard)`\n  margin-bottom: 30px;\n  padding: 25px;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst FiltersTitle = styled.h3`\n  margin: 0 0 20px 0;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst FiltersGrid = styled(Grid)`\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst SearchInputWrapper = styled.div`\n  position: relative;\n  \n  input {\n    padding-left: 45px;\n  }\n  \n  .search-icon {\n    position: absolute;\n    left: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #a0aec0;\n    z-index: 1;\n  }\n`;\n\nconst AdsGrid = styled(Grid)`\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  gap: 25px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 20px;\n  }\n  \n  @media (max-width: 576px) {\n    grid-template-columns: 1fr;\n    gap: 15px;\n  }\n`;\n\nconst AdCard = styled(Card)`\n  overflow: hidden;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n    border-color: #dc3522;\n  }\n`;\n\nconst AdImage = styled.div`\n  width: 100%;\n  height: 200px;\n  background-image: url(${props => props.$src});\n  background-size: cover;\n  background-position: center;\n  background-color: #f7fafc;\n  position: relative;\n  \n  ${props => !props.$src && `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%);\n    color: #a0aec0;\n    font-size: 48px;\n  `}\n`;\n\nconst AdTypeBadge = styled.div`\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  color: white;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  box-shadow: 0 4px 15px rgba(220, 53, 34, 0.3);\n`;\n\nconst AdContent = styled.div`\n  padding: 25px;\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst AdMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n  \n  .author {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-weight: 600;\n    color: #dc3522;\n    font-size: 14px;\n  }\n  \n  .date {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    font-size: 12px;\n    color: #718096;\n  }\n`;\n\nconst AdTitle = styled.h3`\n  margin: 0 0 12px 0;\n  color: #2d3748;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.3;\n  \n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst AdDescription = styled.p`\n  color: #4a5568;\n  margin: 0 0 20px 0;\n  font-size: 15px;\n  line-height: 1.5;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    -webkit-line-clamp: 2;\n  }\n`;\n\nconst AdActions = styled(FlexContainer)`\n  gap: 10px;\n  \n  .contact-btn {\n    flex: 1;\n  }\n  \n  @media (max-width: 576px) {\n    flex-direction: column;\n    \n    .contact-btn {\n      width: 100%;\n    }\n  }\n`;\n\nconst NoAds = styled.div`\n  text-align: center;\n  color: #718096;\n  padding: 80px 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px; /* Добавляем как в других компонентах */\n  \n  .icon {\n    font-size: 72px; /* Увеличиваем с 64px до 72px */\n    margin-bottom: 54px; /* Увеличиваем с 20px до 54px для поднятия эмодзи на 30px */\n    opacity: 0.7; /* Увеличиваем с 0.5 до 0.7 */\n    line-height: 1;\n    display: block;\n    text-align: center;\n    width: 100%;\n    transform: translateX(-2px); /* Компенсация для визуального центра эмодзи */\n  }\n  \n  h3 {\n    margin: 0 0 16px 0; /* Увеличиваем с 15px до 16px */\n    font-size: 28px; /* Увеличиваем с 24px до 28px */\n    color: #2d3748;\n    font-weight: 700; /* Добавляем font-weight */\n    line-height: 1.2;\n    text-align: center;\n    width: 100%;\n  }\n  \n  p {\n    margin: 0 0 30px 0;\n    font-size: 16px;\n    line-height: 1.6;\n    max-width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 300px;\n    padding: 60px 20px;\n    \n    .icon {\n      font-size: 56px; /* Увеличиваем с 48px до 56px */\n      margin-bottom: 50px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 24px; /* Увеличиваем с 20px до 24px */\n      margin-bottom: 14px;\n    }\n    \n    p {\n      font-size: 15px;\n      max-width: 350px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    min-height: 250px;\n    padding: 40px 16px;\n    \n    .icon {\n      font-size: 48px;\n      margin-bottom: 48px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 22px;\n      margin-bottom: 12px;\n    }\n    \n    p {\n      font-size: 14px;\n      max-width: 300px;\n    }\n  }\n`;\n\nconst StatsCard = styled(Card)`\n  text-align: center;\n  background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);\n  padding: 20px;\n  \n  .number {\n    font-size: 28px;\n    font-weight: 700;\n    color: #dc3522;\n    margin-bottom: 5px;\n  }\n  \n  .label {\n    font-size: 14px;\n    color: #718096;\n    font-weight: 500;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n    \n    .number {\n      font-size: 24px;\n    }\n    \n    .label {\n      font-size: 13px;\n    }\n  }\n`;\n\n// Компонент для загрузки изображения\nconst ImageUpload = ({ image, onImageChange, error }) => {\n  const fileInputRef = useRef(null);\n  const [preview, setPreview] = useState(image ? `/uploads/${image}` : null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Создаем превью\n      const reader = new FileReader();\n      reader.onload = (e) => setPreview(e.target.result);\n      reader.readAsDataURL(file);\n      \n      onImageChange(file);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setPreview(null);\n    onImageChange(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <FormGroup>\n      <Label>Изображение объявления</Label>\n      <div style={{ marginBottom: '10px' }}>\n        {preview && (\n          <div style={{ \n            position: 'relative', \n            display: 'inline-block',\n            marginBottom: '10px'\n          }}>\n            <img \n              src={preview} \n              alt=\"Превью\" \n              style={{ \n                maxWidth: '200px', \n                maxHeight: '200px', \n                borderRadius: '8px',\n                border: '2px solid #e2e8f0'\n              }} \n            />\n            <Button\n              type=\"button\"\n              $variant=\"danger\"\n              $size=\"small\"\n              onClick={handleRemoveImage}\n              style={{\n                position: 'absolute',\n                top: '-8px',\n                right: '-8px',\n                borderRadius: '50%',\n                width: '24px',\n                height: '24px',\n                padding: '0',\n                fontSize: '12px'\n              }}\n            >\n              ×\n            </Button>\n          </div>\n        )}\n      </div>\n      \n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleFileChange}\n        style={{ display: 'none' }}\n      />\n      \n      <Button\n        type=\"button\"\n        $variant=\"secondary\"\n        onClick={() => fileInputRef.current?.click()}\n        style={{ width: '100%' }}\n      >\n        {preview ? 'Изменить изображение' : 'Выбрать изображение'}\n      </Button>\n      \n      {error && <ErrorText>{error}</ErrorText>}\n      \n      <div style={{ \n        fontSize: '12px', \n        color: '#718096', \n        marginTop: '5px' \n      }}>\n        Поддерживаемые форматы: JPEG, PNG, WebP. Максимальный размер: 5MB.\n      </div>\n    </FormGroup>\n  );\n};\n\nconst Ads = () => {\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const [editingAd, setEditingAd] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [filters, setFilters] = useState({\n    type: '',\n    country: '',\n    city: ''\n  });\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n\n  // Проверка владения клубом\n  const { data: clubOwnership } = useQuery(\n    ['club-ownership'],\n    clubsAPI.checkClubOwnership,\n    {\n      retry: false,\n      onError: (error) => {\n        // Пользователь не владеет клубом или эндпоинт недоступен\n        console.log('Club ownership check failed:', error.message);\n      },\n      onSuccess: (data) => {\n        // Успешная проверка владения клубом\n        console.log('Club ownership check successful:', data);\n      }\n    }\n  );\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    clearErrors,\n    formState: { errors },\n    reset\n  } = useForm({\n    defaultValues: {\n      country: '',\n      city: ''\n    }\n  });\n\n  // Валидация изображения\n  const validateImage = (file) => {\n    if (!file) return true;\n    \n    const maxSize = 5 * 1024 * 1024; // 5MB\n    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n    \n    if (file.size > maxSize) {\n      return 'Размер файла не должен превышать 5MB';\n    }\n    \n    if (!allowedTypes.includes(file.type)) {\n      return 'Поддерживаются только форматы: JPEG, PNG, WebP';\n    }\n    \n    return true;\n  };\n\n  // Получение объявлений\n  const { data: adsResponse, isLoading } = useQuery(\n    ['ads', filters],\n    () => adsAPI.getAds(filters),\n    {\n      keepPreviousData: true\n    }\n  );\n\n  // Извлекаем массив объявлений и трансформируем данные\n  const ads = useMemo(() => {\n    if (!adsResponse?.ads) return [];\n    \n    return adsResponse.ads.map(ad => ({\n      ...ad,\n      // Трансформируем поля для соответствия ожиданиям компонента\n      author: ad.author?.login || ad.author,\n      author_avatar: ad.author?.ava || null,\n      title: ad.title || ad.description, // Используем title если есть, иначе description\n      created_at: ad.created_at\n    }));\n  }, [adsResponse]);\n\n  // Мутации\n  const createAdMutation = useMutation(adsAPI.createAd, {\n    onSuccess: () => {\n      toast.success('Объявление создано!');\n      setShowModal(false);\n      reset();\n      queryClient.invalidateQueries('ads');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const updateAdMutation = useMutation(\n    ({ id, data }) => adsAPI.updateAd(id, data),\n    {\n      onSuccess: () => {\n        toast.success('Объявление обновлено!');\n        setShowModal(false);\n        setEditingAd(null);\n        reset();\n        queryClient.invalidateQueries('ads');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const deleteAdMutation = useMutation(adsAPI.deleteAd, {\n    onSuccess: () => {\n      toast.success('Объявление удалено!');\n      queryClient.invalidateQueries('ads');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Обработчики\n  const onSubmit = (data) => {\n    // Валидируем изображение\n    const imageValidation = validateImage(selectedImage);\n    if (imageValidation !== true) {\n      toast.error(imageValidation);\n      return;\n    }\n\n    // Добавляем изображение к данным\n    const formData = {\n      ...data,\n      image: selectedImage\n    };\n\n    if (editingAd) {\n      updateAdMutation.mutate({ id: editingAd.id, data: formData });\n    } else {\n      createAdMutation.mutate(formData);\n    }\n  };\n\n  const handleEdit = (ad) => {\n    setEditingAd(ad);\n    setSelectedImage(null); // Сбрасываем выбранное изображение\n    reset(ad);\n    setShowModal(true);\n  };\n\n  const handleDelete = (adId) => {\n    if (window.confirm('Удалить объявление?')) {\n      deleteAdMutation.mutate(adId);\n    }\n  };\n\n  const handleContact = (authorLogin) => {\n    navigate(`/chat/${authorLogin}`);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setEditingAd(null);\n    setSelectedImage(null);\n    reset();\n  };\n\n  const handleImageChange = (file) => {\n    setSelectedImage(file);\n  };\n\n  // Фильтрация типов объявлений на основе прав пользователя\n  const adTypes = useMemo(() => {\n    const baseTypes = [\n      { value: 'Встречи', label: 'Встречи', icon: '👥' },\n      { value: 'Знакомства', label: 'Знакомства', icon: '💕' },\n      { value: 'Вечеринки', label: 'Вечеринки', icon: '🎉' },\n      { value: 'Общение', label: 'Общение', icon: '💬' }\n    ];\n    \n    // Добавляем \"Мероприятия\" только если пользователь владеет активным клубом\n    if (clubOwnership?.hasActiveClub) {\n      baseTypes.push({ value: 'Мероприятия', label: 'Мероприятия', icon: '🎪' });\n    }\n    \n    // Добавляем \"Все\" в конец\n    baseTypes.push({ value: 'Все', label: 'Все', icon: '📋' });\n    \n    return baseTypes;\n  }, [clubOwnership]);\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  const getTypeIcon = (type) => {\n    return adTypes.find(t => t.value === type)?.icon || '📋';\n  };\n\n  const getTypeLabel = (type) => {\n    return adTypes.find(t => t.value === type)?.label || 'Другое';\n  };\n\n  // Статистика\n  const stats = {\n    total: ads.length,\n    myAds: ads.filter(ad => ad.author === currentUser?.login).length,\n    parties: ads.filter(ad => ad.type === 'Вечеринки').length,\n    meetings: ads.filter(ad => ad.type === 'Встречи').length\n  };\n\n  if (isLoading) {\n    return (\n      <AdsContainer>\n        <LoadingSpinner />\n      </AdsContainer>\n    );\n  }\n\n  return (\n    <AdsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <Header>\n          <HeaderContent>\n            <Title>Объявления</Title>\n            <Button onClick={() => setShowModal(true)}>\n              <PlusIcon />\n              Создать объявление\n            </Button>\n          </HeaderContent>\n\n          {/* Статистика */}\n          <Grid $columns=\"repeat(auto-fit, minmax(120px, 1fr))\" $gap=\"15px\" style={{ marginBottom: '20px' }}>\n            <StatsCard>\n              <div className=\"number\">{stats.total}</div>\n              <div className=\"label\">Всего</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.myAds}</div>\n              <div className=\"label\">Мои</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.parties}</div>\n              <div className=\"label\">Вечеринки</div>\n            </StatsCard>\n            <StatsCard>\n              <div className=\"number\">{stats.meetings}</div>\n              <div className=\"label\">Встречи</div>\n            </StatsCard>\n          </Grid>\n        </Header>\n\n        <Filters>\n          <FiltersTitle>\n            <FilterIcon />\n            Фильтры\n          </FiltersTitle>\n          <FiltersGrid>\n            <FormGroup>\n              <Label>Тип объявления</Label>\n              <Select\n                value={filters.type}\n                onChange={(e) => setFilters(prev => ({ ...prev, type: e.target.value }))}\n              >\n                <option value=\"\">Все типы</option>\n                {adTypes.map(type => (\n                  <option key={type.value} value={type.value}>\n                    {type.icon} {type.label}\n                  </option>\n                ))}\n              </Select>\n            </FormGroup>\n\n            <FormGroup>\n              <Label>Поиск по локации</Label>\n              <LocationSelector\n                countryValue={filters.country}\n                cityValue={filters.city}\n                onCountryChange={(value) => {\n                  setFilters(prev => ({ ...prev, country: value }));\n                  // Сброс города при смене страны\n                  if (filters.city) {\n                    setFilters(prev => ({ ...prev, city: '' }));\n                  }\n                }}\n                onCityChange={(value) => {\n                  setFilters(prev => ({ ...prev, city: value }));\n                }}\n                required={false}\n                showValidation={false}\n                layout=\"side-by-side\"\n                countryPlaceholder=\"Все страны\"\n                cityPlaceholder=\"Все города\"\n              />\n            </FormGroup>\n          </FiltersGrid>\n        </Filters>\n\n        {ads.length > 0 ? (\n          <AdsGrid>\n            {ads.map(ad => (\n              <AdCard key={ad.id}>\n                <AdImage $src={ad.image ? `/uploads/${ad.image}` : ''}>\n                  {!ad.image && '📸'}\n                  <AdTypeBadge>\n                    {getTypeIcon(ad.type)} {getTypeLabel(ad.type)}\n                  </AdTypeBadge>\n                </AdImage>\n                \n                <AdContent>\n                  <AdMeta>\n                    <div className=\"author\">\n                      <Avatar \n                        $size=\"24px\" \n                        $fontSize=\"12px\"\n                        $src={ad.author_avatar ? `/uploads/${ad.author_avatar}` : ''}\n                      >\n                        {!ad.author_avatar && ad.author.charAt(0).toUpperCase()}\n                      </Avatar>\n                      @{ad.author}\n                    </div>\n                    <div className=\"date\">\n                      <CalendarIcon />\n                      {formatDate(ad.created_at)}\n                    </div>\n                  </AdMeta>\n                  \n                  <AdTitle>{ad.title}</AdTitle>\n                  <AdDescription>{ad.description}</AdDescription>\n                  \n                  <AdActions>\n                    {ad.author !== currentUser?.login ? (\n                      <Button \n                        className=\"contact-btn\"\n                        onClick={() => handleContact(ad.author)}\n                      >\n                        <MessageIcon />\n                        Написать\n                      </Button>\n                    ) : (\n                      <>\n                        <Button \n                          $variant=\"secondary\"\n                          onClick={() => handleEdit(ad)}\n                          style={{ flex: 1 }}\n                        >\n                          <EditIcon />\n                          Изменить\n                        </Button>\n                        <Button \n                          $variant=\"danger\"\n                          onClick={() => handleDelete(ad.id)}\n                          style={{ flex: 1 }}\n                        >\n                          <TrashIcon />\n                          Удалить\n                        </Button>\n                      </>\n                    )}\n                  </AdActions>\n                </AdContent>\n              </AdCard>\n            ))}\n          </AdsGrid>\n        ) : (\n          <NoAds>\n            <div className=\"icon\">📢</div>\n            <h3>Объявлений пока нет</h3>\n            <p>\n              {filters.type || filters.city \n                ? 'По вашим фильтрам ничего не найдено. Попробуйте изменить параметры поиска.'\n                : 'Станьте первым, кто разместит объявление и найдет интересных людей!'\n              }\n            </p>\n            {!filters.type && !filters.city && (\n              <Button onClick={() => setShowModal(true)}>\n                <PlusIcon />\n                Создать первое объявление\n              </Button>\n            )}\n          </NoAds>\n        )}\n      </ContentCard>\n\n      {/* Модальное окно создания/редактирования */}\n      {showModal && (\n        <Modal onClick={handleCloseModal}>\n          <ModalContent $maxWidth=\"600px\" onClick={(e) => e.stopPropagation()}>\n            <ModalHeader>\n              <h2>{editingAd ? 'Редактировать объявление' : 'Новое объявление'}</h2>\n              <Button $variant=\"secondary\" $size=\"small\" onClick={handleCloseModal}>\n                <CloseIcon />\n              </Button>\n            </ModalHeader>\n\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label>Заголовок <span className=\"required\">*</span></Label>\n                <Input\n                  {...register('title', { \n                    required: 'Заголовок обязателен',\n                    minLength: { value: 5, message: 'Заголовок должен содержать минимум 5 символов' },\n                    maxLength: { value: 200, message: 'Заголовок не должен превышать 200 символов' }\n                  })}\n                  className={errors.title ? 'error' : ''}\n                  placeholder=\"Введите заголовок объявления\"\n                />\n                {errors.title && <ErrorText>{errors.title.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Тип объявления <span className=\"required\">*</span></Label>\n                <Select\n                  {...register('type', { required: 'Выберите тип' })}\n                  className={errors.type ? 'error' : ''}\n                >\n                  <option value=\"\">Выберите тип</option>\n                  {adTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.icon} {type.label}\n                    </option>\n                  ))}\n                </Select>\n                {errors.type && <ErrorText>{errors.type.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Описание <span className=\"required\">*</span></Label>\n                <TextArea\n                  {...register('description', { \n                    required: 'Описание обязательно',\n                    minLength: { value: 20, message: 'Описание должно содержать минимум 20 символов' },\n                    maxLength: { value: 5000, message: 'Описание не должно превышать 5000 символов' }\n                  })}\n                  className={errors.description ? 'error' : ''}\n                  placeholder=\"Подробно опишите ваше объявление...\"\n                  $minHeight=\"120px\"\n                />\n                {errors.description && <ErrorText>{errors.description.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Цена (необязательно)</Label>\n                <Input\n                  {...register('price', {\n                    min: { value: 0, message: 'Цена не может быть отрицательной' },\n                    pattern: { value: /^\\d+(\\.\\d{1,2})?$/, message: 'Введите корректную цену (например: 100 или 100.50)' }\n                  })}\n                  type=\"number\"\n                  step=\"0.01\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  className={errors.price ? 'error' : ''}\n                />\n                {errors.price && <ErrorText>{errors.price.message}</ErrorText>}\n              </FormGroup>\n\n              <FormGroup>\n                <Label>Контактная информация (необязательно)</Label>\n                <TextArea\n                  {...register('contact_info', {\n                    maxLength: { value: 1000, message: 'Контактная информация не должна превышать 1000 символов' }\n                  })}\n                  placeholder=\"Телефон, email или другие способы связи...\"\n                  $minHeight=\"80px\"\n                  className={errors.contact_info ? 'error' : ''}\n                />\n                {errors.contact_info && <ErrorText>{errors.contact_info.message}</ErrorText>}\n              </FormGroup>\n\n              <LocationSelector\n                countryValue={watch('country')}\n                cityValue={watch('city')}\n                onCountryChange={(value) => {\n                  setValue('country', value);\n                  clearErrors('country');\n                  // Сброс города при смене страны\n                  if (watch('city')) {\n                    setValue('city', '');\n                    clearErrors('city');\n                  }\n                }}\n                onCityChange={(value) => {\n                  setValue('city', value);\n                  clearErrors('city');\n                }}\n                countryError={errors.country?.message}\n                cityError={errors.city?.message}\n                required={true}\n                showValidation={true}\n                layout=\"side-by-side\"\n              />\n              \n              {/* Отображение ошибок для полей страны и города */}\n              {errors.country && <ErrorText style={{ marginTop: '-15px', marginBottom: '15px' }}>{errors.country.message}</ErrorText>}\n              {errors.city && <ErrorText style={{ marginTop: '-15px', marginBottom: '15px' }}>{errors.city.message}</ErrorText>}\n              \n              {/* Скрытые поля для react-hook-form валидации */}\n              <input\n                type=\"hidden\"\n                {...register('country', { required: 'Страна обязательна' })}\n              />\n              <input\n                type=\"hidden\"\n                {...register('city', { required: 'Город обязателен' })}\n              />\n\n              {/* Компонент загрузки изображения */}\n              <ImageUpload\n                image={editingAd?.image}\n                onImageChange={handleImageChange}\n                error={errors.image?.message}\n              />\n\n              <FlexContainer $gap=\"15px\" style={{ marginTop: '30px' }}>\n                <Button\n                  type=\"submit\"\n                  disabled={createAdMutation.isLoading || updateAdMutation.isLoading}\n                  style={{ flex: 1 }}\n                >\n                  {editingAd \n                    ? (updateAdMutation.isLoading ? 'Сохранение...' : 'Сохранить изменения') \n                    : (createAdMutation.isLoading ? 'Создание...' : 'Создать объявление')\n                  }\n                </Button>\n                <Button $variant=\"secondary\" type=\"button\" onClick={handleCloseModal}>\n                  Отмена\n                </Button>\n              </FlexContainer>\n            </Form>\n          </ModalContent>\n        </Modal>\n      )}\n    </AdsContainer>\n  );\n};\n\nexport default Ads;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { adminAPI, apiUtils } from '../services/api';\n\nconst AdminContainer = styled.div`\n  min-height: 100vh;\n  background: ${props => props.theme.colors.background};\n`;\n\nconst AdminHeader = styled.div`\n  background: ${props => props.theme.colors.primary};\n  color: white;\n  padding: ${props => props.theme.spacing.lg};\n  \n  h1 {\n    margin: 0;\n    font-size: ${props => props.theme.fonts.sizes.xlarge};\n  }\n  \n  p {\n    margin: ${props => props.theme.spacing.xs} 0 0 0;\n    opacity: 0.9;\n  }\n`;\n\nconst AdminContent = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: ${props => props.theme.spacing.lg};\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing.lg};\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  overflow: hidden;\n  box-shadow: ${props => props.theme.shadow};\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: ${props => props.theme.spacing.md};\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-weight: bold;\n  transition: all 0.2s ease;\n  \n  &.active {\n    background: ${props => props.theme.colors.primary};\n    color: white;\n  }\n  \n  &:hover:not(.active) {\n    background: ${props => props.theme.colors.background};\n  }\n`;\n\nconst Card = styled.div`\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.spacing.lg};\n  box-shadow: ${props => props.theme.shadow};\n  margin-bottom: ${props => props.theme.spacing.lg};\n`;\n\nconst CardTitle = styled.h3`\n  margin: 0 0 ${props => props.theme.spacing.md} 0;\n  color: ${props => props.theme.colors.primary};\n  font-size: ${props => props.theme.fonts.sizes.large};\n`;\n\nconst StatsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: ${props => props.theme.spacing.lg};\n  margin-bottom: ${props => props.theme.spacing.lg};\n`;\n\nconst StatCard = styled.div`\n  background: white;\n  border-radius: ${props => props.theme.borderRadius};\n  padding: ${props => props.theme.spacing.lg};\n  box-shadow: ${props => props.theme.shadow};\n  text-align: center;\n  \n  .number {\n    font-size: 2rem;\n    font-weight: bold;\n    color: ${props => props.theme.colors.primary};\n    margin-bottom: ${props => props.theme.spacing.xs};\n  }\n  \n  .label {\n    color: ${props => props.theme.colors.textLight};\n    font-size: ${props => props.theme.fonts.sizes.small};\n  }\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  \n  th, td {\n    text-align: left;\n    padding: ${props => props.theme.spacing.sm};\n    border-bottom: 1px solid ${props => props.theme.colors.border};\n  }\n  \n  th {\n    background: ${props => props.theme.colors.background};\n    font-weight: bold;\n    color: ${props => props.theme.colors.text};\n  }\n  \n  tr:hover {\n    background: ${props => props.theme.colors.background};\n  }\n`;\n\nconst Button = styled.button`\n  padding: ${props => props.theme.spacing.xs} ${props => props.theme.spacing.sm};\n  border: none;\n  border-radius: ${props => props.theme.borderRadius};\n  cursor: pointer;\n  font-size: ${props => props.theme.fonts.sizes.small};\n  font-weight: bold;\n  transition: all 0.2s ease;\n  margin-right: ${props => props.theme.spacing.xs};\n  \n  &.primary {\n    background: ${props => props.theme.colors.primary};\n    color: white;\n    \n    &:hover {\n      background: ${props => props.theme.colors.primaryDark};\n    }\n  }\n  \n  &.danger {\n    background: ${props => props.theme.colors.error};\n    color: white;\n    \n    &:hover {\n      background: #d32f2f;\n    }\n  }\n  \n  &.warning {\n    background: #ff9800;\n    color: white;\n    \n    &:hover {\n      background: #f57c00;\n    }\n  }\n  \n  &.success {\n    background: #4caf50;\n    color: white;\n    \n    &:hover {\n      background: #388e3c;\n    }\n  }\n  \n  &:disabled {\n    background: ${props => props.theme.colors.border};\n    cursor: not-allowed;\n  }\n`;\n\nconst StatusBadge = styled.span`\n  padding: ${props => props.theme.spacing.xs} ${props => props.theme.spacing.sm};\n  border-radius: 12px;\n  font-size: ${props => props.theme.fonts.sizes.small};\n  font-weight: bold;\n  \n  &.active {\n    background: #4caf50;\n    color: white;\n  }\n  \n  &.banned {\n    background: ${props => props.theme.colors.error};\n    color: white;\n  }\n  \n  &.pending {\n    background: #ff9800;\n    color: white;\n  }\n`;\n\nconst SearchContainer = styled.div`\n  display: flex;\n  gap: ${props => props.theme.spacing.md};\n  margin-bottom: ${props => props.theme.spacing.lg};\n  align-items: center;\n`;\n\nconst Input = styled.input`\n  padding: ${props => props.theme.spacing.sm};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: ${props => props.theme.fonts.sizes.medium};\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Select = styled.select`\n  padding: ${props => props.theme.spacing.sm};\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  font-size: ${props => props.theme.fonts.sizes.medium};\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst Admin = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [userFilters, setUserFilters] = useState({\n    search: '',\n    status: ''\n  });\n  const [adsFilters, setAdsFilters] = useState({\n    search: '',\n    status: ''\n  });\n  \n  const queryClient = useQueryClient();\n  const currentUser = apiUtils.getCurrentUser();\n\n  // Проверка прав администратора\n  if (!currentUser?.is_admin) {\n    return (\n      <AdminContainer>\n        <AdminContent>\n          <Card>\n            <CardTitle>Доступ запрещен</CardTitle>\n            <p>У вас нет прав для доступа к административной панели.</p>\n          </Card>\n        </AdminContent>\n      </AdminContainer>\n    );\n  }\n\n  // Запросы данных\n  const { data: stats } = useQuery('admin-stats', adminAPI.getStats);\n  \n  const { data: users = [], isLoading: usersLoading } = useQuery(\n    ['admin-users', userFilters],\n    () => adminAPI.getUsers(userFilters),\n    {\n      enabled: activeTab === 'users',\n      keepPreviousData: true\n    }\n  );\n\n  const { data: ads = [], isLoading: adsLoading } = useQuery(\n    ['admin-ads', adsFilters],\n    () => adminAPI.getAds(adsFilters),\n    {\n      enabled: activeTab === 'ads',\n      keepPreviousData: true\n    }\n  );\n\n  const { data: reports = [] } = useQuery(\n    'admin-reports',\n    adminAPI.getReports,\n    {\n      enabled: activeTab === 'reports'\n    }\n  );\n\n  // Мутации\n  const userActionMutation = useMutation(\n    ({ userId, action }) => adminAPI.userAction(userId, action),\n    {\n      onSuccess: (data, variables) => {\n        const actionLabels = {\n          ban: 'заблокирован',\n          unban: 'разблокирован',\n          delete: 'удален',\n          verify: 'верифицирован'\n        };\n        toast.success(`Пользователь ${actionLabels[variables.action]}!`);\n        queryClient.invalidateQueries('admin-users');\n        queryClient.invalidateQueries('admin-stats');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const adActionMutation = useMutation(\n    ({ adId, action }) => adminAPI.adAction(adId, action),\n    {\n      onSuccess: (data, variables) => {\n        const actionLabels = {\n          approve: 'одобрено',\n          reject: 'отклонено',\n          delete: 'удалено'\n        };\n        toast.success(`Объявление ${actionLabels[variables.action]}!`);\n        queryClient.invalidateQueries('admin-ads');\n        queryClient.invalidateQueries('admin-stats');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const reportActionMutation = useMutation(\n    ({ reportId, action }) => adminAPI.reportAction(reportId, action),\n    {\n      onSuccess: () => {\n        toast.success('Жалоба обработана!');\n        queryClient.invalidateQueries('admin-reports');\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Обработчики\n  const handleUserAction = (userId, action) => {\n    const confirmMessages = {\n      ban: 'Заблокировать пользователя?',\n      unban: 'Разблокировать пользователя?',\n      delete: 'Удалить пользователя? Это действие необратимо!',\n      verify: 'Верифицировать пользователя?'\n    };\n\n    if (window.confirm(confirmMessages[action])) {\n      userActionMutation.mutate({ userId, action });\n    }\n  };\n\n  const handleAdAction = (adId, action) => {\n    const confirmMessages = {\n      approve: 'Одобрить объявление?',\n      reject: 'Отклонить объявление?',\n      delete: 'Удалить объявление?'\n    };\n\n    if (window.confirm(confirmMessages[action])) {\n      adActionMutation.mutate({ adId, action });\n    }\n  };\n\n  const handleReportAction = (reportId, action) => {\n    reportActionMutation.mutate({ reportId, action });\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <AdminContainer>\n      <AdminHeader>\n        <h1>Административная панель</h1>\n        <p>Управление платформой SwingFox</p>\n      </AdminHeader>\n\n      <AdminContent>\n        <TabsContainer>\n          <Tab\n            className={activeTab === 'dashboard' ? 'active' : ''}\n            onClick={() => setActiveTab('dashboard')}\n          >\n            Дашборд\n          </Tab>\n          <Tab\n            className={activeTab === 'users' ? 'active' : ''}\n            onClick={() => setActiveTab('users')}\n          >\n            Пользователи\n          </Tab>\n          <Tab\n            className={activeTab === 'ads' ? 'active' : ''}\n            onClick={() => setActiveTab('ads')}\n          >\n            Объявления\n          </Tab>\n          <Tab\n            className={activeTab === 'reports' ? 'active' : ''}\n            onClick={() => setActiveTab('reports')}\n          >\n            Жалобы\n          </Tab>\n        </TabsContainer>\n\n        {activeTab === 'dashboard' && (\n          <>\n            <StatsGrid>\n              <StatCard>\n                <div className=\"number\">{stats?.total_users || 0}</div>\n                <div className=\"label\">Всего пользователей</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.active_users || 0}</div>\n                <div className=\"label\">Активных пользователей</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.total_ads || 0}</div>\n                <div className=\"label\">Всего объявлений</div>\n              </StatCard>\n              <StatCard>\n                <div className=\"number\">{stats?.pending_reports || 0}</div>\n                <div className=\"label\">Новых жалоб</div>\n              </StatCard>\n            </StatsGrid>\n\n            <Card>\n              <CardTitle>Последняя активность</CardTitle>\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Время</th>\n                    <th>Пользователь</th>\n                    <th>Действие</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {stats?.recent_activity?.map((activity, index) => (\n                    <tr key={index}>\n                      <td>{formatDate(activity.timestamp)}</td>\n                      <td>@{activity.user}</td>\n                      <td>{activity.action}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'users' && (\n          <>\n            <SearchContainer>\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск пользователей...\"\n                value={userFilters.search}\n                onChange={(e) => setUserFilters(prev => ({ ...prev, search: e.target.value }))}\n              />\n              <Select\n                value={userFilters.status}\n                onChange={(e) => setUserFilters(prev => ({ ...prev, status: e.target.value }))}\n              >\n                <option value=\"\">Все статусы</option>\n                <option value=\"active\">Активные</option>\n                <option value=\"banned\">Заблокированные</option>\n                <option value=\"verified\">Верифицированные</option>\n              </Select>\n            </SearchContainer>\n\n            <Card>\n              <CardTitle>Пользователи</CardTitle>\n              {usersLoading ? (\n                <div>Загрузка...</div>\n              ) : (\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>Логин</th>\n                      <th>Email</th>\n                      <th>Регистрация</th>\n                      <th>Статус</th>\n                      <th>Последний вход</th>\n                      <th>Действия</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {users.map(user => (\n                      <tr key={user.id}>\n                        <td>@{user.login}</td>\n                        <td>{user.email}</td>\n                        <td>{formatDate(user.created_at)}</td>\n                        <td>\n                          <StatusBadge className={user.banned ? 'banned' : 'active'}>\n                            {user.banned ? 'Заблокирован' : 'Активен'}\n                          </StatusBadge>\n                          {user.verified && <StatusBadge className=\"success\">Верифицирован</StatusBadge>}\n                        </td>\n                        <td>{user.last_seen ? formatDate(user.last_seen) : 'Никогда'}</td>\n                        <td>\n                          {user.banned ? (\n                            <Button \n                              className=\"success\"\n                              onClick={() => handleUserAction(user.id, 'unban')}\n                            >\n                              Разблокировать\n                            </Button>\n                          ) : (\n                            <Button \n                              className=\"warning\"\n                              onClick={() => handleUserAction(user.id, 'ban')}\n                            >\n                              Заблокировать\n                            </Button>\n                          )}\n                          {!user.verified && (\n                            <Button \n                              className=\"primary\"\n                              onClick={() => handleUserAction(user.id, 'verify')}\n                            >\n                              Верифицировать\n                            </Button>\n                          )}\n                          <Button \n                            className=\"danger\"\n                            onClick={() => handleUserAction(user.id, 'delete')}\n                          >\n                            Удалить\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'ads' && (\n          <>\n            <SearchContainer>\n              <Input\n                type=\"text\"\n                placeholder=\"Поиск объявлений...\"\n                value={adsFilters.search}\n                onChange={(e) => setAdsFilters(prev => ({ ...prev, search: e.target.value }))}\n              />\n              <Select\n                value={adsFilters.status}\n                onChange={(e) => setAdsFilters(prev => ({ ...prev, status: e.target.value }))}\n              >\n                <option value=\"\">Все статусы</option>\n                <option value=\"pending\">На модерации</option>\n                <option value=\"approved\">Одобренные</option>\n                <option value=\"rejected\">Отклоненные</option>\n              </Select>\n            </SearchContainer>\n\n            <Card>\n              <CardTitle>Объявления</CardTitle>\n              {adsLoading ? (\n                <div>Загрузка...</div>\n              ) : (\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>Заголовок</th>\n                      <th>Автор</th>\n                      <th>Тип</th>\n                      <th>Создано</th>\n                      <th>Статус</th>\n                      <th>Действия</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {ads.map(ad => (\n                      <tr key={ad.id}>\n                        <td>{ad.title}</td>\n                        <td>@{ad.author}</td>\n                        <td>{ad.type}</td>\n                        <td>{formatDate(ad.created_at)}</td>\n                        <td>\n                          <StatusBadge className={ad.status || 'pending'}>\n                            {ad.status === 'approved' ? 'Одобрено' : \n                             ad.status === 'rejected' ? 'Отклонено' : 'На модерации'}\n                          </StatusBadge>\n                        </td>\n                        <td>\n                          {(!ad.status || ad.status === 'pending') && (\n                            <>\n                              <Button \n                                className=\"success\"\n                                onClick={() => handleAdAction(ad.id, 'approve')}\n                              >\n                                Одобрить\n                              </Button>\n                              <Button \n                                className=\"warning\"\n                                onClick={() => handleAdAction(ad.id, 'reject')}\n                              >\n                                Отклонить\n                              </Button>\n                            </>\n                          )}\n                          <Button \n                            className=\"danger\"\n                            onClick={() => handleAdAction(ad.id, 'delete')}\n                          >\n                            Удалить\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n            </Card>\n          </>\n        )}\n\n        {activeTab === 'reports' && (\n          <Card>\n            <CardTitle>Жалобы пользователей</CardTitle>\n            <Table>\n              <thead>\n                <tr>\n                  <th>От кого</th>\n                  <th>На кого</th>\n                  <th>Причина</th>\n                  <th>Время</th>\n                  <th>Статус</th>\n                  <th>Действия</th>\n                </tr>\n              </thead>\n              <tbody>\n                {reports.map(report => (\n                  <tr key={report.id}>\n                    <td>@{report.from_user}</td>\n                    <td>@{report.target_user}</td>\n                    <td>{report.reason}</td>\n                    <td>{formatDate(report.created_at)}</td>\n                    <td>\n                      <StatusBadge className={report.status || 'pending'}>\n                        {report.status === 'resolved' ? 'Решено' : 'Новая'}\n                      </StatusBadge>\n                    </td>\n                    <td>\n                      {(!report.status || report.status === 'pending') && (\n                        <Button \n                          className=\"primary\"\n                          onClick={() => handleReportAction(report.id, 'resolve')}\n                        >\n                          Закрыть\n                        </Button>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Card>\n        )}\n      </AdminContent>\n    </AdminContainer>\n  );\n};\n\nexport default Admin;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { keyframes } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Button, Avatar } from './UI';\n\nconst heartBeat = keyframes`\n  0% { transform: scale(1); }\n  50% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`;\n\nconst sparkle = keyframes`\n  0%, 100% { opacity: 0; transform: scale(0) rotate(0deg); }\n  50% { opacity: 1; transform: scale(1) rotate(180deg); }\n`;\n\nconst MatchContainer = styled(motion.div)`\n  background: linear-gradient(135deg, #ff6b6b 0%, #ff8e8e 50%, #ffa8a8 100%);\n  border-radius: 20px;\n  padding: 25px;\n  margin: 15px 0;\n  color: white;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);\n    animation: ${sparkle} 3s infinite;\n  }\n`;\n\nconst MatchHeader = styled.div`\n  text-align: center;\n  margin-bottom: 20px;\n  position: relative;\n  z-index: 2;\n`;\n\nconst MatchIcon = styled.div`\n  font-size: 48px;\n  margin-bottom: 10px;\n  animation: ${heartBeat} 2s infinite;\n  filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.5));\n`;\n\nconst MatchTitle = styled.h3`\n  margin: 0 0 5px 0;\n  font-size: 24px;\n  font-weight: bold;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst MatchSubtitle = styled.p`\n  margin: 0;\n  font-size: 16px;\n  opacity: 0.9;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst MatchContent = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 20px 0;\n  position: relative;\n  z-index: 2;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 15px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  text-align: center;\n  flex: 1;\n`;\n\nconst UserName = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  margin-top: 10px;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease;\n  \n  &:hover {\n    transform: scale(1.05);\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst HeartConnector = styled.div`\n  font-size: 32px;\n  animation: ${heartBeat} 1.5s infinite;\n  filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.6));\n  \n  @media (max-width: 768px) {\n    transform: rotate(90deg);\n    font-size: 28px;\n  }\n`;\n\nconst MatchActions = styled.div`\n  display: flex;\n  gap: 12px;\n  justify-content: center;\n  margin-top: 20px;\n  position: relative;\n  z-index: 2;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ChatButton = styled(Button)`\n  background: linear-gradient(135deg, #4ecdc4 0%, #44a08d 100%);\n  border: none;\n  padding: 12px 24px;\n  font-weight: 600;\n  box-shadow: 0 4px 15px rgba(68, 160, 141, 0.3);\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45b7b8 0%, #3d8b7a 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 6px 20px rgba(68, 160, 141, 0.4);\n  }\n`;\n\nconst DismissButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.2);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 12px 24px;\n  \n  &:hover:not(:disabled) {\n    background: rgba(255, 255, 255, 0.3);\n    border-color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst TimeStamp = styled.div`\n  text-align: center;\n  margin-top: 15px;\n  font-size: 12px;\n  opacity: 0.8;\n  position: relative;\n  z-index: 2;\n`;\n\nconst MatchNotification = ({ \n  notification, \n  onDismiss, \n  onStartChat,\n  isAnimatingOut = false\n}) => {\n  const navigate = useNavigate();\n  \n  const matchUser = notification?.data?.match_user || notification?.from_user;\n  const userData = notification?.from_user_data;\n\n  const handleStartChat = () => {\n    if (onStartChat) {\n      onStartChat(matchUser);\n    } else {\n      navigate(`/chat/${matchUser}`);\n    }\n  };\n\n  const handleViewProfile = () => {\n    navigate(`/profile/${matchUser}`);\n  };\n\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffMinutes = Math.floor((now - date) / (1000 * 60));\n    \n    if (diffMinutes < 1) return 'только что';\n    if (diffMinutes < 60) return `${diffMinutes} мин назад`;\n    if (diffMinutes < 1440) return `${Math.floor(diffMinutes / 60)} ч назад`;\n    return date.toLocaleDateString('ru-RU');\n  };\n\n  return (\n    <MatchContainer\n      initial={{ scale: 0.8, opacity: 0 }}\n      animate={{ \n        scale: isAnimatingOut ? 0.8 : 1, \n        opacity: isAnimatingOut ? 0 : 1,\n        y: isAnimatingOut ? -20 : 0\n      }}\n      exit={{ scale: 0.8, opacity: 0 }}\n      transition={{ \n        type: \"spring\", \n        duration: isAnimatingOut ? 0.3 : 0.6,\n        bounce: isAnimatingOut ? 0 : 0.4 \n      }}\n    >\n      <MatchHeader>\n        <MatchIcon>💕</MatchIcon>\n        <MatchTitle>Взаимная симпатия!</MatchTitle>\n        <MatchSubtitle>У вас совпадение! Начните общение прямо сейчас</MatchSubtitle>\n      </MatchHeader>\n\n      <MatchContent>\n        <UserInfo>\n          <Avatar\n            $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n            $size=\"80px\"\n            $fontSize=\"32px\"\n            $online={true}\n          >\n            {!userData?.avatar && 'Я'}\n          </Avatar>\n          <UserName>Вы</UserName>\n        </UserInfo>\n\n        <HeartConnector>💖</HeartConnector>\n\n        <UserInfo>\n          <Avatar\n            $src={userData?.avatar ? `/uploads/${userData.avatar}` : ''}\n            $size=\"80px\"\n            $fontSize=\"32px\"\n            $online={true}\n          >\n            {!userData?.avatar && (matchUser ? matchUser.charAt(0).toUpperCase() : '?')}\n          </Avatar>\n          <UserName \n            style={{ cursor: 'pointer' }}\n            onClick={() => handleViewProfile()}\n            title=\"Кликните, чтобы перейти в профиль\"\n          >\n            @{matchUser || 'Пользователь'}\n          </UserName>\n        </UserInfo>\n      </MatchContent>\n\n      <MatchActions>\n        <ChatButton onClick={handleStartChat}>\n          💬 Начать чат\n        </ChatButton>\n        \n        <DismissButton $variant=\"secondary\" onClick={handleViewProfile}>\n          👀 Профиль\n        </DismissButton>\n        \n        {onDismiss && (\n          <DismissButton $variant=\"secondary\" onClick={onDismiss}>\n            ✕ Закрыть\n          </DismissButton>\n        )}\n      </MatchActions>\n\n      <TimeStamp>\n        {formatTime(notification.created_at)}\n      </TimeStamp>\n    </MatchContainer>\n  );\n};\n\nexport default MatchNotification;","import React, { useState, useMemo } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled, { css } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nimport { notificationsAPI, privacyAPI, apiUtils } from '../services/api';\nimport MatchNotification from '../components/MatchNotification';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  BellIcon,\n  CheckIcon,\n  TrashIcon,\n  FilterIcon,\n  MessageIcon,\n  HeartIcon,\n  GiftIcon,\n  StarIcon,\n  UsersIcon,\n  EyeIcon,\n  CrownIcon\n} from '../components/UI';\n\n// Иконки для типов уведомлений\nconst getNotificationIcon = (type) => {\n  const iconMap = {\n    message: MessageIcon,\n    like: HeartIcon,\n    visit: EyeIcon,\n    gift: GiftIcon,\n    match: HeartIcon,\n    event: UsersIcon,\n    club: UsersIcon,\n    subscription: CrownIcon,\n    admin: BellIcon,\n    system: BellIcon,\n    rating: StarIcon,\n    photo: EyeIcon,\n    comment: MessageIcon,\n    invitation: UsersIcon,\n    reminder: BellIcon,\n    warning: BellIcon,\n    promotion: CrownIcon\n  };\n  \n  const IconComponent = iconMap[type] || BellIcon;\n  return <IconComponent />;\n};\n\n// Цвета для типов уведомлений\nconst getNotificationColor = (type) => {\n  const colorMap = {\n    message: '#4299e1',\n    like: '#e53e3e',\n    visit: '#38a169',\n    gift: '#d69e2e',\n    match: '#e53e3e',\n    event: '#805ad5',\n    club: '#805ad5',\n    subscription: '#d69e2e',\n    admin: '#dc3522',\n    system: '#4a5568',\n    rating: '#ed8936',\n    photo: '#38a169',\n    comment: '#4299e1',\n    invitation: '#805ad5',\n    reminder: '#4a5568',\n    warning: '#f56565',\n    promotion: '#d69e2e'\n  };\n  \n  return colorMap[type] || '#4a5568';\n};\n\nconst NotificationsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst NotificationsHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n  gap: 15px;\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`;\n\nconst FilterTabs = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst FilterTab = styled.button`\n  padding: 10px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  ${props => props.$count > 0 && `\n    &::after {\n      content: '${props.$count}';\n      position: absolute;\n      top: -5px;\n      right: -5px;\n      background: #f56565;\n      color: white;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      font-size: 10px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n    }\n  `}\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px;\n    font-size: 13px;\n  }\n`;\n\nconst BulkActions = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst NotificationsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst NotificationItem = styled(motion.div)`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-left: 4px solid ${props => props.$color};\n  transition: all 0.3s ease;\n  position: relative;\n  \n  ${props => !props.$isRead && css`\n    background: linear-gradient(135deg, rgba(220, 53, 34, 0.02) 0%, rgba(255, 107, 88, 0.02) 100%);\n    border-left-color: #dc3522;\n    \n    &::before {\n      content: '';\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      width: 8px;\n      height: 8px;\n      background: #dc3522;\n      border-radius: 50%;\n    }\n  `}\n  \n  &:hover {\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    transform: translateY(-2px);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst NotificationContent = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: flex-start;\n`;\n\nconst NotificationIcon = styled.div`\n  width: 45px;\n  height: 45px;\n  border-radius: 12px;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  \n  @media (max-width: 768px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nconst NotificationDetails = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst NotificationTitle = styled.h4`\n  margin: 0 0 5px 0;\n  color: #2d3748;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.3;\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`;\n\nconst NotificationMessage = styled.p`\n  margin: 0 0 10px 0;\n  color: #4a5568;\n  font-size: 14px;\n  line-height: 1.4;\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n\nconst NotificationMeta = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst NotificationTime = styled.span`\n  font-size: 12px;\n  color: #718096;\n`;\n\nconst NotificationPriority = styled.span`\n  padding: 3px 8px;\n  border-radius: 6px;\n  font-size: 11px;\n  font-weight: 500;\n  text-transform: uppercase;\n  \n  ${props => {\n    switch (props.$priority) {\n      case 'high':\n        return 'background: #fed7d7; color: #c53030;';\n      case 'normal':\n        return 'background: #bee3f8; color: #2b6cb0;';\n      case 'low':\n        return 'background: #e2e8f0; color: #4a5568;';\n      default:\n        return 'background: #e2e8f0; color: #4a5568;';\n    }\n  }}\n`;\n\nconst NotificationActions = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\n// Кнопка для перехода в профиль\nconst ProfileButton = styled(IconButton)`\n  background: linear-gradient(135deg, #4299e1 0%, #3182ce 100%);\n  color: white;\n  border: 2px solid #3182ce;\n  transition: all 0.3s ease;\n  \n  &:hover:not(:disabled) {\n    background: linear-gradient(135deg, #3182ce 0%, #2c5aa0 100%);\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(66, 153, 225, 0.4);\n  }\n  \n  &:active {\n    transform: translateY(0);\n  }\n`;\n\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px; /* Добавляем как в других компонентах */\n  \n  .icon {\n    font-size: 72px; /* Увеличиваем с 64px до 72px */\n    margin-bottom: 54px; /* Увеличиваем с 20px до 54px для поднятия эмодзи на 30px */\n    opacity: 0.7; /* Увеличиваем с 0.5 до 0.7 */\n    line-height: 1;\n    display: block;\n    text-align: center;\n    width: 100%;\n    transform: translateX(-2px); /* Компенсация для визуального центра эмодзи */\n  }\n  \n  h3 {\n    margin: 0 0 16px 0; /* Увеличиваем с 10px до 16px */\n    font-size: 28px; /* Увеличиваем с 20px до 28px */\n    color: #2d3748;\n    font-weight: 700; /* Добавляем font-weight */\n    line-height: 1.2;\n    text-align: center;\n    width: 100%;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n    line-height: 1.6;\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 300px;\n    padding: 40px 20px;\n    \n    .icon {\n      font-size: 56px; /* Увеличиваем с 48px до 56px */\n      margin-bottom: 50px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 24px; /* Увеличиваем с 18px до 24px */\n      margin-bottom: 14px;\n    }\n    \n    p {\n      font-size: 15px;\n      max-width: 280px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    min-height: 250px;\n    padding: 30px 16px;\n    \n    .icon {\n      font-size: 48px;\n      margin-bottom: 48px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 22px;\n      margin-bottom: 12px;\n    }\n    \n    p {\n      font-size: 14px;\n      max-width: 260px;\n    }\n  }\n`;\n\nconst GuestsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst GuestItem = styled(motion.div)`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-left: 4px solid #38a169;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);\n    transform: translateY(-2px);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst GuestContent = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n`;\n\nconst GuestAvatar = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: linear-gradient(135deg, #38a169 0%, #48bb78 100%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 24px;\n  flex-shrink: 0;\n  \n  img {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n  \n  @media (max-width: 768px) {\n    width: 50px;\n    height: 50px;\n    font-size: 20px;\n  }\n`;\n\nconst GuestDetails = styled.div`\n  flex: 1;\n  min-width: 0;\n`;\n\nconst GuestName = styled.h4`\n  margin: 0 0 5px 0;\n  color: #2d3748;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: color 0.2s ease;\n  \n  &:hover {\n    color: #38a169;\n  }\n`;\n\nconst GuestInfo = styled.div`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 8px;\n`;\n\nconst GuestStatus = styled.span`\n  font-size: 12px;\n  color: #718096;\n  background: #f7fafc;\n  padding: 2px 8px;\n  border-radius: 12px;\n`;\n\nconst GuestLocation = styled.span`\n  font-size: 12px;\n  color: #718096;\n`;\n\nconst GuestTime = styled.span`\n  font-size: 11px;\n  color: #a0aec0;\n`;\n\nconst GuestActions = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst Notifications = () => {\n  const [filter, setFilter] = useState('all');\n  const [selectedNotifications, setSelectedNotifications] = useState([]);\n  const [animatingOut, setAnimatingOut] = useState(new Set());\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n\n  // Получение уведомлений\n  const { data: notificationsData, isLoading, refetch } = useQuery(\n    ['notifications', filter],\n    () => {\n      // Если выбран фильтр \"guests\", не делаем запрос к уведомлениям\n      if (filter === 'guests') {\n        return { notifications: [], unread_count: 0 };\n      }\n      \n      const filters = {};\n      if (filter === 'unread') filters.unread = true;\n      if (filter !== 'all' && filter !== 'unread') filters.type = filter;\n      return notificationsAPI.getNotifications(filters);\n    },\n    {\n      refetchInterval: 30000, // Обновление каждые 30 секунд\n      enabled: filter !== 'guests', // Отключаем для вкладки гостей\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Получение гостей профиля (только для VIP пользователей)\n  const { data: guestsData, isLoading: guestsLoading } = useQuery(\n    ['guests', filter],\n    () => notificationsAPI.getGuests(),\n    {\n      enabled: filter === 'guests' && apiUtils.isVip(currentUser),\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Получение текущего пользователя\n  const { data: currentUser } = useQuery(\n    ['currentUser'],\n    () => {\n      const token = localStorage.getItem('swingfox_token');\n      if (!token) return null;\n      \n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return {\n          login: payload.login,\n          vipType: payload.vipType || 'FREE'\n        };\n      } catch (error) {\n        console.error('Ошибка парсинга токена:', error);\n        return null;\n      }\n    },\n    {\n      staleTime: 5 * 60 * 1000, // 5 минут\n      cacheTime: 10 * 60 * 1000 // 10 минут\n    }\n  );\n\n  const notifications = notificationsData?.notifications || [];\n  const unreadCount = notificationsData?.unread_count || 0;\n  const guests = guestsData?.guests || [];\n\n\n  // Фильтруем уведомления в зависимости от выбранного фильтра\n  const filteredNotifications = useMemo(() => {\n    // Если выбран фильтр \"guests\", возвращаем пустой массив\n    if (filter === 'guests') {\n      return [];\n    }\n    \n    if (!notifications || notifications.length === 0) {\n      return [];\n    }\n    \n    if (filter === 'unread') {\n      return notifications.filter(notif => !notif.is_read);\n    } else if (filter !== 'all') {\n      return notifications.filter(notif => notif.type === filter);\n    }\n    return notifications;\n  }, [notifications, filter]);\n\n  // Подсчитаем количество по типам для фильтров\n  const countByType = useMemo(() => {\n    if (!notifications || notifications.length === 0) {\n      return {};\n    }\n    \n    return notifications.reduce((acc, notif) => {\n      acc[notif.type] = (acc[notif.type] || 0) + 1;\n      return acc;\n    }, {});\n  }, [notifications]);\n\n  // Подсчитаем количество непрочитанных\n  const currentUnreadCount = useMemo(() => {\n    if (!notifications || notifications.length === 0) {\n      return 0;\n    }\n    \n    return notifications.filter(notif => !notif.is_read).length;\n  }, [notifications]);\n\n  // Мутации\n  const markAsReadMutation = useMutation(notificationsAPI.markAsRead, {\n    onSuccess: (data, variables) => {\n      // Обновляем данные в queryClient для всех активных запросов\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.map(notif => \n            notif.id === variables \n              ? { ...notif, is_read: true }\n              : notif\n          ),\n          unread_count: Math.max(0, (oldData.unread_count || 0) - 1)\n        };\n      });\n      \n      // Также обновляем данные для фильтра 'all'\n      queryClient.setQueryData(['notifications', 'all'], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.map(notif => \n            notif.id === variables \n              ? { ...notif, is_read: true }\n              : notif\n          ),\n          unread_count: Math.max(0, (oldData.unread_count || 0) - 1)\n        };\n      });\n      \n      toast.success('Уведомление отмечено как прочитанное');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const markAllAsReadMutation = useMutation(notificationsAPI.markAllAsRead, {\n    onSuccess: () => {\n      // Обновляем данные в queryClient для всех активных запросов\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.map(notif => ({ ...notif, is_read: true })),\n          unread_count: 0\n        };\n      });\n      \n      // Также обновляем данные для фильтра 'all'\n      queryClient.setQueryData(['notifications', 'all'], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.map(notif => ({ ...notif, is_read: true })),\n          unread_count: 0\n        };\n      });\n      \n      toast.success('Все уведомления отмечены как прочитанные');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteNotificationMutation = useMutation(notificationsAPI.deleteNotification, {\n    onSuccess: (data, variables) => {\n      // Удаляем уведомление из queryClient\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.filter(notif => notif.id !== variables)\n        };\n      });\n      \n      // Также обновляем данные для фильтра 'all'\n      queryClient.setQueryData(['notifications', 'all'], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.filter(notif => notif.id !== variables)\n        };\n      });\n      \n      toast.success('Уведомление удалено');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const deleteReadNotificationsMutation = useMutation(notificationsAPI.deleteReadNotifications, {\n    onSuccess: () => {\n      // Удаляем прочитанные уведомления из queryClient\n      queryClient.setQueryData(['notifications', filter], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.filter(notif => !notif.is_read)\n        };\n      });\n      \n      // Также обновляем данные для фильтра 'all'\n      queryClient.setQueryData(['notifications', 'all'], (oldData) => {\n        if (!oldData) return oldData;\n        return {\n          ...oldData,\n          notifications: oldData.notifications.filter(notif => !notif.is_read)\n        };\n      });\n      \n      toast.success('Прочитанные уведомления удалены');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Функция для перехода в профиль пользователя\n  const handleViewProfile = (username) => {\n    if (username) {\n      navigate(`/profile/${username}`);\n    }\n  };\n\n  // Функция для определения, можно ли перейти в профиль\n  const canViewProfile = (notification) => {\n    // Можно перейти в профиль для уведомлений, где есть информация о пользователе\n    return notification.from_user && \n           ['like', 'superlike', 'gift', 'profile_visit', 'image_like', 'rating', 'comment'].includes(notification.type);\n  };\n\n  // Обработчики\n  const handleMarkAsRead = (id) => {\n    // Добавляем ID в множество анимирующих уведомлений\n    setAnimatingOut(prev => new Set(prev).add(id));\n    \n    // Запускаем мутацию\n    markAsReadMutation.mutate(id);\n    \n    // Если фильтр \"Непрочитанные\", то скрываем уведомление через анимацию\n    if (filter === 'unread') {\n      setTimeout(() => {\n        setAnimatingOut(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(id);\n          return newSet;\n        });\n      }, 300); // Время анимации\n    }\n  };\n\n  const handleDelete = (id) => {\n    if (window.confirm('Удалить это уведомление?')) {\n      deleteNotificationMutation.mutate(id);\n    }\n  };\n\n  const handleMarkAllAsRead = () => {\n    if (window.confirm('Отметить все уведомления как прочитанные?')) {\n      markAllAsReadMutation.mutate();\n    }\n  };\n\n  const handleDeleteRead = () => {\n    if (window.confirm('Удалить все прочитанные уведомления?')) {\n      deleteReadNotificationsMutation.mutate();\n    }\n  };\n\n  // Фильтры\n  const filterTabs = useMemo(() => {\n    const tabs = [\n      { key: 'all', label: 'Все', count: notifications.length },\n      { key: 'unread', label: 'Непрочитанные', count: currentUnreadCount },\n      { key: 'match', label: '💕 Мэтчи', count: countByType.match || 0 },\n      { key: 'message', label: 'Сообщения', count: countByType.message || 0 },\n      { key: 'like', label: 'Лайки', count: countByType.like || 0 },\n      { key: 'gift', label: 'Подарки', count: countByType.gift || 0 },\n      { key: 'system', label: 'Системные', count: countByType.system || 0 }\n    ];\n\n    // Добавляем вкладку гостей только для VIP пользователей\n    if (apiUtils.isVip(currentUser)) {\n      tabs.splice(2, 0, { key: 'guests', label: '👥 Гости', count: guests.length, vipOnly: true });\n    }\n\n    return tabs;\n  }, [notifications.length, currentUnreadCount, countByType, guests.length, currentUser]);\n\n  if (isLoading) {\n    return (\n      <NotificationsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </NotificationsContainer>\n    );\n  }\n\n  return (\n    <NotificationsContainer>\n      <ContentCard $maxWidth=\"1000px\">\n        <FlexContainer $justify=\"space-between\" $align=\"center\" $wrap>\n          <SectionTitle>\n            <BellIcon />\n            Уведомления\n          </SectionTitle>\n          <Button $size=\"small\" onClick={() => refetch()}>\n            Обновить\n          </Button>\n        </FlexContainer>\n\n        <NotificationsHeader>\n          <FilterTabs>\n            {filterTabs.map(tab => (\n              <FilterTab\n                key={tab.key}\n                $active={filter === tab.key}\n                $count={tab.key === 'unread' ? unreadCount : 0}\n                onClick={() => setFilter(tab.key)}\n              >\n                {tab.label}\n              </FilterTab>\n            ))}\n          </FilterTabs>\n\n          <BulkActions>\n            {currentUnreadCount > 0 && (\n              <Button\n                $size=\"small\"\n                $variant=\"secondary\"\n                onClick={handleMarkAllAsRead}\n                disabled={markAllAsReadMutation.isLoading}\n              >\n                <CheckIcon />\n                Отметить все\n              </Button>\n            )}\n            \n            <Button\n              $size=\"small\"\n              $variant=\"danger\"\n              onClick={handleDeleteRead}\n              disabled={deleteReadNotificationsMutation.isLoading}\n            >\n              <TrashIcon />\n              Удалить прочитанные\n            </Button>\n          </BulkActions>\n        </NotificationsHeader>\n\n        {filter === 'guests' ? (\n          guestsLoading ? (\n            <EmptyState>\n              <div className=\"icon\">⏳</div>\n              <h3>Загрузка гостей...</h3>\n              <p>Получаем информацию о посетителях вашего профиля</p>\n            </EmptyState>\n          ) : guests.length === 0 ? (\n            <EmptyState>\n              <div className=\"icon\">👥</div>\n              <h3>Нет гостей</h3>\n              <p>Пока никто не посещал ваш профиль</p>\n            </EmptyState>\n          ) : (\n            <GuestsList>\n              <AnimatePresence>\n                {guests.map((guest) => (\n                  <GuestItem\n                    key={guest.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <GuestContent>\n                      <GuestAvatar>\n                        {guest.avatar && guest.avatar !== 'no_photo.jpg' ? (\n                          <img \n                            src={`/uploads/${guest.avatar}`} \n                            alt={guest.visitor}\n                            onError={(e) => {\n                              e.target.style.display = 'none';\n                              e.target.nextSibling.style.display = 'flex';\n                            }}\n                          />\n                        ) : null}\n                        <span style={{ display: guest.avatar && guest.avatar !== 'no_photo.jpg' ? 'none' : 'flex' }}>\n                          {guest.visitor.charAt(0).toUpperCase()}\n                        </span>\n                      </GuestAvatar>\n                      \n                      <GuestDetails>\n                        <GuestName onClick={() => handleViewProfile(guest.visitor)}>\n                          {guest.visitor}\n                        </GuestName>\n                        \n                        <GuestInfo>\n                          <GuestStatus>{guest.status}</GuestStatus>\n                          <GuestLocation>{guest.city}, {guest.country}</GuestLocation>\n                          {guest.online && (\n                            <span style={{ color: '#38a169', fontSize: '12px' }}>🟢 Онлайн</span>\n                          )}\n                        </GuestInfo>\n                        \n                        <GuestTime>\n                          Посетил {apiUtils.formatTimeAgo(guest.visited_at)}\n                        </GuestTime>\n                      </GuestDetails>\n                      \n                      <GuestActions>\n                        <ProfileButton\n                          $size=\"35px\"\n                          $variant=\"secondary\"\n                          onClick={() => handleViewProfile(guest.visitor)}\n                          title=\"Посмотреть профиль\"\n                        >\n                          👤\n                        </ProfileButton>\n                      </GuestActions>\n                    </GuestContent>\n                  </GuestItem>\n                ))}\n              </AnimatePresence>\n            </GuestsList>\n          )\n        ) : filteredNotifications.length === 0 ? (\n          <EmptyState>\n            <div className=\"icon\">🔔</div>\n            <h3>Нет уведомлений</h3>\n            <p>\n              {filter === 'unread' \n                ? 'У вас нет непрочитанных уведомлений'\n                : 'Здесь будут отображаться ваши уведомления'\n              }\n            </p>\n          </EmptyState>\n        ) : (\n          <NotificationsList>\n            <AnimatePresence>\n              {filteredNotifications.map((notification) => {\n                // Специальная обработка для мэтч-уведомлений\n                if (notification.type === 'match') {\n                  return (\n                    <MatchNotification\n                      key={notification.id}\n                      notification={notification}\n                      onDismiss={() => handleMarkAsRead(notification.id)}\n                      onStartChat={(username) => {\n                        // Перенаправляем в чат\n                        window.location.href = `/chat/${username}`;\n                      }}\n                      isAnimatingOut={animatingOut.has(notification.id)}\n                    />\n                  );\n                }\n\n                // Обычные уведомления\n                return (\n                  <NotificationItem\n                    key={notification.id}\n                    $color={getNotificationColor(notification.type)}\n                    $isRead={notification.is_read}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ \n                      opacity: animatingOut.has(notification.id) ? 0 : 1, \n                      y: animatingOut.has(notification.id) ? -20 : 0,\n                      scale: animatingOut.has(notification.id) ? 0.8 : 1\n                    }}\n                    exit={{ opacity: 0, y: -20 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <NotificationContent>\n                      <NotificationIcon $color={getNotificationColor(notification.type)}>\n                        {getNotificationIcon(notification.type)}\n                      </NotificationIcon>\n                      \n                      <NotificationDetails>\n                        <NotificationTitle>\n                          {notification.title}\n                        </NotificationTitle>\n                        \n                        <NotificationMessage>\n                          {notification.type === 'like' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> лайкнул вашу анкету!\n                            </span>\n                          )}\n                          {notification.type === 'superlike' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> отправил вам суперлайк\n                              {notification.data?.message && (\n                                <span>: <i>«{notification.data.message}»</i></span>\n                              )}\n                            </span>\n                          )}\n                          {notification.type === 'gift' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> отправил вам подарок\n                              {notification.data?.gift_type && (\n                                <span>: {notification.data.gift_type}</span>\n                              )}\n                            </span>\n                          )}\n                          {notification.type === 'profile_visit' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> посмотрел ваш профиль\n                            </span>\n                          )}\n                          {notification.type === 'image_like' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> лайкнул ваше фото\n                            </span>\n                          )}\n                          {notification.type === 'rating' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> оценил ваш профиль\n                            </span>\n                          )}\n                          {notification.type === 'comment' && (\n                            <span>\n                              <strong \n                                style={{ \n                                  color: '#dc3522', \n                                  cursor: 'pointer',\n                                  transition: 'all 0.2s ease'\n                                }}\n                                onClick={() => handleViewProfile(notification.from_user)}\n                                title=\"Кликните, чтобы перейти в профиль\"\n                                onMouseEnter={(e) => {\n                                  e.target.style.transform = 'scale(1.05)';\n                                  e.target.style.color = '#ff6b58';\n                                }}\n                                onMouseLeave={(e) => {\n                                  e.target.style.transform = 'scale(1)';\n                                  e.target.style.color = '#dc3522';\n                                }}\n                              >\n                                {notification.from_user}\n                              </strong> оставил комментарий\n                            </span>\n                          )}\n                          {!['like', 'superlike', 'gift', 'profile_visit', 'image_like', 'rating', 'comment'].includes(notification.type) && (\n                            notification.message\n                          )}\n                        </NotificationMessage>\n                        \n                        <NotificationMeta>\n                          <NotificationTime>\n                            {apiUtils.formatTimeAgo(notification.created_at)}\n                          </NotificationTime>\n                          \n                          <NotificationPriority $priority={notification.priority}>\n                            {notification.priority}\n                          </NotificationPriority>\n                          \n                          {notification.from_user && (\n                            <span \n                              style={{ \n                                fontSize: '12px', \n                                color: '#dc3522', \n                                cursor: 'pointer',\n                                textDecoration: 'underline',\n                                fontWeight: '500',\n                                transition: 'all 0.2s ease'\n                              }}\n                              onClick={() => handleViewProfile(notification.from_user)}\n                              title=\"Кликните, чтобы перейти в профиль\"\n                              onMouseEnter={(e) => {\n                                e.target.style.transform = 'scale(1.05)';\n                                e.target.style.color = '#ff6b58';\n                              }}\n                              onMouseLeave={(e) => {\n                                e.target.style.transform = 'scale(1)';\n                                e.target.style.color = '#dc3522';\n                              }}\n                            >\n                              от {notification.from_user}\n                            </span>\n                          )}\n                        </NotificationMeta>\n                      </NotificationDetails>\n                      \n                      <NotificationActions>\n                        {/* Кнопка для перехода в профиль */}\n                        {canViewProfile(notification) && (\n                          <ProfileButton\n                            $size=\"35px\"\n                            $variant=\"secondary\"\n                            onClick={() => handleViewProfile(notification.from_user)}\n                            title=\"Посмотреть профиль\"\n                          >\n                            👤\n                          </ProfileButton>\n                        )}\n                        \n                        {!notification.is_read && (\n                          <IconButton\n                            $size=\"35px\"\n                            $variant=\"secondary\"\n                            onClick={() => handleMarkAsRead(notification.id)}\n                            title=\"Отметить как прочитанное\"\n                          >\n                            <CheckIcon />\n                          </IconButton>\n                        )}\n                        \n                        <IconButton\n                          $size=\"35px\"\n                          $variant=\"secondary\"\n                          onClick={() => handleDelete(notification.id)}\n                          title=\"Удалить уведомление\"\n                        >\n                          <TrashIcon />\n                        </IconButton>\n                      </NotificationActions>\n                    </NotificationContent>\n                  </NotificationItem>\n                );\n              })}\n            </AnimatePresence>\n          </NotificationsList>\n        )}\n      </ContentCard>\n    </NotificationsContainer>\n  );\n};\n\nexport default Notifications;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { clubsAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  TextArea,\n  Select,\n  Avatar,\n  UsersIcon,\n  PlusIcon,\n  CloseIcon,\n  SearchIcon,\n  FilterIcon,\n  CheckIcon,\n  EditIcon\n} from '../components/UI';\n\nconst ClubsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst FiltersContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst FilterRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  gap: 15px;\n  align-items: end;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 12px;\n  }\n`;\n\nconst SearchInput = styled.div`\n  position: relative;\n  \n  input {\n    width: 100%;\n    padding: 12px 16px 12px 45px;\n    border: 2px solid #e2e8f0;\n    border-radius: 10px;\n    font-size: 15px;\n    transition: all 0.3s ease;\n    \n    &:focus {\n      outline: none;\n      border-color: #dc3522;\n      box-shadow: 0 0 0 3px rgba(220, 53, 34, 0.1);\n    }\n  }\n  \n  .search-icon {\n    position: absolute;\n    left: 15px;\n    top: 50%;\n    transform: translateY(-50%);\n    color: #718096;\n  }\n`;\n\nconst ClubCard = styled(motion.div)`\n  background: white;\n  border-radius: 20px;\n  overflow: hidden;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  \n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ClubHeader = styled.div`\n  height: 160px;\n  background: ${props => props.$avatarUrl ? `url(${props.$avatarUrl})` : 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)'};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: relative;\n  padding: 20px;\n  color: white;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: ${props => props.$avatarUrl ? 'rgba(0, 0, 0, 0.4)' : 'transparent'};\n    border-radius: 20px 20px 0 0;\n  }\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 20px;\n    background: white;\n    border-radius: 20px 20px 0 0;\n  }\n  \n  > * {\n    position: relative;\n    z-index: 1;\n  }\n`;\n\nconst ClubContent = styled.div`\n  padding: 20px;\n`;\n\nconst ClubTitle = styled.h3`\n  margin: 0 0 8px 0;\n  font-size: 18px;\n  font-weight: 600;\n  color: #2d3748;\n  \n  @media (max-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\nconst ClubDescription = styled.p`\n  margin: 0 0 15px 0;\n  color: #4a5568;\n  font-size: 14px;\n  line-height: 1.4;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nconst ClubMeta = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst ClubStats = styled.div`\n  display: flex;\n  gap: 15px;\n  font-size: 12px;\n  color: #718096;\n  \n  span {\n    display: flex;\n    align-items: center;\n    gap: 4px;\n  }\n`;\n\nconst ClubType = styled.span`\n  padding: 4px 8px;\n  border-radius: 6px;\n  font-size: 11px;\n  font-weight: 500;\n  text-transform: uppercase;\n  \n  ${props => props.$isPrivate ? `\n    background: #fed7d7;\n    color: #c53030;\n  ` : `\n    background: #c6f6d5;\n    color: #276749;\n  `}\n`;\n\nconst MyClubCard = styled(ClubCard)`\n  border: 2px solid #dc3522;\n  \n  ${ClubHeader} {\n    background: linear-gradient(135deg, #38a169 0%, #48bb78 100%);\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 400px; /* Добавляем как в других компонентах */\n  \n  .icon {\n    font-size: 72px; /* Увеличиваем с 64px до 72px */\n    margin-bottom: 54px; /* Увеличиваем с 20px до 54px для поднятия эмодзи на 30px */\n    opacity: 0.7; /* Увеличиваем с 0.5 до 0.7 */\n    line-height: 1;\n    display: block;\n    text-align: center;\n    width: 100%;\n    transform: translateX(-2px); /* Компенсация для визуального центра эмодзи */\n  }\n  \n  h3 {\n    margin: 0 0 16px 0; /* Увеличиваем с 10px до 16px */\n    font-size: 28px; /* Увеличиваем с 20px до 28px */\n    color: #2d3748;\n    font-weight: 700; /* Добавляем font-weight */\n    line-height: 1.2;\n    text-align: center;\n    width: 100%;\n  }\n  \n  p {\n    margin: 0 0 20px 0;\n    font-size: 16px;\n    line-height: 1.6;\n    max-width: 320px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n  \n  @media (max-width: 768px) {\n    min-height: 300px;\n    padding: 40px 20px;\n    \n    .icon {\n      font-size: 56px;\n      margin-bottom: 50px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 24px;\n      margin-bottom: 14px;\n    }\n    \n    p {\n      font-size: 15px;\n      max-width: 280px;\n    }\n  }\n  \n  @media (max-width: 480px) {\n    min-height: 250px;\n    padding: 30px 16px;\n    \n    .icon {\n      font-size: 48px;\n      margin-bottom: 48px;\n      transform: translateX(-1px);\n    }\n    \n    h3 {\n      font-size: 22px;\n      margin-bottom: 12px;\n    }\n    \n    p {\n      font-size: 14px;\n      max-width: 260px;\n    }\n  }\n`;\n\nconst ApplicationCard = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  border-left: 4px solid #d69e2e;\n  margin-bottom: 15px;\n  \n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 15px;\n  }\n  \n  .applicant {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n    \n    .name {\n      font-weight: 600;\n      color: #2d3748;\n    }\n    \n    .date {\n      font-size: 12px;\n      color: #718096;\n    }\n  }\n  \n  .message {\n    margin: 10px 0;\n    color: #4a5568;\n    font-size: 14px;\n    font-style: italic;\n  }\n  \n  .actions {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nconst Clubs = () => {\n  const [activeTab, setActiveTab] = useState('clubs');\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [selectedClub, setSelectedClub] = useState(null);\n  const [showEventDetailsModal, setShowEventDetailsModal] = useState(false);\n  const [selectedEventDetails, setSelectedEventDetails] = useState(null);\n  const [showJoinEventModal, setShowJoinEventModal] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [cityFilter, setCityFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const queryClient = useQueryClient();\n\n\n  // Queries\n  const { data: clubsData, isLoading: isLoadingClubs } = useQuery(\n    ['clubs', searchQuery, cityFilter, typeFilter],\n    () => clubsAPI.getClubs({\n      search: searchQuery,\n      city: cityFilter,\n      type: typeFilter\n    }),\n    {\n      enabled: activeTab === 'clubs',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: eventsData, isLoading: isLoadingEvents } = useQuery(\n    ['events', searchQuery, cityFilter],\n    () => clubsAPI.getEvents({\n      search: searchQuery,\n      city: cityFilter\n    }),\n    {\n      enabled: activeTab === 'events',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n\n\n\n  const joinEventMutation = useMutation(\n    (eventId) => clubsAPI.joinEvent(eventId),\n    {\n      onSuccess: () => {\n        toast.success('Вы успешно записались на мероприятие!');\n        queryClient.invalidateQueries(['events']);\n      },\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n\n\n\n  const handleClubClick = (club) => {\n    setSelectedClub(club);\n    setShowDetailsModal(true);\n  };\n\n  const handleEventClick = (event) => {\n    setSelectedEventDetails(event);\n    setShowEventDetailsModal(true);\n  };\n\n\n  const handleJoinEvent = (event) => {\n    setSelectedEvent(event);\n    setShowJoinEventModal(true);\n  };\n\n  const confirmJoinEvent = async () => {\n    try {\n      await joinEventMutation.mutateAsync(selectedEvent.id);\n      toast.success('Вы успешно записались на мероприятие!');\n      queryClient.invalidateQueries(['events']);\n      setShowJoinEventModal(false);\n      setSelectedEvent(null);\n    } catch (error) {\n      console.error('Join event error:', error);\n      toast.error(error.response?.data?.error || 'Ошибка при записи на мероприятие');\n    }\n  };\n\n  const filteredClubs = clubsData?.clubs || [];\n  const eventsList = eventsData?.events || [];\n\n  return (\n    <ClubsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"center\" $align=\"center\" $wrap>\n          <SectionTitle>\n            <UsersIcon />\n            Клубы и мероприятия\n          </SectionTitle>\n        </FlexContainer>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'clubs'}\n            onClick={() => setActiveTab('clubs')}\n          >\n            <UsersIcon />\n            Клубы\n          </Tab>\n          <Tab\n            $active={activeTab === 'events'}\n            onClick={() => setActiveTab('events')}\n          >\n            <SearchIcon />\n            Мероприятия\n          </Tab>\n        </TabsContainer>\n\n        {/* Фильтры для просмотра клубов */}\n        {activeTab === 'clubs' && (\n          <FiltersContainer>\n            <FilterRow>\n              <SearchInput>\n                <div className=\"search-icon\">\n                  <SearchIcon />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск клубов...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </SearchInput>\n              \n              <Select\n                value={cityFilter}\n                onChange={(e) => setCityFilter(e.target.value)}\n                style={{ minWidth: '150px' }}\n              >\n                <option value=\"\">Все города</option>\n                <option value=\"Москва\">Москва</option>\n                <option value=\"Санкт-Петербург\">Санкт-Петербург</option>\n                <option value=\"Екатеринбург\">Екатеринбург</option>\n                <option value=\"Новосибирск\">Новосибирск</option>\n              </Select>\n              \n              <Select\n                value={typeFilter}\n                onChange={(e) => setTypeFilter(e.target.value)}\n                style={{ minWidth: '120px' }}\n              >\n                <option value=\"\">Все типы</option>\n                <option value=\"public\">Открытые</option>\n                <option value=\"private\">Приватные</option>\n              </Select>\n            </FilterRow>\n          </FiltersContainer>\n        )}\n\n        {/* Фильтры для просмотра мероприятий */}\n        {activeTab === 'events' && (\n          <FiltersContainer>\n            <FilterRow>\n              <SearchInput>\n                <div className=\"search-icon\">\n                  <SearchIcon />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Поиск мероприятий...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                />\n              </SearchInput>\n              \n              <Select\n                value={cityFilter}\n                onChange={(e) => setCityFilter(e.target.value)}\n                style={{ minWidth: '150px' }}\n              >\n                <option value=\"\">Все города</option>\n                <option value=\"Москва\">Москва</option>\n                <option value=\"Санкт-Петербург\">Санкт-Петербург</option>\n                <option value=\"Екатеринбург\">Екатеринбург</option>\n                <option value=\"Новосибирск\">Новосибирск</option>\n              </Select>\n            </FilterRow>\n          </FiltersContainer>\n        )}\n\n        {/* Просмотр клубов */}\n        {activeTab === 'clubs' && (\n          <div>\n            {isLoadingClubs ? (\n              <LoadingSpinner />\n            ) : filteredClubs.length > 0 ? (\n              <Grid $columns=\"repeat(auto-fill, minmax(300px, 1fr))\" $gap=\"25px\">\n                {filteredClubs.map((club) => (\n                  <ClubCard\n                    key={club.id}\n                    onClick={() => handleClubClick(club)}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <ClubHeader $avatarUrl={club.avatar ? `/uploads/${club.avatar}` : null}>\n                      <FlexContainer $justify=\"space-between\" $align=\"flex-start\">\n                        <div>\n                          <ClubTitle style={{ color: 'white', fontSize: '16px' }}>\n                            {club.name}\n                          </ClubTitle>\n                          <div style={{ fontSize: '12px', opacity: '0.9' }}>\n                            {club.city}\n                          </div>\n                        </div>\n                        <ClubType $isPrivate={club.is_private}>\n                          {club.is_private ? 'Приватный' : 'Открытый'}\n                        </ClubType>\n                      </FlexContainer>\n                    </ClubHeader>\n                    \n                    <ClubContent>\n                      <ClubDescription>\n                        {club.description}\n                      </ClubDescription>\n                      \n                      <ClubMeta>\n                        <ClubStats>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            📍 {club.city}\n                          </span>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            👥 {club.current_members || 0} участников\n                          </span>\n                          {club.membership_fee && (\n                            <span style={{ fontSize: '12px', color: '#718096' }}>\n                              💰 {club.membership_fee}₽\n                            </span>\n                          )}\n                        </ClubStats>\n                        <div style={{ fontSize: '12px', color: '#718096', marginTop: '8px' }}>\n                          {club.is_private ? '🔒 Приватный клуб' : '🌐 Открытый клуб'}\n                        </div>\n                      </ClubMeta>\n                    </ClubContent>\n                  </ClubCard>\n                ))}\n              </Grid>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🏛️</div>\n                <h3>Клубы не найдены</h3>\n                <p>Попробуйте изменить параметры поиска</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Просмотр мероприятий */}\n        {activeTab === 'events' && (\n          <div>\n            {isLoadingEvents ? (\n              <LoadingSpinner />\n            ) : eventsList.length > 0 ? (\n              <Grid $columns=\"repeat(auto-fill, minmax(300px, 1fr))\" $gap=\"25px\">\n                {eventsList.map((event) => (\n                  <ClubCard\n                    key={event.id}\n                    onClick={() => handleEventClick(event)}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <ClubHeader $avatarUrl={event.avatar ? `/uploads/${event.avatar}` : null}>\n                      <FlexContainer $justify=\"space-between\" $align=\"flex-start\">\n                        <div>\n                          <ClubTitle style={{ color: 'white', fontSize: '16px' }}>\n                            {event.title}\n                          </ClubTitle>\n                          <div style={{ fontSize: '12px', opacity: '0.9' }}>\n                            {event.club?.name || 'Клуб'}\n                          </div>\n                        </div>\n                        <ClubType $isPrivate={false}>\n                          {new Date(event.date).toLocaleDateString()}\n                        </ClubType>\n                      </FlexContainer>\n                    </ClubHeader>\n                    \n                    <ClubContent>\n                      <ClubDescription>\n                        {event.description}\n                      </ClubDescription>\n                      \n                      <ClubMeta>\n                        <ClubStats>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            📅 {new Date(event.date).toLocaleDateString('ru-RU', { \n                              day: 'numeric', \n                              month: 'long',\n                              year: 'numeric'\n                            })}\n                          </span>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            🕐 {event.time || 'Время уточняется'}\n                          </span>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            📍 {event.location || event.club?.location || 'Место уточняется'}\n                          </span>\n                          <span style={{ fontSize: '12px', color: '#718096' }}>\n                            👥 {event.participants?.length || 0}/{event.max_participants || '∞'}\n                          </span>\n                          {event.price && (\n                            <span style={{ fontSize: '12px', color: '#718096' }}>\n                              💰 {event.price}₽\n                            </span>\n                          )}\n                        </ClubStats>\n                        \n                        <Button \n                          $size=\"small\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            if (event.user_participation?.is_participating) {\n                              // Показать информацию о том, что уже участвуете\n                              return;\n                            }\n                            handleJoinEvent(event);\n                          }}\n                          disabled={joinEventMutation.isLoading || event.user_participation?.is_participating}\n                          $variant={event.user_participation?.is_participating ? 'secondary' : 'primary'}\n                        >\n                          {joinEventMutation.isLoading ? 'Записываемся...' : \n                           event.user_participation?.is_participating ? 'Вы участвуете' : 'Участвовать'}\n                        </Button>\n                      </ClubMeta>\n                    </ClubContent>\n                  </ClubCard>\n                ))}\n              </Grid>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🎉</div>\n                <h3>Мероприятия не найдены</h3>\n                <p>Попробуйте изменить параметры поиска</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n\n        {/* Модал деталей клуба */}\n        {showDetailsModal && selectedClub && (\n          <Modal onClick={() => setShowDetailsModal(false)}>\n            <ModalContent $maxWidth=\"700px\" onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>{selectedClub.name}</h2>\n                <IconButton onClick={() => setShowDetailsModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ marginBottom: '20px' }}>\n                <p style={{ color: '#4a5568', lineHeight: 1.6, fontSize: '16px', marginBottom: '20px' }}>\n                  {selectedClub.description}\n                </p>\n                \n                <div style={{ \n                  background: '#f7fafc', \n                  padding: '20px', \n                  borderRadius: '12px',\n                  marginBottom: '20px'\n                }}>\n                  <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                    📋 Информация о клубе\n                  </h3>\n                  \n                  <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>\n                    <div>\n                      <strong>📍 Местоположение:</strong><br />\n                      <span style={{ color: '#4a5568' }}>{selectedClub.city}</span>\n                    </div>\n                    \n                    <div>\n                      <strong>👥 Участники:</strong><br />\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedClub.current_members || 0} из {selectedClub.max_members || '∞'}\n                      </span>\n                    </div>\n                    \n                    <div>\n                      <strong>🔐 Тип:</strong><br />\n                      <ClubType $isPrivate={selectedClub.is_private} style={{ margin: '5px 0' }}>\n                        {selectedClub.is_private ? 'Приватный' : 'Открытый'}\n                      </ClubType>\n                    </div>\n                    \n                    {selectedClub.membership_fee && (\n                      <div>\n                        <strong>💰 Взнос:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedClub.membership_fee}₽</span>\n                      </div>\n                    )}\n                    \n                    {selectedClub.website && (\n                      <div>\n                        <strong>🌐 Сайт:</strong><br />\n                        <a href={selectedClub.website} target=\"_blank\" rel=\"noopener noreferrer\" \n                           style={{ color: '#3182ce', textDecoration: 'none' }}>\n                          {selectedClub.website}\n                        </a>\n                      </div>\n                    )}\n                    \n                    {selectedClub.email && (\n                      <div>\n                        <strong>📧 Email:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedClub.email}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {selectedClub.rules && (\n                  <div style={{ \n                    background: '#fff5f5', \n                    padding: '20px', \n                    borderRadius: '12px',\n                    marginBottom: '20px'\n                  }}>\n                    <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                      📜 Правила клуба\n                    </h3>\n                    <p style={{ color: '#4a5568', lineHeight: 1.6, margin: 0 }}>\n                      {selectedClub.rules}\n                    </p>\n                  </div>\n                )}\n\n                {selectedClub.tags && selectedClub.tags.length > 0 && (\n                  <div style={{ marginBottom: '20px' }}>\n                    <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                      🏷️ Теги\n                    </h3>\n                    <FlexContainer $gap=\"8px\" $wrap>\n                      {selectedClub.tags.map((tag, index) => (\n                        <span key={index} style={{\n                          background: '#e2e8f0',\n                          color: '#4a5568',\n                          padding: '6px 12px',\n                          borderRadius: '20px',\n                          fontSize: '14px'\n                        }}>\n                          {tag}\n                        </span>\n                      ))}\n                    </FlexContainer>\n                  </div>\n                )}\n              </div>\n\n              <FlexContainer $justify=\"center\">\n                <div style={{ \n                  textAlign: 'center', \n                  color: '#718096',\n                  background: '#f7fafc',\n                  padding: '20px',\n                  borderRadius: '12px',\n                  border: '2px dashed #cbd5e0'\n                }}>\n                  <div style={{ fontSize: '24px', marginBottom: '10px' }}>🎉</div>\n                  <p style={{ margin: '0 0 10px 0', fontSize: '16px' }}>\n                    Для участия в мероприятиях клуба\n                  </p>\n                  <p style={{ margin: 0, fontWeight: 'bold', color: '#2d3748' }}>\n                    перейдите во вкладку \"Мероприятия\"\n                  </p>\n                </div>\n              </FlexContainer>\n            </ModalContent>\n          </Modal>\n        )}\n\n        {/* Модал деталей мероприятия */}\n        {showEventDetailsModal && selectedEventDetails && (\n          <Modal onClick={() => setShowEventDetailsModal(false)}>\n            <ModalContent $maxWidth=\"700px\" onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>🎉 {selectedEventDetails.title}</h2>\n                <IconButton onClick={() => setShowEventDetailsModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ marginBottom: '20px' }}>\n                <div style={{ \n                  background: '#f7fafc', \n                  padding: '20px', \n                  borderRadius: '12px',\n                  marginBottom: '20px'\n                }}>\n                  <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                    📋 Информация о мероприятии\n                  </h3>\n                  \n                  <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>\n                    <div>\n                      <strong>🏛️ Клуб:</strong><br />\n                      <span style={{ color: '#4a5568' }}>{selectedEventDetails.club?.name || 'Не указан'}</span>\n                    </div>\n                    \n                    <div>\n                      <strong>📅 Дата:</strong><br />\n                      <span style={{ color: '#4a5568' }}>\n                        {new Date(selectedEventDetails.date).toLocaleDateString('ru-RU', { \n                          day: 'numeric', \n                          month: 'long',\n                          year: 'numeric'\n                        })}\n                      </span>\n                    </div>\n                    \n                    <div>\n                      <strong>🕐 Время:</strong><br />\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedEventDetails.time || 'Время уточняется'}\n                      </span>\n                    </div>\n                    \n                    <div>\n                      <strong>📍 Место:</strong><br />\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedEventDetails.location || selectedEventDetails.club?.location || 'Место уточняется'}\n                      </span>\n                    </div>\n                    \n                    <div>\n                      <strong>👥 Участники:</strong><br />\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedEventDetails.participants?.length || 0} из {selectedEventDetails.max_participants || '∞'}\n                      </span>\n                    </div>\n                    \n                    {selectedEventDetails.price && (\n                      <div>\n                        <strong>💰 Стоимость:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedEventDetails.price}₽</span>\n                      </div>\n                    )}\n                    \n                    {selectedEventDetails.event_type && (\n                      <div>\n                        <strong>🏷️ Тип:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedEventDetails.event_type}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {selectedEventDetails.description && (\n                  <div style={{ \n                    background: '#fff5f5', \n                    padding: '20px', \n                    borderRadius: '12px',\n                    marginBottom: '20px'\n                  }}>\n                    <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                      📝 Описание мероприятия\n                    </h3>\n                    <p style={{ color: '#4a5568', lineHeight: 1.6, margin: 0 }}>\n                      {selectedEventDetails.description}\n                    </p>\n                  </div>\n                )}\n\n                {/* Галерея изображений мероприятия */}\n                {selectedEventDetails.images && selectedEventDetails.images.length > 0 && (\n                  <div style={{ \n                    background: '#f8fafc', \n                    padding: '20px', \n                    borderRadius: '12px',\n                    marginBottom: '20px'\n                  }}>\n                    <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                      📸 Фотографии мероприятия ({selectedEventDetails.images.length})\n                    </h3>\n                    <div style={{ \n                      display: 'grid', \n                      gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))', \n                      gap: '10px' \n                    }}>\n                      {selectedEventDetails.images.map((image, index) => (\n                        <div\n                          key={index}\n                          style={{\n                            aspectRatio: '4/3',\n                            borderRadius: '8px',\n                            overflow: 'hidden',\n                            background: '#e2e8f0',\n                            cursor: 'pointer',\n                            transition: 'transform 0.2s ease'\n                          }}\n                          onMouseEnter={(e) => e.target.style.transform = 'scale(1.02)'}\n                          onMouseLeave={(e) => e.target.style.transform = 'scale(1)'}\n                          onClick={() => {\n                            // Открываем изображение в новом окне\n                            window.open(`/uploads/${image}`, '_blank');\n                          }}\n                        >\n                          <img \n                            src={`/uploads/${image}`} \n                            alt={`Фото мероприятия ${index + 1}`}\n                            style={{\n                              width: '100%',\n                              height: '100%',\n                              objectFit: 'cover'\n                            }}\n                            onError={(e) => {\n                              e.target.style.display = 'none';\n                              e.target.parentElement.innerHTML = '<div style=\"display: flex; align-items: center; justify-content: center; height: 100%; color: #718096; font-size: 12px;\">Ошибка загрузки</div>';\n                            }}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {selectedEventDetails.club && (\n                  <div style={{ \n                    background: '#e6fffa', \n                    padding: '20px', \n                    borderRadius: '12px',\n                    marginBottom: '20px'\n                  }}>\n                    <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                      🏛️ Информация о клубе\n                    </h3>\n                    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>\n                      <div>\n                        <strong>Название:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedEventDetails.club.name}</span>\n                      </div>\n                      <div>\n                        <strong>Местоположение:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedEventDetails.club.location}</span>\n                      </div>\n                      <div>\n                        <strong>Тип:</strong><br />\n                        <span style={{ color: '#4a5568' }}>{selectedEventDetails.club.type}</span>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <FlexContainer $gap=\"15px\" $justify=\"center\">\n                <Button \n                  $variant=\"secondary\" \n                  onClick={() => setShowEventDetailsModal(false)}\n                >\n                  Закрыть\n                </Button>\n                {!selectedEventDetails.user_participation?.is_participating && (\n                  <Button \n                    onClick={() => {\n                      setShowEventDetailsModal(false);\n                      handleJoinEvent(selectedEventDetails);\n                    }}\n                  >\n                    Записаться на мероприятие\n                  </Button>\n                )}\n                {selectedEventDetails.user_participation?.is_participating && (\n                  <Button \n                    $variant=\"secondary\"\n                    disabled\n                  >\n                    Вы уже участвуете\n                  </Button>\n                )}\n              </FlexContainer>\n            </ModalContent>\n          </Modal>\n        )}\n\n        {/* Модал вступления в мероприятие */}\n        {showJoinEventModal && selectedEvent && (\n          <Modal onClick={() => setShowJoinEventModal(false)}>\n            <ModalContent $maxWidth=\"500px\" onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>🎉 Записаться на мероприятие</h2>\n                <IconButton onClick={() => setShowJoinEventModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ marginBottom: '20px' }}>\n                <div style={{ \n                  background: '#f7fafc', \n                  padding: '20px', \n                  borderRadius: '12px',\n                  marginBottom: '20px'\n                }}>\n                  <h3 style={{ margin: '0 0 15px 0', color: '#2d3748', fontSize: '18px' }}>\n                    {selectedEvent.title}\n                  </h3>\n                  \n                  <div style={{ display: 'grid', gap: '10px' }}>\n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <span style={{ fontSize: '16px' }}>🏛️</span>\n                      <span style={{ color: '#4a5568' }}>{selectedEvent.club?.name || 'Клуб'}</span>\n                    </div>\n                    \n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <span style={{ fontSize: '16px' }}>📅</span>\n                      <span style={{ color: '#4a5568' }}>\n                        {new Date(selectedEvent.date).toLocaleDateString('ru-RU', { \n                          day: 'numeric', \n                          month: 'long',\n                          year: 'numeric'\n                        })}\n                      </span>\n                    </div>\n                    \n                    {selectedEvent.time && (\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                        <span style={{ fontSize: '16px' }}>🕐</span>\n                        <span style={{ color: '#4a5568' }}>{selectedEvent.time}</span>\n                      </div>\n                    )}\n                    \n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <span style={{ fontSize: '16px' }}>📍</span>\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedEvent.location || selectedEvent.club?.location || 'Место уточняется'}\n                      </span>\n                    </div>\n                    \n                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                      <span style={{ fontSize: '16px' }}>👥</span>\n                      <span style={{ color: '#4a5568' }}>\n                        {selectedEvent.participants?.length || 0} из {selectedEvent.max_participants || '∞'} участников\n                      </span>\n                    </div>\n                    \n                    {selectedEvent.price && (\n                      <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                        <span style={{ fontSize: '16px' }}>💰</span>\n                        <span style={{ color: '#4a5568' }}>{selectedEvent.price}₽</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {selectedEvent.description && (\n                  <div style={{ \n                    background: '#fff5f5', \n                    padding: '15px', \n                    borderRadius: '12px',\n                    marginBottom: '20px'\n                  }}>\n                    <h4 style={{ margin: '0 0 10px 0', color: '#2d3748', fontSize: '16px' }}>\n                      📝 Описание\n                    </h4>\n                    <p style={{ color: '#4a5568', lineHeight: 1.5, margin: 0 }}>\n                      {selectedEvent.description}\n                    </p>\n                  </div>\n                )}\n\n                <div style={{ \n                  background: '#e6fffa', \n                  padding: '15px', \n                  borderRadius: '12px',\n                  border: '1px solid #81e6d9'\n                }}>\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '8px', marginBottom: '8px' }}>\n                    <span style={{ fontSize: '16px' }}>ℹ️</span>\n                    <strong style={{ color: '#2d3748' }}>Важно знать:</strong>\n                  </div>\n                  <ul style={{ color: '#4a5568', margin: 0, paddingLeft: '20px' }}>\n                    <li>После записи вы получите уведомление</li>\n                    <li>Организатор может связаться с вами</li>\n                    <li>Вы можете отменить участие в любое время</li>\n                  </ul>\n                </div>\n              </div>\n\n              <FlexContainer $gap=\"15px\" $justify=\"flex-end\">\n                <Button \n                  $variant=\"secondary\" \n                  onClick={() => setShowJoinEventModal(false)}\n                  disabled={joinEventMutation.isLoading}\n                >\n                  Отмена\n                </Button>\n                <Button \n                  onClick={confirmJoinEvent}\n                  disabled={joinEventMutation.isLoading}\n                >\n                  {joinEventMutation.isLoading ? 'Записываемся...' : 'Записаться на мероприятие'}\n                </Button>\n              </FlexContainer>\n            </ModalContent>\n          </Modal>\n        )}\n      </ContentCard>\n    </ClubsContainer>\n  );\n};\n\nexport default Clubs;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { subscriptionsAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  CrownIcon,\n  CheckIcon,\n  CloseIcon,\n  StarIcon\n} from '../components/UI';\n\nconst SubscriptionsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst PlanCard = styled(motion.div)`\n  background: white;\n  border-radius: 25px;\n  padding: 35px;\n  text-align: center;\n  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.15);\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  \n  ${props => props.$featured && `\n    transform: scale(1.05);\n    border: 3px solid #ffd700;\n    box-shadow: 0 20px 60px rgba(255, 215, 0, 0.3);\n    \n    &::before {\n      content: 'ПОПУЛЯРНЫЙ';\n      position: absolute;\n      top: 15px;\n      right: -30px;\n      background: linear-gradient(135deg, #ffd700 0%, #ffed4a 100%);\n      color: #2d3748;\n      padding: 8px 40px;\n      font-size: 12px;\n      font-weight: 700;\n      transform: rotate(45deg);\n      box-shadow: 0 2px 10px rgba(255, 215, 0, 0.3);\n    }\n  `}\n  \n  &:hover {\n    transform: ${props => props.$featured ? 'scale(1.08)' : 'scale(1.02)'};\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 25px;\n    transform: none !important;\n    \n    &:hover {\n      transform: none !important;\n    }\n  }\n`;\n\nconst PlanIcon = styled.div`\n  width: 80px;\n  height: 80px;\n  margin: 0 auto 20px;\n  border-radius: 20px;\n  background: ${props => props.$color};\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 36px;\n  box-shadow: 0 10px 30px ${props => props.$color}40;\n  \n  @media (max-width: 768px) {\n    width: 60px;\n    height: 60px;\n    font-size: 28px;\n  }\n`;\n\nconst PlanTitle = styled.h3`\n  margin: 0 0 10px 0;\n  font-size: 28px;\n  font-weight: 700;\n  color: #2d3748;\n  \n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nconst PlanPrice = styled.div`\n  margin-bottom: 25px;\n  \n  .price {\n    font-size: 48px;\n    font-weight: 700;\n    color: ${props => props.$color};\n    line-height: 1;\n  }\n  \n  .currency {\n    font-size: 24px;\n    margin-left: 5px;\n  }\n  \n  .period {\n    font-size: 14px;\n    color: #718096;\n    margin-top: 5px;\n  }\n  \n  @media (max-width: 768px) {\n    .price {\n      font-size: 36px;\n    }\n    \n    .currency {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst FeaturesList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 30px 0;\n  text-align: left;\n`;\n\nconst FeatureItem = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px 0;\n  color: #4a5568;\n  font-size: 15px;\n  \n  .icon {\n    color: #4caf50;\n    flex-shrink: 0;\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst CurrentStatusCard = styled.div`\n  background: white;\n  border-radius: 20px;\n  padding: 30px;\n  margin-bottom: 30px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);\n  text-align: center;\n  \n  .status-icon {\n    width: 80px;\n    height: 80px;\n    margin: 0 auto 20px;\n    border-radius: 20px;\n    background: ${props => props.$statusColor};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 36px;\n  }\n  \n  .status-title {\n    font-size: 24px;\n    font-weight: 700;\n    color: #2d3748;\n    margin-bottom: 10px;\n  }\n  \n  .status-info {\n    color: #4a5568;\n    font-size: 16px;\n    margin-bottom: 20px;\n    line-height: 1.5;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    \n    .status-icon {\n      width: 60px;\n      height: 60px;\n      font-size: 28px;\n    }\n    \n    .status-title {\n      font-size: 20px;\n    }\n    \n    .status-info {\n      font-size: 14px;\n    }\n  }\n`;\n\nconst HistoryCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 15px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  .payment-info {\n    .plan {\n      font-weight: 600;\n      color: #2d3748;\n      margin-bottom: 5px;\n    }\n    \n    .date {\n      font-size: 12px;\n      color: #718096;\n    }\n  }\n  \n  .payment-amount {\n    font-size: 18px;\n    font-weight: 700;\n    color: #4caf50;\n  }\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n    \n    .payment-amount {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst PromoSection = styled.div`\n  background: linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%);\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 20px;\n  \n  .promo-title {\n    font-size: 16px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 10px;\n  }\n  \n  .promo-input {\n    display: flex;\n    gap: 10px;\n    \n    input {\n      flex: 1;\n      padding: 10px 15px;\n      border: 2px solid #e2e8f0;\n      border-radius: 8px;\n      font-size: 14px;\n      \n      &:focus {\n        outline: none;\n        border-color: #dc3522;\n      }\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\n\n// Конфигурация планов\nconst PLAN_CONFIGS = {\n  VIP: {\n    icon: '👑',\n    color: '#ffd700',\n    price: 299,\n    features: [\n      'Безлимитные лайки',\n      'Просмотр всех профилей',\n      'Суперлайки (5 в день)',\n      'Приоритет в поиске',\n      'Скрытие рекламы',\n      'Расширенные фильтры'\n    ]\n  },\n  PREMIUM: {\n    icon: '💎',\n    color: '#9b59b6',\n    price: 599,\n    featured: true,\n    features: [\n      'Все возможности VIP',\n      'Безлимитные суперлайки',\n      'Просмотр лайков',\n      'Невидимый режим',\n      'Приоритетная поддержка',\n      'Эксклюзивные события',\n      'Расширенная статистика'\n    ]\n  }\n};\n\nconst Subscriptions = () => {\n  const [activeTab, setActiveTab] = useState('plans');\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [promoCode, setPromoCode] = useState('');\n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: subscriptionStatus, isLoading: isLoadingStatus } = useQuery(\n    'subscription-status',\n    subscriptionsAPI.getStatus,\n    {\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: subscriptionHistory, isLoading: isLoadingHistory } = useQuery(\n    'subscription-history',\n    subscriptionsAPI.getHistory,\n    {\n      enabled: activeTab === 'history',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Mutations\n  const subscribeMutation = useMutation(subscriptionsAPI.subscribe, {\n    onSuccess: () => {\n      toast.success('Подписка успешно оформлена!');\n      setShowPaymentModal(false);\n      setSelectedPlan(null);\n      queryClient.invalidateQueries('subscription-status');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const cancelMutation = useMutation(subscriptionsAPI.cancel, {\n    onSuccess: () => {\n      toast.success('Подписка отменена');\n      queryClient.invalidateQueries('subscription-status');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  const promoMutation = useMutation(subscriptionsAPI.usePromoCode, {\n    onSuccess: (data) => {\n      toast.success(`Промокод применен! Скидка: ${data.discount}%`);\n      setPromoCode('');\n    },\n    onError: (error) => {\n      toast.error(apiUtils.handleError(error));\n    }\n  });\n\n  // Handlers\n  const handleSubscribe = (planType) => {\n    setSelectedPlan(planType);\n    setShowPaymentModal(true);\n  };\n\n  const handlePayment = (e) => {\n    e.preventDefault();\n    \n    if (!selectedPlan) return;\n\n    const subscriptionData = {\n      subscription_type: selectedPlan.toUpperCase(), // VIP или PREMIUM\n      duration_months: 1,\n      payment_method: 'balance', // Используем баланс фоксиков\n      auto_renewal: true\n    };\n    \n    // Добавляем промокод только если он есть\n    if (promoCode.trim()) {\n      subscriptionData.promo_code = promoCode.trim();\n    }\n    \n    subscribeMutation.mutate(subscriptionData);\n  };\n\n  // FIX: cancel subscription handler - no subscription ID needed\n  const handleCancel = async () => {\n    if (window.confirm('Вы уверены, что хотите отменить подписку?')) {\n      const reason = prompt('Причина отмены (необязательно):');\n      try {\n        await subscriptionsAPI.cancel(reason || '');\n        toast.success('Подписка отменена');\n        queryClient.invalidateQueries('subscription-status');\n      } catch (error) {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  };\n\n\n\n  const handlePromoApply = () => {\n    if (!promoCode.trim()) {\n      toast.error('Введите промокод');\n      return;\n    }\n    \n    promoMutation.mutate(promoCode.trim());\n  };\n\n  const getStatusColor = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'vip': return '#ffd700';\n      case 'premium': return '#9b59b6';\n      default: return '#4a5568';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'vip': return '👑';\n      case 'premium': return '💎';\n      default: return '👤';\n    }\n  };\n\n  if (isLoadingStatus) {\n    return (\n      <SubscriptionsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </SubscriptionsContainer>\n    );\n  }\n\n  return (\n    <SubscriptionsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"center\" $align=\"center\" $wrap>\n          <SectionTitle style={{ color: 'white', textAlign: 'center', marginBottom: '10px' }}>\n            <CrownIcon />\n            VIP & PREMIUM подписки\n          </SectionTitle>\n        </FlexContainer>\n        <p style={{ textAlign: 'center', color: 'rgba(255,255,255,0.9)', marginBottom: '30px' }}>\n          Получите максимум от SwingFox с премиум возможностями\n        </p>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'plans'}\n            onClick={() => setActiveTab('plans')}\n          >\n            <CrownIcon />\n            Планы\n          </Tab>\n          <Tab\n            $active={activeTab === 'status'}\n            onClick={() => setActiveTab('status')}\n          >\n            <StarIcon />\n            Мой статус\n          </Tab>\n          <Tab\n            $active={activeTab === 'history'}\n            onClick={() => setActiveTab('history')}\n          >\n            📋 История\n          </Tab>\n        </TabsContainer>\n\n        {/* Планы подписки */}\n        {activeTab === 'plans' && (\n          <div>\n            <Grid $columns=\"repeat(auto-fit, minmax(300px, 1fr))\" $gap=\"30px\">\n              {Object.entries(PLAN_CONFIGS).map(([planType, config]) => (\n                <PlanCard\n                  key={planType}\n                  $featured={config.featured}\n                  initial={{ opacity: 0, y: 30 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <PlanIcon $color={config.color}>\n                    {config.icon}\n                  </PlanIcon>\n                  \n                  <PlanTitle>{planType}</PlanTitle>\n                  \n                  <PlanPrice $color={config.color}>\n                    <div className=\"price\">\n                      {config.price}\n                      <span className=\"currency\">🦊</span>\n                    </div>\n                    <div className=\"period\">в месяц</div>\n                  </PlanPrice>\n                  \n                  <FeaturesList>\n                    {config.features.map((feature, index) => (\n                      <FeatureItem key={index}>\n                        <div className=\"icon\">\n                          <CheckIcon />\n                        </div>\n                        {feature}\n                      </FeatureItem>\n                    ))}\n                  </FeaturesList>\n                  \n                  <Button\n                    onClick={() => handleSubscribe(planType)}\n                    disabled={subscriptionStatus?.plan === planType.toLowerCase()}\n                    style={{\n                      background: subscriptionStatus?.plan === planType.toLowerCase() \n                        ? '#e2e8f0' \n                        : `linear-gradient(135deg, ${config.color} 0%, ${config.color}dd 100%)`,\n                      width: '100%'\n                    }}\n                  >\n                    {subscriptionStatus?.plan === planType.toLowerCase() \n                      ? 'Текущий план' \n                      : 'Выбрать план'\n                    }\n                  </Button>\n                </PlanCard>\n              ))}\n            </Grid>\n          </div>\n        )}\n\n        {/* Статус подписки */}\n        {activeTab === 'status' && (\n          <div>\n            <CurrentStatusCard $statusColor={getStatusColor(subscriptionStatus?.plan)}>\n              <div className=\"status-icon\">\n                {getStatusIcon(subscriptionStatus?.plan)}\n              </div>\n              <div className=\"status-title\">\n                {subscriptionStatus?.has_subscription && subscriptionStatus?.plan !== 'free' \n                  ? `${subscriptionStatus.plan.toUpperCase()} план` \n                  : 'БАЗОВЫЙ план'\n                }\n              </div>\n              <div className=\"status-info\">\n                {subscriptionStatus?.has_subscription && subscriptionStatus?.plan !== 'free' ? (\n                  <>\n                    Активна до: {subscriptionStatus.expires_at ? apiUtils.formatDate(subscriptionStatus.expires_at) : 'Не определено'}\n                    <br />\n                    Автопродление: Включено (по умолчанию)\n                  </>\n                ) : (\n                  'У вас базовый план. Оформите премиум подписку для получения дополнительных возможностей!'\n                )}\n              </div>\n              \n              {subscriptionStatus?.has_subscription && subscriptionStatus?.plan !== 'free' ? (\n                <FlexContainer $gap=\"15px\" $justify=\"center\">\n                  <Button $variant=\"secondary\">\n                    Изменить план\n                  </Button>\n                  <Button \n                    $variant=\"danger\" \n                    onClick={handleCancel}\n                  >\n                    Отменить подписку\n                  </Button>\n                </FlexContainer>\n              ) : (\n                <FlexContainer $gap=\"15px\" $justify=\"center\">\n                  <Button $variant=\"primary\" onClick={() => setActiveTab('plans')}>\n                    Оформить подписку\n                  </Button>\n                </FlexContainer>\n              )}\n            </CurrentStatusCard>\n\n            {/* Промокоды */}\n            <PromoSection>\n              <div className=\"promo-title\">Есть промокод?</div>\n              <div className=\"promo-input\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Введите промокод\"\n                  value={promoCode}\n                  onChange={(e) => setPromoCode(e.target.value.toUpperCase())}\n                />\n                <Button \n                  $size=\"small\" \n                  onClick={handlePromoApply}\n                  disabled={promoMutation.isLoading || !promoCode.trim()}\n                >\n                  Применить\n                </Button>\n              </div>\n            </PromoSection>\n          </div>\n        )}\n\n        {/* История платежей */}\n        {activeTab === 'history' && (\n          <div>\n            {isLoadingHistory ? (\n              <LoadingSpinner />\n            ) : subscriptionHistory?.payments?.length > 0 ? (\n              <div>\n                {subscriptionHistory.payments.map((payment) => (\n                  <HistoryCard key={payment.id}>\n                    <div className=\"payment-info\">\n                      <div className=\"plan\">\n                        {payment.plan?.toUpperCase()} подписка\n                      </div>\n                      <div className=\"date\">\n                        {apiUtils.formatDate(payment.created_at)}\n                      </div>\n                    </div>\n                    <div className=\"payment-amount\">\n                      +{payment.amount}🦊\n                    </div>\n                  </HistoryCard>\n                ))}\n              </div>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">💳</div>\n                <h3>Нет истории платежей</h3>\n                <p>Здесь будет отображаться история ваших подписок</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Модал оплаты */}\n        {showPaymentModal && selectedPlan && (\n          <Modal onClick={() => setShowPaymentModal(false)}>\n            <ModalContent onClick={(e) => e.stopPropagation()}>\n              <ModalHeader>\n                <h2>Оформление {selectedPlan} подписки</h2>\n                <IconButton onClick={() => setShowPaymentModal(false)}>\n                  <CloseIcon />\n                </IconButton>\n              </ModalHeader>\n\n              <div style={{ textAlign: 'center', marginBottom: '25px' }}>\n                <PlanIcon $color={PLAN_CONFIGS[selectedPlan].color}>\n                  {PLAN_CONFIGS[selectedPlan].icon}\n                </PlanIcon>\n                <h3 style={{ margin: '15px 0 5px 0', color: '#2d3748' }}>\n                  {selectedPlan} подписка\n                </h3>\n                <div style={{ fontSize: '24px', fontWeight: '700', color: PLAN_CONFIGS[selectedPlan].color }}>\n                  {PLAN_CONFIGS[selectedPlan].price}🦊/месяц\n                </div>\n              </div>\n\n              <Form onSubmit={handlePayment}>\n                <FormGroup>\n                  <Label>Промокод (необязательно)</Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Введите промокод для скидки\"\n                    value={promoCode}\n                    onChange={(e) => setPromoCode(e.target.value.toUpperCase())}\n                  />\n                </FormGroup>\n\n                <div style={{ \n                  background: '#f7fafc', \n                  padding: '15px', \n                  borderRadius: '10px', \n                  marginBottom: '20px',\n                  fontSize: '14px',\n                  color: '#4a5568'\n                }}>\n                  <strong>Условия:</strong>\n                  <ul style={{ margin: '10px 0 0 20px', paddingLeft: 0 }}>\n                    <li>Подписка активируется сразу после оплаты</li>\n                    <li>Автопродление можно отключить в любое время</li>\n                    <li>Возврат средств в течение 7 дней</li>\n                  </ul>\n                </div>\n\n                <FlexContainer $gap=\"10px\" $justify=\"flex-end\">\n                  <Button \n                    $variant=\"secondary\" \n                    onClick={() => setShowPaymentModal(false)} \n                    type=\"button\"\n                  >\n                    Отмена\n                  </Button>\n                  <Button type=\"submit\" disabled={subscribeMutation.isLoading}>\n                    {subscribeMutation.isLoading ? 'Обработка...' : 'Оплатить'}\n                  </Button>\n                </FlexContainer>\n              </Form>\n            </ModalContent>\n          </Modal>\n        )}\n      </ContentCard>\n    </SubscriptionsContainer>\n  );\n};\n\nexport default Subscriptions;","import React, { useState } from 'react';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { ratingAPI, apiUtils } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  SectionTitle,\n  Button,\n  IconButton,\n  FlexContainer,\n  Grid,\n  LoadingSpinner,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  StarIcon,\n  CrownIcon,\n  TrophyIcon,\n  FilterIcon,\n  CloseIcon,\n  ChevronUpIcon,\n  ChevronDownIcon\n} from '../components/UI';\n\nconst RatingsContainer = styled(PageContainer)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  background: white;\n  border-radius: 12px;\n  padding: 4px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    gap: 4px;\n  }\n`;\n\nconst Tab = styled.button`\n  flex: 1;\n  padding: 15px 20px;\n  border: none;\n  background: ${props => props.$active ? 'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : 'transparent'};\n  color: ${props => props.$active ? 'white' : '#4a5568'};\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  \n  &:hover:not(:disabled) {\n    background: ${props => props.$active ? \n      'linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)' : \n      'linear-gradient(135deg, rgba(220, 53, 34, 0.1) 0%, rgba(255, 107, 88, 0.1) 100%)'\n    };\n    color: ${props => props.$active ? 'white' : '#dc3522'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst RankingCard = styled(motion.div)`\n  background: white;\n  border-radius: 15px;\n  padding: 20px;\n  margin-bottom: 15px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  position: relative;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  \n  ${props => props.$rank <= 3 && `\n    &::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      height: 4px;\n      background: ${props.$rank === 1 ? '#ffd700' : props.$rank === 2 ? '#c0c0c0' : '#cd7f32'};\n    }\n  `}\n  \n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  }\n  \n  @media (max-width: 768px) {\n    flex-direction: column;\n    text-align: center;\n    gap: 15px;\n    \n    &:hover {\n      transform: none;\n    }\n  }\n`;\n\nconst RankBadge = styled.div`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: ${props => {\n    if (props.$rank === 1) return 'linear-gradient(135deg, #ffd700 0%, #ffed4a 100%)';\n    if (props.$rank === 2) return 'linear-gradient(135deg, #c0c0c0 0%, #e8e8e8 100%)';\n    if (props.$rank === 3) return 'linear-gradient(135deg, #cd7f32 0%, #deb887 100%)';\n    return 'linear-gradient(135deg, #4a5568 0%, #718096 100%)';\n  }};\n  color: ${props => props.$rank <= 3 ? '#2d3748' : 'white'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 700;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  flex-shrink: 0;\n  \n  @media (max-width: 768px) {\n    width: 50px;\n    height: 50px;\n    font-size: 16px;\n  }\n`;\n\nconst UserInfo = styled.div`\n  flex: 1;\n  \n  .name {\n    font-size: 18px;\n    font-weight: 600;\n    color: #2d3748;\n    margin-bottom: 5px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  \n  .stats {\n    display: flex;\n    gap: 20px;\n    color: #4a5568;\n    font-size: 14px;\n    \n    .stat {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    .stats {\n      justify-content: center;\n      gap: 15px;\n    }\n  }\n`;\n\nconst RatingValue = styled.div`\n  text-align: right;\n  \n  .rating {\n    font-size: 24px;\n    font-weight: 700;\n    color: #dc3522;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n  }\n  \n  .change {\n    font-size: 12px;\n    margin-top: 2px;\n    display: flex;\n    align-items: center;\n    gap: 2px;\n    \n    &.positive {\n      color: #4caf50;\n    }\n    \n    &.negative {\n      color: #f44336;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    text-align: center;\n    \n    .rating {\n      justify-content: center;\n    }\n  }\n`;\n\nconst StatsGrid = styled(Grid)`\n  margin-bottom: 30px;\n`;\n\nconst StatCard = styled.div`\n  background: white;\n  border-radius: 15px;\n  padding: 25px;\n  text-align: center;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n  position: relative;\n  overflow: hidden;\n  \n  .icon {\n    width: 60px;\n    height: 60px;\n    margin: 0 auto 15px;\n    border-radius: 15px;\n    background: ${props => props.$color};\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 24px;\n  }\n  \n  .value {\n    font-size: 28px;\n    font-weight: 700;\n    color: #2d3748;\n    margin-bottom: 5px;\n  }\n  \n  .label {\n    color: #4a5568;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 20px;\n    \n    .icon {\n      width: 50px;\n      height: 50px;\n      font-size: 20px;\n    }\n    \n    .value {\n      font-size: 24px;\n    }\n  }\n`;\n\nconst FilterContainer = styled.div`\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  \n  .filter-row {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n  \n  .filter-group {\n    flex: 1;\n    min-width: 200px;\n  }\n  \n  @media (max-width: 768px) {\n    .filter-row {\n      flex-direction: column;\n      gap: 10px;\n    }\n    \n    .filter-group {\n      width: 100%;\n      min-width: auto;\n    }\n  }\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  .icon {\n    font-size: 64px;\n    margin-bottom: 20px;\n    opacity: 0.5;\n  }\n  \n  h3 {\n    margin: 0 0 10px 0;\n    font-size: 20px;\n    color: #2d3748;\n  }\n  \n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\n\nconst VipBadge = styled.span`\n  background: ${props => apiUtils.getVipBadgeColor(props.$vipLevel)};\n  color: white;\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 10px;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst Ratings = () => {\n  const [activeTab, setActiveTab] = useState('leaderboard');\n  const [filter, setFilter] = useState({\n    period: 'month',\n    category: 'overall',\n    city: ''\n  });\n  \n  const queryClient = useQueryClient();\n\n  // Queries\n  const { data: leaderboard, isLoading: isLoadingLeaderboard } = useQuery(\n    ['leaderboard', filter],\n    () => ratingAPI.getLeaderboard(filter),\n    {\n      enabled: activeTab === 'leaderboard',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: myStats, isLoading: isLoadingStats } = useQuery(\n    ['my-rating-stats'],\n    ratingAPI.getMyStats,\n    {\n      enabled: activeTab === 'my-rating',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  const { data: topUsers, isLoading: isLoadingTop } = useQuery(\n    ['top-users', filter.period],\n    () => ratingAPI.getTopUsers({ period: filter.period }),\n    {\n      enabled: activeTab === 'top-users',\n      onError: (error) => {\n        toast.error(apiUtils.handleError(error));\n      }\n    }\n  );\n\n  // Handlers\n  const handleFilterChange = (field, value) => {\n    setFilter(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const renderRankIcon = (rank) => {\n    if (rank === 1) return '🥇';\n    if (rank === 2) return '🥈';\n    if (rank === 3) return '🥉';\n    return rank;\n  };\n\n  const renderChangeIcon = (change) => {\n    if (change > 0) return <ChevronUpIcon />;\n    if (change < 0) return <ChevronDownIcon />;\n    return null;\n  };\n\n  const renderChangeClass = (change) => {\n    if (change > 0) return 'positive';\n    if (change < 0) return 'negative';\n    return '';\n  };\n\n  if ((activeTab === 'leaderboard' && isLoadingLeaderboard) ||\n      (activeTab === 'my-rating' && isLoadingStats) ||\n      (activeTab === 'top-users' && isLoadingTop)) {\n    return (\n      <RatingsContainer>\n        <ContentCard>\n          <LoadingSpinner />\n        </ContentCard>\n      </RatingsContainer>\n    );\n  }\n\n  return (\n    <RatingsContainer>\n      <ContentCard $maxWidth=\"1200px\">\n        <FlexContainer $justify=\"center\" $align=\"center\" $wrap>\n          <SectionTitle style={{ color: 'white', textAlign: 'center', marginBottom: '10px' }}>\n            <TrophyIcon />\n            Система рейтинга\n          </SectionTitle>\n        </FlexContainer>\n        <p style={{ textAlign: 'center', color: 'rgba(255,255,255,0.9)', marginBottom: '30px' }}>\n          Следите за рейтингом пользователей и своими достижениями\n        </p>\n\n        <TabsContainer>\n          <Tab\n            $active={activeTab === 'leaderboard'}\n            onClick={() => setActiveTab('leaderboard')}\n          >\n            <TrophyIcon />\n            Рейтинг\n          </Tab>\n          <Tab\n            $active={activeTab === 'my-rating'}\n            onClick={() => setActiveTab('my-rating')}\n          >\n            <StarIcon />\n            Мой рейтинг\n          </Tab>\n          <Tab\n            $active={activeTab === 'top-users'}\n            onClick={() => setActiveTab('top-users')}\n          >\n            <CrownIcon />\n            Топ пользователи\n          </Tab>\n        </TabsContainer>\n\n        {/* Общий рейтинг */}\n        {activeTab === 'leaderboard' && (\n          <div>\n            <FilterContainer>\n              <div className=\"filter-row\">\n                <div className=\"filter-group\">\n                  <Label>Период</Label>\n                  <select\n                    value={filter.period}\n                    onChange={(e) => handleFilterChange('period', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"week\">Неделя</option>\n                    <option value=\"month\">Месяц</option>\n                    <option value=\"year\">Год</option>\n                    <option value=\"all\">Все время</option>\n                  </select>\n                </div>\n                \n                <div className=\"filter-group\">\n                  <Label>Категория</Label>\n                  <select\n                    value={filter.category}\n                    onChange={(e) => handleFilterChange('category', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"overall\">Общий</option>\n                    <option value=\"activity\">Активность</option>\n                    <option value=\"popularity\">Популярность</option>\n                    <option value=\"engagement\">Вовлеченность</option>\n                  </select>\n                </div>\n                \n                <div className=\"filter-group\">\n                  <Label>Город</Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Фильтр по городу\"\n                    value={filter.city}\n                    onChange={(e) => handleFilterChange('city', e.target.value)}\n                  />\n                </div>\n              </div>\n            </FilterContainer>\n\n            {leaderboard?.users?.length > 0 ? (\n              <div>\n                {leaderboard.users.map((user, index) => (\n                  <RankingCard\n                    key={user.id}\n                    $rank={index + 1}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                  >\n                    <RankBadge $rank={index + 1}>\n                      {renderRankIcon(index + 1)}\n                    </RankBadge>\n                    \n                    <UserInfo>\n                      <div className=\"name\">\n                        {user.name}\n                        {user.vip_level && (\n                          <VipBadge $vipLevel={user.vip_level}>\n                            {user.vip_level}\n                          </VipBadge>\n                        )}\n                      </div>\n                      <div className=\"stats\">\n                        <div className=\"stat\">\n                          👁️ {user.profile_views || 0}\n                        </div>\n                        <div className=\"stat\">\n                          ❤️ {user.likes_received || 0}\n                        </div>\n                        <div className=\"stat\">\n                          📍 {user.city || 'Не указан'}\n                        </div>\n                      </div>\n                    </UserInfo>\n                    \n                    <RatingValue>\n                      <div className=\"rating\">\n                        <StarIcon />\n                        {user.rating_score || 0}\n                      </div>\n                      {user.rating_change !== undefined && (\n                        <div className={`change ${renderChangeClass(user.rating_change)}`}>\n                          {renderChangeIcon(user.rating_change)}\n                          {Math.abs(user.rating_change)}\n                        </div>\n                      )}\n                    </RatingValue>\n                  </RankingCard>\n                ))}\n              </div>\n            ) : (\n              <EmptyState>\n                <div className=\"icon\">🏆</div>\n                <h3>Нет данных рейтинга</h3>\n                <p>Рейтинг пользователей пока не сформирован</p>\n              </EmptyState>\n            )}\n          </div>\n        )}\n\n        {/* Мой рейтинг */}\n        {activeTab === 'my-rating' && (\n          <div>\n            <StatsGrid $columns=\"repeat(auto-fit, minmax(250px, 1fr))\" $gap=\"20px\">\n              <StatCard $color=\"linear-gradient(135deg, #dc3522 0%, #ff6b58 100%)\">\n                <div className=\"icon\">\n                  <StarIcon />\n                </div>\n                <div className=\"value\">{myStats?.current_rating || 0}</div>\n                <div className=\"label\">Текущий рейтинг</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #4caf50 0%, #66bb6a 100%)\">\n                <div className=\"icon\">\n                  <TrophyIcon />\n                </div>\n                <div className=\"value\">#{myStats?.current_position || '-'}</div>\n                <div className=\"label\">Позиция в рейтинге</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #ff9800 0%, #ffb74d 100%)\">\n                <div className=\"icon\">\n                  📈\n                </div>\n                <div className=\"value\">\n                  {myStats?.rating_change > 0 ? '+' : ''}{myStats?.rating_change || 0}\n                </div>\n                <div className=\"label\">Изменение за месяц</div>\n              </StatCard>\n              \n              <StatCard $color=\"linear-gradient(135deg, #9c27b0 0%, #ba68c8 100%)\">\n                <div className=\"icon\">\n                  🎯\n                </div>\n                <div className=\"value\">{myStats?.max_rating || 0}</div>\n                <div className=\"label\">Максимальный рейтинг</div>\n              </StatCard>\n            </StatsGrid>\n\n            {myStats?.rating_history?.length > 0 && (\n              <ContentCard>\n                <h3 style={{ marginBottom: '20px', color: '#2d3748' }}>\n                  История рейтинга\n                </h3>\n                <div style={{ \n                  maxHeight: '300px', \n                  overflowY: 'auto',\n                  padding: '10px'\n                }}>\n                  {myStats.rating_history.map((entry, index) => (\n                    <div \n                      key={index}\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center',\n                        padding: '10px 0',\n                        borderBottom: '1px solid #e2e8f0'\n                      }}\n                    >\n                      <div>\n                        <strong>{entry.reason || 'Обновление рейтинга'}</strong>\n                        <div style={{ fontSize: '12px', color: '#718096' }}>\n                          {apiUtils.formatDate(entry.created_at)}\n                        </div>\n                      </div>\n                      <div style={{\n                        color: entry.change > 0 ? '#4caf50' : '#f44336',\n                        fontWeight: '600'\n                      }}>\n                        {entry.change > 0 ? '+' : ''}{entry.change}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ContentCard>\n            )}\n          </div>\n        )}\n\n        {/* Топ пользователи */}\n        {activeTab === 'top-users' && (\n          <div>\n            <FilterContainer>\n              <div className=\"filter-row\">\n                <div className=\"filter-group\">\n                  <Label>Период</Label>\n                  <select\n                    value={filter.period}\n                    onChange={(e) => handleFilterChange('period', e.target.value)}\n                    style={{\n                      width: '100%',\n                      padding: '10px',\n                      border: '1px solid #e2e8f0',\n                      borderRadius: '8px'\n                    }}\n                  >\n                    <option value=\"week\">Неделя</option>\n                    <option value=\"month\">Месяц</option>\n                    <option value=\"year\">Год</option>\n                  </select>\n                </div>\n              </div>\n            </FilterContainer>\n\n            <Grid $columns=\"repeat(auto-fit, minmax(300px, 1fr))\" $gap=\"20px\">\n              {['most_active', 'most_popular', 'most_gifts'].map((category, index) => {\n                const categoryData = topUsers?.[category] || [];\n                const categoryTitles = {\n                  most_active: 'Самые активные',\n                  most_popular: 'Самые популярные', \n                  most_gifts: 'Больше всего подарков'\n                };\n                \n                return (\n                  <ContentCard key={category}>\n                    <h3 style={{ marginBottom: '20px', color: '#2d3748', textAlign: 'center' }}>\n                      {categoryTitles[category]}\n                    </h3>\n                    \n                    {categoryData.length > 0 ? (\n                      <div>\n                        {categoryData.slice(0, 5).map((user, userIndex) => (\n                          <div \n                            key={user.id}\n                            style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: '15px',\n                              padding: '10px 0',\n                              borderBottom: userIndex < 4 ? '1px solid #e2e8f0' : 'none'\n                            }}\n                          >\n                            <div style={{\n                              width: '30px',\n                              height: '30px',\n                              borderRadius: '50%',\n                              background: userIndex === 0 ? '#ffd700' : userIndex === 1 ? '#c0c0c0' : userIndex === 2 ? '#cd7f32' : '#e2e8f0',\n                              display: 'flex',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              fontSize: '12px',\n                              fontWeight: '600',\n                              color: userIndex <= 2 ? '#2d3748' : '#718096'\n                            }}>\n                              {userIndex + 1}\n                            </div>\n                            \n                            <div style={{ flex: 1 }}>\n                              <div style={{ fontWeight: '600', color: '#2d3748' }}>\n                                {user.name}\n                                {user.vip_level && (\n                                  <VipBadge $vipLevel={user.vip_level} style={{ marginLeft: '8px' }}>\n                                    {user.vip_level}\n                                  </VipBadge>\n                                )}\n                              </div>\n                              <div style={{ fontSize: '12px', color: '#718096' }}>\n                                {user.score || 0} {category === 'most_active' ? 'действий' : \n                                                   category === 'most_popular' ? 'лайков' : \n                                                   'подарков'}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div style={{ textAlign: 'center', color: '#718096', padding: '20px' }}>\n                        Нет данных\n                      </div>\n                    )}\n                  </ContentCard>\n                );\n              })}\n            </Grid>\n          </div>\n        )}\n      </ContentCard>\n    </RatingsContainer>\n  );\n};\n\nexport default Ratings;","import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from 'react-query';\nimport BalanceTopUp from '../components/UI/BalanceTopUp';\nimport { LoadingSpinner } from '../components/UI';\nimport Navigation from '../components/Navigation';\nimport { api } from '../services/api';\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\n\n\nconst ContentWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BalanceTopUpPage = () => {\n\n  // Получаем данные пользователя для отображения текущего баланса\n  const { data: userData, isLoading: isLoadingUser } = useQuery({\n    queryKey: ['user'],\n    queryFn: () => api.get('/auth/me'),\n    staleTime: 5 * 60 * 1000, // 5 минут\n  });\n\n  const handleTopUpSuccess = () => {\n    // Обновляем данные пользователя после успешного пополнения\n    window.location.reload();\n  };\n\n  const handleClose = () => {\n    // Возвращаемся на предыдущую страницу\n    navigate(-1);\n  };\n\n  if (isLoadingUser) {\n    return (\n      <PageContainer>\n        <LoadingSpinner />\n      </PageContainer>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <PageContainer>\n        <ContentWrapper>\n          <BalanceTopUp\n            onClose={handleClose}\n            currentBalance={userData?.balance || 0}\n            onSuccess={handleTopUpSuccess}\n          />\n        </ContentWrapper>\n      </PageContainer>\n    </>\n  );\n};\n\nexport default BalanceTopUpPage;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { clubApi, clubAuth } from '../services/clubApi';\nimport {\n  PageContainer,\n  ContentCard,\n  LogoSection,\n  Logo,\n  Title,\n  Subtitle,\n  Form,\n  FormGroup,\n  Label,\n  InputWrapper,\n  Input,\n  Button,\n  ErrorText,\n  FlexContainer,\n  EyeIcon,\n  EyeOffIcon,\n  IconButton\n} from '../components/UI';\nimport '../styles/AuthPages.css';\n\nconst ClubLogin = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n\n  // Проверяем, не авторизован ли уже клуб\n  React.useEffect(() => {\n    const checkExistingAuth = async () => {\n      if (clubAuth.isAuthenticated()) {\n        try {\n          // Проверяем валидность токена\n          await clubApi.getProfile();\n          navigate('/club/dashboard', { replace: true });\n        } catch (error) {\n          // Токен невалиден, очищаем\n          console.warn('Токен клуба невалиден при входе в ClubLogin');\n          clubAuth.removeToken();\n        }\n      }\n    };\n\n    checkExistingAuth();\n  }, [navigate]);\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    \n    try {\n      const response = await clubApi.login({\n        login: data.login,\n        password: data.password\n      });\n      \n      if (response.token) {\n        toast.success('Успешная авторизация клуба!');\n        navigate('/club/dashboard', { replace: true });\n      }\n    } catch (error) {\n      const errorMessage = error.message || 'Ошибка авторизации';\n      toast.error(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <PageContainer $gradient>\n      {/* Декоративные круги */}\n      <div className=\"auth-decoration auth-decoration-top-right\"></div>\n      <div className=\"auth-decoration auth-decoration-bottom-left\"></div>\n      \n      <ContentCard $maxWidth=\"450px\">\n        <LogoSection>\n          <Logo>CF</Logo>\n          <Title>SwingFox Club</Title>\n          <Subtitle>Добро пожаловать! Войдите в аккаунт клуба</Subtitle>\n        </LogoSection>\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label htmlFor=\"login\">Логин или Email</Label>\n            <Input\n              type=\"text\"\n              id=\"login\"\n              placeholder=\"Введите логин или email клуба\"\n              autoComplete=\"username\"\n              {...register('login', {\n                required: 'Логин или email обязателен',\n                minLength: {\n                  value: 3,\n                  message: 'Минимум 3 символа'\n                }\n              })}\n              className={errors.login ? 'error' : ''}\n            />\n            {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Пароль</Label>\n            <InputWrapper>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                placeholder=\"Введите пароль\"\n                autoComplete=\"current-password\"\n                {...register('password', {\n                  required: 'Пароль обязателен',\n                  minLength: {\n                    value: 6,\n                    message: 'Минимум 6 символов'\n                  }\n                })}\n                className={errors.password ? 'error' : ''}\n              />\n              <IconButton\n                type=\"button\"\n                $variant=\"secondary\"\n                onClick={() => setShowPassword(!showPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  background: 'none',\n                  color: '#718096'\n                }}\n              >\n                {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </IconButton>\n            </InputWrapper>\n            {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n          </FormGroup>\n\n          <Button type=\"submit\" disabled={isLoading} style={{ width: '100%' }}>\n            {isLoading ? 'Вход...' : 'Войти в клуб'}\n          </Button>\n        </Form>\n\n        <FlexContainer $justify=\"center\" $gap=\"20px\" style={{ marginTop: '25px' }}>\n          <Link \n            to=\"/club/register\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Регистрация клуба\n          </Link>\n          <span style={{ color: '#cbd5e0' }}>|</span>\n          <Link \n            to=\"/club/forgot-password\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Забыли пароль?\n          </Link>\n        </FlexContainer>\n\n        <FlexContainer $justify=\"center\" style={{ marginTop: '20px' }}>\n          <Link \n            to=\"/login\" \n            style={{ \n              color: '#718096', \n              textDecoration: 'none', \n              fontWeight: '500',\n              fontSize: '13px'\n            }}\n          >\n            ← Вернуться к входу пользователей\n          </Link>\n        </FlexContainer>\n      </ContentCard>\n    </PageContainer>\n  );\n};\n\nexport default ClubLogin;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport toast from 'react-hot-toast';\nimport { clubApi } from '../services/clubApi';\nimport { authAPI } from '../services/api';\nimport {\n  PageContainer,\n  ContentCard,\n  LogoSection,\n  Logo,\n  Title,\n  Subtitle,\n  Form,\n  FormGroup,\n  Label,\n  InputWrapper,\n  Input,\n  TextArea,\n  Button,\n  ErrorText,\n  FlexContainer,\n  EyeIcon,\n  EyeOffIcon,\n  IconButton\n} from '../components/UI';\nimport '../styles/AuthPages.css';\n\nconst ClubRegister = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [emailCode, setEmailCode] = useState('');\n  const [codeTimer, setCodeTimer] = useState(0);\n  const [isCodeSent, setIsCodeSent] = useState(false);\n  \n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors }\n  } = useForm();\n\n  const password = watch('password');\n  const email = watch('email');\n\n  // Мутация для отправки кода\n  const sendCodeMutation = useMutation(authAPI.sendCode, {\n    onSuccess: () => {\n      toast.success('Код подтверждения отправлен на ваш email');\n      setIsCodeSent(true);\n      setCodeTimer(60);\n      const interval = setInterval(() => {\n        setCodeTimer(prev => {\n          if (prev <= 1) {\n            clearInterval(interval);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    },\n    onError: (error) => {\n      toast.error('Ошибка отправки кода: ' + (error.message || 'Неизвестная ошибка'));\n    }\n  });\n\n  // Мутация для регистрации клуба\n  const registerMutation = useMutation(clubApi.register, {\n    onSuccess: (response) => {\n      if (response.success || response.token) {\n        toast.success('Клуб успешно зарегистрирован!');\n        navigate('/club/login');\n      }\n    },\n    onError: (error) => {\n      const errorMessage = error.message || 'Ошибка регистрации';\n      toast.error(errorMessage);\n    }\n  });\n\n  const handleSendCode = () => {\n    if (!email) {\n      toast.error('Сначала введите email');\n      return;\n    }\n    sendCodeMutation.mutate(email);\n  };\n\n  const onSubmit = async (data) => {\n    if (!emailCode) {\n      toast.error('Введите код подтверждения из email');\n      return;\n    }\n\n    registerMutation.mutate({\n      name: data.name,\n      login: data.login,\n      email: data.email,\n      password: data.password,\n      description: data.description,\n      location: data.location,\n      contact_info: data.contact_info,\n      website: data.website,\n      type: 'general', // Заглушка - всегда \"Общий\"\n      mail_code: emailCode\n    });\n  };\n\n  return (\n    <PageContainer $gradient>\n      {/* Декоративные круги */}\n      <div className=\"auth-decoration auth-decoration-top-right\"></div>\n      <div className=\"auth-decoration auth-decoration-bottom-left\"></div>\n      \n      <ContentCard $maxWidth=\"600px\">\n        <LogoSection>\n          <Logo>CF</Logo>\n          <Title>Регистрация клуба</Title>\n          <Subtitle>Создайте аккаунт клуба для управления мероприятиями</Subtitle>\n        </LogoSection>\n\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <FormGroup>\n            <Label htmlFor=\"name\">Название клуба *</Label>\n            <Input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Введите название клуба\"\n              {...register('name', {\n                required: 'Название клуба обязательно',\n                minLength: {\n                  value: 2,\n                  message: 'Минимум 2 символа'\n                },\n                maxLength: {\n                  value: 100,\n                  message: 'Максимум 100 символов'\n                }\n              })}\n              className={errors.name ? 'error' : ''}\n            />\n            {errors.name && <ErrorText>{errors.name.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"login\">Логин *</Label>\n            <Input\n              type=\"text\"\n              id=\"login\"\n              placeholder=\"Введите логин клуба\"\n              {...register('login', {\n                required: 'Логин обязателен',\n                minLength: {\n                  value: 3,\n                  message: 'Минимум 3 символа'\n                },\n                maxLength: {\n                  value: 50,\n                  message: 'Максимум 50 символов'\n                },\n                pattern: {\n                  value: /^[a-zA-Z0-9_-]+$/,\n                  message: 'Только буквы, цифры, дефис и подчеркивание'\n                }\n              })}\n              className={errors.login ? 'error' : ''}\n            />\n            {errors.login && <ErrorText>{errors.login.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"email\">Email *</Label>\n            <div style={{ display: 'flex', gap: '10px' }}>\n              <div style={{ flex: 1 }}>\n                <Input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"Введите email клуба\"\n                  {...register('email', {\n                    required: 'Email обязателен',\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                      message: 'Некорректный email'\n                    }\n                  })}\n                  className={errors.email ? 'error' : ''}\n                />\n              </div>\n              <button\n                type=\"button\"\n                onClick={handleSendCode}\n                disabled={!email || sendCodeMutation.isLoading || codeTimer > 0}\n                style={{\n                  background: codeTimer > 0 ? '#e2e8f0' : '#dc3522',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '8px',\n                  padding: '12px 16px',\n                  fontSize: '14px',\n                  fontWeight: '600',\n                  cursor: codeTimer > 0 ? 'not-allowed' : 'pointer',\n                  transition: 'all 0.3s ease',\n                  whiteSpace: 'nowrap'\n                }}\n              >\n                {sendCodeMutation.isLoading ? 'Отправка...' : \n                 codeTimer > 0 ? `${codeTimer}с` : 'Код'}\n              </button>\n            </div>\n            {errors.email && <ErrorText>{errors.email.message}</ErrorText>}\n            {codeTimer > 0 && (\n              <div style={{ \n                fontSize: '12px', \n                color: '#718096', \n                marginTop: '5px' \n              }}>\n                Повторная отправка через {codeTimer} секунд\n              </div>\n            )}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"emailCode\">Код из email *</Label>\n            <Input\n              type=\"text\"\n              id=\"emailCode\"\n              placeholder=\"Введите 6-значный код\"\n              value={emailCode}\n              onChange={(e) => {\n                // Разрешаем только цифры и максимум 6 символов\n                const value = e.target.value.replace(/\\D/g, '').slice(0, 6);\n                setEmailCode(value);\n              }}\n              style={{\n                fontFamily: 'monospace',\n                fontSize: '18px',\n                letterSpacing: '2px',\n                textAlign: 'center'\n              }}\n            />\n            {emailCode.length > 0 && emailCode.length < 6 && isCodeSent && (\n              <ErrorText>Код должен содержать 6 цифр</ErrorText>\n            )}\n            {!isCodeSent && emailCode.length > 0 && (\n              <ErrorText>Сначала отправьте код на email</ErrorText>\n            )}\n          </FormGroup>\n\n\n\n          <FormGroup>\n            <Label htmlFor=\"location\">Местоположение (необязательно)</Label>\n            <Input\n              type=\"text\"\n              id=\"location\"\n              placeholder=\"Город, адрес или оставьте пустым\"\n              {...register('location', {\n                maxLength: {\n                  value: 200,\n                  message: 'Максимум 200 символов'\n                }\n              })}\n              className={errors.location ? 'error' : ''}\n            />\n            {errors.location && <ErrorText>{errors.location.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"website\">Веб-сайт (необязательно)</Label>\n            <Input\n              type=\"text\"\n              id=\"website\"\n              placeholder=\"Адрес сайта или оставьте пустым\"\n              {...register('website')}\n              className={errors.website ? 'error' : ''}\n            />\n            {errors.website && <ErrorText>{errors.website.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"contact_info\">Контактная информация (необязательно)</Label>\n            <TextArea\n              id=\"contact_info\"\n              placeholder=\"Телефон, социальные сети, дополнительная информация или оставьте пустым\"\n              $minHeight=\"80px\"\n              {...register('contact_info', {\n                maxLength: {\n                  value: 500,\n                  message: 'Максимум 500 символов'\n                }\n              })}\n              className={errors.contact_info ? 'error' : ''}\n            />\n            {errors.contact_info && <ErrorText>{errors.contact_info.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"description\">Описание клуба *</Label>\n            <TextArea\n              id=\"description\"\n              placeholder=\"Расскажите о вашем клубе, мероприятиях, правилах\"\n              $minHeight=\"120px\"\n              {...register('description', {\n                required: 'Описание клуба обязательно',\n                maxLength: {\n                  value: 1000,\n                  message: 'Максимум 1000 символов'\n                }\n              })}\n              className={errors.description ? 'error' : ''}\n            />\n            {errors.description && <ErrorText>{errors.description.message}</ErrorText>}\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"password\">Пароль *</Label>\n            <InputWrapper>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n                placeholder=\"Введите пароль (минимум 8 символов)\"\n                {...register('password', {\n                  required: 'Пароль обязателен',\n                  minLength: {\n                    value: 8,\n                    message: 'Минимум 8 символов'\n                  }\n                })}\n                className={errors.password ? 'error' : ''}\n              />\n              <IconButton\n                type=\"button\"\n                $variant=\"secondary\"\n                onClick={() => setShowPassword(!showPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  background: 'none',\n                  color: '#718096'\n                }}\n              >\n                {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </IconButton>\n            </InputWrapper>\n            {errors.password && <ErrorText>{errors.password.message}</ErrorText>}\n            <div style={{ \n              fontSize: '12px', \n              color: '#718096', \n              marginTop: '5px' \n            }}>\n              Рекомендуется: буквы и цифры для большей безопасности\n            </div>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"confirmPassword\">Подтвердите пароль *</Label>\n            <InputWrapper>\n              <Input\n                type={showConfirmPassword ? 'text' : 'password'}\n                id=\"confirmPassword\"\n                placeholder=\"Повторите пароль\"\n                {...register('confirmPassword', {\n                  required: 'Подтвердите пароль',\n                  validate: value => value === password || 'Пароли не совпадают'\n                })}\n                className={errors.confirmPassword ? 'error' : ''}\n              />\n              <IconButton\n                type=\"button\"\n                $variant=\"secondary\"\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  background: 'none',\n                  color: '#718096'\n                }}\n              >\n                {showConfirmPassword ? <EyeOffIcon /> : <EyeIcon />}\n              </IconButton>\n            </InputWrapper>\n            {errors.confirmPassword && <ErrorText>{errors.confirmPassword.message}</ErrorText>}\n          </FormGroup>\n\n          <Button \n            type=\"submit\" \n            disabled={registerMutation.isLoading || !emailCode || emailCode.length !== 6} \n            style={{ width: '100%' }}\n          >\n            {registerMutation.isLoading ? 'Регистрация...' : 'Зарегистрировать клуб'}\n          </Button>\n        </Form>\n\n        <FlexContainer $justify=\"center\" $gap=\"20px\" style={{ marginTop: '25px' }}>\n          <Link \n            to=\"/club/login\" \n            style={{ \n              color: '#dc3522', \n              textDecoration: 'none', \n              fontWeight: '600',\n              fontSize: '14px'\n            }}\n          >\n            Уже есть аккаунт? Войти\n          </Link>\n        </FlexContainer>\n\n        <FlexContainer $justify=\"center\" style={{ marginTop: '20px' }}>\n          <Link \n            to=\"/register\" \n            style={{ \n              color: '#718096', \n              textDecoration: 'none', \n              fontWeight: '500',\n              fontSize: '13px'\n            }}\n          >\n            ← Регистрация пользователя\n          </Link>\n        </FlexContainer>\n      </ContentCard>\n    </PageContainer>\n  );\n};\n\nexport default ClubRegister;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Modal, ModalContent, ModalHeader, Button, CloseIcon } from './index.js';\n\nconst CropperContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  touch-action: none;\n  -webkit-overflow-scrolling: touch;\n  \n  @media (max-width: 768px) {\n    gap: 15px;\n  }\n`;\n\nconst ImagePreview = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 600px;\n  height: ${props => props.$height || '400px'};\n  border: 2px solid #e2e8f0;\n  border-radius: 10px;\n  overflow: hidden;\n  background: #f7fafc;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  touch-action: none;\n  -webkit-overflow-scrolling: touch;\n  \n  img {\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: contain;\n    pointer-events: none;\n  }\n  \n  @media (max-width: 768px) {\n    max-width: 100%;\n    height: ${props => props.$mobileHeight || '300px'};\n    border-radius: 8px;\n  }\n  \n  @media (max-width: 480px) {\n    height: ${props => props.$mobileHeight || '250px'};\n    border-radius: 6px;\n  }\n`;\n\nconst CropArea = styled.div`\n  position: absolute;\n  border: 2px solid #dc3522;\n  background: rgba(220, 53, 34, 0.1);\n  cursor: move;\n  box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5);\n  user-select: none;\n  touch-action: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  \n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    background: #dc3522;\n  }\n  \n  &::before {\n    top: 50%;\n    left: -2px;\n    right: -2px;\n    height: 2px;\n    transform: translateY(-50%);\n  }\n  \n  &::after {\n    left: 50%;\n    top: -2px;\n    bottom: -2px;\n    width: 2px;\n    transform: translateX(-50%);\n  }\n  \n  @media (max-width: 768px) {\n    border-width: 3px;\n    \n    &::before,\n    &::after {\n      background: #dc3522;\n    }\n  }\n`;\n\nconst CropHandle = styled.div`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  background: #dc3522;\n  border: 2px solid white;\n  border-radius: 50%;\n  cursor: ${props => props.$cursor || 'nw-resize'};\n  z-index: 10;\n  touch-action: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  \n  &.top-left { top: -6px; left: -6px; cursor: nw-resize; }\n  &.top-right { top: -6px; right: -6px; cursor: ne-resize; }\n  &.bottom-left { bottom: -6px; left: -6px; cursor: sw-resize; }\n  &.bottom-right { bottom: -6px; right: -6px; cursor: se-resize; }\n  \n  &:hover {\n    background: #ff6b58;\n    transform: scale(1.2);\n  }\n  \n  @media (max-width: 768px) {\n    width: 16px;\n    height: 16px;\n    border-width: 3px;\n    \n    &.top-left { top: -8px; left: -8px; }\n    &.top-right { top: -8px; right: -8px; }\n    &.bottom-left { bottom: -8px; left: -8px; }\n    &.bottom-right { bottom: -8px; right: -8px; }\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n  \n  @media (max-width: 768px) {\n    gap: 10px;\n    flex-direction: column;\n    width: 100%;\n    max-width: 300px;\n  }\n`;\n\nconst Instructions = styled.div`\n  text-align: center;\n  color: #718096;\n  font-size: 14px;\n  line-height: 1.5;\n  max-width: 600px;\n  margin-bottom: 10px;\n  \n  @media (max-width: 768px) {\n    font-size: 13px;\n    margin-bottom: 15px;\n    padding: 0 10px;\n  }\n`;\n\nconst ClubAvatarCropper = ({ \n  isOpen, \n  onClose, \n  imageFile, \n  onCrop, \n  aspectRatio = 590/160, // Пропорция 590x160\n  minSize = 100 \n}) => {\n  const [cropArea, setCropArea] = useState({ x: 0, y: 0, width: 295, height: 80 }); // Начальный размер с учетом пропорции\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeHandle, setResizeHandle] = useState(null);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [imageUrl, setImageUrl] = useState('');\n  const [containerSize, setContainerSize] = useState({ width: 400, height: 400 });\n  const [isMobile, setIsMobile] = useState(false);\n  \n  const imageRef = useRef();\n  const containerRef = useRef();\n\n  // Определяем мобильное устройство\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    \n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    \n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // Инициализация изображения\n  useEffect(() => {\n    if (imageFile) {\n      const url = URL.createObjectURL(imageFile);\n      setImageUrl(url);\n      \n      const img = new Image();\n      img.onload = () => {\n        const { width, height } = img;\n        setImageSize({ width, height });\n        \n        // Вычисляем размеры контейнера на основе пропорций изображения\n        const maxContainerSize = isMobile ? 400 : 600;\n        let containerWidth, containerHeight;\n        \n        if (width > height) {\n          // Горизонтальное изображение\n          containerWidth = maxContainerSize;\n          containerHeight = (height / width) * maxContainerSize;\n        } else {\n          // Вертикальное или квадратное изображение\n          containerHeight = maxContainerSize;\n          containerWidth = (width / height) * maxContainerSize;\n        }\n        \n        // Ограничиваем минимальные размеры\n        containerWidth = Math.max(containerWidth, isMobile ? 250 : 300);\n        containerHeight = Math.max(containerHeight, isMobile ? 200 : 300);\n        \n        setContainerSize({ width: containerWidth, height: containerHeight });\n        \n        // Инициализируем область кропа с учетом пропорции 590x160\n        const cropWidth = Math.min(\n          isMobile ? 200 : 295, \n          containerWidth * 0.8\n        );\n        const cropHeight = cropWidth / aspectRatio;\n        \n        setCropArea({\n          x: (containerWidth - cropWidth) / 2,\n          y: (containerHeight - cropHeight) / 2,\n          width: cropWidth,\n          height: cropHeight\n        });\n      };\n      img.src = url;\n      \n      return () => URL.revokeObjectURL(url);\n    }\n  }, [imageFile, isMobile, aspectRatio]);\n\n  // Получаем координаты события (мышь или touch)\n  const getEventCoordinates = useCallback((e) => {\n    if (e.touches && e.touches[0]) {\n      return {\n        x: e.touches[0].clientX,\n        y: e.touches[0].clientY\n      };\n    }\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }, []);\n\n  // Обработчики событий мыши и touch\n  const handleStart = useCallback((e, type = 'move') => {\n    if (e.type === 'touchstart') {\n      e.preventDefault();\n    } else {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    \n    const coords = getEventCoordinates(e);\n    \n    if (type === 'move') {\n      setIsDragging(true);\n      setDragStart({\n        x: coords.x - cropArea.x,\n        y: coords.y - cropArea.y\n      });\n    } else {\n      setIsResizing(true);\n      setResizeHandle(type);\n      setDragStart({\n        x: coords.x,\n        y: coords.y\n      });\n    }\n  }, [cropArea.x, cropArea.y, getEventCoordinates]);\n\n  const handleMove = useCallback((e) => {\n    if (!isDragging && !isResizing) return;\n    \n    if (e.type === 'touchmove') {\n      e.preventDefault();\n    }\n    \n    const coords = getEventCoordinates(e);\n    \n    if (isDragging) {\n      const newX = coords.x - dragStart.x;\n      const newY = coords.y - dragStart.y;\n      \n      // Ограничиваем область кропа в пределах контейнера\n      const maxX = containerSize.width - cropArea.width;\n      const maxY = containerSize.height - cropArea.height;\n      \n      setCropArea(prev => ({\n        ...prev,\n        x: Math.max(0, Math.min(newX, maxX)),\n        y: Math.max(0, Math.min(newY, maxY))\n      }));\n    } else if (isResizing) {\n      const deltaX = coords.x - dragStart.x;\n      const deltaY = coords.y - dragStart.y;\n      \n      setCropArea(prev => {\n        let newWidth = prev.width;\n        let newHeight = prev.height;\n        let newX = prev.x;\n        let newY = prev.y;\n        \n        switch (resizeHandle) {\n          case 'top-left':\n            newWidth = Math.max(minSize, prev.width - deltaX);\n            newHeight = newWidth / aspectRatio;\n            newX = prev.x + prev.width - newWidth;\n            newY = prev.y + prev.height - newHeight;\n            break;\n          case 'top-right':\n            newWidth = Math.max(minSize, prev.width + deltaX);\n            newHeight = newWidth / aspectRatio;\n            newY = prev.y + prev.height - newHeight;\n            break;\n          case 'bottom-left':\n            newWidth = Math.max(minSize, prev.width - deltaX);\n            newHeight = newWidth / aspectRatio;\n            newX = prev.x + prev.width - newWidth;\n            break;\n          case 'bottom-right':\n            newWidth = Math.max(minSize, prev.width + deltaX);\n            newHeight = newWidth / aspectRatio;\n            break;\n          default:\n            return prev;\n        }\n        \n        // Проверяем, что новая область не выходит за пределы контейнера\n        const maxX = containerSize.width - newWidth;\n        const maxY = containerSize.height - newHeight;\n        \n        return {\n          x: Math.max(0, Math.min(newX, maxX)),\n          y: Math.max(0, Math.min(newY, maxY)),\n          width: newWidth,\n          height: newHeight\n        };\n      });\n      \n      setDragStart({ x: coords.x, y: coords.y });\n    }\n  }, [isDragging, isResizing, cropArea, dragStart, resizeHandle, containerSize, minSize, aspectRatio, getEventCoordinates]);\n\n  const handleEnd = useCallback((e) => {\n    if (e && e.type === 'touchend') {\n      e.preventDefault();\n    }\n    \n    setIsDragging(false);\n    setIsResizing(false);\n    setResizeHandle(null);\n  }, []);\n\n  // Глобальные обработчики событий\n  useEffect(() => {\n    const handleGlobalMouseMove = (e) => handleMove(e);\n    const handleGlobalMouseUp = () => handleEnd();\n    const handleGlobalTouchMove = (e) => {\n      e.preventDefault();\n      handleMove(e);\n    };\n    const handleGlobalTouchEnd = (e) => handleEnd(e);\n    \n    const preventScroll = (e) => {\n      if (isDragging || isResizing) {\n        e.preventDefault();\n      }\n    };\n    \n    if (isDragging || isResizing) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n      document.addEventListener('touchmove', handleGlobalTouchMove, { passive: false });\n      document.addEventListener('touchend', handleGlobalTouchEnd, { passive: false });\n      document.addEventListener('touchmove', preventScroll, { passive: false });\n      document.body.style.overflow = 'hidden';\n    }\n    \n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      document.removeEventListener('touchmove', handleGlobalTouchMove);\n      document.removeEventListener('touchend', handleGlobalTouchEnd);\n      document.removeEventListener('touchmove', preventScroll);\n      document.body.style.overflow = '';\n    };\n  }, [isDragging, isResizing, handleMove, handleEnd]);\n\n  // Добавляем touch event listeners напрямую через refs\n  useEffect(() => {\n    const cropAreaElement = containerRef.current;\n    if (!cropAreaElement) return;\n\n    const handleTouchStart = (e) => {\n      e.preventDefault();\n      handleStart(e, 'move');\n    };\n\n    const handleTouchStartTopLeft = (e) => {\n      e.preventDefault();\n      handleStart(e, 'top-left');\n    };\n\n    const handleTouchStartTopRight = (e) => {\n      e.preventDefault();\n      handleStart(e, 'top-right');\n    };\n\n    const handleTouchStartBottomLeft = (e) => {\n      e.preventDefault();\n      handleStart(e, 'bottom-left');\n    };\n\n    const handleTouchStartBottomRight = (e) => {\n      e.preventDefault();\n      handleStart(e, 'bottom-right');\n    };\n\n    const preventScroll = (e) => {\n      e.preventDefault();\n    };\n\n    cropAreaElement.addEventListener('touchstart', handleTouchStart, { passive: false });\n    cropAreaElement.addEventListener('touchmove', preventScroll, { passive: false });\n    \n    const handles = cropAreaElement.querySelectorAll('.crop-handle');\n    handles.forEach((handle, index) => {\n      const handler = [handleTouchStartTopLeft, handleTouchStartTopRight, handleTouchStartBottomLeft, handleTouchStartBottomRight][index];\n      handle.addEventListener('touchstart', handler, { passive: false });\n    });\n\n    return () => {\n      cropAreaElement.removeEventListener('touchstart', handleTouchStart);\n      cropAreaElement.removeEventListener('touchmove', preventScroll);\n      handles.forEach((handle, index) => {\n        const handler = [handleTouchStartTopLeft, handleTouchStartTopRight, handleTouchStartBottomLeft, handleTouchStartBottomRight][index];\n        handle.removeEventListener('touchstart', handler);\n      });\n    };\n  }, [handleStart]);\n\n  // Предотвращаем скролл на всем документе во время работы с кропом\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n      document.body.style.position = 'fixed';\n      document.body.style.width = '100%';\n      \n      return () => {\n        document.body.style.overflow = '';\n        document.body.style.position = '';\n        document.body.style.width = '';\n      };\n    }\n  }, [isOpen]);\n\n  // Функция кропа\n  const handleCrop = useCallback(() => {\n    if (!imageRef.current) return;\n    \n    // Вычисляем масштаб между отображаемым изображением и оригиналом\n    const scaleX = imageSize.width / containerSize.width;\n    const scaleY = imageSize.height / containerSize.height;\n    \n    // Вычисляем координаты в оригинальном изображении\n    const sourceX = Math.round(cropArea.x * scaleX);\n    const sourceY = Math.round(cropArea.y * scaleY);\n    const sourceWidth = Math.round(cropArea.width * scaleX);\n    const sourceHeight = Math.round(cropArea.height * scaleY);\n    \n    // Создаем объект с параметрами обрезки\n    const cropData = {\n      file: imageFile,\n      cropParams: {\n        x: sourceX,\n        y: sourceY,\n        width: sourceWidth,\n        height: sourceHeight\n      }\n    };\n    \n    onCrop(cropData);\n    onClose();\n  }, [cropArea, imageSize, containerSize, imageFile, onCrop, onClose]);\n\n  // Сброс области кропа\n  const handleReset = useCallback(() => {\n    const cropWidth = Math.min(\n      isMobile ? 200 : 295, \n      containerSize.width * 0.8\n    );\n    const cropHeight = cropWidth / aspectRatio;\n    \n    setCropArea({\n      x: (containerSize.width - cropWidth) / 2,\n      y: (containerSize.height - cropHeight) / 2,\n      width: cropWidth,\n      height: cropHeight\n    });\n  }, [containerSize, isMobile, aspectRatio]);\n\n  if (!isOpen || !imageFile) return null;\n\n  return (\n    <Modal>\n      <ModalContent $maxWidth={isMobile ? \"95vw\" : \"800px\"}>\n        <ModalHeader>\n          <h2>Обрезка аватарки клуба</h2>\n          <Button $variant=\"secondary\" onClick={onClose}>\n            <CloseIcon />\n          </Button>\n        </ModalHeader>\n        \n        <CropperContainer>\n          <Instructions>\n            {isMobile \n              ? \"Перетащите область выделения или используйте угловые маркеры для изменения размера. Аватарка будет в формате панорамы (590x160).\"\n              : \"Перетащите область выделения или используйте угловые маркеры для изменения размера. Аватарка будет в формате панорамы (590x160).\"\n            }\n          </Instructions>\n          \n          <ImagePreview\n            ref={containerRef}\n            $height={`${containerSize.height}px`}\n            $mobileHeight={`${Math.min(containerSize.height, 300)}px`}\n          >\n            <img\n              ref={imageRef}\n              src={imageUrl}\n              alt=\"Предварительный просмотр\"\n              draggable={false}\n            />\n            \n            <CropArea\n              style={{\n                left: cropArea.x,\n                top: cropArea.y,\n                width: cropArea.width,\n                height: cropArea.height\n              }}\n              onMouseDown={(e) => handleStart(e, 'move')}\n            >\n              <CropHandle \n                className=\"crop-handle top-left\" \n                $cursor=\"nw-resize\"\n                onMouseDown={(e) => handleStart(e, 'top-left')}\n              />\n              <CropHandle \n                className=\"crop-handle top-right\" \n                $cursor=\"ne-resize\"\n                onMouseDown={(e) => handleStart(e, 'top-right')}\n              />\n              <CropHandle \n                className=\"crop-handle bottom-left\" \n                $cursor=\"sw-resize\"\n                onMouseDown={(e) => handleStart(e, 'bottom-left')}\n              />\n              <CropHandle \n                className=\"crop-handle bottom-right\" \n                $cursor=\"se-resize\"\n                onMouseDown={(e) => handleStart(e, 'bottom-right')}\n              />\n            </CropArea>\n          </ImagePreview>\n          \n          <Controls>\n            <Button $variant=\"secondary\" onClick={handleReset}>\n              Сбросить\n            </Button>\n            <Button onClick={handleCrop}>\n              Обрезать и сохранить\n            </Button>\n          </Controls>\n        </CropperContainer>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ClubAvatarCropper;\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Button } from './index.js';\nimport toast from 'react-hot-toast';\n\nconst UploadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 20px;\n  border: 2px dashed #e2e8f0;\n  border-radius: 12px;\n  background: #f8fafc;\n  transition: all 0.3s ease;\n\n  &:hover {\n    border-color: #667eea;\n    background: #f0f4ff;\n  }\n\n  &.dragover {\n    border-color: #667eea;\n    background: #e6f3ff;\n  }\n`;\n\nconst UploadArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 20px;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst UploadIcon = styled.div`\n  font-size: 2rem;\n  color: #667eea;\n`;\n\nconst UploadText = styled.div`\n  color: #4a5568;\n  font-size: 14px;\n`;\n\nconst FileInput = styled.input`\n  display: none;\n`;\n\nconst PreviewContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 10px;\n  margin-top: 15px;\n`;\n\nconst PreviewItem = styled.div`\n  position: relative;\n  aspect-ratio: 4/3;\n  border-radius: 8px;\n  overflow: hidden;\n  background: #e2e8f0;\n`;\n\nconst PreviewImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst RemoveButton = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 24px;\n  height: 24px;\n  border: none;\n  border-radius: 50%;\n  background: rgba(220, 53, 34, 0.8);\n  color: white;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background 0.2s ease;\n\n  &:hover {\n    background: rgba(220, 53, 34, 1);\n  }\n`;\n\nconst UploadButton = styled(Button)`\n  margin-top: 10px;\n  align-self: center;\n`;\n\nconst EventImageUploader = ({ \n  eventId, \n  onUpload, \n  onRemove, \n  existingImages = [], \n  maxFiles = 10 \n}) => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [isDragging, setIsDragging] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n\n  const handleFileSelect = (files) => {\n    const fileArray = Array.from(files);\n    const imageFiles = fileArray.filter(file => file.type.startsWith('image/'));\n    \n    if (imageFiles.length === 0) {\n      toast.error('Пожалуйста, выберите только изображения');\n      return;\n    }\n\n    if (existingImages.length + selectedFiles.length + imageFiles.length > maxFiles) {\n      toast.error(`Максимум ${maxFiles} изображений разрешено`);\n      return;\n    }\n\n    setSelectedFiles(prev => [...prev, ...imageFiles]);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    setIsDragging(false);\n    \n    const files = e.dataTransfer.files;\n    handleFileSelect(files);\n  };\n\n  const handleFileInputChange = (e) => {\n    const files = e.target.files;\n    handleFileSelect(files);\n  };\n\n  const removeSelectedFile = (index) => {\n    setSelectedFiles(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) return;\n\n    setIsUploading(true);\n    try {\n      const formData = new FormData();\n      selectedFiles.forEach(file => {\n        formData.append('images', file);\n      });\n\n      const response = await onUpload(eventId, formData);\n      \n      if (response.success) {\n        setSelectedFiles([]);\n        if (fileInputRef.current) {\n          fileInputRef.current.value = '';\n        }\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      toast.error('Ошибка при загрузке изображений');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleRemoveExisting = async (filename) => {\n    try {\n      await onRemove(eventId, filename);\n    } catch (error) {\n      console.error('Remove error:', error);\n      toast.error('Ошибка при удалении изображения');\n    }\n  };\n\n  return (\n    <UploadContainer \n      className={isDragging ? 'dragover' : ''}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n    >\n      <UploadArea onClick={() => fileInputRef.current?.click()}>\n        <UploadIcon>📷</UploadIcon>\n        <UploadText>\n          {isDragging \n            ? 'Отпустите файлы для загрузки' \n            : 'Перетащите изображения сюда или нажмите для выбора'\n          }\n        </UploadText>\n        <UploadText style={{ fontSize: '12px', color: '#718096' }}>\n          Максимум {maxFiles} изображений, до 10MB каждое\n        </UploadText>\n      </UploadArea>\n\n      <FileInput\n        ref={fileInputRef}\n        type=\"file\"\n        multiple\n        accept=\"image/*\"\n        onChange={handleFileInputChange}\n      />\n\n      {/* Предварительный просмотр выбранных файлов */}\n      {selectedFiles.length > 0 && (\n        <div>\n          <h4>Выбранные файлы ({selectedFiles.length}):</h4>\n          <PreviewContainer>\n            {selectedFiles.map((file, index) => (\n              <PreviewItem key={index}>\n                <PreviewImage \n                  src={URL.createObjectURL(file)} \n                  alt={`Preview ${index + 1}`}\n                />\n                <RemoveButton onClick={() => removeSelectedFile(index)}>\n                  ×\n                </RemoveButton>\n              </PreviewItem>\n            ))}\n          </PreviewContainer>\n          <UploadButton \n            onClick={handleUpload} \n            disabled={isUploading}\n          >\n            {isUploading ? 'Загрузка...' : `Загрузить ${selectedFiles.length} изображений`}\n          </UploadButton>\n        </div>\n      )}\n\n      {/* Существующие изображения */}\n      {existingImages.length > 0 && (\n        <div>\n          <h4>Загруженные изображения ({existingImages.length}):</h4>\n          <PreviewContainer>\n            {existingImages.map((image, index) => (\n              <PreviewItem key={index}>\n                <PreviewImage \n                  src={`/uploads/${image}`} \n                  alt={`Event image ${index + 1}`}\n                />\n                <RemoveButton onClick={() => handleRemoveExisting(image)}>\n                  ×\n                </RemoveButton>\n              </PreviewItem>\n            ))}\n          </PreviewContainer>\n        </div>\n      )}\n    </UploadContainer>\n  );\n};\n\nexport default EventImageUploader;\n\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport ClubAvatarCropper from './UI/ClubAvatarCropper';\nimport EventImageUploader from './UI/EventImageUploader';\nimport toast from 'react-hot-toast';\nimport './EventForm.css';\n\nconst EventForm = ({ event, onSave, onCancel, clubId }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    date: '',\n    time: '',\n    location: '',\n    price: '',\n    max_participants: '',\n    category: 'party',\n    age_restriction: '18+',\n    dress_code: '',\n    special_requirements: '',\n    duration_hours: 2\n  });\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAvatarCropper, setShowAvatarCropper] = useState(false);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [eventImages, setEventImages] = useState([]);\n\n  useEffect(() => {\n    if (event) {\n      const eventDate = new Date(event.date);\n      setFormData({\n        title: event.title || '',\n        description: event.description || '',\n        date: eventDate.toISOString().split('T')[0],\n        time: eventDate.toTimeString().slice(0, 5),\n        location: event.location || '',\n        price: event.price || '',\n        max_participants: event.max_participants || '',\n        category: event.category || 'party',\n        age_restriction: event.age_restriction || '18+',\n        dress_code: event.dress_code || '',\n        special_requirements: event.special_requirements || '',\n        avatar: event.avatar || '',\n        duration_hours: event.duration_hours || 2\n      });\n      \n      // Загружаем существующие изображения\n      setEventImages(event.images || []);\n    }\n  }, [event]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Очищаем ошибку при изменении поля\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.title.trim()) {\n      newErrors.title = 'Название события обязательно';\n    }\n\n    if (!formData.date) {\n      newErrors.date = 'Дата события обязательна';\n    } else {\n      const eventDate = new Date(`${formData.date}T${formData.time}`);\n      if (eventDate <= new Date()) {\n        newErrors.date = 'Дата события должна быть в будущем';\n      }\n    }\n\n    if (!formData.time) {\n      newErrors.time = 'Время события обязательно';\n    }\n\n    if (formData.price && isNaN(parseFloat(formData.price))) {\n      newErrors.price = 'Цена должна быть числом';\n    }\n\n    if (formData.max_participants && (isNaN(parseInt(formData.max_participants)) || parseInt(formData.max_participants) < 1)) {\n      newErrors.max_participants = 'Количество участников должно быть положительным числом';\n    }\n\n    if (formData.duration_hours && (isNaN(parseInt(formData.duration_hours)) || parseInt(formData.duration_hours) < 1 || parseInt(formData.duration_hours) > 24)) {\n      newErrors.duration_hours = 'Длительность должна быть от 1 до 24 часов';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleAvatarClick = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      if (file) {\n        setSelectedImageFile(file);\n        setShowAvatarCropper(true);\n      }\n    };\n    input.click();\n  };\n\n  const handleAvatarCrop = async (cropData) => {\n    if (!event?.id) return;\n    \n    try {\n      const formData = new FormData();\n      formData.append('avatar', cropData.file);\n      \n      if (cropData.cropParams) {\n        formData.append('x', cropData.cropParams.x);\n        formData.append('y', cropData.cropParams.y);\n        formData.append('width', cropData.cropParams.width);\n        formData.append('height', cropData.cropParams.height);\n      }\n      \n      const response = await clubApi.uploadEventAvatar(event.id, formData);\n      \n      if (response.success) {\n        // Обновляем аватар в форме\n        setFormData(prev => ({\n          ...prev,\n          avatar: response.filename\n        }));\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки аватара:', error);\n      toast.error('Ошибка при загрузке аватара мероприятия');\n    }\n  };\n\n  const handleCloseAvatarCropper = () => {\n    setShowAvatarCropper(false);\n    setSelectedImageFile(null);\n  };\n\n  const handleImageUpload = async (eventId, formData) => {\n    try {\n      const response = await clubApi.uploadEventImages(eventId, formData);\n      \n      if (response.success) {\n        setEventImages(prev => [...prev, ...response.files.map(f => f.filename)]);\n      }\n      \n      return response;\n    } catch (error) {\n      console.error('Ошибка загрузки изображений:', error);\n      throw error;\n    }\n  };\n\n  const handleImageRemove = async (eventId, filename) => {\n    try {\n      await clubApi.deleteEventImage(eventId, filename);\n      setEventImages(prev => prev.filter(img => img !== filename));\n    } catch (error) {\n      console.error('Ошибка удаления изображения:', error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const eventData = {\n        ...formData,\n        club_id: clubId,\n        date: new Date(`${formData.date}T${formData.time}`).toISOString(),\n        price: formData.price ? parseFloat(formData.price) : 0,\n        max_participants: formData.max_participants ? parseInt(formData.max_participants) : null,\n        duration_hours: formData.duration_hours ? parseInt(formData.duration_hours) : 2\n      };\n\n      if (event) {\n        // Редактирование существующего события\n        await clubApi.updateEvent(event.id, eventData);\n      } else {\n        // Создание нового события\n        await clubApi.createEvent(eventData);\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('Ошибка сохранения события:', error);\n      setErrors({ submit: 'Ошибка сохранения события' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const categories = [\n    { value: 'party', label: 'Вечеринка' },\n    { value: 'concert', label: 'Концерт' },\n    { value: 'workshop', label: 'Мастер-класс' },\n    { value: 'networking', label: 'Нетворкинг' },\n    { value: 'exhibition', label: 'Выставка' },\n    { value: 'sports', label: 'Спорт' },\n    { value: 'other', label: 'Другое' }\n  ];\n\n  const ageRestrictions = [\n    { value: '16+', label: '16+' },\n    { value: '18+', label: '18+' },\n    { value: '21+', label: '21+' },\n    { value: 'all', label: 'Все возрасты' }\n  ];\n\n  return (\n    <div className=\"event-form-overlay\">\n      <div className=\"event-form\">\n        <div className=\"event-form-header\">\n          <h2>{event ? 'Редактировать событие' : 'Создать событие'}</h2>\n          <button \n            type=\"button\" \n            className=\"close-button\"\n            onClick={onCancel}\n          >\n            ×\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"event-form-content\">\n          {errors.submit && (\n            <div className=\"error-message\">\n              {errors.submit}\n            </div>\n          )}\n\n          {/* Аватар мероприятия */}\n          {event && (\n            <div className=\"form-section\">\n              <h3>Аватар мероприятия</h3>\n              <div \n                className=\"event-avatar-upload\"\n                onClick={handleAvatarClick}\n                style={{\n                  width: '200px',\n                  height: '80px',\n                  border: '2px dashed #e2e8f0',\n                  borderRadius: '12px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  cursor: 'pointer',\n                  backgroundColor: formData.avatar ? 'transparent' : '#f8fafc',\n                  backgroundImage: formData.avatar ? `url(/uploads/${formData.avatar})` : 'none',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  position: 'relative'\n                }}\n              >\n                {!formData.avatar && (\n                  <div style={{ textAlign: 'center', color: '#718096' }}>\n                    <div style={{ fontSize: '1.5rem', marginBottom: '5px' }}>📷</div>\n                    <div style={{ fontSize: '12px' }}>Загрузить аватар</div>\n                  </div>\n                )}\n                {formData.avatar && (\n                  <div style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    background: 'rgba(0,0,0,0.5)',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    opacity: 0,\n                    transition: 'opacity 0.3s ease',\n                    color: 'white',\n                    fontSize: '12px'\n                  }}\n                  onMouseEnter={(e) => e.target.style.opacity = '1'}\n                  onMouseLeave={(e) => e.target.style.opacity = '0'}\n                  >\n                    Изменить\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Галерея изображений */}\n          {event && (\n            <div className=\"form-section\">\n              <h3>Галерея изображений</h3>\n              <EventImageUploader\n                eventId={event.id}\n                onUpload={handleImageUpload}\n                onRemove={handleImageRemove}\n                existingImages={eventImages}\n                maxFiles={10}\n              />\n            </div>\n          )}\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Название события *</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                value={formData.title}\n                onChange={handleChange}\n                className={errors.title ? 'error' : ''}\n                placeholder=\"Введите название события\"\n              />\n              {errors.title && <span className=\"field-error\">{errors.title}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">Категория</label>\n              <select\n                id=\"category\"\n                name=\"category\"\n                value={formData.category}\n                onChange={handleChange}\n              >\n                {categories.map(cat => (\n                  <option key={cat.value} value={cat.value}>\n                    {cat.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Описание</label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Опишите событие...\"\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"date\">Дата события *</label>\n              <input\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                value={formData.date}\n                onChange={handleChange}\n                className={errors.date ? 'error' : ''}\n                min={new Date().toISOString().split('T')[0]}\n              />\n              {errors.date && <span className=\"field-error\">{errors.date}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"time\">Время события *</label>\n              <input\n                type=\"time\"\n                id=\"time\"\n                name=\"time\"\n                value={formData.time}\n                onChange={handleChange}\n                className={errors.time ? 'error' : ''}\n              />\n              {errors.time && <span className=\"field-error\">{errors.time}</span>}\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">Место проведения</label>\n            <input\n              type=\"text\"\n              id=\"location\"\n              name=\"location\"\n              value={formData.location}\n              onChange={handleChange}\n              placeholder=\"Адрес или название места\"\n            />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Цена (₽)</label>\n              <input\n                type=\"number\"\n                id=\"price\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleChange}\n                className={errors.price ? 'error' : ''}\n                placeholder=\"0\"\n                min=\"0\"\n                step=\"0.01\"\n              />\n              {errors.price && <span className=\"field-error\">{errors.price}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"max_participants\">Макс. участников</label>\n              <input\n                type=\"number\"\n                id=\"max_participants\"\n                name=\"max_participants\"\n                value={formData.max_participants}\n                onChange={handleChange}\n                className={errors.max_participants ? 'error' : ''}\n                placeholder=\"Без ограничений\"\n                min=\"1\"\n              />\n              {errors.max_participants && <span className=\"field-error\">{errors.max_participants}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"duration_hours\">Длительность (часы)</label>\n              <input\n                type=\"number\"\n                id=\"duration_hours\"\n                name=\"duration_hours\"\n                value={formData.duration_hours}\n                onChange={handleChange}\n                className={errors.duration_hours ? 'error' : ''}\n                placeholder=\"2\"\n                min=\"1\"\n                max=\"24\"\n              />\n              {errors.duration_hours && <span className=\"field-error\">{errors.duration_hours}</span>}\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"age_restriction\">Возрастные ограничения</label>\n              <select\n                id=\"age_restriction\"\n                name=\"age_restriction\"\n                value={formData.age_restriction}\n                onChange={handleChange}\n              >\n                {ageRestrictions.map(age => (\n                  <option key={age.value} value={age.value}>\n                    {age.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"dress_code\">Дресс-код</label>\n              <input\n                type=\"text\"\n                id=\"dress_code\"\n                name=\"dress_code\"\n                value={formData.dress_code}\n                onChange={handleChange}\n                placeholder=\"Например: вечерний, casual\"\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"special_requirements\">Особые требования</label>\n            <textarea\n              id=\"special_requirements\"\n              name=\"special_requirements\"\n              value={formData.special_requirements}\n              onChange={handleChange}\n              rows=\"3\"\n              placeholder=\"Дополнительная информация для участников...\"\n            />\n          </div>\n\n          <div className=\"form-actions\">\n            <button \n              type=\"button\" \n              className=\"btn btn-secondary\"\n              onClick={onCancel}\n              disabled={loading}\n            >\n              Отмена\n            </button>\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading}\n            >\n              {loading ? 'Сохранение...' : (event ? 'Сохранить изменения' : 'Создать событие')}\n            </button>\n          </div>\n        </form>\n\n        {/* Модальное окно обрезки аватара */}\n        <ClubAvatarCropper\n          isOpen={showAvatarCropper}\n          onClose={handleCloseAvatarCropper}\n          imageFile={selectedImageFile}\n          onCrop={handleAvatarCrop}\n          aspectRatio={590/160}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EventForm;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Modal, ModalContent, ModalHeader, Button, CloseIcon } from './UI/index.js';\nimport { clubApi } from '../services/clubApi';\n\nconst EventContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-height: 80vh;\n  overflow-y: auto;\n`;\n\nconst EventHeader = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst EventAvatar = styled.div`\n  width: 200px;\n  height: 80px;\n  border-radius: 12px;\n  overflow: hidden;\n  background: linear-gradient(135deg, #dc3522 0%, #ff6b58 100%);\n  flex-shrink: 0;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 120px;\n  }\n`;\n\nconst EventInfo = styled.div`\n  flex: 1;\n`;\n\nconst EventTitle = styled.h2`\n  margin: 0 0 10px 0;\n  color: #2d3748;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nconst EventMeta = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 15px;\n`;\n\nconst MetaItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: #4a5568;\n  font-size: 14px;\n\n  .icon {\n    color: #667eea;\n  }\n`;\n\nconst EventDescription = styled.div`\n  color: #4a5568;\n  line-height: 1.6;\n  margin-bottom: 20px;\n`;\n\nconst ImagesSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst SectionTitle = styled.h3`\n  margin: 0 0 15px 0;\n  color: #2d3748;\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nconst ImageGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 15px;\n`;\n\nconst ImageItem = styled.div`\n  position: relative;\n  aspect-ratio: 4/3;\n  border-radius: 12px;\n  overflow: hidden;\n  background: #e2e8f0;\n  cursor: pointer;\n  transition: transform 0.2s ease;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst ParticipantsSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst ParticipantsList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nconst ParticipantItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 8px 12px;\n  background: #f7fafc;\n  border-radius: 20px;\n  font-size: 14px;\n  color: #4a5568;\n`;\n\nconst ParticipantAvatar = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  overflow: hidden;\n  background: #e2e8f0;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  color: #667eea;\n  font-size: 18px;\n`;\n\nconst EventDetailsModal = ({ isOpen, onClose, eventId }) => {\n  console.log('EventDetailsModal render:', { isOpen, eventId });\n  const [event, setEvent] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('EventDetailsModal useEffect:', { isOpen, eventId });\n    if (isOpen && eventId) {\n      loadEventDetails();\n    }\n  }, [isOpen, eventId]);\n\n  const loadEventDetails = async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const response = await clubApi.getEvent(eventId);\n      setEvent(response.event);\n    } catch (error) {\n      console.error('Error loading event details:', error);\n      setError('Ошибка при загрузке деталей мероприятия');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  const formatTime = (timeString) => {\n    if (!timeString) return '';\n    return timeString.substring(0, 5);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <ModalContent $maxWidth=\"800px\">\n        <ModalHeader>\n          <h2>Детали мероприятия</h2>\n          <Button $variant=\"secondary\" onClick={onClose}>\n            <CloseIcon />\n          </Button>\n        </ModalHeader>\n        \n        <EventContent>\n          {loading && <LoadingSpinner>Загрузка...</LoadingSpinner>}\n          \n          {error && (\n            <div style={{ color: '#e53e3e', textAlign: 'center', padding: '20px' }}>\n              {error}\n            </div>\n          )}\n          \n          {event && (\n            <>\n              <EventHeader>\n                <EventAvatar>\n                  {event.avatar ? (\n                    <img \n                      src={`/uploads/${event.avatar}`} \n                      alt={event.title}\n                      onError={(e) => { e.target.style.display = 'none'; }}\n                    />\n                  ) : null}\n                </EventAvatar>\n                \n                <EventInfo>\n                  <EventTitle>{event.title}</EventTitle>\n                  \n                  <EventMeta>\n                    <MetaItem>\n                      <span className=\"icon\">📅</span>\n                      <span>{formatDate(event.date)}</span>\n                    </MetaItem>\n                    \n                    {event.time && (\n                      <MetaItem>\n                        <span className=\"icon\">🕐</span>\n                        <span>{formatTime(event.time)}</span>\n                      </MetaItem>\n                    )}\n                    \n                    {event.location && (\n                      <MetaItem>\n                        <span className=\"icon\">📍</span>\n                        <span>{event.location}</span>\n                      </MetaItem>\n                    )}\n                    \n                    {event.price > 0 && (\n                      <MetaItem>\n                        <span className=\"icon\">💰</span>\n                        <span>{event.price} ₽</span>\n                      </MetaItem>\n                    )}\n                    \n                    {event.max_participants && (\n                      <MetaItem>\n                        <span className=\"icon\">👥</span>\n                        <span>{event.current_participants || 0}/{event.max_participants}</span>\n                      </MetaItem>\n                    )}\n                  </EventMeta>\n                  \n                  {event.description && (\n                    <EventDescription>{event.description}</EventDescription>\n                  )}\n                </EventInfo>\n              </EventHeader>\n\n              {/* Галерея изображений */}\n              {event.images && event.images.length > 0 && (\n                <ImagesSection>\n                  <SectionTitle>Фотографии ({event.images.length})</SectionTitle>\n                  <ImageGrid>\n                    {event.images.map((image, index) => (\n                      <ImageItem key={index}>\n                        <img \n                          src={`/uploads/${image}`} \n                          alt={`Event photo ${index + 1}`}\n                          onError={(e) => { e.target.style.display = 'none'; }}\n                        />\n                      </ImageItem>\n                    ))}\n                  </ImageGrid>\n                </ImagesSection>\n              )}\n\n              {/* Участники */}\n              {event.participants && event.participants.length > 0 && (\n                <ParticipantsSection>\n                  <SectionTitle>Участники ({event.participants.length})</SectionTitle>\n                  <ParticipantsList>\n                    {event.participants.map((participant, index) => (\n                      <ParticipantItem key={index}>\n                        <ParticipantAvatar>\n                          {participant.user?.ava ? (\n                            <img \n                              src={`/uploads/${participant.user.ava}`} \n                              alt={participant.user.name || participant.user.login}\n                              onError={(e) => { e.target.style.display = 'none'; }}\n                            />\n                          ) : null}\n                        </ParticipantAvatar>\n                        <span>{participant.user?.name || participant.user?.login}</span>\n                        <span style={{ \n                          color: participant.status === 'confirmed' ? '#38a169' : '#ed8936',\n                          fontSize: '12px'\n                        }}>\n                          {participant.status === 'confirmed' ? '✓' : '?'}\n                        </span>\n                      </ParticipantItem>\n                    ))}\n                  </ParticipantsList>\n                </ParticipantsSection>\n              )}\n            </>\n          )}\n        </EventContent>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default EventDetailsModal;\n","// Утилита для определения статуса мероприятий с учетом длительности\n\n/**\n * Определяет статус мероприятия на основе даты начала и длительности\n * @param {string|Date} startDate - Дата начала мероприятия\n * @param {number} durationHours - Длительность в часах (по умолчанию 2)\n * @param {string|Date} endDate - Точная дата окончания (если указана, приоритет над durationHours)\n * @returns {string} - 'upcoming', 'ongoing', 'completed'\n */\nexport const getEventStatus = (startDate, durationHours = 2, endDate = null) => {\n  const now = new Date();\n  const eventStart = new Date(startDate);\n  \n  // Определяем дату окончания\n  let eventEnd;\n  if (endDate) {\n    eventEnd = new Date(endDate);\n  } else {\n    eventEnd = new Date(eventStart.getTime() + (durationHours * 60 * 60 * 1000));\n  }\n  \n  if (eventStart > now) {\n    return 'upcoming'; // Предстоит\n  } else if (now >= eventStart && now <= eventEnd) {\n    return 'ongoing'; // Идет\n  } else {\n    return 'completed'; // Завершено\n  }\n};\n\n/**\n * Получает отображаемый текст статуса\n * @param {string} status - Статус мероприятия\n * @returns {string} - Отображаемый текст\n */\nexport const getEventStatusText = (status) => {\n  const statusMap = {\n    'upcoming': 'Предстоит',\n    'ongoing': 'Идет',\n    'completed': 'Завершено'\n  };\n  \n  return statusMap[status] || 'Неизвестно';\n};\n\n/**\n * Получает CSS класс для статуса\n * @param {string} status - Статус мероприятия\n * @returns {string} - CSS класс\n */\nexport const getEventStatusClass = (status) => {\n  return `status-${status}`;\n};\n\n/**\n * Проверяет, можно ли присоединиться к мероприятию\n * @param {string|Date} startDate - Дата начала мероприятия\n * @param {number} durationHours - Длительность в часах\n * @param {string|Date} endDate - Точная дата окончания\n * @returns {boolean} - Можно ли присоединиться\n */\nexport const canJoinEvent = (startDate, durationHours = 2, endDate = null) => {\n  const status = getEventStatus(startDate, durationHours, endDate);\n  return status === 'upcoming';\n};\n\n/**\n * Получает оставшееся время до начала мероприятия\n * @param {string|Date} startDate - Дата начала мероприятия\n * @returns {string|null} - Оставшееся время или null если мероприятие уже началось\n */\nexport const getTimeUntilStart = (startDate) => {\n  const now = new Date();\n  const eventStart = new Date(startDate);\n  \n  if (eventStart <= now) {\n    return null;\n  }\n  \n  const diff = eventStart.getTime() - now.getTime();\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  \n  if (days > 0) {\n    return `${days} дн. ${hours} ч.`;\n  } else if (hours > 0) {\n    return `${hours} ч. ${minutes} мин.`;\n  } else {\n    return `${minutes} мин.`;\n  }\n};\n\n/**\n * Получает оставшееся время до окончания мероприятия\n * @param {string|Date} startDate - Дата начала мероприятия\n * @param {number} durationHours - Длительность в часах\n * @param {string|Date} endDate - Точная дата окончания\n * @returns {string|null} - Оставшееся время или null если мероприятие еще не началось или уже закончилось\n */\nexport const getTimeUntilEnd = (startDate, durationHours = 2, endDate = null) => {\n  const now = new Date();\n  const eventStart = new Date(startDate);\n  \n  // Определяем дату окончания\n  let eventEnd;\n  if (endDate) {\n    eventEnd = new Date(endDate);\n  } else {\n    eventEnd = new Date(eventStart.getTime() + (durationHours * 60 * 60 * 1000));\n  }\n  \n  if (now < eventStart || now > eventEnd) {\n    return null;\n  }\n  \n  const diff = eventEnd.getTime() - now.getTime();\n  const hours = Math.floor(diff / (1000 * 60 * 60));\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  \n  if (hours > 0) {\n    return `${hours} ч. ${minutes} мин.`;\n  } else {\n    return `${minutes} мин.`;\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { clubApi, clubAuth } from '../services/clubApi';\nimport EventForm from '../components/EventForm';\nimport ClubAvatarCropper from '../components/UI/ClubAvatarCropper';\nimport EventDetailsModal from '../components/EventDetailsModal';\nimport { getEventStatus, getEventStatusText } from '../utils/eventStatus';\nimport toast from 'react-hot-toast';\nimport '../styles/ClubDashboard.css';\n\n// Иконки\nconst CalendarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst ChartBarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 20V10\"/>\n    <path d=\"M12 20V4\"/>\n    <path d=\"M6 20v-6\"/>\n  </svg>\n);\n\nconst CogIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"/>\n  </svg>\n);\n\nconst PlusIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n  </svg>\n);\n\nconst BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nconst StarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"/>\n  </svg>\n);\n\nconst MapPinIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"/>\n    <circle cx=\"12\" cy=\"10\" r=\"3\"/>\n  </svg>\n);\n\nconst ClockIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <polyline points=\"12,6 12,12 16,14\"/>\n  </svg>\n);\n\nconst ClubDashboard = () => {\n  const navigate = useNavigate();\n  const [club, setClub] = useState(null);\n  const [stats, setStats] = useState({});\n  const [recentEvents, setRecentEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateEventModal, setShowCreateEventModal] = useState(false);\n  const [showAvatarCropper, setShowAvatarCropper] = useState(false);\n  const [selectedImageFile, setSelectedImageFile] = useState(null);\n  const [showEventDetails, setShowEventDetails] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    // Проверяем аутентификацию клуба\n    if (!clubAuth.isAuthenticated()) {\n      navigate('/club/login');\n      return;\n    }\n    \n    loadDashboardData();\n  }, [navigate]);\n\n  const loadDashboardData = async () => {\n    try {\n      const [clubData, statsData, eventsData] = await Promise.all([\n        clubApi.getProfile(),\n        clubApi.getAnalytics('overview'),\n        clubApi.getEvents({ limit: 5 })\n      ]);\n      \n      setClub(clubData.club || clubData);\n      setStats(statsData.analytics || statsData);\n      setRecentEvents(Array.isArray(eventsData.events) ? eventsData.events : (Array.isArray(eventsData) ? eventsData : []));\n    } catch (error) {\n      console.error('Ошибка загрузки данных:', error);\n      \n      // Если ошибка аутентификации, перенаправляем на страницу входа\n      if (error.message === 'Unauthorized' || error.message.includes('токен') || error.message.includes('token')) {\n        clubAuth.removeToken();\n        navigate('/club/login');\n        return;\n      }\n      \n      // Устанавливаем fallback данные\n      setClub(null);\n      setStats({});\n      setRecentEvents([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateEvent = () => {\n    setShowCreateEventModal(true);\n  };\n\n  const handleCloseCreateEventModal = () => {\n    setShowCreateEventModal(false);\n  };\n\n  const handleEventCreated = () => {\n    setShowCreateEventModal(false);\n    // Перезагружаем данные дашборда\n    loadDashboardData();\n  };\n\n  const handleSettings = () => {\n    window.location.href = '/club/settings';\n  };\n\n  const handleAvatarClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedImageFile(file);\n      setShowAvatarCropper(true);\n    }\n  };\n\n  const handleAvatarCrop = async (cropData) => {\n    try {\n      const formData = new FormData();\n      formData.append('avatar', cropData.file);\n      \n      // Добавляем параметры обрезки\n      if (cropData.cropParams) {\n        formData.append('x', cropData.cropParams.x);\n        formData.append('y', cropData.cropParams.y);\n        formData.append('width', cropData.cropParams.width);\n        formData.append('height', cropData.cropParams.height);\n      }\n      \n      const response = await clubApi.uploadClubAvatar(formData);\n      \n      if (response.success) {\n        // Обновляем аватар в состоянии\n        setClub(prev => ({\n          ...prev,\n          avatar: response.filename\n        }));\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки аватара:', error);\n      toast.error('Ошибка при загрузке аватара');\n    }\n  };\n\n  const handleCloseAvatarCropper = () => {\n    setShowAvatarCropper(false);\n    setSelectedImageFile(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleShowEventDetails = (eventId) => {\n    console.log('=== handleShowEventDetails called ===');\n    console.log('Event ID:', eventId);\n    console.log('Current showEventDetails state:', showEventDetails);\n    console.log('Current selectedEventId state:', selectedEventId);\n    \n    setSelectedEventId(eventId);\n    setShowEventDetails(true);\n    \n    console.log('States updated, showEventDetails should be true now');\n  };\n\n  const handleCloseEventDetails = () => {\n    setShowEventDetails(false);\n    setSelectedEventId(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"club-dashboard-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка дашборда...</p>\n      </div>\n    );\n  }\n\n  if (!club) {\n    return (\n      <div className=\"club-dashboard-error\">\n        <h2>Ошибка загрузки данных клуба</h2>\n        <p>Не удалось загрузить информацию о клубе. Проверьте подключение к интернету и попробуйте снова.</p>\n        <button onClick={loadDashboardData} className=\"btn btn-primary\">\n          Попробовать снова\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-dashboard\">\n      {/* Header */}\n      <div className=\"club-dashboard-header\">\n        <div className=\"club-info\">\n          <div className=\"club-avatar-panoramic\" onClick={handleAvatarClick}>\n            <img \n              src={club?.avatar ? `/uploads/${club.avatar}` : '/uploads/no_photo.jpg'} \n              alt={club?.name}\n              onError={(e) => {\n                e.target.src = '/uploads/no_photo.jpg';\n              }}\n            />\n            <div className=\"avatar-overlay\">\n              <span>📷</span>\n              <span>Изменить аватар</span>\n            </div>\n          </div>\n          <div className=\"club-details\">\n            <h1>{club?.name}</h1>\n            <p className=\"club-location\">\n              <MapPinIcon className=\"icon\" />\n              {club?.location}\n            </p>\n            <p className=\"club-type\">{club?.type}</p>\n          </div>\n        </div>\n        <div className=\"club-actions\">\n          <button className=\"btn btn-primary\" onClick={handleCreateEvent}>\n            <PlusIcon className=\"icon\" />\n            Создать мероприятие\n          </button>\n          <button className=\"btn btn-secondary\" onClick={handleSettings}>\n            <CogIcon className=\"icon\" />\n            Настройки\n          </button>\n        </div>\n      </div>\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleFileSelect}\n        style={{ display: 'none' }}\n      />\n\n      {/* Stats Cards */}\n      <div className=\"stats-grid\">\n        <div className=\"stat-card\">\n          <div className=\"stat-icon events\">\n            <CalendarIcon />\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.total_events || 0}</h3>\n            <p>Всего мероприятий</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon participants\">\n            <UsersIcon />\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.total_participants || 0}</h3>\n            <p>Участников</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon revenue\">\n            <ChartBarIcon />\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.total_revenue || 0} ₽</h3>\n            <p>Доход</p>\n          </div>\n        </div>\n        \n        <div className=\"stat-card\">\n          <div className=\"stat-icon rating\">\n            <StarIcon />\n          </div>\n          <div className=\"stat-content\">\n            <h3>{stats.average_rating || 0}</h3>\n            <p>Рейтинг</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"quick-actions\">\n        <h2>Быстрые действия</h2>\n        <div className=\"actions-grid\">\n          <button className=\"action-card\" onClick={handleCreateEvent}>\n            <CalendarIcon className=\"icon\" />\n            <h3>Создать мероприятие</h3>\n            <p>Организуйте новое событие</p>\n          </button>\n          \n          <Link to=\"/club/events\" className=\"action-card\">\n            <BellIcon className=\"icon\" />\n            <h3>Мероприятия</h3>\n            <p>Управление событиями</p>\n          </Link>\n          \n          <Link to=\"/club/analytics\" className=\"action-card\">\n            <ChartBarIcon className=\"icon\" />\n            <h3>Аналитика</h3>\n            <p>Просмотр статистики</p>\n          </Link>\n          \n          <Link to=\"/club/participants\" className=\"action-card\">\n            <UsersIcon className=\"icon\" />\n            <h3>Участники</h3>\n            <p>Управление участниками</p>\n          </Link>\n        </div>\n      </div>\n\n      {/* Recent Events */}\n      <div className=\"recent-events\">\n        <div className=\"section-header\">\n          <h2>Последние мероприятия</h2>\n          <Link to=\"/club/events\" className=\"view-all\">Посмотреть все</Link>\n        </div>\n        \n        <div className=\"events-grid\">\n          {(recentEvents || []).map(event => (\n            <div key={event.id} className=\"event-card\">\n              <div className=\"event-header\">\n                <h3>{event.title}</h3>\n                <span className={`event-status ${getEventStatus(event.date, event.duration_hours || 2, event.end_date)}`}>\n                  {getEventStatusText(getEventStatus(event.date, event.duration_hours || 2, event.end_date))}\n                </span>\n              </div>\n              \n              <div className=\"event-details\">\n                <p className=\"event-date\">\n                  <ClockIcon className=\"icon\" />\n                  {new Date(event.date).toLocaleDateString('ru-RU')}\n                </p>\n                <p className=\"event-location\">\n                  <MapPinIcon className=\"icon\" />\n                  {event.location}\n                </p>\n                <p className=\"event-participants\">\n                  <UsersIcon className=\"icon\" />\n                  {event.max_participants && event.max_participants > 0 \n                    ? `${event.current_participants || 0}/${event.max_participants} участников`\n                    : `${event.current_participants || 0} участников`\n                  }\n                </p>\n              </div>\n              \n              <div className=\"event-actions\">\n                <div \n                  className=\"btn btn-sm btn-outline\"\n                  onClick={(e) => {\n                    console.log('=== EYE BUTTON CLICKED ===');\n                    console.log('Event object:', e);\n                    console.log('Event target:', e.target);\n                    console.log('Event currentTarget:', e.currentTarget);\n                    console.log('Event ID:', event.id);\n                    \n                    e.preventDefault();\n                    e.stopPropagation();\n                    \n                    console.log('About to call handleShowEventDetails');\n                    handleShowEventDetails(event.id);\n                    console.log('handleShowEventDetails called');\n                    \n                    return false;\n                  }}\n                  title=\"Просмотр деталей\"\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                >\n                  👁️\n                </div>\n                <div \n                  className=\"btn btn-sm btn-primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    console.log('Details button clicked for event:', event.id);\n                    handleShowEventDetails(event.id);\n                    return false;\n                  }}\n                  title=\"Подробнее\"\n                  style={{ cursor: 'pointer', userSelect: 'none' }}\n                >\n                  Подробнее\n                </div>\n                <Link \n                  to=\"/club/events\" \n                  className=\"btn btn-sm btn-secondary\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  Редактировать\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Notifications */}\n      <div className=\"notifications-panel\">\n        <h2>Уведомления</h2>\n        <div className=\"notifications-list\">\n          <div className=\"notification-item\">\n            <div className=\"notification-icon\">\n              <UsersIcon />\n            </div>\n            <div className=\"notification-content\">\n              <p>Новый участник присоединился к мероприятию \"Вечеринка в стиле 80-х\"</p>\n              <span className=\"notification-time\">2 минуты назад</span>\n            </div>\n          </div>\n          \n          <div className=\"notification-item\">\n            <div className=\"notification-icon\">\n              <BellIcon />\n            </div>\n            <div className=\"notification-content\">\n              <p>Заявка на вступление в клуб от пользователя @dancer123</p>\n              <span className=\"notification-time\">15 минут назад</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Create Event Modal */}\n      {showCreateEventModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <EventForm\n              onCancel={handleCloseCreateEventModal}\n              onSave={handleEventCreated}\n            />\n          </div>\n        </div>\n      )}\n\n        {/* Avatar Cropper Modal */}\n        <ClubAvatarCropper\n          isOpen={showAvatarCropper}\n          onClose={handleCloseAvatarCropper}\n          imageFile={selectedImageFile}\n          onCrop={handleAvatarCrop}\n          aspectRatio={590/160}\n        />\n\n        {/* Event Details Modal */}\n        <EventDetailsModal\n          isOpen={showEventDetails}\n          onClose={handleCloseEventDetails}\n          eventId={selectedEventId}\n        />\n      </div>\n    );\n  };\n\nexport default ClubDashboard;\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport toast from 'react-hot-toast';\nimport './EventParticipants.css';\n\nconst EventParticipants = ({ eventId, onClose }) => {\n  const [participants, setParticipants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n\n  useEffect(() => {\n    if (eventId) {\n      loadParticipants();\n    }\n  }, [eventId]);\n\n  const loadParticipants = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await clubApi.getEventParticipants(eventId);\n      setParticipants(response.participants || []);\n    } catch (error) {\n      console.error('Ошибка загрузки участников:', error);\n      setError('Не удалось загрузить список участников');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStatusChange = async (participantId, newStatus) => {\n    try {\n      await clubApi.updateParticipantStatus(eventId, participantId, newStatus);\n      \n      setParticipants(prev => \n        prev.map(participant => \n          participant.id === participantId \n            ? { ...participant, status: newStatus }\n            : participant\n        )\n      );\n    } catch (error) {\n      console.error('Ошибка обновления статуса:', error);\n      toast.error('Не удалось обновить статус участника');\n    }\n  };\n\n  const handleRemoveParticipant = async (participantId) => {\n    if (!window.confirm('Вы уверены, что хотите удалить этого участника?')) {\n      return;\n    }\n\n    try {\n      await clubApi.removeParticipant(eventId, participantId);\n      setParticipants(prev => prev.filter(p => p.id !== participantId));\n    } catch (error) {\n      console.error('Ошибка удаления участника:', error);\n      toast.error('Не удалось удалить участника');\n    }\n  };\n\n  const getStatusLabel = (status) => {\n    const statuses = {\n      'pending': 'Ожидает',\n      'approved': 'Подтвержден',\n      'rejected': 'Отклонен',\n      'cancelled': 'Отменен'\n    };\n    return statuses[status] || status;\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      'pending': '#f59e0b',\n      'approved': '#10b981',\n      'rejected': '#ef4444',\n      'cancelled': '#6b7280'\n    };\n    return colors[status] || '#6b7280';\n  };\n\n  const filteredParticipants = participants.filter(participant => {\n    const matchesSearch = \n      participant.user?.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      participant.user?.email?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = selectedStatus === 'all' || participant.status === selectedStatus;\n    \n    return matchesSearch && matchesStatus;\n  });\n\n  const statusCounts = participants.reduce((acc, participant) => {\n    acc[participant.status] = (acc[participant.status] || 0) + 1;\n    return acc;\n  }, {});\n\n  if (loading) {\n    return (\n      <div className=\"event-participants-overlay\">\n        <div className=\"event-participants\">\n          <div className=\"participants-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>Загрузка участников...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"event-participants-overlay\">\n      <div className=\"event-participants\">\n        <div className=\"participants-header\">\n          <h2>Участники события</h2>\n          <button \n            className=\"close-button\"\n            onClick={onClose}\n          >\n            ×\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {/* Statistics */}\n        <div className=\"participants-stats\">\n          <div className=\"stat-item\">\n            <span className=\"stat-number\">{participants.length}</span>\n            <span className=\"stat-label\">Всего заявок</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-number\">{statusCounts.approved || 0}</span>\n            <span className=\"stat-label\">Подтверждено</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-number\">{statusCounts.pending || 0}</span>\n            <span className=\"stat-label\">Ожидает</span>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"participants-filters\">\n          <div className=\"filter-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Поиск по имени или email...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n          </div>\n          \n          <div className=\"filter-group\">\n            <select\n              value={selectedStatus}\n              onChange={(e) => setSelectedStatus(e.target.value)}\n              className=\"status-filter\"\n            >\n              <option value=\"all\">Все статусы</option>\n              <option value=\"pending\">Ожидает</option>\n              <option value=\"approved\">Подтвержден</option>\n              <option value=\"rejected\">Отклонен</option>\n              <option value=\"cancelled\">Отменен</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Participants List */}\n        <div className=\"participants-list\">\n          {filteredParticipants.length === 0 ? (\n            <div className=\"no-participants\">\n              <div className=\"no-participants-icon\">👥</div>\n              <p>Участники не найдены</p>\n            </div>\n          ) : (\n            filteredParticipants.map(participant => (\n              <div key={participant.id} className=\"participant-card\">\n                <div className=\"participant-info\">\n                  <div className=\"participant-avatar\">\n                    <img \n                      src={participant.user?.avatar ? `/uploads/${participant.user.avatar}` : '/uploads/no_photo.jpg'} \n                      alt={participant.user?.name}\n                      onError={(e) => {\n                        e.target.src = '/uploads/no_photo.jpg';\n                      }}\n                    />\n                  </div>\n                  \n                  <div className=\"participant-details\">\n                    <h4 className=\"participant-name\">\n                      {participant.user?.name || 'Неизвестный пользователь'}\n                    </h4>\n                    <p className=\"participant-email\">\n                      {participant.user?.email}\n                    </p>\n                    <p className=\"participant-date\">\n                      Подал заявку: {new Date(participant.created_at).toLocaleDateString('ru-RU')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"participant-actions\">\n                  <div className=\"status-badge\" style={{ backgroundColor: getStatusColor(participant.status) }}>\n                    {getStatusLabel(participant.status)}\n                  </div>\n                  \n                  <div className=\"action-buttons\">\n                    {participant.status === 'pending' && (\n                      <>\n                        <button\n                          className=\"btn btn-success btn-sm\"\n                          onClick={() => handleStatusChange(participant.id, 'approved')}\n                        >\n                          ✓ Одобрить\n                        </button>\n                        <button\n                          className=\"btn btn-danger btn-sm\"\n                          onClick={() => handleStatusChange(participant.id, 'rejected')}\n                        >\n                          ✗ Отклонить\n                        </button>\n                      </>\n                    )}\n                    \n                    {participant.status === 'approved' && (\n                      <button\n                        className=\"btn btn-warning btn-sm\"\n                        onClick={() => handleStatusChange(participant.id, 'cancelled')}\n                      >\n                        Отменить\n                      </button>\n                    )}\n                    \n                    <button\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={() => handleRemoveParticipant(participant.id)}\n                    >\n                      🗑️ Удалить\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventParticipants;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { clubApi } from '../services/clubApi';\nimport EventForm from '../components/EventForm';\nimport EventParticipants from '../components/EventParticipants';\nimport EventDetailsModal from '../components/EventDetailsModal';\nimport { getEventStatus, getEventStatusText, getTimeUntilStart, getTimeUntilEnd } from '../utils/eventStatus';\nimport '../styles/ClubEvents.css';\n\n// Иконки\nconst PlusIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst MapPinIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"/>\n    <circle cx=\"12\" cy=\"10\" r=\"3\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst ClockIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <polyline points=\"12,6 12,12 16,14\"/>\n  </svg>\n);\n\nconst PencilIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2\"/>\n  </svg>\n);\n\nconst EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nconst FunnelIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nconst MagnifyingGlassIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"M21 21l-4.35-4.35\"/>\n  </svg>\n);\n\nconst ClubEvents = () => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [clubId, setClubId] = useState(null);\n  const [showParticipants, setShowParticipants] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState(null);\n  const [showEventDetails, setShowEventDetails] = useState(false);\n\n  useEffect(() => {\n    loadEvents();\n  }, []);\n\n  const loadEvents = async () => {\n    try {\n      const eventsData = await clubApi.getEvents();\n      setEvents(Array.isArray(eventsData.events) ? eventsData.events : (Array.isArray(eventsData) ? eventsData : []));\n    } catch (error) {\n      console.error('Ошибка загрузки мероприятий:', error);\n      setEvents([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteEvent = async (eventId) => {\n    if (window.confirm('Вы уверены, что хотите удалить это мероприятие?')) {\n      try {\n        await clubApi.deleteEvent(eventId);\n        setEvents((events || []).filter(event => event.id !== eventId));\n      } catch (error) {\n        console.error('Ошибка удаления мероприятия:', error);\n      }\n    }\n  };\n\n  const handleEditEvent = (event) => {\n    setEditingEvent(event);\n    setShowCreateModal(true);\n  };\n\n  const handleCreateEvent = () => {\n    setEditingEvent(null);\n    setShowCreateModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowCreateModal(false);\n    setEditingEvent(null);\n  };\n\n  const handleEventSaved = () => {\n    setShowCreateModal(false);\n    setEditingEvent(null);\n    loadEvents(); // Перезагружаем список событий\n  };\n\n  const handleShowParticipants = (eventId) => {\n    setSelectedEventId(eventId);\n    setShowParticipants(true);\n  };\n\n  const handleCloseParticipants = () => {\n    setShowParticipants(false);\n    setSelectedEventId(null);\n  };\n\n  const handleShowEventDetails = (eventId) => {\n    console.log('Opening event details for ID:', eventId);\n    setSelectedEventId(eventId);\n    setShowEventDetails(true);\n  };\n\n  const handleCloseEventDetails = () => {\n    setShowEventDetails(false);\n    setSelectedEventId(null);\n  };\n\n  const getEventStatusLocal = (event) => {\n    // Используем новую утилиту с учетом длительности\n    return getEventStatus(\n      event.date, \n      event.duration_hours || 2, \n      event.end_date\n    );\n  };\n\n  const filteredEvents = (events || []).filter(event => {\n    const eventStatus = getEventStatusLocal(event);\n    const matchesFilter = filter === 'all' || filter === eventStatus;\n    \n    const matchesSearch = event.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         event.location.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    return matchesFilter && matchesSearch;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"club-events-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка мероприятий...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-events\">\n      {/* Header */}\n      <div className=\"events-header\">\n        <div className=\"header-content\">\n          <h1>Мероприятия клуба</h1>\n          <p>Управляйте мероприятиями и событиями вашего клуба</p>\n        </div>\n        <button \n          className=\"btn btn-primary create-event-btn\"\n          onClick={handleCreateEvent}\n        >\n          <PlusIcon className=\"icon\" />\n          Создать мероприятие\n        </button>\n      </div>\n\n      {/* Filters and Search */}\n      <div className=\"events-controls\">\n        <div className=\"search-box\">\n          <MagnifyingGlassIcon className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Поиск мероприятий...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        \n        <div className=\"filter-buttons\">\n          <button\n            className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n            onClick={() => setFilter('all')}\n          >\n            Все\n          </button>\n          <button\n            className={`filter-btn ${filter === 'upcoming' ? 'active' : ''}`}\n            onClick={() => setFilter('upcoming')}\n          >\n            Предстоящие\n          </button>\n          <button\n            className={`filter-btn ${filter === 'ongoing' ? 'active' : ''}`}\n            onClick={() => setFilter('ongoing')}\n          >\n            Идут сейчас\n          </button>\n          <button\n            className={`filter-btn ${filter === 'completed' ? 'active' : ''}`}\n            onClick={() => setFilter('completed')}\n          >\n            Завершенные\n          </button>\n        </div>\n      </div>\n\n      {/* Events Grid */}\n      <div className=\"events-container\">\n        {filteredEvents.length === 0 ? (\n          <div className=\"no-events\">\n            <CalendarIcon className=\"no-events-icon\" />\n            <h3>Мероприятия не найдены</h3>\n            <p>Создайте первое мероприятие для вашего клуба</p>\n            <button \n              className=\"btn btn-primary\"\n              onClick={handleCreateEvent}\n            >\n              <PlusIcon className=\"icon\" />\n              Создать мероприятие\n            </button>\n          </div>\n        ) : (\n          <div className=\"events-grid\">\n            {filteredEvents.map(event => (\n              <div key={event.id} className=\"event-card\">\n                <div className=\"event-header\">\n                  <div className=\"event-status-badge\">\n                    <span className={`status-dot ${getEventStatusLocal(event)}`}></span>\n                    {getEventStatusText(getEventStatusLocal(event))}\n                  </div>\n                  <div className=\"event-actions\">\n                    <button \n                      className=\"action-btn view\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        handleShowEventDetails(event.id);\n                      }}\n                      title=\"Просмотр деталей\"\n                    >\n                      <EyeIcon className=\"icon\" />\n                    </button>\n                    <button \n                      className=\"action-btn participants\"\n                      onClick={() => handleShowParticipants(event.id)}\n                      title=\"Управление участниками\"\n                    >\n                      <UsersIcon className=\"icon\" />\n                    </button>\n                    <button \n                      className=\"action-btn edit\"\n                      onClick={() => handleEditEvent(event)}\n                    >\n                      <PencilIcon className=\"icon\" />\n                    </button>\n                    <button \n                      className=\"action-btn delete\"\n                      onClick={() => handleDeleteEvent(event.id)}\n                    >\n                      <TrashIcon className=\"icon\" />\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"event-content\">\n                  <h3 className=\"event-title\">{event.title}</h3>\n                  <p className=\"event-description\">{event.description}</p>\n                  \n                  <div className=\"event-details\">\n                    <div className=\"detail-item\">\n                      <CalendarIcon className=\"icon\" />\n                      <span>{new Date(event.date).toLocaleDateString('ru-RU')}</span>\n                      {event.time && <span className=\"event-time\"> в {event.time}</span>}\n                    </div>\n                    \n                    {/* Отображение времени до начала/окончания */}\n                    {(() => {\n                      const status = getEventStatusLocal(event);\n                      const timeUntilStart = getTimeUntilStart(event.date);\n                      const timeUntilEnd = getTimeUntilEnd(event.date, event.duration_hours || 2, event.end_date);\n                      \n                      if (status === 'upcoming' && timeUntilStart) {\n                        return (\n                          <div className=\"detail-item time-info\">\n                            <ClockIcon className=\"icon\" />\n                            <span>До начала: {timeUntilStart}</span>\n                          </div>\n                        );\n                      } else if (status === 'ongoing' && timeUntilEnd) {\n                        return (\n                          <div className=\"detail-item time-info\">\n                            <ClockIcon className=\"icon\" />\n                            <span>До окончания: {timeUntilEnd}</span>\n                          </div>\n                        );\n                      }\n                      return null;\n                    })()}\n                    \n                    <div className=\"detail-item\">\n                      <MapPinIcon className=\"icon\" />\n                      <span>{event.location}</span>\n                    </div>\n                    \n                    <div className=\"detail-item\">\n                      <UsersIcon className=\"icon\" />\n                      <span>\n                        {event.max_participants && event.max_participants > 0 \n                          ? `${event.current_participants || 0}/${event.max_participants} участников`\n                          : `${event.current_participants || 0} участников`\n                        }\n                      </span>\n                    </div>\n                  </div>\n                  \n                  {event.price > 0 && (\n                    <div className=\"event-price\">\n                      <span className=\"price-label\">Стоимость:</span>\n                      <span className=\"price-value\">{event.price} ₽</span>\n                    </div>\n                  )}\n                  \n                  {event.is_premium && (\n                    <div className=\"premium-badge\">\n                      <span>Премиум</span>\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"event-footer\">\n                  {event.max_participants ? (\n                    <div className=\"participation-progress\">\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill\"\n                          style={{ width: `${Math.min((event.current_participants || 0) / event.max_participants * 100, 100)}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"progress-text\">\n                        {Math.round((event.current_participants || 0) / event.max_participants * 100)}% заполнено\n                      </span>\n                    </div>\n                  ) : (\n                    <div className=\"participation-progress\">\n                      <span className=\"progress-text\">\n                        Без ограничений\n                      </span>\n                    </div>\n                  )}\n                  \n                  <Link to={`/club/events/${event.id}/participants`} className=\"btn btn-sm btn-secondary\">\n                    Участники\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Event Form Modal */}\n      {showCreateModal && (\n        <EventForm\n          event={editingEvent}\n          onSave={handleEventSaved}\n          onCancel={handleCloseModal}\n          clubId={clubId}\n        />\n      )}\n\n      {/* Event Participants Modal */}\n      {showParticipants && (\n        <EventParticipants\n          eventId={selectedEventId}\n          onClose={handleCloseParticipants}\n        />\n      )}\n\n      {/* Event Details Modal */}\n      <EventDetailsModal\n        isOpen={showEventDetails}\n        onClose={handleCloseEventDetails}\n        eventId={selectedEventId}\n      />\n    </div>\n  );\n};\n\nexport default ClubEvents;\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport '../styles/ClubAnalytics.css';\n\n// Иконки\nconst ChartBarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 20V10\"/>\n    <path d=\"M12 20V4\"/>\n    <path d=\"M6 20v-6\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst CurrencyRubleIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M6 3h12\"/>\n    <path d=\"M6 8h12\"/>\n    <path d=\"M6 13l8 0\"/>\n    <path d=\"M6 18l8 0\"/>\n    <path d=\"M15 8a3 3 0 1 0 0 6\"/>\n  </svg>\n);\n\nconst TrendingUpIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"22,7 13.5,15.5 8.5,10.5 2,17\"/>\n    <polyline points=\"16,7 22,7 22,13\"/>\n  </svg>\n);\n\nconst TrendingDownIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"22,17 13.5,8.5 8.5,13.5 2,7\"/>\n    <polyline points=\"16,17 22,17 22,11\"/>\n  </svg>\n);\n\nconst EyeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nconst HeartIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"/>\n  </svg>\n);\n\nconst ShareIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"18\" cy=\"5\" r=\"3\"/>\n    <circle cx=\"6\" cy=\"12\" r=\"3\"/>\n    <circle cx=\"18\" cy=\"19\" r=\"3\"/>\n    <line x1=\"8.59\" y1=\"13.51\" x2=\"15.42\" y2=\"17.49\"/>\n    <line x1=\"15.41\" y1=\"6.51\" x2=\"8.59\" y2=\"10.49\"/>\n  </svg>\n);\n\nconst ClubAnalytics = () => {\n  const [analytics, setAnalytics] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [period, setPeriod] = useState('week');\n  const [selectedMetric, setSelectedMetric] = useState('overview');\n\n  useEffect(() => {\n    loadAnalytics();\n  }, [period]);\n\n  const loadAnalytics = async () => {\n    try {\n      const [overview, events, participants, financial] = await Promise.all([\n        clubApi.getAnalytics('overview', period),\n        clubApi.getAnalytics('events', period),\n        clubApi.getAnalytics('participants', period),\n        clubApi.getAnalytics('financial', period)\n      ]);\n      \n      setAnalytics({\n        overview: overview.analytics || overview,\n        events: events.analytics || events,\n        participants: participants.analytics || participants,\n        financial: financial.analytics || financial\n      });\n    } catch (error) {\n      console.error('Ошибка загрузки аналитики:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getMetricChange = (current, previous) => {\n    if (!previous) return { value: 0, isPositive: true };\n    const change = ((current - previous) / previous) * 100;\n    return {\n      value: Math.abs(change).toFixed(1),\n      isPositive: change >= 0\n    };\n  };\n\n  const renderMetricCard = (title, value, icon, change, color = 'blue') => {\n    const changeData = getMetricChange(value, change?.previous);\n    \n    return (\n      <div className={`metric-card ${color}`}>\n        <div className=\"metric-header\">\n          <div className={`metric-icon ${color}`}>\n            {icon}\n          </div>\n          <div className=\"metric-change\">\n            {changeData.value > 0 && (\n              <>\n                {changeData.isPositive ? (\n                  <TrendingUpIcon className=\"trend-icon positive\" />\n                ) : (\n                  <TrendingDownIcon className=\"trend-icon negative\" />\n                )}\n                <span className={`change-value ${changeData.isPositive ? 'positive' : 'negative'}`}>\n                  {changeData.value}%\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"metric-content\">\n          <h3 className=\"metric-value\">{value?.toLocaleString() || 0}</h3>\n          <p className=\"metric-title\">{title}</p>\n        </div>\n      </div>\n    );\n  };\n\n  const renderChart = (data, title, type = 'bar') => {\n    // Простая визуализация данных\n    if (!Array.isArray(data) || data.length === 0) {\n      return (\n        <div className=\"chart-container\">\n          <h3 className=\"chart-title\">{title}</h3>\n          <div className=\"chart-content\">\n            <p>Нет данных для отображения</p>\n          </div>\n        </div>\n      );\n    }\n    \n    const maxValue = Math.max(...data.map(d => d.value));\n    \n    return (\n      <div className=\"chart-container\">\n        <h3 className=\"chart-title\">{title}</h3>\n        <div className=\"chart-content\">\n          {data.map((item, index) => (\n            <div key={index} className=\"chart-bar\">\n              <div className=\"bar-label\">{item.label}</div>\n              <div className=\"bar-container\">\n                <div \n                  className=\"bar-fill\"\n                  style={{ \n                    width: `${(item.value / maxValue) * 100}%`,\n                    backgroundColor: `hsl(${index * 60}, 70%, 60%)`\n                  }}\n                ></div>\n              </div>\n              <div className=\"bar-value\">{item.value}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"club-analytics-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка аналитики...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-analytics\">\n      {/* Header */}\n      <div className=\"analytics-header\">\n        <div className=\"header-content\">\n          <h1>Аналитика клуба</h1>\n          <p>Детальная статистика и метрики вашего клуба</p>\n        </div>\n        <div className=\"period-selector\">\n          <button\n            className={`period-btn ${period === 'week' ? 'active' : ''}`}\n            onClick={() => setPeriod('week')}\n          >\n            Неделя\n          </button>\n          <button\n            className={`period-btn ${period === 'month' ? 'active' : ''}`}\n            onClick={() => setPeriod('month')}\n          >\n            Месяц\n          </button>\n          <button\n            className={`period-btn ${period === 'year' ? 'active' : ''}`}\n            onClick={() => setPeriod('year')}\n          >\n            Год\n          </button>\n        </div>\n      </div>\n\n      {/* Overview Metrics */}\n      <div className=\"metrics-grid\">\n        {renderMetricCard(\n          'Всего мероприятий',\n          analytics.overview?.total_events,\n          <CalendarIcon />,\n          analytics.overview?.events_change,\n          'blue'\n        )}\n        \n        {renderMetricCard(\n          'Участников',\n          analytics.overview?.total_participants,\n          <UsersIcon />,\n          analytics.overview?.participants_change,\n          'green'\n        )}\n        \n        {renderMetricCard(\n          'Доход',\n          analytics.overview?.total_revenue,\n          <CurrencyRubleIcon />,\n          analytics.overview?.revenue_change,\n          'purple'\n        )}\n        \n        {renderMetricCard(\n          'Рейтинг',\n          analytics.overview?.average_rating,\n          <HeartIcon />,\n          analytics.overview?.rating_change,\n          'red'\n        )}\n      </div>\n\n      {/* Detailed Analytics */}\n      <div className=\"analytics-sections\">\n        {/* Events Analytics */}\n        <div className=\"analytics-section\">\n          <div className=\"section-header\">\n            <h2>Аналитика мероприятий</h2>\n            <div className=\"section-actions\">\n              <button className=\"btn btn-sm btn-secondary\">\n                <EyeIcon className=\"icon\" />\n                Экспорт\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"section-content\">\n            <div className=\"metrics-row\">\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Средняя посещаемость</span>\n                <span className=\"metric-value\">\n                  {analytics.events?.average_participation || 0}%\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Популярные дни</span>\n                <span className=\"metric-value\">\n                  {analytics.events?.popular_days?.join(', ') || 'Нет данных'}\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Отмены</span>\n                <span className=\"metric-value\">\n                  {analytics.events?.cancellations || 0}\n                </span>\n              </div>\n            </div>\n            \n            {analytics.events?.monthly_data && (\n              <div className=\"chart-section\">\n                {renderChart(\n                  analytics.events.monthly_data,\n                  'Мероприятия по месяцам'\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Participants Analytics */}\n        <div className=\"analytics-section\">\n          <div className=\"section-header\">\n            <h2>Аналитика участников</h2>\n          </div>\n          \n          <div className=\"section-content\">\n            <div className=\"metrics-row\">\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Новые участники</span>\n                <span className=\"metric-value\">\n                  {analytics.participants?.new_participants || 0}\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Активные участники</span>\n                <span className=\"metric-value\">\n                  {analytics.participants?.active_participants || 0}\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Средний возраст</span>\n                <span className=\"metric-value\">\n                  {analytics.participants?.average_age || 0} лет\n                </span>\n              </div>\n            </div>\n            \n            {analytics.participants?.demographics && (\n              <div className=\"demographics-grid\">\n                <div className=\"demographic-item\">\n                  <h4>Пол</h4>\n                  <div className=\"demographic-data\">\n                    <div className=\"demographic-bar\">\n                      <span>Мужчины</span>\n                      <div className=\"bar\">\n                        <div \n                          className=\"bar-fill male\"\n                          style={{ width: `${analytics.participants.demographics.gender?.male || 0}%` }}\n                        ></div>\n                      </div>\n                      <span>{analytics.participants.demographics.gender?.male || 0}%</span>\n                    </div>\n                    <div className=\"demographic-bar\">\n                      <span>Женщины</span>\n                      <div className=\"bar\">\n                        <div \n                          className=\"bar-fill female\"\n                          style={{ width: `${analytics.participants.demographics.gender?.female || 0}%` }}\n                        ></div>\n                      </div>\n                      <span>{analytics.participants.demographics.gender?.female || 0}%</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"demographic-item\">\n                  <h4>Возраст</h4>\n                  <div className=\"demographic-data\">\n                    {(analytics.participants.demographics.age_groups || []).map((group, index) => (\n                      <div key={index} className=\"demographic-bar\">\n                        <span>{group.range}</span>\n                        <div className=\"bar\">\n                          <div \n                            className=\"bar-fill age\"\n                            style={{ width: `${group.percentage}%` }}\n                          ></div>\n                        </div>\n                        <span>{group.percentage}%</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Financial Analytics */}\n        <div className=\"analytics-section\">\n          <div className=\"section-header\">\n            <h2>Финансовая аналитика</h2>\n          </div>\n          \n          <div className=\"section-content\">\n            <div className=\"metrics-row\">\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Общий доход</span>\n                <span className=\"metric-value\">\n                  {analytics.financial?.total_revenue?.toLocaleString() || 0} ₽\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Средний чек</span>\n                <span className=\"metric-value\">\n                  {analytics.financial?.average_ticket?.toLocaleString() || 0} ₽\n                </span>\n              </div>\n              <div className=\"metric-item\">\n                <span className=\"metric-label\">Прибыль</span>\n                <span className=\"metric-value\">\n                  {analytics.financial?.profit?.toLocaleString() || 0} ₽\n                </span>\n              </div>\n            </div>\n            \n            {analytics.financial?.revenue_by_month && (\n              <div className=\"chart-section\">\n                {renderChart(\n                  analytics.financial.revenue_by_month,\n                  'Доход по месяцам'\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default ClubAnalytics;\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport toast from 'react-hot-toast';\nimport '../styles/ClubBots.css';\n\n// Иконки\nconst PlusIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"/>\n    <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"/>\n  </svg>\n);\n\nconst EditIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n    <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n  </svg>\n);\n\nconst TrashIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"3,6 5,6 21,6\"/>\n    <path d=\"M19,6v14a2,2 0 0,1 -2,2H7a2,2 0 0,1 -2,-2V6m3,0V4a2,2 0 0,1 2,-2h4a2,2 0 0,1 2,2v2\"/>\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/>\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n  </svg>\n);\n\nconst PlayIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"5,3 19,12 5,21\"/>\n  </svg>\n);\n\nconst PauseIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"/>\n    <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"/>\n  </svg>\n);\n\nconst SettingsIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"/>\n  </svg>\n);\n\nconst ActivityIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polyline points=\"22,12 18,12 15,21 9,3 6,12 2,12\"/>\n  </svg>\n);\n\nconst ClockIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"10\"/>\n    <polyline points=\"12,6 12,12 16,14\"/>\n  </svg>\n);\n\nconst ClubBots = () => {\n  const [bots, setBots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingBot, setEditingBot] = useState(null);\n\n  useEffect(() => {\n    loadBots();\n  }, []);\n\n  const loadBots = async () => {\n    try {\n      setLoading(true);\n      const response = await clubApi.getBots();\n      setBots(Array.isArray(response.bots) ? response.bots : (Array.isArray(response) ? response : []));\n    } catch (error) {\n      console.error('Ошибка загрузки ботов:', error);\n      setBots([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateBot = () => {\n    setEditingBot(null);\n    setShowCreateModal(true);\n  };\n\n  const handleEditBot = (bot) => {\n    setEditingBot(bot);\n    setShowCreateModal(true);\n  };\n\n  const handleDeleteBot = async (botId) => {\n    if (window.confirm('Вы уверены, что хотите удалить этого бота?')) {\n      try {\n        await clubApi.deleteBot(botId);\n        await loadBots();\n      } catch (error) {\n        console.error('Ошибка удаления бота:', error);\n        toast.error('Ошибка при удалении бота');\n      }\n    }\n  };\n\n  const handleToggleBot = async (botId, currentStatus) => {\n    try {\n      const newStatus = currentStatus === 'active' ? 'inactive' : 'active';\n      await clubApi.updateBot(botId, { status: newStatus });\n      await loadBots();\n    } catch (error) {\n      console.error('Ошибка изменения статуса бота:', error);\n      toast.error('Ошибка при изменении статуса бота');\n    }\n  };\n\n  const handleBotSaved = () => {\n    setShowCreateModal(false);\n    setEditingBot(null);\n    loadBots();\n  };\n\n  const getStatusBadge = (status) => {\n    const statusMap = {\n      'active': { text: 'Активен', class: 'status-active' },\n      'inactive': { text: 'Неактивен', class: 'status-inactive' },\n      'error': { text: 'Ошибка', class: 'status-error' }\n    };\n    \n    const statusInfo = statusMap[status] || { text: status, class: 'status-unknown' };\n    return <span className={`status-badge ${statusInfo.class}`}>{statusInfo.text}</span>;\n  };\n\n  const getBotTypeIcon = (type) => {\n    switch (type) {\n      case 'welcome':\n        return '👋';\n      case 'event_reminder':\n        return '📅';\n      case 'auto_response':\n        return '💬';\n      case 'analytics':\n        return '📊';\n      case 'moderation':\n        return '🛡️';\n      default:\n        return '🤖';\n    }\n  };\n\n  const getBotTypeName = (type) => {\n    const typeMap = {\n      'welcome': 'Приветственный',\n      'event_reminder': 'Напоминания о событиях',\n      'auto_response': 'Автоответчик',\n      'analytics': 'Аналитика',\n      'moderation': 'Модерация',\n      'custom': 'Пользовательский'\n    };\n    return typeMap[type] || type;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"club-bots\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Загрузка ботов...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-bots\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Боты клуба</h1>\n          <p>Управляйте автоматизацией и ботами для вашего клуба</p>\n        </div>\n        <button className=\"btn btn-primary\" onClick={handleCreateBot}>\n          <PlusIcon className=\"icon\" />\n          Создать бота\n        </button>\n      </div>\n\n      <div className=\"bots-stats\">\n        <div className=\"stat-card\">\n          <h3>Всего ботов</h3>\n          <span className=\"stat-number\">{bots.length}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Активных</h3>\n          <span className=\"stat-number\">{bots.filter(bot => bot.status === 'active').length}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Выполнено задач</h3>\n          <span className=\"stat-number\">{bots.reduce((sum, bot) => sum + (bot.tasks_completed || 0), 0)}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Ошибок</h3>\n          <span className=\"stat-number\">{bots.filter(bot => bot.status === 'error').length}</span>\n        </div>\n      </div>\n\n      <div className=\"bots-content\">\n        {bots.length === 0 ? (\n          <div className=\"empty-state\">\n            <div className=\"empty-icon\">🤖</div>\n            <h3>Нет ботов</h3>\n            <p>Создайте первого бота для автоматизации процессов в клубе</p>\n            <button className=\"btn btn-primary\" onClick={handleCreateBot}>\n              <PlusIcon className=\"icon\" />\n              Создать бота\n            </button>\n          </div>\n        ) : (\n          <div className=\"bots-grid\">\n            {bots.map((bot) => (\n              <div key={bot.id} className=\"bot-card\">\n                <div className=\"bot-header\">\n                  <div className=\"bot-info\">\n                    <div className=\"bot-icon\">\n                      {getBotTypeIcon(bot.type)}\n                    </div>\n                    <div className=\"bot-details\">\n                      <h3>{bot.name}</h3>\n                      <p>{getBotTypeName(bot.type)}</p>\n                    </div>\n                  </div>\n                  <div className=\"bot-status\">\n                    {getStatusBadge(bot.status)}\n                  </div>\n                </div>\n                \n                <div className=\"bot-content\">\n                  <p className=\"bot-description\">{bot.description}</p>\n                  \n                  <div className=\"bot-settings\">\n                    <div className=\"setting-item\">\n                      <span className=\"setting-label\">Триггер:</span>\n                      <span className=\"setting-value\">{bot.trigger || 'Не настроен'}</span>\n                    </div>\n                    <div className=\"setting-item\">\n                      <span className=\"setting-label\">Интервал:</span>\n                      <span className=\"setting-value\">{bot.interval || 'Не настроен'}</span>\n                    </div>\n                    {bot.last_run && (\n                      <div className=\"setting-item\">\n                        <span className=\"setting-label\">Последний запуск:</span>\n                        <span className=\"setting-value\">\n                          {new Date(bot.last_run).toLocaleString('ru-RU')}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"bot-footer\">\n                  <div className=\"bot-metrics\">\n                    <div className=\"metric\">\n                      <ActivityIcon className=\"icon\" />\n                      <span>{bot.tasks_completed || 0} задач</span>\n                    </div>\n                    <div className=\"metric\">\n                      <ClockIcon className=\"icon\" />\n                      <span>Создан: {new Date(bot.created_at).toLocaleDateString('ru-RU')}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bot-actions\">\n                    <button \n                      className={`btn btn-sm ${bot.status === 'active' ? 'btn-warning' : 'btn-success'}`}\n                      onClick={() => handleToggleBot(bot.id, bot.status)}\n                      title={bot.status === 'active' ? 'Остановить' : 'Запустить'}\n                    >\n                      {bot.status === 'active' ? <PauseIcon className=\"icon\" /> : <PlayIcon className=\"icon\" />}\n                      {bot.status === 'active' ? 'Остановить' : 'Запустить'}\n                    </button>\n                    <button \n                      className=\"btn-icon\" \n                      onClick={() => handleEditBot(bot)}\n                      title=\"Настройки\"\n                    >\n                      <SettingsIcon />\n                    </button>\n                    <button \n                      className=\"btn-icon\" \n                      onClick={() => handleEditBot(bot)}\n                      title=\"Редактировать\"\n                    >\n                      <EditIcon />\n                    </button>\n                    <button \n                      className=\"btn-icon danger\" \n                      onClick={() => handleDeleteBot(bot.id)}\n                      title=\"Удалить\"\n                    >\n                      <TrashIcon />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {showCreateModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <BotForm\n              bot={editingBot}\n              onCancel={() => {\n                setShowCreateModal(false);\n                setEditingBot(null);\n              }}\n              onSave={handleBotSaved}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Компонент формы бота\nconst BotForm = ({ bot, onCancel, onSave }) => {\n  const [formData, setFormData] = useState({\n    name: bot?.name || '',\n    description: bot?.description || '',\n    type: bot?.type || 'custom',\n    trigger: bot?.trigger || '',\n    interval: bot?.interval || '',\n    settings: bot?.settings || {},\n    status: bot?.status || 'inactive'\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      if (bot) {\n        await clubApi.updateBot(bot.id, formData);\n      } else {\n        await clubApi.createBot(formData);\n      }\n      onSave();\n    } catch (error) {\n      console.error('Ошибка сохранения бота:', error);\n      toast.error('Ошибка при сохранении бота');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"bot-form\">\n      <div className=\"form-header\">\n        <h2>{bot ? 'Редактировать бота' : 'Создать бота'}</h2>\n        <button type=\"button\" className=\"close-btn\" onClick={onCancel}>×</button>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Название бота *</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n          placeholder=\"Введите название бота\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Описание</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          value={formData.description}\n          onChange={handleChange}\n          rows=\"3\"\n          placeholder=\"Опишите функционал бота\"\n        />\n      </div>\n\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label htmlFor=\"type\">Тип бота *</label>\n          <select\n            id=\"type\"\n            name=\"type\"\n            value={formData.type}\n            onChange={handleChange}\n            required\n          >\n            <option value=\"welcome\">Приветственный</option>\n            <option value=\"event_reminder\">Напоминания о событиях</option>\n            <option value=\"auto_response\">Автоответчик</option>\n            <option value=\"analytics\">Аналитика</option>\n            <option value=\"moderation\">Модерация</option>\n            <option value=\"custom\">Пользовательский</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"status\">Статус</label>\n          <select\n            id=\"status\"\n            name=\"status\"\n            value={formData.status}\n            onChange={handleChange}\n          >\n            <option value=\"inactive\">Неактивен</option>\n            <option value=\"active\">Активен</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"trigger\">Триггер (условие запуска)</label>\n        <input\n          type=\"text\"\n          id=\"trigger\"\n          name=\"trigger\"\n          value={formData.trigger}\n          onChange={handleChange}\n          placeholder=\"Например: новое сообщение, регистрация пользователя\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"interval\">Интервал выполнения</label>\n        <select\n          id=\"interval\"\n          name=\"interval\"\n          value={formData.interval}\n          onChange={handleChange}\n        >\n          <option value=\"\">По событию</option>\n          <option value=\"1m\">Каждую минуту</option>\n          <option value=\"5m\">Каждые 5 минут</option>\n          <option value=\"15m\">Каждые 15 минут</option>\n          <option value=\"30m\">Каждые 30 минут</option>\n          <option value=\"1h\">Каждый час</option>\n          <option value=\"6h\">Каждые 6 часов</option>\n          <option value=\"12h\">Каждые 12 часов</option>\n          <option value=\"1d\">Ежедневно</option>\n          <option value=\"1w\">Еженедельно</option>\n        </select>\n      </div>\n\n      <div className=\"form-actions\">\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={onCancel}>\n          Отмена\n        </button>\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n          {loading ? 'Сохранение...' : (bot ? 'Обновить' : 'Создать')}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ClubBots;\n\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport toast from 'react-hot-toast';\nimport '../styles/ClubParticipants.css';\n\n// Иконки\nconst UserIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n  </svg>\n);\n\nconst CrownIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M2 4l3 12h14l3-12-6 7-4-7-4 7-6-7z\"/>\n    <path d=\"M6 16h12\"/>\n  </svg>\n);\n\nconst ShieldIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\"/>\n  </svg>\n);\n\nconst MailIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"/>\n    <polyline points=\"22,6 12,13 2,6\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst SearchIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"11\" cy=\"11\" r=\"8\"/>\n    <path d=\"M21 21l-4.35-4.35\"/>\n  </svg>\n);\n\nconst FilterIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <polygon points=\"22,3 2,3 10,12.46 10,19 14,21 14,12.46 22,3\"/>\n  </svg>\n);\n\nconst ClubParticipants = () => {\n  const [participants, setParticipants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    loadParticipants();\n  }, []);\n\n  const loadParticipants = async () => {\n    try {\n      setLoading(true);\n      const response = await clubApi.getParticipants();\n      setParticipants(Array.isArray(response.participants) ? response.participants : (Array.isArray(response) ? response : []));\n    } catch (error) {\n      console.error('Ошибка загрузки участников:', error);\n      setParticipants([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleViewParticipant = (participant) => {\n    setSelectedParticipant(participant);\n    setShowModal(true);\n  };\n\n  const handleChangeRole = async (participantId, newRole) => {\n    if (window.confirm(`Вы уверены, что хотите изменить роль участника?`)) {\n      try {\n        await clubApi.updateParticipantRole(participantId, newRole);\n        await loadParticipants();\n        setShowModal(false);\n        setSelectedParticipant(null);\n      } catch (error) {\n        console.error('Ошибка изменения роли:', error);\n        toast.error('Ошибка при изменении роли участника');\n      }\n    }\n  };\n\n  const handleRemoveParticipant = async (participantId) => {\n    if (window.confirm('Вы уверены, что хотите исключить этого участника из клуба?')) {\n      try {\n        await clubApi.removeParticipant(participantId);\n        await loadParticipants();\n        setShowModal(false);\n        setSelectedParticipant(null);\n      } catch (error) {\n        console.error('Ошибка исключения участника:', error);\n        toast.error('Ошибка при исключении участника');\n      }\n    }\n  };\n\n  const getRoleBadge = (role) => {\n    const roleMap = {\n      'owner': { text: 'Владелец', class: 'role-owner', icon: <CrownIcon /> },\n      'admin': { text: 'Администратор', class: 'role-admin', icon: <ShieldIcon /> },\n      'moderator': { text: 'Модератор', class: 'role-moderator', icon: <ShieldIcon /> },\n      'member': { text: 'Участник', class: 'role-member', icon: <UserIcon /> }\n    };\n    \n    const roleInfo = roleMap[role] || { text: role, class: 'role-unknown', icon: <UserIcon /> };\n    return (\n      <span className={`role-badge ${roleInfo.class}`}>\n        {roleInfo.icon}\n        {roleInfo.text}\n      </span>\n    );\n  };\n\n  const getStatusBadge = (status) => {\n    const statusMap = {\n      'active': { text: 'Активен', class: 'status-active' },\n      'inactive': { text: 'Неактивен', class: 'status-inactive' },\n      'banned': { text: 'Заблокирован', class: 'status-banned' }\n    };\n    \n    const statusInfo = statusMap[status] || { text: status, class: 'status-unknown' };\n    return <span className={`status-badge ${statusInfo.class}`}>{statusInfo.text}</span>;\n  };\n\n  const filteredParticipants = participants.filter(participant => {\n    const matchesSearch = !searchTerm || \n      (participant.user?.name && participant.user.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (participant.user?.login && participant.user.login.toLowerCase().includes(searchTerm.toLowerCase())) ||\n      (participant.user?.email && participant.user.email.toLowerCase().includes(searchTerm.toLowerCase()));\n    \n    const matchesRole = filterRole === 'all' || participant.role === filterRole;\n    const matchesStatus = filterStatus === 'all' || participant.status === filterStatus;\n    \n    return matchesSearch && matchesRole && matchesStatus;\n  });\n\n  if (loading) {\n    return (\n      <div className=\"club-participants\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Загрузка участников...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"club-participants\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Участники клуба</h1>\n          <p>Управляйте участниками и их ролями в клубе</p>\n        </div>\n      </div>\n\n      <div className=\"participants-stats\">\n        <div className=\"stat-card\">\n          <h3>Всего участников</h3>\n          <span className=\"stat-number\">{participants.length}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Администраторов</h3>\n          <span className=\"stat-number\">{participants.filter(p => p.role === 'admin' || p.role === 'owner').length}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Модераторов</h3>\n          <span className=\"stat-number\">{participants.filter(p => p.role === 'moderator').length}</span>\n        </div>\n        <div className=\"stat-card\">\n          <h3>Активных</h3>\n          <span className=\"stat-number\">{participants.filter(p => p.status === 'active').length}</span>\n        </div>\n      </div>\n\n      <div className=\"participants-filters\">\n        <div className=\"search-box\">\n          <SearchIcon className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Поиск участников...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"filter-controls\">\n          <div className=\"filter-group\">\n            <FilterIcon className=\"filter-icon\" />\n            <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n              <option value=\"all\">Все роли</option>\n              <option value=\"owner\">Владелец</option>\n              <option value=\"admin\">Администратор</option>\n              <option value=\"moderator\">Модератор</option>\n              <option value=\"member\">Участник</option>\n            </select>\n          </div>\n          \n          <div className=\"filter-group\">\n            <select value={filterStatus} onChange={(e) => setFilterStatus(e.target.value)}>\n              <option value=\"all\">Все статусы</option>\n              <option value=\"active\">Активные</option>\n              <option value=\"inactive\">Неактивные</option>\n              <option value=\"banned\">Заблокированные</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"participants-content\">\n        {filteredParticipants.length === 0 ? (\n          <div className=\"empty-state\">\n            <div className=\"empty-icon\">👥</div>\n            <h3>Нет участников</h3>\n            <p>\n              {searchTerm || filterRole !== 'all' || filterStatus !== 'all'\n                ? 'По вашему запросу участники не найдены'\n                : 'В клубе пока нет участников'\n              }\n            </p>\n          </div>\n        ) : (\n          <div className=\"participants-list\">\n            {filteredParticipants.map((participant) => (\n              <div key={participant.id} className=\"participant-card\">\n                <div className=\"participant-header\">\n                  <div className=\"user-info\">\n                    <div className=\"user-avatar\">\n                      {participant.user?.avatar ? (\n                        <img src={participant.user.avatar} alt={participant.user.name || participant.user.login} />\n                      ) : (\n                        <UserIcon />\n                      )}\n                    </div>\n                    <div className=\"user-details\">\n                      <h3>{participant.user?.name || participant.user?.login || 'Неизвестный пользователь'}</h3>\n                      <p>{participant.user?.email || 'Email не указан'}</p>\n                    </div>\n                  </div>\n                  <div className=\"participant-badges\">\n                    {getRoleBadge(participant.role)}\n                    {getStatusBadge(participant.status)}\n                  </div>\n                </div>\n\n                <div className=\"participant-content\">\n                  <div className=\"participant-stats\">\n                    <div className=\"stat-item\">\n                      <CalendarIcon className=\"icon\" />\n                      <span>Присоединился: {new Date(participant.joined_at).toLocaleDateString('ru-RU')}</span>\n                    </div>\n                    {participant.events_attended && (\n                      <div className=\"stat-item\">\n                        <span>Событий посещено: {participant.events_attended}</span>\n                      </div>\n                    )}\n                    {participant.last_activity && (\n                      <div className=\"stat-item\">\n                        <span>Последняя активность: {new Date(participant.last_activity).toLocaleDateString('ru-RU')}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"participant-footer\">\n                  <div className=\"participant-actions\">\n                    <button \n                      className=\"btn btn-secondary\"\n                      onClick={() => handleViewParticipant(participant)}\n                    >\n                      Подробнее\n                    </button>\n                    \n                    {participant.role !== 'owner' && (\n                      <button \n                        className=\"btn btn-danger\"\n                        onClick={() => handleRemoveParticipant(participant.id)}\n                      >\n                        Исключить\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {showModal && selectedParticipant && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <ParticipantModal\n              participant={selectedParticipant}\n              onClose={() => {\n                setShowModal(false);\n                setSelectedParticipant(null);\n              }}\n              onChangeRole={handleChangeRole}\n              onRemove={handleRemoveParticipant}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Модальное окно с подробной информацией об участнике\nconst ParticipantModal = ({ participant, onClose, onChangeRole, onRemove }) => {\n  const [showRoleChange, setShowRoleChange] = useState(false);\n  const [newRole, setNewRole] = useState(participant.role);\n\n  const handleRoleChange = () => {\n    onChangeRole(participant.id, newRole);\n    setShowRoleChange(false);\n  };\n\n  return (\n    <div className=\"participant-modal\">\n      <div className=\"modal-header\">\n        <h2>Информация об участнике</h2>\n        <button className=\"close-btn\" onClick={onClose}>×</button>\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"user-profile\">\n          <div className=\"user-avatar-large\">\n            {participant.user?.avatar ? (\n              <img src={participant.user.avatar} alt={participant.user.name || participant.user.login} />\n            ) : (\n              <UserIcon />\n            )}\n          </div>\n          <div className=\"user-info\">\n            <h3>{participant.user?.name || participant.user?.login || 'Неизвестный пользователь'}</h3>\n            <p>{participant.user?.email || 'Email не указан'}</p>\n            {participant.user?.age && <p>Возраст: {participant.user.age}</p>}\n            {participant.user?.location && <p>Местоположение: {participant.user.location}</p>}\n          </div>\n        </div>\n\n        <div className=\"participant-details\">\n          <div className=\"detail-section\">\n            <h4>Роль в клубе</h4>\n            <div className=\"role-section\">\n              <span className={`role-badge role-${participant.role}`}>\n                {participant.role === 'owner' ? <CrownIcon /> : \n                 participant.role === 'admin' || participant.role === 'moderator' ? <ShieldIcon /> : <UserIcon />}\n                {participant.role === 'owner' ? 'Владелец' :\n                 participant.role === 'admin' ? 'Администратор' :\n                 participant.role === 'moderator' ? 'Модератор' : 'Участник'}\n              </span>\n              \n              {participant.role !== 'owner' && (\n                <button \n                  className=\"btn btn-sm btn-secondary\"\n                  onClick={() => setShowRoleChange(!showRoleChange)}\n                >\n                  Изменить роль\n                </button>\n              )}\n            </div>\n            \n            {showRoleChange && (\n              <div className=\"role-change-form\">\n                <select value={newRole} onChange={(e) => setNewRole(e.target.value)}>\n                  <option value=\"member\">Участник</option>\n                  <option value=\"moderator\">Модератор</option>\n                  <option value=\"admin\">Администратор</option>\n                </select>\n                <div className=\"form-actions\">\n                  <button className=\"btn btn-sm btn-primary\" onClick={handleRoleChange}>\n                    Сохранить\n                  </button>\n                  <button className=\"btn btn-sm btn-secondary\" onClick={() => setShowRoleChange(false)}>\n                    Отмена\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"detail-section\">\n            <h4>Статус</h4>\n            <span className={`status-badge status-${participant.status}`}>\n              {participant.status === 'active' ? 'Активен' :\n               participant.status === 'inactive' ? 'Неактивен' : 'Заблокирован'}\n            </span>\n          </div>\n\n          <div className=\"detail-section\">\n            <h4>Дата присоединения</h4>\n            <p>{new Date(participant.joined_at).toLocaleString('ru-RU')}</p>\n          </div>\n\n          {participant.events_attended && (\n            <div className=\"detail-section\">\n              <h4>Событий посещено</h4>\n              <p>{participant.events_attended}</p>\n            </div>\n          )}\n\n          {participant.last_activity && (\n            <div className=\"detail-section\">\n              <h4>Последняя активность</h4>\n              <p>{new Date(participant.last_activity).toLocaleString('ru-RU')}</p>\n            </div>\n          )}\n\n          {participant.bio && (\n            <div className=\"detail-section\">\n              <h4>О себе</h4>\n              <p>{participant.bio}</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button className=\"btn btn-secondary\" onClick={onClose}>\n          Закрыть\n        </button>\n        \n        {participant.role !== 'owner' && (\n          <button className=\"btn btn-danger\" onClick={() => onRemove(participant.id)}>\n            Исключить из клуба\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClubParticipants;\n\n","import React, { useState, useEffect } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport toast from 'react-hot-toast';\nimport '../styles/ClubSettings.css';\n\n// Иконки\nconst SaveIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\"/>\n    <polyline points=\"17,21 17,13 7,13 7,21\"/>\n    <polyline points=\"7,3 7,8 15,8\"/>\n  </svg>\n);\n\nconst UploadIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"/>\n    <polyline points=\"7,10 12,15 17,10\"/>\n    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"/>\n  </svg>\n);\n\nconst EyeIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n  </svg>\n);\n\nconst EyeOffIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n    <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n  </svg>\n);\n\nconst ClubSettings = () => {\n  const [club, setClub] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [activeTab, setActiveTab] = useState('general');\n  const [showPasswordForm, setShowPasswordForm] = useState(false);\n\n  useEffect(() => {\n    loadClubData();\n  }, []);\n\n  const loadClubData = async () => {\n    try {\n      setLoading(true);\n      const response = await clubApi.getProfile();\n      setClub(response.club || response);\n    } catch (error) {\n      console.error('Ошибка загрузки данных клуба:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async (formData) => {\n    try {\n      setSaving(true);\n      await clubApi.updateProfile(formData);\n      await loadClubData();\n      toast.success('Настройки сохранены успешно!');\n    } catch (error) {\n      console.error('Ошибка сохранения настроек:', error);\n      toast.error('Ошибка при сохранении настроек');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleChangePassword = async (passwordData) => {\n    try {\n      setSaving(true);\n      await clubApi.changePassword(passwordData);\n      setShowPasswordForm(false);\n      toast.success('Пароль изменен успешно!');\n    } catch (error) {\n      console.error('Ошибка изменения пароля:', error);\n      toast.error('Ошибка при изменении пароля');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleUploadAvatar = async (file) => {\n    try {\n      setSaving(true);\n      const formData = new FormData();\n      formData.append('avatar', file);\n      await clubApi.uploadAvatar(formData);\n      await loadClubData();\n      toast.success('Аватар обновлен успешно!');\n    } catch (error) {\n      console.error('Ошибка загрузки аватара:', error);\n      toast.error('Ошибка при загрузке аватара');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"club-settings\">\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Загрузка настроек...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const tabs = [\n    { id: 'general', label: 'Основные', icon: '⚙️' },\n    { id: 'profile', label: 'Профиль', icon: '👤' },\n    { id: 'privacy', label: 'Приватность', icon: '🔒' },\n    { id: 'notifications', label: 'Уведомления', icon: '🔔' },\n    { id: 'security', label: 'Безопасность', icon: '🛡️' }\n  ];\n\n  return (\n    <div className=\"club-settings\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Настройки клуба</h1>\n          <p>Управляйте настройками и конфигурацией вашего клуба</p>\n        </div>\n      </div>\n\n      <div className=\"settings-container\">\n        <div className=\"settings-sidebar\">\n          <div className=\"tabs-list\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                className={`tab-button ${activeTab === tab.id ? 'active' : ''}`}\n                onClick={() => setActiveTab(tab.id)}\n              >\n                <span className=\"tab-icon\">{tab.icon}</span>\n                <span className=\"tab-label\">{tab.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"settings-content\">\n          {activeTab === 'general' && (\n            <GeneralSettings club={club} onSave={handleSave} saving={saving} />\n          )}\n          \n          {activeTab === 'profile' && (\n            <ProfileSettings \n              club={club} \n              onSave={handleSave} \n              onUploadAvatar={handleUploadAvatar}\n              saving={saving} \n            />\n          )}\n          \n          {activeTab === 'privacy' && (\n            <PrivacySettings club={club} onSave={handleSave} saving={saving} />\n          )}\n          \n          {activeTab === 'notifications' && (\n            <NotificationSettings club={club} onSave={handleSave} saving={saving} />\n          )}\n          \n          {activeTab === 'security' && (\n            <SecuritySettings \n              club={club} \n              onSave={handleSave} \n              onChangePassword={handleChangePassword}\n              showPasswordForm={showPasswordForm}\n              setShowPasswordForm={setShowPasswordForm}\n              saving={saving} \n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Компонент основных настроек\nconst GeneralSettings = ({ club, onSave, saving }) => {\n  const [formData, setFormData] = useState({\n    name: club?.name || '',\n    description: club?.description || '',\n    type: club?.type || 'general',\n    website: club?.website || '',\n    contact_info: club?.contact_info || ''\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h2>Основные настройки</h2>\n      <form onSubmit={handleSubmit} className=\"settings-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Название клуба *</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n            placeholder=\"Введите название клуба\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Описание клуба</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            value={formData.description}\n            onChange={handleChange}\n            rows=\"4\"\n            placeholder=\"Опишите ваш клуб\"\n          />\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"type\">Тип клуба</label>\n            <select id=\"type\" name=\"type\" value={formData.type} onChange={handleChange}>\n              <option value=\"general\">Общий</option>\n              <option value=\"swing\">Свинг</option>\n              <option value=\"bdsm\">БДСМ</option>\n              <option value=\"fetish\">Фетиш</option>\n              <option value=\"lifestyle\">Лайфстайл</option>\n              <option value=\"other\">Другое</option>\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"website\">Веб-сайт</label>\n          <input\n            type=\"url\"\n            id=\"website\"\n            name=\"website\"\n            value={formData.website}\n            onChange={handleChange}\n            placeholder=\"https://example.com\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"contact_info\">Контактная информация</label>\n          <textarea\n            id=\"contact_info\"\n            name=\"contact_info\"\n            value={formData.contact_info}\n            onChange={handleChange}\n            rows=\"3\"\n            placeholder=\"Дополнительная контактная информация\"\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n            <SaveIcon className=\"icon\" />\n            {saving ? 'Сохранение...' : 'Сохранить'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Компонент настроек профиля\nconst ProfileSettings = ({ club, onSave, onUploadAvatar, saving }) => {\n  const [formData, setFormData] = useState({\n    country: club?.country || '',\n    city: club?.city || '',\n    address: club?.address || '',\n    email: club?.email || ''\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      onUploadAvatar(file);\n    }\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h2>Настройки профиля</h2>\n      \n      <div className=\"avatar-section\">\n        <h3>Аватар клуба</h3>\n        <div className=\"avatar-upload\">\n          <div className=\"current-avatar\" onClick={() => document.getElementById('avatar-upload').click()}>\n            {club?.avatar ? (\n              <img \n                src={`/uploads/${club.avatar}`} \n                alt=\"Аватар клуба\" \n                onError={(e) => {\n                  e.target.src = '/uploads/no_photo.jpg';\n                }}\n              />\n            ) : (\n              <div className=\"avatar-placeholder\">👤</div>\n            )}\n            <div className=\"avatar-overlay\">\n              <span>📷</span>\n              <span>Изменить аватар</span>\n            </div>\n          </div>\n          <div className=\"upload-controls\">\n            <label htmlFor=\"avatar-upload\" className=\"btn btn-secondary\">\n              <UploadIcon className=\"icon\" />\n              Загрузить аватар\n            </label>\n            <input\n              type=\"file\"\n              id=\"avatar-upload\"\n              accept=\"image/*\"\n              onChange={handleFileChange}\n              style={{ display: 'none' }}\n            />\n            <p className=\"upload-hint\">Рекомендуемый размер: 200x200px</p>\n          </div>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"settings-form\">\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"country\">Страна</label>\n            <input\n              type=\"text\"\n              id=\"country\"\n              name=\"country\"\n              value={formData.country}\n              onChange={handleChange}\n              placeholder=\"Россия\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"city\">Город</label>\n            <input\n              type=\"text\"\n              id=\"city\"\n              name=\"city\"\n              value={formData.city}\n              onChange={handleChange}\n              placeholder=\"Москва\"\n            />\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"address\">Адрес</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            placeholder=\"Полный адрес клуба\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            placeholder=\"club@example.com\"\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n            <SaveIcon className=\"icon\" />\n            {saving ? 'Сохранение...' : 'Сохранить'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Компонент настроек приватности\nconst PrivacySettings = ({ club, onSave, saving }) => {\n  const [formData, setFormData] = useState({\n    is_public: club?.is_public !== false,\n    show_members: club?.show_members !== false,\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: checked }));\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h2>Настройки приватности</h2>\n      <form onSubmit={handleSubmit} className=\"settings-form\">\n        <div className=\"privacy-options\">\n          <div className=\"privacy-item\">\n            <div className=\"privacy-info\">\n              <h4>Публичный клуб</h4>\n              <p>Клуб будет виден всем пользователям в каталоге</p>\n            </div>\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                name=\"is_public\"\n                checked={formData.is_public}\n                onChange={handleChange}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n          </div>\n\n          <div className=\"privacy-item\">\n            <div className=\"privacy-info\">\n              <h4>Показывать участников</h4>\n              <p>Отображать список участников на странице клуба</p>\n            </div>\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                name=\"show_members\"\n                checked={formData.show_members}\n                onChange={handleChange}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n          </div>\n\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n            <SaveIcon className=\"icon\" />\n            {saving ? 'Сохранение...' : 'Сохранить'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Компонент настроек уведомлений\nconst NotificationSettings = ({ club, onSave, saving }) => {\n  const [formData, setFormData] = useState({\n    email_notifications: club?.email_notifications !== false,\n    event_reminders: club?.event_reminders !== false,\n    member_activity: club?.member_activity !== false\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(formData);\n  };\n\n  const handleChange = (e) => {\n    const { name, checked } = e.target;\n    setFormData(prev => ({ ...prev, [name]: checked }));\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h2>Настройки уведомлений</h2>\n      <form onSubmit={handleSubmit} className=\"settings-form\">\n        <div className=\"notification-options\">\n          <div className=\"notification-item\">\n            <div className=\"notification-info\">\n              <h4>Email уведомления</h4>\n              <p>Получать уведомления на email</p>\n            </div>\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                name=\"email_notifications\"\n                checked={formData.email_notifications}\n                onChange={handleChange}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n          </div>\n\n          <div className=\"notification-item\">\n            <div className=\"notification-info\">\n              <h4>Напоминания о событиях</h4>\n              <p>Уведомления о предстоящих мероприятиях</p>\n            </div>\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                name=\"event_reminders\"\n                checked={formData.event_reminders}\n                onChange={handleChange}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n          </div>\n\n\n          <div className=\"notification-item\">\n            <div className=\"notification-info\">\n              <h4>Активность участников</h4>\n              <p>Уведомления о активности участников клуба</p>\n            </div>\n            <label className=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                name=\"member_activity\"\n                checked={formData.member_activity}\n                onChange={handleChange}\n              />\n              <span className=\"toggle-slider\"></span>\n            </label>\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n            <SaveIcon className=\"icon\" />\n            {saving ? 'Сохранение...' : 'Сохранить'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// Компонент настроек безопасности\nconst SecuritySettings = ({ club, onSave, onChangePassword, showPasswordForm, setShowPasswordForm, saving }) => {\n  const [passwordData, setPasswordData] = useState({\n    current_password: '',\n    new_password: '',\n    confirm_password: ''\n  });\n\n  const handlePasswordSubmit = (e) => {\n    e.preventDefault();\n    if (passwordData.new_password !== passwordData.confirm_password) {\n      toast.error('Пароли не совпадают');\n      return;\n    }\n    \n    // Преобразуем поля для API\n    const apiData = {\n      currentPassword: passwordData.current_password,\n      newPassword: passwordData.new_password\n    };\n    \n    onChangePassword(apiData);\n    setPasswordData({ current_password: '', new_password: '', confirm_password: '' });\n  };\n\n  const handlePasswordChange = (e) => {\n    const { name, value } = e.target;\n    setPasswordData(prev => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div className=\"settings-section\">\n      <h2>Настройки безопасности</h2>\n      \n      <div className=\"security-section\">\n        <h3>Смена пароля</h3>\n        <p>Регулярно меняйте пароль для обеспечения безопасности</p>\n        \n        {!showPasswordForm ? (\n          <button \n            className=\"btn btn-secondary\"\n            onClick={() => setShowPasswordForm(true)}\n          >\n            Изменить пароль\n          </button>\n        ) : (\n          <form onSubmit={handlePasswordSubmit} className=\"password-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"current_password\">Текущий пароль</label>\n              <input\n                type=\"password\"\n                id=\"current_password\"\n                name=\"current_password\"\n                value={passwordData.current_password}\n                onChange={handlePasswordChange}\n                required\n                placeholder=\"Введите текущий пароль\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"new_password\">Новый пароль</label>\n              <input\n                type=\"password\"\n                id=\"new_password\"\n                name=\"new_password\"\n                value={passwordData.new_password}\n                onChange={handlePasswordChange}\n                required\n                placeholder=\"Введите новый пароль\"\n                minLength=\"6\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"confirm_password\">Подтвердите пароль</label>\n              <input\n                type=\"password\"\n                id=\"confirm_password\"\n                name=\"confirm_password\"\n                value={passwordData.confirm_password}\n                onChange={handlePasswordChange}\n                required\n                placeholder=\"Подтвердите новый пароль\"\n                minLength=\"6\"\n              />\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowPasswordForm(false)}>\n                Отмена\n              </button>\n              <button type=\"submit\" className=\"btn btn-primary\" disabled={saving}>\n                {saving ? 'Сохранение...' : 'Изменить пароль'}\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n\n      <div className=\"security-info\">\n        <h3>Информация о безопасности</h3>\n        <div className=\"security-stats\">\n          <div className=\"security-item\">\n            <span className=\"security-label\">Последний вход:</span>\n            <span className=\"security-value\">\n              {club?.last_login ? new Date(club.last_login).toLocaleString('ru-RU') : 'Неизвестно'}\n            </span>\n          </div>\n          <div className=\"security-item\">\n            <span className=\"security-label\">Email подтвержден:</span>\n            <span className=\"security-value\">\n              {club?.email_verified ? 'Да' : 'Нет'}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClubSettings;\n\n","import React, { useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { clubAuth } from '../services/clubApi';\nimport '../styles/ClubNavigation.css';\n\n// Иконки\nconst HomeIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"/>\n    <polyline points=\"9,22 9,12 15,12 15,22\"/>\n  </svg>\n);\n\nconst CalendarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\n    <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\n    <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\n  </svg>\n);\n\nconst BellIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"/>\n    <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"/>\n  </svg>\n);\n\nconst ChartBarIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M18 20V10\"/>\n    <path d=\"M12 20V4\"/>\n    <path d=\"M6 20v-6\"/>\n  </svg>\n);\n\nconst UsersIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst CogIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"/>\n  </svg>\n);\n\nconst UserGroupIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/>\n    <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n    <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"/>\n    <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"/>\n  </svg>\n);\n\nconst RobotIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <rect x=\"3\" y=\"11\" width=\"18\" height=\"10\" rx=\"2\" ry=\"2\"/>\n    <circle cx=\"12\" cy=\"5\" r=\"2\"/>\n    <path d=\"M12 7v4\"/>\n    <line x1=\"8\" y1=\"16\" x2=\"8\" y2=\"16\"/>\n    <line x1=\"16\" y1=\"16\" x2=\"16\" y2=\"16\"/>\n  </svg>\n);\n\nconst Bars3Icon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"/>\n    <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"/>\n    <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"/>\n  </svg>\n);\n\nconst XMarkIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"/>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"/>\n  </svg>\n);\n\nconst ClubNavigation = () => {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const navigationItems = [\n    {\n      name: 'Дашборд',\n      href: '/club/dashboard',\n      icon: HomeIcon,\n      description: 'Главная страница клуба'\n    },\n    {\n      name: 'Мероприятия',\n      href: '/club/events',\n      icon: CalendarIcon,\n      description: 'Управление мероприятиями'\n    },\n    {\n      name: 'Аналитика',\n      href: '/club/analytics',\n      icon: ChartBarIcon,\n      description: 'Статистика и отчеты'\n    },\n    {\n      name: 'Боты',\n      href: '/club/bots',\n      icon: RobotIcon,\n      description: 'Автоматизация и боты'\n    },\n    {\n      name: 'Участники',\n      href: '/club/participants',\n      icon: UserGroupIcon,\n      description: 'Управление участниками'\n    },\n    {\n      name: 'Настройки',\n      href: '/club/settings',\n      icon: CogIcon,\n      description: 'Настройки клуба'\n    }\n  ];\n\n  const handleLogout = async () => {\n    try {\n      await clubAuth.removeToken();\n      navigate('/club/login');\n    } catch (error) {\n      console.error('Ошибка выхода:', error);\n    }\n  };\n\n  const isActive = (href) => {\n    return location.pathname === href || location.pathname.startsWith(href + '/');\n  };\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"club-navigation\">\n        <div className=\"nav-header\">\n          <div className=\"nav-logo\">\n            <span className=\"logo-text\">SwingFox Club</span>\n          </div>\n        </div>\n\n        <div className=\"nav-menu\">\n          {navigationItems.map((item) => {\n            const Icon = item.icon;\n            return (\n              <Link\n                key={item.name}\n                to={item.href}\n                className={`nav-item ${isActive(item.href) ? 'active' : ''}`}\n                title={item.description}\n              >\n                <Icon className=\"nav-icon\" />\n                <span className=\"nav-text\">{item.name}</span>\n              </Link>\n            );\n          })}\n        </div>\n\n        <div className=\"nav-footer\">\n          <button className=\"logout-btn\" onClick={handleLogout}>\n            <CogIcon className=\"nav-icon\" />\n            <span className=\"nav-text\">Выйти</span>\n          </button>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation Toggle */}\n      <button\n        className=\"mobile-nav-toggle\"\n        onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n      >\n        {isMobileMenuOpen ? (\n          <XMarkIcon className=\"toggle-icon\" />\n        ) : (\n          <Bars3Icon className=\"toggle-icon\" />\n        )}\n      </button>\n\n      {/* Mobile Navigation */}\n      {isMobileMenuOpen && (\n        <div className={`mobile-nav-overlay ${isMobileMenuOpen ? 'active' : ''}`} onClick={() => setIsMobileMenuOpen(false)}>\n          <nav className=\"mobile-navigation\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"mobile-nav-header\">\n              <div className=\"nav-logo\">\n                <span className=\"logo-text\">SwingFox Club</span>\n              </div>\n              <button\n                className=\"mobile-close-btn\"\n                onClick={() => setIsMobileMenuOpen(false)}\n              >\n                <XMarkIcon className=\"close-icon\" />\n              </button>\n            </div>\n\n            <div className=\"mobile-nav-menu\">\n              {navigationItems.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className={`mobile-nav-item ${isActive(item.href) ? 'active' : ''}`}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    <Icon className=\"nav-icon\" />\n                    <div className=\"mobile-nav-content\">\n                      <span className=\"nav-text\">{item.name}</span>\n                      <span className=\"nav-description\">{item.description}</span>\n                    </div>\n                  </Link>\n                );\n              })}\n            </div>\n\n            <div className=\"mobile-nav-footer\">\n              <button className=\"mobile-logout-btn\" onClick={handleLogout}>\n                <CogIcon className=\"nav-icon\" />\n                <span className=\"nav-text\">Выйти</span>\n              </button>\n            </div>\n          </nav>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ClubNavigation;\n","import React from 'react';\nimport ClubNavigation from './ClubNavigation';\nimport '../styles/ClubLayout.css';\n\nconst ClubLayout = ({ children }) => {\n  return (\n    <div className=\"club-layout\">\n      <ClubNavigation />\n      <main className=\"club-main\">\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default ClubLayout;\n\n","import React, { useState } from 'react';\nimport { clubApi } from '../services/clubApi';\nimport './EventApplication.css';\n\nconst EventApplication = ({ event, onClose, onSuccess }) => {\n  const [formData, setFormData] = useState({\n    message: '',\n    contact_info: '',\n    special_requirements: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    if (error) {\n      setError(null);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!formData.message.trim()) {\n      setError('Пожалуйста, напишите сообщение');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await clubApi.applyToEvent(event.id, formData);\n      onSuccess?.();\n      onClose();\n    } catch (error) {\n      console.error('Ошибка подачи заявки:', error);\n      setError('Не удалось подать заявку. Попробуйте снова.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatEventDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  return (\n    <div className=\"event-application-overlay\">\n      <div className=\"event-application\">\n        <div className=\"application-header\">\n          <h2>Подать заявку на участие</h2>\n          <button \n            className=\"close-button\"\n            onClick={onClose}\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"event-info\">\n          <h3>{event.title}</h3>\n          <div className=\"event-details\">\n            <div className=\"detail-item\">\n              <span className=\"detail-icon\">📅</span>\n              <span>{formatEventDate(event.date)}</span>\n            </div>\n            {event.location && (\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">📍</span>\n                <span>{event.location}</span>\n              </div>\n            )}\n            {event.price && (\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">💰</span>\n                <span>{event.price} ₽</span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"application-form\">\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">\n              Сообщение организатору *\n              <span className=\"label-hint\">Расскажите, почему вы хотите участвовать в этом событии</span>\n            </label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              value={formData.message}\n              onChange={handleChange}\n              rows=\"4\"\n              placeholder=\"Напишите сообщение организатору...\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"contact_info\">\n              Контактная информация\n              <span className=\"label-hint\">Телефон, Telegram или другие способы связи</span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"contact_info\"\n              name=\"contact_info\"\n              value={formData.contact_info}\n              onChange={handleChange}\n              placeholder=\"+7 (999) 123-45-67 или @username\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"special_requirements\">\n              Особые требования\n              <span className=\"label-hint\">Диетические ограничения, доступность и т.д.</span>\n            </label>\n            <textarea\n              id=\"special_requirements\"\n              name=\"special_requirements\"\n              value={formData.special_requirements}\n              onChange={handleChange}\n              rows=\"3\"\n              placeholder=\"Укажите, если у вас есть особые требования...\"\n            />\n          </div>\n\n          <div className=\"form-actions\">\n            <button \n              type=\"button\" \n              className=\"btn btn-secondary\"\n              onClick={onClose}\n              disabled={loading}\n            >\n              Отмена\n            </button>\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading}\n            >\n              {loading ? 'Отправка...' : 'Подать заявку'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EventApplication;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { api } from '../services/api';\nimport { clubApi } from '../services/clubApi';\nimport EventApplication from '../components/EventApplication';\nimport toast from 'react-hot-toast';\nimport './PublicClubDetail.css';\n\nconst PublicClubDetail = () => {\n  const { id } = useParams();\n  const [club, setClub] = useState(null);\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('info');\n  const [showApplicationForm, setShowApplicationForm] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  useEffect(() => {\n    if (id) {\n      loadClubData();\n    }\n  }, [id]);\n\n  const loadClubData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Загружаем данные клуба\n      const clubResponse = await api.clubs.getClub(id);\n      setClub(clubResponse.club || clubResponse);\n      \n      // Загружаем события клуба\n      try {\n        const eventsResponse = await clubApi.getEvents({ club_id: id, limit: 10 });\n        setEvents(eventsResponse.events || []);\n      } catch (eventsError) {\n        console.warn('Не удалось загрузить события:', eventsError);\n        setEvents([]);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки клуба:', error);\n      setError('Клуб не найден или произошла ошибка загрузки');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getClubTypeLabel = (type) => {\n    const types = {\n      'nightclub': 'Ночной клуб',\n      'restaurant': 'Ресторан',\n      'event_space': 'Event Space',\n      'other': 'Другое'\n    };\n    return types[type] || 'Клуб';\n  };\n\n  const getClubTypeIcon = (type) => {\n    switch (type) {\n      case 'nightclub':\n        return '🎵';\n      case 'restaurant':\n        return '🍽️';\n      case 'event_space':\n        return '🏢';\n      default:\n        return '🏛️';\n    }\n  };\n\n  const formatEventDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const handleApplyToEvent = (event) => {\n    setSelectedEvent(event);\n    setShowApplicationForm(true);\n  };\n\n  const handleCloseApplicationForm = () => {\n    setShowApplicationForm(false);\n    setSelectedEvent(null);\n  };\n\n  const handleApplicationSuccess = () => {\n    toast.success('Заявка успешно подана! Организатор рассмотрит её в ближайшее время.');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"public-club-detail-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка информации о клубе...</p>\n      </div>\n    );\n  }\n\n  if (error || !club) {\n    return (\n      <div className=\"public-club-detail-error\">\n        <h2>Ошибка загрузки</h2>\n        <p>{error || 'Клуб не найден'}</p>\n        <Link to=\"/clubs\" className=\"btn btn-primary\">\n          Вернуться к списку клубов\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"public-club-detail\">\n      {/* Header */}\n      <div className=\"club-detail-header\">\n        <div className=\"club-detail-back\">\n          <Link to=\"/clubs\" className=\"back-link\">\n            ← Назад к клубам\n          </Link>\n        </div>\n        \n        <div className=\"club-detail-hero\">\n          <div className=\"club-hero-avatar\">\n            <img \n              src={club.avatar ? `/uploads/${club.avatar}` : '/uploads/no_photo.jpg'} \n              alt={club.name}\n              onError={(e) => {\n                e.target.src = '/uploads/no_photo.jpg';\n              }}\n            />\n          </div>\n          \n          <div className=\"club-hero-info\">\n            <div className=\"club-type-badge\">\n              <span className=\"club-type-icon\">{getClubTypeIcon(club.type)}</span>\n              <span className=\"club-type-label\">{getClubTypeLabel(club.type)}</span>\n            </div>\n            \n            <h1 className=\"club-hero-name\">{club.name}</h1>\n            \n            <div className=\"club-hero-location\">\n              <span className=\"location-icon\">📍</span>\n              <span className=\"location-text\">\n                {club.city}, {club.country}\n              </span>\n            </div>\n            \n            {club.website && (\n              <div className=\"club-hero-website\">\n                <a \n                  href={club.website} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"website-link\"\n                >\n                  🌐 {club.website}\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"club-detail-tabs\">\n        <button \n          className={`tab-button ${activeTab === 'info' ? 'active' : ''}`}\n          onClick={() => setActiveTab('info')}\n        >\n          Информация\n        </button>\n        <button \n          className={`tab-button ${activeTab === 'events' ? 'active' : ''}`}\n          onClick={() => setActiveTab('events')}\n        >\n          События ({events.length})\n        </button>\n      </div>\n\n      {/* Content */}\n      <div className=\"club-detail-content\">\n        {activeTab === 'info' && (\n          <div className=\"club-info-tab\">\n            <div className=\"club-description\">\n              <h3>О клубе</h3>\n              <p>\n                {club.description || 'Описание клуба не указано.'}\n              </p>\n            </div>\n            \n            <div className=\"club-contact\">\n              <h3>Контактная информация</h3>\n              {club.email && (\n                <div className=\"contact-item\">\n                  <strong>Email:</strong> {club.email}\n                </div>\n              )}\n              {club.contact_info && (\n                <div className=\"contact-item\">\n                  <strong>Дополнительные контакты:</strong> {club.contact_info}\n                </div>\n              )}\n              {club.website && (\n                <div className=\"contact-item\">\n                  <strong>Веб-сайт:</strong> \n                  <a href={club.website.startsWith('http') ? club.website : `https://${club.website}`} \n                     target=\"_blank\" \n                     rel=\"noopener noreferrer\"\n                     className=\"website-link\">\n                    {club.website}\n                  </a>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"club-details\">\n              <h3>Детали</h3>\n              <div className=\"details-grid\">\n                <div className=\"detail-item\">\n                  <span className=\"detail-label\">Тип:</span>\n                  <span className=\"detail-value\">{getClubTypeLabel(club.type)}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-label\">Город:</span>\n                  <span className=\"detail-value\">{club.city}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-label\">Страна:</span>\n                  <span className=\"detail-value\">{club.country}</span>\n                </div>\n                {club.address && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-label\">Адрес:</span>\n                    <span className=\"detail-value\">{club.address}</span>\n                  </div>\n                )}\n                <div className=\"detail-item\">\n                  <span className=\"detail-label\">Дата создания:</span>\n                  <span className=\"detail-value\">\n                    {club.date_created ? new Date(club.date_created).toLocaleDateString('ru-RU') : 'Не указана'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {activeTab === 'events' && (\n          <div className=\"club-events-tab\">\n            <h3>Предстоящие события</h3>\n            \n            {events.length === 0 ? (\n              <div className=\"no-events\">\n                <div className=\"no-events-icon\">📅</div>\n                <p>У этого клуба пока нет запланированных событий</p>\n              </div>\n            ) : (\n              <div className=\"events-list\">\n                {events.map(event => (\n                  <div key={event.id} className=\"event-card\">\n                    <div className=\"event-date\">\n                      {formatEventDate(event.date)}\n                    </div>\n                    <div className=\"event-info\">\n                      <h4 className=\"event-title\">{event.title}</h4>\n                      {event.description && (\n                        <p className=\"event-description\">{event.description}</p>\n                      )}\n                      <div className=\"event-details\">\n                        <span className=\"event-price\">\n                          {event.price ? `${event.price} ₽` : 'Бесплатно'}\n                        </span>\n                        <span className=\"event-participants\">\n                          {event.max_participants ? `До ${event.max_participants} участников` : 'Без ограничений'}\n                        </span>\n                      </div>\n                      \n                      <div className=\"event-actions\">\n                        <button \n                          className=\"btn btn-primary btn-sm\"\n                          onClick={() => handleApplyToEvent(event)}\n                        >\n                          Подать заявку\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Event Application Modal */}\n      {showApplicationForm && selectedEvent && (\n        <EventApplication\n          event={selectedEvent}\n          onClose={handleCloseApplicationForm}\n          onSuccess={handleApplicationSuccess}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PublicClubDetail;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Toaster } from 'react-hot-toast';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\n\n// Компоненты\nimport AuthGuard from './components/AuthGuard';\nimport ClubAuthGuard from './components/ClubAuthGuard';\nimport Navigation from './components/Navigation';\nimport { NotificationProvider } from './contexts/NotificationContext';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Home from './pages/Home';\nimport Catalog from './pages/Catalog';\nimport Profile from './pages/Profile';\nimport Chat from './pages/Chat';\nimport Ads from './pages/Ads';\nimport Admin from './pages/Admin';\nimport Notifications from './pages/Notifications';\n\nimport Clubs from './pages/Clubs';\nimport Subscriptions from './pages/Subscriptions';\nimport Ratings from './pages/Ratings';\nimport BalanceTopUp from './pages/BalanceTopUp';\n\n// Клубные страницы\nimport ClubLogin from './pages/ClubLogin';\nimport ClubRegister from './pages/ClubRegister';\nimport ClubDashboard from './pages/ClubDashboard';\nimport ClubEvents from './pages/ClubEvents';\nimport ClubAnalytics from './pages/ClubAnalytics';\nimport ClubBots from './pages/ClubBots';\nimport ClubParticipants from './pages/ClubParticipants';\nimport ClubSettings from './pages/ClubSettings';\nimport ClubLayout from './components/ClubLayout';\n\n// Публичные страницы клубов\nimport PublicClubs from './pages/PublicClubs';\nimport PublicClubDetail from './pages/PublicClubDetail';\n\n// Стили и тема\nconst theme = {\n  colors: {\n    primary: '#dc3522',\n    secondary: '#39354e',\n    background: '#fbfbfb',\n    surface: '#ffffff',\n    text: '#39354e',\n    textLight: '#666',\n    border: '#e0e0e0',\n    success: '#4caf50',\n    error: '#f44336',\n    warning: '#ff9800'\n  },\n  fonts: {\n    primary: 'Arial, sans-serif',\n    sizes: {\n      small: '12px',\n      medium: '14px',\n      large: '16px',\n      xlarge: '18px',\n      xxlarge: '24px'\n    }\n  },\n  spacing: {\n    xs: '4px',\n    sm: '8px',\n    md: '16px',\n    lg: '24px',\n    xl: '32px'\n  },\n  borderRadius: '8px',\n  shadow: '0 2px 8px rgba(0,0,0,0.1)'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${props => props.theme.fonts.primary};\n    background-color: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    font-size: ${props => props.theme.fonts.sizes.large};\n    line-height: 1.5;\n  }\n\n  a {\n    color: ${props => props.theme.colors.primary};\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  button {\n    cursor: pointer;\n    border: none;\n    background: none;\n    font-family: inherit;\n  }\n\n  input, textarea, select {\n    font-family: inherit;\n    font-size: inherit;\n  }\n\n  .container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 ${props => props.theme.spacing.md};\n  }\n\n  .btn {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${props => props.theme.spacing.sm} ${props => props.theme.spacing.md};\n    border-radius: ${props => props.theme.borderRadius};\n    font-weight: 500;\n    transition: all 0.2s ease;\n    text-decoration: none;\n    border: none;\n    cursor: pointer;\n    \n    &.btn-primary {\n      background-color: ${props => props.theme.colors.primary};\n      color: white;\n      \n      &:hover {\n        background-color: #b8291e;\n        text-decoration: none;\n      }\n    }\n    \n    &.btn-secondary {\n      background-color: transparent;\n      color: ${props => props.theme.colors.secondary};\n      border: 1px solid ${props => props.theme.colors.border};\n      \n      &:hover {\n        background-color: ${props => props.theme.colors.border};\n        text-decoration: none;\n      }\n    }\n  }\n\n  .form-group {\n    margin-bottom: ${props => props.theme.spacing.md};\n    \n    label {\n      display: block;\n      margin-bottom: ${props => props.theme.spacing.xs};\n      font-weight: 500;\n      color: ${props => props.theme.colors.secondary};\n    }\n    \n    input, textarea, select {\n      width: 100%;\n      padding: ${props => props.theme.spacing.sm};\n      border: 1px solid ${props => props.theme.colors.border};\n      border-radius: ${props => props.theme.borderRadius};\n      background-color: white;\n      \n      &:focus {\n        outline: none;\n        border-color: ${props => props.theme.colors.primary};\n        box-shadow: 0 0 0 2px rgba(220, 53, 34, 0.1);\n      }\n      \n      &::placeholder {\n        color: ${props => props.theme.colors.textLight};\n      }\n    }\n    \n    textarea {\n      min-height: 100px;\n      resize: vertical;\n    }\n  }\n\n  .card {\n    background: white;\n    border-radius: ${props => props.theme.borderRadius};\n    box-shadow: ${props => props.theme.shadow};\n    padding: ${props => props.theme.spacing.md};\n    margin-bottom: ${props => props.theme.spacing.md};\n  }\n\n  .text-center {\n    text-align: center;\n  }\n\n  .text-error {\n    color: ${props => props.theme.colors.error};\n    font-size: ${props => props.theme.fonts.sizes.small};\n  }\n\n  .loading {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${props => props.theme.spacing.xl};\n    \n    &::after {\n      content: '';\n      width: 20px;\n      height: 20px;\n      border: 2px solid ${props => props.theme.colors.border};\n      border-top: 2px solid ${props => props.theme.colors.primary};\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  @media (max-width: 768px) {\n    .container {\n      padding: 0 ${props => props.theme.spacing.sm};\n    }\n  }\n`;\n\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// React Query клиент\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 1,\n      refetchOnWindowFocus: false,\n      staleTime: 30000, // Данные считаются свежими 30 секунд по умолчанию\n      cacheTime: 5 * 60 * 1000, // Кэш хранится 5 минут\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <AppContainer>\n          <Router\n            future={{\n              v7_startTransition: true,\n              v7_relativeSplatPath: true\n            }}\n          >\n            <NotificationProvider>\n              <Routes>\n              {/* Публичные роуты */}\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register\" element={<Register />} />\n              \n              {/* Публичные страницы клубов */}\n              <Route path=\"/clubs\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Clubs />\n                </AuthGuard>\n              } />\n              <Route path=\"/clubs/:id\" element={<PublicClubDetail />} />\n              <Route path=\"/clubs/:id/events\" element={<PublicClubDetail />} />\n              \n              {/* Клубные роуты */}\n              <Route path=\"/club/login\" element={<ClubLogin />} />\n              <Route path=\"/club/register\" element={<ClubRegister />} />\n              \n              {/* Защищенные клубные роуты */}\n              <Route path=\"/club/dashboard\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubDashboard />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              <Route path=\"/club/events\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubEvents />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              <Route path=\"/club/analytics\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubAnalytics />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              \n              \n              <Route path=\"/club/bots\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubBots />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              <Route path=\"/club/participants\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubParticipants />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              <Route path=\"/club/settings\" element={\n                <ClubAuthGuard>\n                  <ClubLayout>\n                    <ClubSettings />\n                  </ClubLayout>\n                </ClubAuthGuard>\n              } />\n              \n              {/* Защищенные роуты */}\n              <Route path=\"/\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Home />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/catalog\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Catalog />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/profile\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Profile />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/profile/:login\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Profile />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/chat/:username?\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Chat />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/notifications\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Notifications />\n                </AuthGuard>\n              } />\n              \n\n              \n              \n              <Route path=\"/subscriptions\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Subscriptions />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/ratings\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Ratings />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/ads\" element={\n                <AuthGuard>\n                  <Navigation />\n                  <Ads />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/admin/*\" element={\n                <AuthGuard>\n                  <Admin />\n                </AuthGuard>\n              } />\n              \n              <Route path=\"/balance-topup\" element={\n                <AuthGuard>\n                  <BalanceTopUp />\n                </AuthGuard>\n              } />\n              \n              {/* Редирект на главную */}\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n              </Routes>\n            </NotificationProvider>\n          </Router>\n        </AppContainer>\n        \n        {/* Уведомления */}\n        <Toaster\n          position=\"top-right\"\n          toastOptions={{\n            duration: 4000,\n            style: {\n              background: theme.colors.surface,\n              color: theme.colors.text,\n              border: `1px solid ${theme.colors.border}`,\n              borderRadius: theme.borderRadius,\n            },\n            success: {\n              iconTheme: {\n                primary: theme.colors.success,\n                secondary: 'white',\n              },\n            },\n            error: {\n              iconTheme: {\n                primary: theme.colors.error,\n                secondary: 'white',\n              },\n            },\n          }}\n        />\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(React.createElement(App));","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Базовая конфигурация API\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// URL для загрузок\nconst UPLOADS_URL = process.env.REACT_APP_UPLOADS_URL || '/uploads';\n\n// Ключи для localStorage\nconst TOKEN_KEY = 'swingfox_token';\nconst USER_CACHE_KEY = 'swingfox_user_cache';\n\n// Получение токена из localStorage\nconst getToken = () => localStorage.getItem(TOKEN_KEY);\n\n// Сохранение токена\nconst setToken = (token) => {\n  if (token) {\n    localStorage.setItem(TOKEN_KEY, token);\n  } else {\n    localStorage.removeItem(TOKEN_KEY);\n    // При удалении токена также очищаем кэш пользователя\n    clearUserCache();\n  }\n};\n\n// Работа с кэшем данных пользователя\nconst getUserCache = () => {\n  try {\n    const cached = localStorage.getItem(USER_CACHE_KEY);\n    return cached ? JSON.parse(cached) : null;\n  } catch (error) {\n    console.warn('Ошибка парсинга кэша пользователя:', error);\n    return null;\n  }\n};\n\nconst setUserCache = (userData) => {\n  try {\n    localStorage.setItem(USER_CACHE_KEY, JSON.stringify({\n      ...userData,\n      cachedAt: Date.now()\n    }));\n  } catch (error) {\n    console.warn('Ошибка сохранения кэша пользователя:', error);\n  }\n};\n\nconst clearUserCache = () => {\n  localStorage.removeItem(USER_CACHE_KEY);\n};\n\n// Проверка актуальности кэша (15 минут)\nconst isCacheValid = (cachedData) => {\n  if (!cachedData || !cachedData.cachedAt) return false;\n  const CACHE_LIFETIME = 15 * 60 * 1000; // 15 минут\n  return (Date.now() - cachedData.cachedAt) < CACHE_LIFETIME;\n};\n\n// Флаг для предотвращения повторных редиректов\nlet isRedirecting = false;\n\n// Интерцептор для добавления токена к запросам\napiClient.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Интерцептор для обработки ответов\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401 && !isRedirecting) {\n      // Токен истек или недействителен\n      isRedirecting = true;\n      setToken(null);\n      \n      // Вместо window.location.href используем событие\n      window.dispatchEvent(new CustomEvent('auth-logout'));\n      \n      // Сбрасываем флаг через некоторое время\n      setTimeout(() => {\n        isRedirecting = false;\n      }, 1000);\n    } else if (error.response?.status >= 500) {\n      toast.error('Ошибка сервера. Попробуйте позже.');\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API методы для авторизации\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await apiClient.post('/auth/login', credentials);\n    if (response.data.token) {\n      setToken(response.data.token);\n      // Кэшируем данные пользователя при логине\n      if (response.data.user) {\n        setUserCache(response.data.user);\n      }\n    }\n    return response.data;\n  },\n\n  register: async (userData) => {\n    const response = await apiClient.post('/auth/register', userData);\n    if (response.data.token) {\n      setToken(response.data.token);\n      // Кэшируем данные пользователя при регистрации\n      if (response.data.user) {\n        setUserCache(response.data.user);\n      }\n    }\n    return response.data;\n  },\n\n  sendCode: async (email) => {\n    const response = await apiClient.post('/auth/send-code', { email });\n    return response.data;\n  },\n\n  resetPassword: async (data) => {\n    const response = await apiClient.post('/auth/reset-password', data);\n    return response.data;\n  },\n\n  logout: async () => {\n    try {\n      await apiClient.post('/auth/logout');\n    } finally {\n      setToken(null);\n    }\n  },\n\n  getCurrentUser: () => {\n    const token = getToken();\n    if (!token) return null;\n    \n    try {\n      // Сначала получаем базовые данные из токена\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const baseUser = {\n        userId: payload.userId,\n        login: payload.login,\n        vipType: payload.vipType\n      };\n\n      // Пытаемся дополнить данные из кэша\n      const cachedUser = getUserCache();\n      if (cachedUser && isCacheValid(cachedUser) && cachedUser.login === baseUser.login) {\n        return {\n          ...baseUser,\n          ava: cachedUser.ava,\n          email: cachedUser.email,\n          status: cachedUser.status,\n          city: cachedUser.city,\n          country: cachedUser.country,\n          is_admin: cachedUser.is_admin || false\n        };\n      }\n\n      // Если кэш недоступен или устарел, возвращаем базовые данные\n      return baseUser;\n    } catch {\n      return null;\n    }\n  },\n\n  // Новый метод для получения актуальных данных пользователя\n  fetchCurrentUserData: async () => {\n    const baseUser = authAPI.getCurrentUser();\n    if (!baseUser || !baseUser.login) return null;\n\n    try {\n      const response = await apiClient.get(`/users/profile/${baseUser.login}`);\n      const userData = response.data;\n      \n      // Обновляем кэш с актуальными данными\n      setUserCache({\n        id: userData.id,\n        login: userData.login,\n        ava: userData.ava,\n        email: baseUser.email, // email не возвращается в профиле\n        status: userData.status,\n        city: userData.city,\n        country: userData.country,\n        viptype: userData.viptype,\n        is_admin: baseUser.is_admin\n      });\n\n      return authAPI.getCurrentUser(); // Возвращаем обновленные данные\n    } catch (error) {\n      console.warn('Ошибка получения актуальных данных пользователя:', error);\n      return baseUser; // Возвращаем данные из токена при ошибке\n    }\n  },\n\n  // Метод для обновления данных пользователя в кэше\n  updateUserCache: (updates) => {\n    const currentUser = getUserCache();\n    if (currentUser) {\n      setUserCache({\n        ...currentUser,\n        ...updates\n      });\n    }\n  }\n};\n\n// API методы для пользователей\nexport const usersAPI = {\n  getProfile: async (login) => {\n    const response = await apiClient.get(`/profiles/${login}`);\n    \n    // Обновляем кэш, если это профиль текущего пользователя\n    const currentUser = authAPI.getCurrentUser();\n    if (currentUser && currentUser.login === login) {\n      authAPI.updateUserCache({\n        ava: response.data.profile.ava,\n        status: response.data.profile.status,\n        city: response.data.profile.city,\n        country: response.data.profile.country,\n        viptype: response.data.profile.viptype\n      });\n    }\n    \n    return response.data.profile;\n  },\n\n  updateProfile: async (profileData) => {\n    const response = await apiClient.put('/users/profile', profileData);\n    \n    // Обновляем кэш после успешного обновления профиля\n    if (response.data.success && response.data.user) {\n      authAPI.updateUserCache({\n        status: response.data.user.status,\n        city: response.data.user.city,\n        country: response.data.user.country\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadAvatar: async (formData) => {\n    const response = await apiClient.post('/users/upload-avatar', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки аватарки\n    if (response.data.success && response.data.filename) {\n      authAPI.updateUserCache({\n        ava: response.data.filename\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadImages: async (formData) => {\n    const response = await apiClient.post('/users/upload-images', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки изображений\n    if (response.data.success) {\n      // Получаем актуальные данные пользователя для обновления кэша\n      try {\n        const currentUser = authAPI.getCurrentUser();\n        if (currentUser && currentUser.login) {\n          const userResponse = await apiClient.get(`/users/profile/${currentUser.login}`);\n          if (userResponse.data.success) {\n            authAPI.updateUserCache({\n              ava: userResponse.data.user.ava,\n              status: userResponse.data.user.status,\n              city: userResponse.data.user.city,\n              country: userResponse.data.user.country,\n              viptype: userResponse.data.user.viptype\n            });\n          }\n        }\n      } catch (error) {\n        console.warn('Ошибка обновления кэша после загрузки изображений:', error);\n      }\n    }\n    \n    return response.data;\n  },\n\n  deleteImage: async (filename, type = 'images') => {\n    const response = await apiClient.delete(`/users/images/${filename}?type=${type}`);\n    return response.data;\n  },\n\n  setLockedPassword: async (password) => {\n    const response = await apiClient.post('/users/set-locked-password', { password });\n    return response.data;\n  },\n\n  unlockImages: async (targetUser, password) => {\n    const response = await apiClient.post('/users/unlock-images', {\n      target_user: targetUser,\n      password\n    });\n    return response.data;\n  },\n\n  // Лайки фото\n  likePhoto: async (targetUser, photoIndex) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/like-photo`, {\n      photo_index: photoIndex\n    });\n    return response.data;\n  },\n\n  getPhotoLikes: async (targetUser) => {\n    const response = await apiClient.get(`/profiles/${targetUser}/photo-likes`);\n    return response.data;\n  },\n\n  // Комментарии к фотографиям\n  getPhotoComments: async (filename, page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/photo-comments/${filename}?${params.toString()}`);\n    return response.data;\n  },\n\n  createPhotoComment: async (filename, commentText) => {\n    console.log('API createPhotoComment called with:', { filename, commentText });\n    console.log('Filename type:', typeof filename, 'Value:', filename);\n    \n    if (typeof filename !== 'string') {\n      console.error('Filename is not a string:', filename);\n      throw new Error('Filename must be a string');\n    }\n    \n    const response = await apiClient.post(`/photo-comments/${filename}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  updatePhotoComment: async (commentId, commentText) => {\n    const response = await apiClient.put(`/photo-comments/${commentId}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  deletePhotoComment: async (commentId) => {\n    const response = await apiClient.delete(`/photo-comments/${commentId}`);\n    return response.data;\n  },\n\n  // Комментарии к профилям\n  getProfileComments: async (username, page = 1, limit = 20, includePrivate = false) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (includePrivate) {\n      params.append('include_private', 'true');\n    }\n    const response = await apiClient.get(`/profile-comments/${username}?${params.toString()}`);\n    return response.data;\n  },\n\n  createProfileComment: async (username, commentText, isPublic = true) => {\n    console.log('API createProfileComment called with:', { username, commentText, isPublic });\n    console.log('Username type:', typeof username, 'Value:', username);\n    \n    if (typeof username !== 'string') {\n      console.error('Username is not a string:', username);\n      throw new Error('Username must be a string');\n    }\n    \n    const response = await apiClient.post(`/profile-comments/${username}`, {\n      comment_text: commentText,\n      is_public: isPublic\n    });\n    return response.data;\n  },\n\n  updateProfileComment: async (commentId, commentText) => {\n    const response = await apiClient.put(`/profile-comments/${commentId}`, {\n      comment_text: commentText\n    });\n    return response.data;\n  },\n\n  deleteProfileComment: async (commentId) => {\n    const response = await apiClient.delete(`/profile-comments/${commentId}`);\n    return response.data;\n  },\n\n  // Отправка подарков\n  sendGift: async (targetUser, giftType, message = '') => {\n    const response = await apiClient.post(`/profiles/${targetUser}/send-gift`, {\n      gift_type: giftType,\n      message\n    });\n    return response.data;\n  },\n\n  // Система рейтинга\n  rateUser: async (targetUser, value) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/rate`, {\n      value\n    });\n    return response.data;\n  },\n\n  getUserRating: async (targetUser) => {\n    const response = await apiClient.get(`/profiles/${targetUser}/rating`);\n    return response.data;\n  },\n\n  // Суперлайки\n  sendSuperlike: async (targetUser, message = '') => {\n    const response = await apiClient.post(`/profiles/${targetUser}/superlike`, {\n      message\n    });\n    return response.data;\n  },\n\n  // Регистрация посещений\n  registerVisit: async (targetUser) => {\n    const response = await apiClient.post(`/profiles/${targetUser}/visit`);\n    return response.data;\n  }\n};\n\n// API методы для свайпинга\nexport const swipeAPI = {\n  getProfiles: async (direction = 'forward') => {\n    const response = await apiClient.get(`/swipe/profiles?direction=${direction}`);\n    return response.data;\n  },\n\n  getProfilesBatch: async (count = 10, exclude = []) => {\n    const params = new URLSearchParams();\n    params.append('count', count);\n    if (exclude.length > 0) {\n      params.append('exclude', exclude.join(','));\n    }\n    const response = await apiClient.get(`/swipe/profiles/batch?${params.toString()}`);\n    return response.data;\n  },\n\n  like: async (targetUser, source = 'gesture') => {\n    const response = await apiClient.post('/swipe/like', {\n      target_user: targetUser,\n      source\n    });\n    return response.data;\n  },\n\n  dislike: async (targetUser, source = 'gesture') => {\n    const response = await apiClient.post('/swipe/dislike', {\n      target_user: targetUser,\n      source\n    });\n    return response.data;\n  },\n\n  superlike: async ({ targetUser, message }) => {\n    const response = await apiClient.post('/swipe/superlike', {\n      target_user: targetUser, \n      message: message || ''\n    });\n    return response.data;\n  },\n\n  getSuperlikes: async () => {\n    const response = await apiClient.get('/swipe/superlike-count');\n    return response.data;\n  },\n\n  // Проверка существующего мэтча с пользователем\n  checkExistingMatch: async (targetUser) => {\n    try {\n      const response = await apiClient.get(`/chat/match-status/${targetUser}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error checking existing match:', error);\n      return { hasMatch: false };\n    }\n  }\n};\n\n// API методы для каталога анкет\nexport const catalogAPI = {\n  getProfiles: async (filters = {}) => {\n    const params = new URLSearchParams();\n    \n    // Добавляем фильтры как параметры запроса\n    if (filters.status && filters.status.length > 0) {\n      filters.status.forEach(s => params.append('status', s));\n    }\n    if (filters.country) params.append('country', filters.country);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n\n    const response = await apiClient.get(`/catalog?${params.toString()}`);\n    return response.data;\n  },\n\n  getFilters: async () => {\n    const response = await apiClient.get('/catalog/filters');\n    return response.data;\n  }\n};\n\n// API методы для чатов\nexport const chatAPI = {\n  getConversations: async (limit = 20, offset = 0) => {\n    const response = await apiClient.get(`/chat/conversations?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  getMessages: async (username, limit = 50, offset = 0) => {\n    const response = await apiClient.get(`/chat/${username}?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  sendMessage: async (formData) => {\n    const response = await apiClient.post('/chat/send', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  getUserStatus: async (username) => {\n    const response = await apiClient.get(`/chat/status/${username}`);\n    return response.data;\n  },\n\n  setTyping: async (toUser, isTyping) => {\n    const response = await apiClient.post('/chat/typing', {\n      to_user: toUser,\n      is_typing: isTyping\n    });\n    return response.data;\n  },\n\n  getUnreadCount: async () => {\n    const response = await apiClient.get('/chat/unread-count');\n    return response.data;\n  },\n\n  deleteConversation: async (username) => {\n    const response = await apiClient.delete(`/chat/${username}`);\n    return response.data;\n  },\n\n  // Новые методы для работы с мэтчами\n  getMatchStatus: async (targetUser) => {\n    const response = await apiClient.get(`/chat/match-status/${targetUser}`);\n    return response.data;\n  },\n\n  checkMatchPermission: async (targetUser) => {\n    const response = await apiClient.get(`/chat/can-message/${targetUser}`);\n    return response.data;\n  }\n};\n\n// API методы для объявлений\nexport const adsAPI = {\n  getAds: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/ads?${params}`);\n    return response.data;\n  },\n\n  getMyAds: async (limit = 10, offset = 0) => {\n    const response = await apiClient.get(`/ads/my?limit=${limit}&offset=${offset}`);\n    return response.data;\n  },\n\n  createAd: async (adData) => {\n    // Создаем FormData для загрузки изображения\n    const formData = new FormData();\n    \n    // Добавляем текстовые поля\n    formData.append('title', adData.title);\n    formData.append('type', adData.type);\n    formData.append('description', adData.description);\n    formData.append('country', adData.country);\n    formData.append('city', adData.city);\n    \n    if (adData.price) {\n      formData.append('price', adData.price);\n    }\n    \n    if (adData.contact_info) {\n      formData.append('contact_info', adData.contact_info);\n    }\n    \n    // Добавляем изображение если оно есть\n    if (adData.image && adData.image instanceof File) {\n      formData.append('image', adData.image);\n    }\n    \n    // Отправляем как multipart/form-data\n    const response = await apiClient.post('/ads/create', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  updateAd: async (id, adData) => {\n    // Создаем FormData для загрузки изображения\n    const formData = new FormData();\n    \n    // Добавляем текстовые поля\n    formData.append('title', adData.title);\n    formData.append('type', adData.type);\n    formData.append('description', adData.description);\n    formData.append('country', adData.country);\n    formData.append('city', adData.city);\n    \n    if (adData.price) {\n      formData.append('price', adData.price);\n    }\n    \n    if (adData.contact_info) {\n      formData.append('contact_info', adData.contact_info);\n    }\n    \n    // Добавляем изображение если оно есть\n    if (adData.image && adData.image instanceof File) {\n      formData.append('image', adData.image);\n    }\n    \n    // Отправляем как multipart/form-data\n    const response = await apiClient.put(`/ads/${id}`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  deleteAd: async (id) => {\n    const response = await apiClient.delete(`/ads/${id}`);\n    return response.data;\n  },\n\n  respondToAd: async (id, message) => {\n    const response = await apiClient.post(`/ads/${id}/respond`, { message });\n    return response.data;\n  },\n\n  getAdTypes: async () => {\n    const response = await apiClient.get('/ads/types');\n    return response.data;\n  }\n};\n\n// API методы для администрирования\nexport const adminAPI = {\n  getDashboard: async () => {\n    const response = await apiClient.get('/admin/dashboard');\n    return response.data;\n  },\n\n  getUsers: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/admin/users?${params}`);\n    return response.data;\n  },\n\n  updateUser: async (login, userData) => {\n    const response = await apiClient.put(`/admin/users/${login}`, userData);\n    return response.data;\n  },\n\n  deleteUser: async (login) => {\n    const response = await apiClient.delete(`/admin/users/${login}`);\n    return response.data;\n  },\n\n  getMessages: async (filters = {}) => {\n    const params = new URLSearchParams(filters).toString();\n    const response = await apiClient.get(`/admin/messages?${params}`);\n    return response.data;\n  },\n\n  deleteMessage: async (id) => {\n    const response = await apiClient.delete(`/admin/messages/${id}`);\n    return response.data;\n  },\n\n  broadcast: async (message, targetVipType = 'ALL') => {\n    const response = await apiClient.post('/admin/broadcast', {\n      message,\n      target_viptype: targetVipType\n    });\n    return response.data;\n  },\n\n  getAnalytics: async (period = '30') => {\n    const response = await apiClient.get(`/admin/analytics?period=${period}`);\n    return response.data;\n  }\n};\n\n// API методы для уведомлений\nexport const notificationsAPI = {\n  getNotifications: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.priority) params.append('priority', filters.priority);\n    if (filters.unread !== undefined) params.append('unread', filters.unread);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n    \n    const response = await apiClient.get(`/notifications?${params.toString()}`);\n    return response.data;\n  },\n\n  // Новый метод для получения гостей профиля\n  getGuests: async (page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    \n    const response = await apiClient.get(`/notifications/guests?${params.toString()}`);\n    return response.data;\n  },\n\n  markAsRead: async (id) => {\n    const response = await apiClient.put(`/notifications/${id}/read`);\n    return response.data;\n  },\n\n  markAllAsRead: async () => {\n    const response = await apiClient.post('/notifications/mark-read');\n    return response.data;\n  },\n\n  deleteNotification: async (id) => {\n    const response = await apiClient.delete(`/notifications/${id}`);\n    return response.data;\n  },\n\n  deleteReadNotifications: async () => {\n    const response = await apiClient.post('/notifications/delete-read');\n    return response.data;\n  },\n\n  getNotificationTypes: async () => {\n    const response = await apiClient.get('/notifications/types');\n    return response.data;\n  },\n\n  getUnreadCount: async () => {\n    const response = await apiClient.get('/notifications/count');\n    return response.data;\n  }\n};\n\n// Новый API для настроек приватности\nexport const privacyAPI = {\n  getSettings: async () => {\n    const response = await apiClient.get('/users/privacy-settings');\n    return response.data;\n  },\n\n  updateSettings: async (settings) => {\n    const response = await apiClient.put('/users/privacy-settings', settings);\n    return response.data;\n  }\n};\n\n// API методы для подарков\nexport const giftsAPI = {\n  getGiftTypes: async () => {\n    const response = await apiClient.get('/gifts/types');\n    return response.data;\n  },\n\n  sendGift: async (giftData) => {\n    // Преобразуем параметры в формат, ожидаемый сервером\n    const { to_user, gift_type, message } = giftData;\n    const response = await apiClient.post('/gifts/send', {\n      target_user: to_user,\n      gift_type,\n      message: message || ''\n    });\n    return response.data;\n  },\n\n  getGiftHistory: async (type = 'all', limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      type,\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/gifts/history?${params.toString()}`);\n    return response.data;\n  },\n\n  getGiftStats: async (period = '30') => {\n    const response = await apiClient.get(`/gifts/stats?period=${period}`);\n    return response.data;\n  },\n\n  getReceivedGifts: async (limit = 20, offset = 0, targetUser = null) => {\n    console.log('getReceivedGifts called with:', { limit, offset, targetUser });\n    \n    if (targetUser) {\n      // Используем новый роут для получения подарков конкретного пользователя\n      const url = `/gifts/received/${targetUser}?limit=${limit}&offset=${offset}`;\n      console.log('Calling API:', url);\n      const response = await apiClient.get(url);\n      console.log('API response:', response.data);\n      return response.data;\n    } else {\n      // Для текущего пользователя используем старый роут\n      const params = new URLSearchParams({\n        limit: limit.toString(),\n        offset: offset.toString()\n      });\n      const url = `/gifts?${params.toString()}`;\n      console.log('Calling API:', url);\n      const response = await apiClient.get(url);\n      console.log('API response:', response.data);\n      return response.data;\n    }\n  },\n\n  getSentGifts: async (limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/gifts/sent?${params.toString()}`);\n    return response.data;\n  }\n};\n\n// API методы для клубов\nexport const clubsAPI = {\n  getClubs: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.type) params.append('type', filters.type);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.search) params.append('search', filters.search);\n    if (filters.limit) params.append('limit', filters.limit);\n    if (filters.offset) params.append('offset', filters.offset);\n    \n    const response = await apiClient.get(`/clubs?${params.toString()}`);\n    return response.data;\n  },\n\n  createClub: async (clubData) => {\n    const response = await apiClient.post('/clubs', clubData);\n    return response.data;\n  },\n\n  getClub: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}`);\n    return response.data;\n  },\n\n  updateClub: async (clubId, clubData) => {\n    const response = await apiClient.put(`/clubs/${clubId}`, clubData);\n    return response.data;\n  },\n\n  deleteClub: async (clubId) => {\n    const response = await apiClient.delete(`/clubs/${clubId}`);\n    return response.data;\n  },\n\n  joinClub: async (clubId, message = '') => {\n    const response = await apiClient.post(`/clubs/${clubId}/apply`, { message });\n    return response.data;\n  },\n\n  leaveClub: async (clubId) => {\n    const response = await apiClient.delete(`/clubs/${clubId}/leave`);\n    return response.data;\n  },\n\n  getMyClubs: async () => {\n    const response = await apiClient.get('/clubs/my');\n    return response.data;\n  },\n\n  getClubMembers: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}/members`);\n    return response.data;\n  },\n\n  getClubApplications: async (clubId) => {\n    const response = await apiClient.get(`/clubs/${clubId}/applications`);\n    return response.data;\n  },\n\n  manageApplication: async (clubId, applicationId, action, reason = '') => {\n    const response = await apiClient.put(`/clubs/${clubId}/applications/${applicationId}`, {\n      action,\n      reason\n    });\n    return response.data;\n  },\n\n  checkClubOwnership: async () => {\n    try {\n      const response = await apiClient.get('/clubs/my/ownership');\n      // Преобразуем ответ в ожидаемый формат\n      return {\n        isOwner: response.data.hasActiveClub,\n        club: response.data.club\n      };\n    } catch (error) {\n      // Если пользователь не владеет клубом или эндпоинт не существует\n      if (error.response?.status === 404 || error.response?.status === 500) {\n        return { isOwner: false, club: null };\n      }\n      throw error;\n    }\n  },\n\n  getEvents: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.city) params.append('city', filters.city);\n    if (filters.type) params.append('type', filters.type);\n    if (filters.search) params.append('search', filters.search);\n    if (filters.limit) params.append('limit', filters.limit);\n    \n    const response = await apiClient.get(`/club/user-events/events?${params.toString()}`);\n    return response.data;\n  },\n\n  joinEvent: async (eventId) => {\n    const response = await apiClient.post(`/club/user-events/events/${eventId}/join`);\n    return response.data;\n  },\n\n  leaveEvent: async (eventId) => {\n    const response = await apiClient.delete(`/club/user-events/events/${eventId}/leave`);\n    return response.data;\n  }\n};\n\n// API методы для подписок\nexport const subscriptionsAPI = {\n  getPlans: async () => {\n    const response = await apiClient.get('/subscriptions/pricing');\n    return response.data;\n  },\n\n  subscribe: async (planData) => {\n    const response = await apiClient.post('/subscriptions/create', planData);\n    return response.data;\n  },\n\n  getStatus: async () => {\n    const response = await apiClient.get('/subscriptions/current');\n    return response.data;\n  },\n\n  getHistory: async (limit = 20, offset = 0) => {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString()\n    });\n    const response = await apiClient.get(`/subscriptions/history?${params.toString()}`);\n    return response.data;\n  },\n\n  // FIX: cancel method - remove subscriptionId parameter\n  cancel: async (reason = '') => {\n    const response = await apiClient.post('/subscriptions/cancel', { reason });\n    return response.data;\n  },\n\n  usePromoCode: async (code) => {\n    const response = await apiClient.post('/subscriptions/validate-promo', { code });\n    return response.data;\n  },\n\n  getFeatures: async () => {\n    const response = await apiClient.get('/subscriptions/pricing');\n    return response.data;\n  },\n\n  changePlan: async (newPlanType, durationMonths = 1) => {\n    const response = await apiClient.post('/subscriptions/change-plan', {\n      new_plan_type: newPlanType,\n      duration_months: durationMonths\n    });\n    return response.data;\n  },\n  \n\n  \n  // ADD: get user balance\n  getBalance: async () => {\n    const response = await apiClient.get('/users/balance');\n    return response.data;\n  }\n};\n\n// API методы для рейтинга\nexport const ratingAPI = {\n  getUserRating: async (username) => {\n    const response = await apiClient.get(`/rating/${username}`);\n    return response.data;\n  },\n\n  rateUser: async (username, value) => {\n    const response = await apiClient.post(`/rating/${username}`, { value });\n    return response.data;\n  },\n\n  deleteRating: async (username) => {\n    const response = await apiClient.delete(`/rating/${username}`);\n    return response.data;\n  },\n\n  getTopUsers: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.period) params.append('period', filters.period);\n    if (filters.limit) params.append('limit', filters.limit.toString());\n    \n    const response = await apiClient.get(`/rating/top/users?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyGivenRatings: async (page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/rating/my/given?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyReceivedRatings: async (page = 1, limit = 20) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    const response = await apiClient.get(`/rating/my/received?${params.toString()}`);\n    return response.data;\n  },\n\n  // Новые методы для интеграции с frontend\n  getLeaderboard: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.period) params.append('period', filters.period);\n    if (filters.category) params.append('category', filters.category);\n    if (filters.city) params.append('city', filters.city);\n    if (filters.limit) params.append('limit', filters.limit.toString());\n    \n    const response = await apiClient.get(`/rating/leaderboard?${params.toString()}`);\n    return response.data;\n  },\n\n  getMyStats: async () => {\n    const response = await apiClient.get('/rating/my/stats');\n    return response.data;\n  }\n};\n\n// API методы для реакций\nexport const reactionsAPI = {\n  getObjectReactions: async (objectType, objectId) => {\n    const response = await apiClient.get(`/reactions/${objectType}/${objectId}`);\n    return response.data;\n  },\n\n  setReaction: async (objectType, objectId, reactionType, value = 1) => {\n    const response = await apiClient.post(`/reactions/${objectType}/${objectId}`, {\n      reaction_type: reactionType,\n      value\n    });\n    return response.data;\n  },\n\n  removeReaction: async (objectType, objectId) => {\n    const response = await apiClient.delete(`/reactions/${objectType}/${objectId}`);\n    return response.data;\n  },\n\n  getUserReactions: async (username, page = 1, limit = 20, objectType = null) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      limit: limit.toString()\n    });\n    if (objectType) {\n      params.append('object_type', objectType);\n    }\n    const response = await apiClient.get(`/reactions/user/${username}?${params.toString()}`);\n    return response.data;\n  },\n\n  getReactionStats: async (objectType, objectId) => {\n    const response = await apiClient.get(`/reactions/stats/${objectType}/${objectId}`);\n    return response.data;\n  }\n};\n\n// Расширенные API методы для загрузок\nexport const uploadsAPI = {\n  uploadAvatar: async (formData) => {\n    const response = await apiClient.post('/uploads/avatar', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    \n    // Обновляем кэш после успешной загрузки аватарки\n    if (response.data.success && response.data.filename) {\n      authAPI.updateUserCache({\n        ava: response.data.filename\n      });\n    }\n    \n    return response.data;\n  },\n\n  uploadPhotos: async (formData) => {\n    const response = await apiClient.post('/uploads/photos', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  uploadPrivatePhotos: async (formData) => {\n    const response = await apiClient.post('/uploads/private-photos', formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    });\n    return response.data;\n  },\n\n  deletePhoto: async (filename, type = 'photos') => {\n    const response = await apiClient.delete(`/uploads/${type}/${filename}`);\n    return response.data;\n  },\n\n  getUploadProgress: (onProgress) => {\n    // Для отслеживания прогресса загрузки\n    return {\n      onUploadProgress: (progressEvent) => {\n        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n        if (onProgress) onProgress(progress);\n      }\n    };\n  }\n};\n\n// Утилиты\nexport const apiUtils = {\n  isAuthenticated: () => !!getToken(),\n  \n  getCurrentUser: authAPI.getCurrentUser,\n  \n  logout: authAPI.logout,\n\n  // Принудительное обновление данных пользователя\n  refreshCurrentUser: async () => {\n    return await authAPI.fetchCurrentUserData();\n  },\n\n  // Обновление кэша пользователя\n  updateUserCache: authAPI.updateUserCache,\n\n  // Очистка кэша пользователя\n  clearUserCache,\n\n  // Создание FormData для загрузки файлов\n  createFormData: (data) => {\n    const formData = new FormData();\n    Object.keys(data).forEach(key => {\n      if (data[key] !== null && data[key] !== undefined) {\n        if (Array.isArray(data[key])) {\n          data[key].forEach(item => formData.append(key, item));\n        } else {\n          formData.append(key, data[key]);\n        }\n      }\n    });\n    return formData;\n  },\n\n  // Обработка ошибок API\n  handleError: (error) => {\n    if (error.response?.data?.message) {\n      return error.response.data.message;\n    }\n    if (error.message) {\n      return error.message;\n    }\n    return 'Произошла неизвестная ошибка';\n  },\n\n  // Форматирование даты\n  formatDate: (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('ru-RU', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  },\n\n  // Форматирование времени \"назад\"\n  formatTimeAgo: (dateString) => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInSeconds = Math.floor((now - date) / 1000);\n\n    if (diffInSeconds < 60) return 'только что';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} мин назад`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} ч назад`;\n    if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)} дн назад`;\n    \n    return apiUtils.formatDate(dateString);\n  },\n\n  // Проверка VIP статуса\n  isVip: (user) => {\n    return user?.vipType && user.vipType !== 'BASE';\n  },\n\n  // Проверка PREMIUM статуса\n  isPremium: (user) => {\n    return user?.vipType === 'PREMIUM';\n  },\n\n  // Получение цвета VIP бейджа\n  getVipBadgeColor: (vipType) => {\n    switch (vipType) {\n      case 'VIP': return '#ffd700';\n      case 'PREMIUM': return '#9b59b6';\n      default: return null;\n    }\n  },\n\n  // Получение иконки VIP бейджа\n  getVipBadgeIcon: (vipType) => {\n    switch (vipType) {\n      case 'VIP': return '👑';\n      case 'PREMIUM': return '💎';\n      default: return null;\n    }\n  },\n\n  // Получение информации о пользователе\n  getUserInfo: async (login) => {\n    try {\n      const response = await apiClient.get(`/users/profile/${login}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user info:', error);\n      return null;\n    }\n  }\n};\n\n// Экспорт всех API групп для удобства\nexport const api = {\n  auth: authAPI,\n  users: usersAPI,\n  swipe: swipeAPI,\n  catalog: catalogAPI,\n  chat: chatAPI,\n  ads: adsAPI,\n  admin: adminAPI,\n  notifications: notificationsAPI,\n  privacy: privacyAPI,\n  gifts: giftsAPI,\n  clubs: clubsAPI,\n  subscriptions: subscriptionsAPI,\n  rating: ratingAPI,\n  reactions: reactionsAPI,\n  uploads: uploadsAPI,\n  utils: apiUtils\n};\n\nexport default apiClient;"],"names":["_ref","children","_useState","useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","isValidating","setIsValidating","location","useLocation","useEffect","checkAuth","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_t2","_context","prev","next","apiUtils","abrupt","refreshCurrentUser","console","warn","logout","error","finish","stop","apply","arguments","handleAuthLogout","handleStorageChange","window","addEventListener","removeEventListener","pathname","_jsx","className","Navigate","to","replace","state","from","_uploadAvatar","_changePassword","_updateProfile2","_uploadClubAvatar","_createApplication","_getUserApplications","_getPublicClubs","_searchEvents","_getRecommendations","_getUserEvents","_updateEventStatus","_leaveEvent","_joinEvent","_getPublicEvent","_getPublicEvents","_getBotStats","_updateStats","_generateRecommendations","_sendReminders","_sendAutoInvites","_getBotLogs","_deleteBot","_toggleBot","_updateBotSettings","_createBot","_getBot","_getBots","_getAnalytics","_getAdStats","_deleteAd","_updateAd","_createAd","_getAd","_getAds","_deleteEventImage","_uploadEventImages","_uploadEventAvatar","_removeParticipant2","_inviteParticipants","_cancelApplication","_getMyApplications","_applyToEvent","_removeParticipant","_updateParticipantStatus","_getEventParticipants","_deleteEvent","_updateEvent","_createEvent","_getEvent","_getEvents","_updateProfile","_getProfile","_logout","_login","_register","API_BASE_URL","apiCall","endpoint","options","token","config","response","errorMessage","_args","length","undefined","localStorage","getItem","_objectSpread","headers","concat","fetch","sent","ok","json","message","status","statusText","Error","_x","clubApi","_clubApi","register","_callee2","clubData","_context2","method","body","JSON","stringify","_x2","login","_callee3","credentials","_context3","setItem","_x3","_callee4","_context4","removeItem","getProfile","_callee5","_context5","updateProfile","_callee6","profileData","_context6","_x4","getEvents","_callee7","queryString","_args7","_context7","URLSearchParams","toString","getEvent","_callee8","eventId","_context8","_x5","createEvent","_callee9","eventData","_context9","_x6","updateEvent","_callee0","_context0","_x7","_x8","deleteEvent","_callee1","_context1","_x9","getEventParticipants","_callee10","_context10","_x0","updateParticipantStatus","_callee11","participantId","_context11","_x1","_x10","_x11","removeParticipant","_callee12","_context12","_x12","_x13","applyToEvent","_callee13","applicationData","_context13","_x14","_x15","getMyApplications","_callee14","_context14","cancelApplication","_callee15","_context15","_x16","inviteParticipants","_callee16","userIds","_context16","user_ids","_x17","_x18","_defineProperty","_callee17","userId","_context17","_x19","_x20","_callee18","formData","_context18","_x21","_x22","_callee19","_context19","_x23","_x24","_callee20","filename","_context20","_x25","_x26","_callee21","_args21","_context21","_callee22","adId","_context22","_x27","_callee23","adData","_context23","_x28","_callee24","_context24","_x29","_x30","_callee25","_context25","_x31","_callee26","_context26","_callee27","type","period","_args27","_context27","_callee28","_context28","_callee29","botId","_context29","_x32","_callee30","botData","_context30","_x33","_callee31","settings","_context31","_x34","_x35","_callee32","_context32","_x36","_callee33","_context33","_x37","_callee34","_context34","_x38","_callee35","_context35","_x39","_callee36","_context36","_callee37","_context37","_callee38","_context38","_callee39","_context39","_callee40","_args40","_context40","_callee41","_context41","_x40","_callee42","_context42","_x41","_callee43","_context43","_x42","_callee44","_context44","_x43","_x44","_callee45","_context45","_callee46","_context46","_callee47","query","params","_args47","_context47","q","_x45","_callee48","_args48","_context48","_callee49","_context49","_callee50","clubId","_args50","_context50","club_id","_x46","_callee51","_context51","_x47","_callee52","_context52","_x48","_callee53","passwordData","result","_t3","_context53","log","_x49","_callee54","_context54","_x50","clubAuth","_callee55","_t4","_context55","_callee56","_context56","_callee57","_context57","_callee58","_context58","_callee59","_context59","_callee60","_context60","_callee61","_context61","_callee62","_context62","_callee63","_context63","_callee64","_context64","_callee65","role","_context65","_callee66","_context66","authenticated","_jsxs","style","display","justifyContent","alignItems","height","background","width","border","borderTop","borderRadius","animation","CheckboxContainer","styled","label","_templateObject","_taggedTemplateLiteral","CheckboxInput","input","_templateObject2","CheckboxLabel","span","_templateObject3","checked","onChange","_ref$disabled","disabled","name","props","_objectWithoutProperties","_excluded","TopUpContainer","div","TopUpHeader","TopUpTitle","h2","TopUpSubtitle","p","_templateObject4","AmountSection","_templateObject5","AmountLabel","_templateObject6","AmountInput","_templateObject7","QuickAmounts","_templateObject8","QuickAmountButton","button","_templateObject9","PaymentMethodSection","_templateObject0","PaymentMethodLabel","_templateObject1","PaymentMethodOption","_templateObject10","PaymentMethodInfo","_templateObject11","PaymentMethodName","_templateObject12","PaymentMethodDescription","_templateObject13","PaymentMethodIcon","_templateObject14","CardPreview","_templateObject15","CardLogo","_templateObject16","CardNumberInput","_templateObject17","CardDetails","_templateObject18","CardDetail","_templateObject19","CardDetailLabel","_templateObject20","CardDetailInput","_templateObject21","CardCvvSection","_templateObject22","CardCvvLabel","_templateObject23","CardCvvInput","_templateObject24","SubmitButton","_templateObject25","h3","_templateObject26","_templateObject27","_templateObject28","_templateObject29","SuccessMessage","_templateObject30","ErrorMessage","_templateObject31","onClose","_ref$currentBalance","currentBalance","onSuccess","amount","setAmount","cardNumber","setCardNumber","_useState5","_useState6","cardExpiry","setCardExpiry","_useState7","_useState8","cardCvv","setCardCvv","_useState9","_useState0","cardName","setCardName","_useState1","_useState10","isSubmitting","setIsSubmitting","_useState11","_useState12","isSuccess","setIsSuccess","_useState13","_useState14","setError","handleSubmit","e","preventDefault","parseFloat","setTimeout","CheckIcon","onSubmit","placeholder","value","numValue","isNaN","handleAmountChange","target","min","step","map","quickAmount","onClick","handleQuickAmount","CreditCardIcon","v","matches","match","parts","i","len","push","substring","join","formatCardNumber","maxLength","CropperContainer","ImagePreview","$height","$mobileHeight","CropArea","CropHandle","$cursor","Controls","Instructions","isOpen","imageFile","onCrop","_ref$minSize","aspectRatio","minSize","x","y","cropArea","setCropArea","isDragging","setIsDragging","dragStart","setDragStart","isResizing","setIsResizing","resizeHandle","setResizeHandle","imageSize","setImageSize","imageUrl","setImageUrl","containerSize","setContainerSize","_useState15","_useState16","isMobile","setIsMobile","imageRef","useRef","containerRef","checkMobile","innerWidth","url","URL","createObjectURL","img","Image","onload","containerWidth","containerHeight","maxContainerSize","Math","max","cropSize","src","revokeObjectURL","getEventCoordinates","useCallback","touches","clientX","clientY","handleStart","stopPropagation","coords","handleMove","newX","newY","maxX","maxY","deltaX","deltaY","newWidth","newHeight","size","handleEnd","handleGlobalMouseMove","handleGlobalMouseUp","handleGlobalTouchMove","handleGlobalTouchEnd","preventScroll","document","passive","overflow","cropAreaElement","current","handleTouchStart","handleTouchStartTopLeft","handleTouchStartTopRight","handleTouchStartBottomLeft","handleTouchStartBottomRight","handles","querySelectorAll","forEach","handle","index","handler","position","handleCrop","canvas","createElement","ctx","getContext","scaleX","scaleY","sourceX","sourceY","sourceWidth","sourceHeight","drawImage","toBlob","blob","croppedFile","File","handleReset","Modal","ModalContent","$maxWidth","ModalHeader","Button","$variant","CloseIcon","ref","alt","draggable","left","top","onMouseDown","EyeIcon","viewBox","fill","stroke","strokeWidth","d","cx","cy","r","EyeOffIcon","x1","y1","x2","y2","SearchIcon","SendIcon","points","HeartIcon","MessageIcon","PlusIcon","EditIcon","BellIcon","TrashIcon","GiftIcon","StarIcon","UsersIcon","CrownIcon","ChevronUpIcon","ChevronDownIcon","TrophyIcon","PageContainer","$gradient","theme","colors","$noPadding","ContentCard","$padding","$mobilePadding","LogoSection","Logo","$size","$fontSize","$mobileSize","$mobileFontSize","Title","h1","Subtitle","SectionTitle","Form","form","FormGroup","Label","$minWidth","InputWrapper","Input","Select","select","TextArea","textarea","$minHeight","IconButton","ErrorText","Card","Avatar","$src","$bgColor","$border","$clickable","$online","FlexContainer","$align","$justify","$gap","$direction","$wrap","$mobileDirection","$mobileGap","Grid","$columns","$mobileColumns","LoadingSpinner","ThumbsUpIcon","$progress","ThumbsDownIcon","transform","LockIcon","rx","ry","BREAKPOINTS","MEDIA","mobile","mobileLarge","tablet","tabletLarge","desktopMobile","desktop","desktopLarge","desktopXL","maxMobile","parseInt","maxMobileLarge","maxTablet","maxTabletLarge","maxDesktopMobile","maxDesktop","maxDesktopLarge","mobileOnly","tabletOnly","desktopOnly","landscape","portrait","retina","HEADER_SIZES","tiny","padding","fontSize","gap","linkPadding","minWidth","HomeIcon","ChatIcon","AdsIcon","AdminIcon","MenuIcon","ProfileIcon","SettingsIcon","LogoutIcon","NavContainer","nav","NavContent","LogoContainer","LogoIcon","LogoText","NavLinks","NavLink","Link","UserSection","UserMenuButton","VipIndicator","$color","DropdownMenu","$show","DropdownItem","MobileMenuButton","MobileMenu","attrs","MobileNavLink","NotificationBadge","NotificationCounter","unreadCountData","useQuery","notificationsAPI","getUnreadCount","refetchInterval","retry","enabled","onError","_error$response","data","unreadCount","total_unread","navigate","useNavigate","queryClient","useQueryClient","showUserMenu","setShowUserMenu","showMobileMenu","setShowMobileMenu","currentUser","setCurrentUser","userMenuRef","fetchUserData","user","updatedUser","_t","getCurrentUser","ava","event","key","refreshUserData","refreshNavigation","handleLogout","confirm","clear","toast","success","isActiveRoute","path","handleClickOutside","contains","mobileMenuButton","closest","mobileMenuContent","textDecoration","startsWith","is_admin","css","charAt","toUpperCase","isVip","getVipBadgeColor","vipType","getVipBadgeIcon","heartFloat","keyframes","sparkleAnimation","PopupOverlay","PopupContainer","motion","PopupHeader","PopupTitle","h4","PopupContent","UserInfo","UserDetails","UserName","UserSubtext","PopupActions","ChatButton","DismissButton","CloseButton","ProgressBar","$duration","_notification$data","notification","onStartChat","onViewProfile","_ref$autoCloseDelay","autoCloseDelay","isVisible","setIsVisible","matchUser","match_user","from_user","userData","from_user_data","timer","handleClose","clearTimeout","createPortal","AnimatePresence","initial","opacity","scale","animate","exit","transition","duration","bounce","avatar","NotificationContext","createContext","NotificationProvider","activePopups","setActivePopups","Date","now","lastChecked","setLastChecked","setUnreadCount","isMounted","setIsMounted","isRouterReady","setIsRouterReady","handleAuthChange","_onSuccess","_useQuery2","getNotifications","unread","limit","notifications","checkForNewMatchNotifications","_error$response2","recentTime","newMatchNotifications","_iterator","_step","_yield$import","chatAPI","filter","notificationTime","created_at","getTime","find","popup","id","_createForOfIteratorHelper","s","n","done","getMatchStatus","hasMatch","showMatchPopup","f","_ref3","_yield$import2","timestamp","_toConsumableArray","removePopup","notificationId","markNotificationAsRead","_ref4","markAsRead","showCustomMatchPopup","_ref5","matchData","_yield$import3","_t5","username","title","toISOString","priority","contextValue","Provider","MatchPopup","href","isLoading","setIsLoading","showPassword","setShowPassword","_useForm","useForm","errors","formState","React","checkExistingAuth","authAPI","password","handleError","htmlFor","autoComplete","required","minLength","right","color","marginTop","fontWeight","paddingTop","textAlign","marginBottom","boxShadow","onMouseEnter","onMouseLeave","SelectorContainer","DropdownContainer","LoadingContainer","NoResultsText","_ref$value","onSelect","_ref$placeholder","_ref$required","setIsOpen","searchValue","setSearchValue","countries","setCountries","filteredCountries","setFilteredCountries","selectedIndex","setSelectedIndex","inputRef","dropdownRef","fetchCountries","filtered","country","toLowerCase","includes","handleCountrySelect","selectedElement","scrollIntoView","block","behavior","newValue","onFocus","onKeyDown","_inputRef$current","blur","DisabledText","_ref$country","cities","setCities","filteredCities","setFilteredCities","fetchCities","city","selectedCountry","encodeURIComponent","handleCitySelect","isDisabledByCountry","isFullyDisabled","_Fragment","region","LocationContainer","LocationRow","$layout","ValidationInfo","$valid","_ref$countryValue","countryValue","_ref$cityValue","cityValue","onCountryChange","onCityChange","onCountrySelect","onCitySelect","onLocationChange","countryError","cityError","_ref$layout","layout","_ref$countryLabel","countryLabel","_ref$cityLabel","cityLabel","_ref$countryPlacehold","countryPlaceholder","_ref$cityPlaceholder","cityPlaceholder","_ref$showValidation","showValidation","isValidLocation","setIsValidLocation","CountrySelector","isComplete","countryData","CitySelector","cityData","fullData","RegisterContainer","RegisterCard","StepIndicator","Step","$active","FormSection","PasswordToggle","SecondaryButton","FormRow","LoginLink","StatusOptions","StatusOption","EmailCodeSection","CodeInputSection","CodeTimer","_errors$country","_errors$city","currentStep","setCurrentStep","selectedStatus","setSelectedStatus","emailCode","setEmailCode","isCodeSent","setIsCodeSent","codeTimer","setCodeTimer","showConfirmPassword","setShowConfirmPassword","formProgress","setFormProgress","defaultValues","watch","setValue","getValues","clearErrors","email","allFields","requiredFields","Array","isArray","progress","field","interval","setInterval","clearInterval","sendCodeMutation","useMutation","sendCode","registerMutation","smokingOptions","alkoOptions","searchStatus","searchAge","canProceed","manBirthday","womanBirthday","individualData","date","manHeight","womanHeight","weight","manWeight","womanWeight","smoking","manSmoking","womanSmoking","alko","manAlko","womanAlko","locationString","submitData","mail_code","about","search_status","search_age","info","individual","mutate","pattern","inputMode","slice","letterSpacing","fontFamily","validate","confirmPassword","range","today","birthDate","getFullYear","LocationSelector","flexDirection","option","flexWrap","DislikeIcon","SuperlikeIcon","BackIcon","LocationIcon","InfoIcon","HomeContainer","Header","HeaderContent","WelcomeText","SwipeContainer","ProfileCard","ProfileImage","ProfileOverlay","ProfileDetails","ActionButtons","ActionButton","NoMoreProfiles","SwipeHint","ClickableUsername","_currentUser$login","_onSuccess2","currentProfile","setCurrentProfile","showHint","setShowHint","showSuperlikeModal","setShowSuperlikeModal","superlikeMessage","setSuperlikeMessage","swipeDirection","setSwipeDirection","profileQueue","setProfileQueue","isPreloading","setIsPreloading","profileHistory","setProfileHistory","historyIndex","setHistoryIndex","_useState17","_useState18","profileShowKey","setProfileShowKey","_useState19","_useState20","isRestoring","setIsRestoring","context","useContext","useNotifications","saveProfilesState","stateToSave","sessionStorage","clearProfilesState","preloadProfiles","count","newProfiles","oldQueueLength","currentQueueLength","swipeAPI","getProfilesBatch","profile","distance","age","viptype","isCouple","getNextProfile","profileQueueLength","historyLength","newHistory","nextProfile","newCurrentProfile","newQueueLength","newProfileShowKey","_useQuery","refetch","likeMutation","targetUser","source","like","match_created","checkExistingMatch","dislikeMutation","dislike","superlikeMutation","superlike","savedState","parsedState","parse","restoreProfilesState","handleAuthLogin","handleProfileUpdate","handleLocationChange","handleFiltersChange","handleSubscriptionChange","handlePrivacyChange","handleNotificationsChange","handleLanguageChange","handleThemeChange","handleMessageNotificationsChange","handleLikeNotificationsChange","handleMatchNotificationsChange","handleVisitNotificationsChange","handleCommentNotificationsChange","handleGiftNotificationsChange","handleEventNotificationsChange","handleClubNotificationsChange","handleRatingNotificationsChange","handleReportNotificationsChange","handleModerationNotificationsChange","handleSystemNotificationsChange","handleCloseSuperlikeModal","mode","drag","dragConstraints","onDragEnd","offset","rotateY","rotate","stiffness","whileDrag","onLoad","partnerData","ages","getAgeFromDate","compatibility","round","totalScore","marginLeft","split","place","trim","previousProfile","lineHeight","CatalogContainer","FiltersContainer","FilterSection","FilterLabel","CheckboxGroup","CheckboxItem","InputGroup","InputField","FilterActions","ProfilesGrid","ProfileAvatar","ProfileInfo","NoResults","Pagination","filters","setFilters","statuses","availableFilters","setAvailableFilters","catalogAPI","getFilters","getProfiles","profilesData","handlePageChange","newOffset","scrollTo","availableCities","fontStyle","handleStatusChange","variant","users","_user$login","percentage","pagination","total","hasMore","RatingContainer","RatingHeader","RatingStats","VotingButtons","$userVote","$percentage","DisabledMessage","rating","userVote","canVote","isVoting","setIsVoting","voteMutation","ratingAPI","rateUser","onMutate","invalidateQueries","onSettled","deleteVoteMutation","deleteRating","handleVote","_rating$total_rating","total_rating","_rating$total_votes","total_votes","_rating$positive_vote","positive_votes","_rating$negative_vote","negative_votes","_rating$percentage_po","percentage_positive","whileHover","whileTap","CommentsContainer","CommentsHeader","CommentForm","CommentsList","CommentItem","EditForm","EmptyState","LoadMoreButton","_commentsData$paginat","commentText","setCommentText","editingComment","setEditingComment","editText","setEditText","page","setPage","usersAPI","getPhotoComments","keepPreviousData","commentsData","createCommentMutation","_typeof","createPhotoComment","updateCommentMutation","updatePhotoComment","commentId","deleteCommentMutation","deletePhotoComment","_error$response3","handleUpdateComment","canEditComment","comment","_comment$user","canDeleteComment","_comment$user2","comments","totalComments","trimmed","trimmedLength","commentData","_comment$user3","_comment$user4","_comment$user5","_comment$user6","_comment$user7","_usersAPI$utils","_usersAPI$utils$forma","utils","formatTimeAgo","call","toLocaleDateString","is_edited","text","handleEditComment","$isPublic","_ref$isOwnProfile","isOwnProfile","isPublic","setIsPublic","includePrivate","setIncludePrivate","getProfileComments","createProfileComment","updateProfileComment","deleteProfileComment","_comment$author","author","_comment$author2","cursor","_comment$author3","_comment$author4","_comment$author5","_comment$author6","_comment$author7","is_public","ReactionsContainer","ReactionsBar","ReactionButton","$isActive","$activeColor","$textColor","ReactionsStats","ReactionsModal","ReactionsModalContent","ReactionsGrid","ReactionOption","REACTION_CONFIG","emoji","textColor","love","laugh","wow","sad","angry","_REACTION_CONFIG$user","_REACTION_CONFIG$user2","_REACTION_CONFIG$user3","objectType","objectId","_ref$showStats","showStats","showModal","setShowModal","reactionsAPI","getObjectReactions","reactionsData","setReactionMutation","setReaction","reactionType","removeReactionMutation","removeReaction","handleReactionClick","userReaction","user_reaction","closeModal","reactions","totalReactions","topReactions","Object","entries","sort","a","_ref8","_REACTION_CONFIG$reac","_REACTION_CONFIG$reac2","_REACTION_CONFIG$reac3","_ref9","_ref0","_REACTION_CONFIG$reac4","_ref1","margin","_ref10","_ref11","CameraIcon","GIFT_CONFIG","cost","ProfileContainer","ProfileHeader","AvatarSection","AvatarOverlay","ActionsContainer","TabsContainer","Tab","TabContent","RatingSection","InfoSection","InfoItem","ImageGallery","ImageCard","ImageOverlay","UploadArea","HiddenInput","GiftGrid","GiftOption","$selected","GiftCard","BalanceSection","BalanceTitle","BalanceAmount","BalanceButton","VipAdSection","VipAdTitle","VipAdText","VipAdButton","GiftEmoji","GiftSender","GiftMessage","AvatarHint","_templateObject32","_profile$login","_privacySettings$priv","_privacySettings$priv2","_privacySettings$priv3","_privacySettings$priv4","_privacySettings$priv5","_privacySettings$priv6","_privacySettings$priv7","_privacySettings$noti","_privacySettings$noti2","_privacySettings$noti3","_privacySettings$noti4","_privacySettings$noti5","useParams","tabFromUrl","search","get","activeTab","setActiveTab","showImageModal","setShowImageModal","selectedImage","setSelectedImage","showGiftModal","setShowGiftModal","selectedGift","setSelectedGift","giftMessage","setGiftMessage","targetLogin","hasLogin","hasTargetLogin","giftsAPI","getReceivedGifts","_useQuery$data","receivedGiftsData","gifts","privacyAPI","getSettings","privacySettings","subscriptionStatus","avatarInputRef","imagesInputRef","showAvatarCropper","setShowAvatarCropper","avatarFileToCrop","setAvatarFileToCrop","String","_useQuery3","_useQuery4","_error$response4","_error$response5","matchStatus","_useQuery5","subscriptionsAPI","getStatus","_error$response6","_error$response7","isLoadingSubscription","values","updateProfileMutation","uploadAvatarMutation","uploadAvatar","uploadImageMutation","uploadImages","deleteImageMutation","deleteImage","sendGiftMutation","sendGift","privacyMutation","updateSettings","visitMutation","registerVisit","handleSendGift","mutateAsync","to_user","gift_type","handlePrivacySubmit","currentSettings","getQueryData","privacy","hasUserLiked","userHasLiked","_avatarInputRef$curre","click","accept","file","files","balance","RatingDisplay","onRatingSubmit","has_subscription","plan","borderColor","expires_at","auto_renew","gridTemplateColumns","manDate","womanDate","gift","_GIFT_CONFIG$gift$gif","_GIFT_CONFIG$gift$gif2","ProfileComments","Reactions","_imagesInputRef$curre","multiple","FormData","append","images","image","handleImageClick","imageId","objectFit","PhotoComments","g","Set","_GIFT_CONFIG$gift$gif3","_GIFT_CONFIG$gift$gif4","senderLogin","Checkbox","anonymous_visits","newSettings","setQueryData","show_online_status","show_last_seen","allow_messages","allow_gifts","allow_ratings","allow_comments","new_matches","messages","likes","profile_visits","maxHeight","AvatarCropper","AttachIcon","MoreIcon","ChatContainer","ChatSidebar","$selectedChat","ChatHeader","SearchContainer","SearchInput","ChatsContainer","ChatItem","ChatWindow","ChatWindowHeader","MessagesContainer","MessageGroup","$isOwn","Message","TypingIndicator","MessageInputWrapper","$disabled","MessageInput","InputContainer","TextInput","$primary","NewChatWelcome","MatchStatusBanner","$status","_chats$conversations","_forceVirtualChat$com","_forceVirtualChat$com2","_forceVirtualChat$com3","_selectedChatData$com","_selectedChatData$com2","_selectedChatData$com3","_selectedChatData$com4","chatId","selectedChat","setSelectedChat","messageText","setMessageText","isTyping","searchTerm","setSearchTerm","setMatchStatus","messagesEndRef","fileInputRef","lastSelectedChatRef","getConversations","refetchOnWindowFocus","staleTime","chats","chatsError","chatsLoading","existingChat","conversations","chat","companion","virtualChat","last_message","last_message_date","last_message_by","unread_count","has_images","companion_info","online","forceVirtualChat","allChats","userInfo","getMessages","match_status","_useQuery2$data","messagesError","messagesLoading","getUserInfo","_virtualChat$companio","_virtualChat$companio2","_virtualChat$companio3","sendMessageMutation","sendMessage","match_warning","warning","sendFileMutation","_messagesEndRef$curre","filteredChats","handleChatSelect","chatUser","handleSendMessage","canChat","icon","formatTime","toLocaleTimeString","hour","minute","selectedChatData","reload","_chat$companion_info","_chat$companion_info2","_chat$companion_info3","isOwn","by_user","prevMessage","idx","maxWidth","onKeyPress","shiftKey","rows","_fileInputRef$current","FilterIcon","CalendarIcon","AdsContainer","Filters","FiltersTitle","FiltersGrid","AdsGrid","AdCard","AdImage","AdTypeBadge","AdContent","AdMeta","AdTitle","AdDescription","AdActions","NoAds","StatsCard","ImageUpload","onImageChange","preview","setPreview","reader","FileReader","readAsDataURL","_errors$image","editingAd","setEditingAd","clubOwnership","clubsAPI","checkClubOwnership","reset","adsAPI","getAds","adsResponse","ads","useMemo","ad","_ad$author","_ad$author2","author_avatar","description","createAdMutation","createAd","updateAdMutation","updateAd","deleteAdMutation","deleteAd","handleCloseModal","adTypes","baseTypes","hasActiveClub","getTypeLabel","_adTypes$find2","t","stats","myAds","parties","meetings","_adTypes$find","dateString","day","month","year","authorLogin","handleEdit","flex","imageValidation","price","contact_info","AdminContainer","AdminHeader","primary","spacing","lg","fonts","sizes","xlarge","xs","AdminContent","shadow","md","CardTitle","large","StatsGrid","StatCard","textLight","small","Table","table","sm","primaryDark","StatusBadge","medium","_stats$recent_activit","userFilters","setUserFilters","adsFilters","setAdsFilters","adminAPI","getStats","getUsers","usersLoading","_useQuery3$data","adsLoading","_useQuery4$data","getReports","reports","userActionMutation","action","userAction","variables","ban","unban","delete","verify","adActionMutation","adAction","approve","reject","reportActionMutation","reportId","reportAction","handleUserAction","handleAdAction","formatDate","total_users","active_users","total_ads","pending_reports","recent_activity","activity","banned","verified","last_seen","report","target_user","reason","heartBeat","sparkle","MatchContainer","MatchHeader","MatchIcon","MatchTitle","MatchSubtitle","MatchContent","HeartConnector","MatchActions","TimeStamp","diffMinutes","onDismiss","_ref$isAnimatingOut","isAnimatingOut","handleViewProfile","floor","getNotificationColor","visit","club","subscription","admin","system","photo","invitation","reminder","promotion","NotificationsContainer","NotificationsHeader","FilterTabs","FilterTab","$count","BulkActions","NotificationsList","NotificationItem","$isRead","NotificationContent","NotificationIcon","NotificationDetails","NotificationTitle","NotificationMessage","NotificationMeta","NotificationTime","NotificationPriority","$priority","NotificationActions","ProfileButton","GuestsList","GuestItem","GuestContent","GuestAvatar","GuestDetails","GuestName","GuestInfo","GuestStatus","GuestLocation","GuestTime","GuestActions","setFilter","animatingOut","setAnimatingOut","notificationsData","getGuests","guestsData","guestsLoading","payload","atob","cacheTime","guests","filteredNotifications","notif","is_read","countByType","reduce","acc","currentUnreadCount","markAsReadMutation","oldData","markAllAsReadMutation","markAllAsRead","deleteNotificationMutation","deleteNotification","deleteReadNotificationsMutation","deleteReadNotifications","canViewProfile","handleMarkAsRead","add","newSet","filterTabs","tabs","splice","vipOnly","tab","guest","visitor","nextSibling","visited_at","_notification$data2","IconComponent","MatchNotification","has","ClubsContainer","FilterRow","ClubCard","ClubHeader","$avatarUrl","ClubContent","ClubTitle","ClubDescription","ClubMeta","ClubStats","ClubType","$isPrivate","_selectedEventDetails","_selectedEventDetails2","_selectedEventDetails3","_selectedEventDetails4","_selectedEventDetails5","_selectedEvent$club","_selectedEvent$club2","_selectedEvent$partic","showDetailsModal","setShowDetailsModal","selectedClub","setSelectedClub","showEventDetailsModal","setShowEventDetailsModal","selectedEventDetails","setSelectedEventDetails","showJoinEventModal","setShowJoinEventModal","selectedEvent","setSelectedEvent","searchQuery","setSearchQuery","cityFilter","setCityFilter","typeFilter","setTypeFilter","getClubs","clubsData","isLoadingClubs","eventsData","isLoadingEvents","joinEventMutation","joinEvent","handleJoinEvent","confirmJoinEvent","filteredClubs","clubs","eventsList","events","handleClubClick","is_private","current_members","membership_fee","_event$club","_event$club2","_event$participants","_event$user_participa2","_event$user_participa3","_event$user_participa4","handleEventClick","time","participants","max_participants","_event$user_participa","user_participation","is_participating","max_members","website","rel","rules","tags","tag","event_type","open","parentElement","innerHTML","paddingLeft","SubscriptionsContainer","PlanCard","$featured","PlanIcon","PlanTitle","PlanPrice","FeaturesList","ul","FeatureItem","li","CurrentStatusCard","$statusColor","HistoryCard","PromoSection","PLAN_CONFIGS","VIP","features","PREMIUM","featured","_subscriptionHistory$","showPaymentModal","setShowPaymentModal","selectedPlan","setSelectedPlan","promoCode","setPromoCode","isLoadingStatus","getHistory","subscriptionHistory","isLoadingHistory","subscribeMutation","subscribe","promoMutation","cancel","usePromoCode","discount","handleCancel","prompt","planType","feature","handleSubscribe","getStatusColor","getStatusIcon","payments","payment","_payment$plan","subscriptionData","subscription_type","duration_months","payment_method","auto_renewal","promo_code","RatingsContainer","RankingCard","$rank","RankBadge","RatingValue","FilterContainer","VipBadge","$vipLevel","_leaderboard$users","_myStats$rating_histo","category","getLeaderboard","leaderboard","isLoadingLeaderboard","getMyStats","myStats","isLoadingStats","getTopUsers","topUsers","isLoadingTop","handleFilterChange","renderChangeIcon","change","delay","rank","vip_level","profile_views","likes_received","rating_score","rating_change","abs","current_rating","current_position","max_rating","rating_history","overflowY","entry","borderBottom","categoryData","most_active","most_popular","most_gifts","userIndex","score","ContentWrapper","queryKey","queryFn","api","Navigation","BalanceTopUp","whiteSpace","_ref$aspectRatio","cropWidth","cropHeight","cropParams","UploadContainer","UploadIcon","UploadText","FileInput","PreviewContainer","PreviewItem","PreviewImage","RemoveButton","UploadButton","onUpload","onRemove","_ref$existingImages","existingImages","_ref$maxFiles","maxFiles","selectedFiles","setSelectedFiles","isUploading","setIsUploading","handleFileSelect","imageFiles","handleUpload","handleRemoveExisting","onDragOver","onDragLeave","onDrop","dataTransfer","_","removeSelectedFile","onSave","onCancel","age_restriction","dress_code","special_requirements","duration_hours","setFormData","loading","setLoading","setErrors","selectedImageFile","setSelectedImageFile","eventImages","setEventImages","eventDate","toTimeString","handleChange","_e$target","validateForm","newErrors","keys","handleAvatarCrop","cropData","_formData","uploadEventAvatar","handleImageUpload","uploadEventImages","handleImageRemove","deleteEventImage","submit","onchange","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","bottom","EventImageUploader","cat","ClubAvatarCropper","EventContent","EventHeader","EventAvatar","EventInfo","EventTitle","EventMeta","MetaItem","EventDescription","ImagesSection","ImageGrid","ImageItem","ParticipantsSection","ParticipantsList","ParticipantItem","ParticipantAvatar","setEvent","loadEventDetails","timeString","current_participants","participant","_participant$user","_participant$user2","_participant$user3","getEventStatus","startDate","eventEnd","durationHours","endDate","eventStart","getEventStatusText","ChartBarIcon","CogIcon","MapPinIcon","ClockIcon","setClub","setStats","recentEvents","setRecentEvents","showCreateEventModal","setShowCreateEventModal","showEventDetails","setShowEventDetails","selectedEventId","setSelectedEventId","loadDashboardData","_yield$Promise$all","_yield$Promise$all2","statsData","Promise","all","getAnalytics","analytics","handleCreateEvent","uploadClubAvatar","handleShowEventDetails","total_events","total_participants","total_revenue","average_rating","end_date","currentTarget","userSelect","EventForm","EventDetailsModal","setParticipants","loadParticipants","newStatus","handleRemoveParticipant","getStatusLabel","filteredParticipants","matchesSearch","matchesStatus","statusCounts","approved","pending","_participant$user4","_participant$user5","_participant$user6","PencilIcon","MagnifyingGlassIcon","setEvents","showCreateModal","setShowCreateModal","editingEvent","setEditingEvent","showParticipants","setShowParticipants","loadEvents","handleDeleteEvent","getEventStatusLocal","filteredEvents","eventStatus","matchesFilter","handleEditEvent","timeUntilStart","diff","days","hours","minutes","getTimeUntilStart","timeUntilEnd","getTimeUntilEnd","is_premium","EventParticipants","CurrencyRubleIcon","TrendingUpIcon","TrendingDownIcon","_analytics$overview","_analytics$overview2","_analytics$overview3","_analytics$overview4","_analytics$overview5","_analytics$overview6","_analytics$overview7","_analytics$overview8","_analytics$events","_analytics$events2","_analytics$events3","_analytics$events4","_analytics$participan","_analytics$participan2","_analytics$participan3","_analytics$participan4","_analytics$participan5","_analytics$participan6","_analytics$participan7","_analytics$participan8","_analytics$financial","_analytics$financial2","_analytics$financial3","_analytics$financial4","setAnalytics","setPeriod","loadAnalytics","overview","financial","renderMetricCard","changeData","previous","isPositive","toFixed","getMetricChange","toLocaleString","renderChart","maxValue","item","events_change","participants_change","revenue_change","average_participation","popular_days","cancellations","monthly_data","new_participants","active_participants","average_age","demographics","gender","male","female","age_groups","group","average_ticket","profit","revenue_by_month","PlayIcon","PauseIcon","ActivityIcon","BotForm","bot","trigger","updateBot","createBot","bots","setBots","editingBot","setEditingBot","loadBots","getBots","handleCreateBot","handleEditBot","handleDeleteBot","deleteBot","handleToggleBot","currentStatus","getBotTypeIcon","sum","tasks_completed","statusInfo","class","last_run","UserIcon","ShieldIcon","ParticipantModal","_participant$user8","_participant$user9","_participant$user0","_participant$user1","_participant$user10","_participant$user11","onChangeRole","showRoleChange","setShowRoleChange","newRole","setNewRole","joined_at","events_attended","last_activity","bio","filterRole","setFilterRole","filterStatus","setFilterStatus","selectedParticipant","setSelectedParticipant","getParticipants","handleChangeRole","updateParticipantRole","matchesRole","_participant$user7","roleInfo","handleViewParticipant","SaveIcon","GeneralSettings","saving","ProfileSettings","_ref6","onUploadAvatar","address","_e$target2","getElementById","PrivacySettings","_ref7","show_members","_e$target3","NotificationSettings","email_notifications","event_reminders","member_activity","_e$target4","SecuritySettings","onChangePassword","showPasswordForm","setShowPasswordForm","current_password","new_password","confirm_password","setPasswordData","handlePasswordChange","_e$target5","apiData","currentPassword","newPassword","last_login","email_verified","setSaving","loadClubData","handleSave","handleChangePassword","changePassword","handleUploadAvatar","UserGroupIcon","RobotIcon","Bars3Icon","XMarkIcon","isMobileMenuOpen","setIsMobileMenuOpen","navigationItems","isActive","Icon","ClubNavigation","showApplicationForm","setShowApplicationForm","clubResponse","eventsResponse","getClub","getClubTypeLabel","getClubTypeIcon","date_created","handleApplyToEvent","EventApplication","secondary","surface","xxlarge","xl","GlobalStyle","createGlobalStyle","AppContainer","QueryClient","defaultOptions","queries","QueryClientProvider","client","ThemeProvider","Router","future","v7_startTransition","v7_relativeSplatPath","Routes","Route","element","Login","Register","AuthGuard","Clubs","PublicClubDetail","ClubLogin","ClubRegister","ClubAuthGuard","ClubLayout","ClubDashboard","ClubEvents","ClubAnalytics","ClubBots","ClubParticipants","ClubSettings","Home","Catalog","Profile","Chat","Notifications","Subscriptions","Ratings","Ads","Admin","Toaster","toastOptions","iconTheme","container","createRoot","render","App","apiClient","axios","create","baseURL","process","REACT_APP_API_URL","timeout","TOKEN_KEY","USER_CACHE_KEY","getToken","setToken","clearUserCache","getUserCache","cached","setUserCache","cachedAt","isRedirecting","interceptors","request","use","Authorization","dispatchEvent","CustomEvent","_fetchCurrentUserData","_resetPassword","_sendCode","_registerVisit","_sendSuperlike","_getUserRating","_rateUser","_sendGift","_deleteProfileComment","_updateProfileComment","_createProfileComment","_getProfileComments","_deletePhotoComment","_updatePhotoComment","_createPhotoComment","_getPhotoComments","_getPhotoLikes","_likePhoto","_unlockImages","_setLockedPassword","_deleteImage","_uploadImages","_checkExistingMatch","_getSuperlikes","_superlike","_dislike","_like","_getProfilesBatch","_getProfiles","_getFilters","_getProfiles2","_checkMatchPermission","_getMatchStatus","_deleteConversation","_getUnreadCount","_setTyping","_getUserStatus","_sendMessage","_getMessages","_getConversations","_getAdTypes","_respondToAd","_getMyAds","_broadcast","_deleteMessage","_getMessages2","_deleteUser","_updateUser","_getUsers","_getDashboard","_getUnreadCount2","_getNotificationTypes","_deleteReadNotifications","_deleteNotification","_markAllAsRead","_markAsRead","_getGuests","_getNotifications","_updateSettings","_getSettings","_getSentGifts","_getReceivedGifts","_getGiftStats","_getGiftHistory","_sendGift2","_getGiftTypes","_checkClubOwnership","_manageApplication","_getClubApplications","_getClubMembers","_getMyClubs","_leaveClub","_joinClub","_deleteClub","_updateClub","_getClub","_createClub","_getClubs","_getBalance","_changePlan","_getFeatures","_usePromoCode","_cancel","_getHistory","_getStatus","_subscribe","_getPlans","_getMyStats","_getLeaderboard","_getMyReceivedRatings","_getMyGivenRatings","_getTopUsers","_deleteRating","_rateUser2","_getUserRating2","_getReactionStats","_getUserReactions","_removeReaction","_setReaction","_getObjectReactions","_deletePhoto","_uploadPrivatePhotos","_uploadPhotos","_uploadAvatar2","_getUserInfo","_refreshCurrentUser","post","resetPassword","cachedData","baseUser","cachedUser","_unused","fetchCurrentUserData","updateUserCache","updates","put","userResponse","_args1","setLockedPassword","unlockImages","likePhoto","photoIndex","photo_index","getPhotoLikes","_args14","comment_text","_args18","_args19","giftType","_args22","getUserRating","sendSuperlike","_args25","direction","exclude","_args28","_args29","_args30","getSuperlikes","_args34","_args36","_args37","getUserStatus","setTyping","toUser","is_typing","deleteConversation","checkMatchPermission","_args45","getMyAds","_args46","respondToAd","getAdTypes","getDashboard","_args53","updateUser","_x51","_x52","deleteUser","_x53","_args56","deleteMessage","_x54","broadcast","targetVipType","_args58","target_viptype","_x55","_args59","_args60","_args61","_x56","_x57","getNotificationTypes","_callee67","_context67","_callee68","_context68","_callee69","_context69","_x58","getGiftTypes","_callee70","_context70","_callee71","giftData","_context71","_x59","getGiftHistory","_callee72","_args72","_context72","getGiftStats","_callee73","_args73","_context73","_callee74","_url","_response","_args74","_context74","getSentGifts","_callee75","_args75","_context75","_callee76","_args76","_context76","createClub","_callee77","_context77","_x60","_callee78","_context78","_x61","updateClub","_callee79","_context79","_x62","_x63","deleteClub","_callee80","_context80","_x64","joinClub","_callee81","_args81","_context81","_x65","leaveClub","_callee82","_context82","_x66","getMyClubs","_callee83","_context83","getClubMembers","_callee84","_context84","_x67","getClubApplications","_callee85","_context85","_x68","manageApplication","_callee86","applicationId","_args86","_context86","_x69","_x70","_x71","_callee87","_context87","isOwner","_callee88","_args88","_context88","_callee89","_context89","_x72","leaveEvent","_callee90","_context90","_x73","getPlans","_callee91","_context91","_callee92","planData","_context92","_x74","_callee93","_context93","_callee94","_args94","_context94","_callee95","_args95","_context95","_callee96","code","_context96","_x75","getFeatures","_callee97","_context97","changePlan","_callee98","newPlanType","durationMonths","_args98","_context98","new_plan_type","_x76","getBalance","_callee99","_context99","_callee100","_context100","_x77","_callee101","_context101","_x78","_x79","_callee102","_context102","_x80","_callee103","_args103","_context103","getMyGivenRatings","_callee104","_args104","_context104","getMyReceivedRatings","_callee105","_args105","_context105","_callee106","_args106","_context106","_callee107","_context107","_callee108","_context108","_x81","_x82","_callee109","_args109","_context109","reaction_type","_x83","_x84","_x85","_callee110","_context110","_x86","_x87","getUserReactions","_callee111","_args111","_context111","_x88","getReactionStats","_callee112","_context112","_x89","_x90","uploadsAPI","_callee113","_context113","_x91","uploadPhotos","_callee114","_context114","_x92","uploadPrivatePhotos","_callee115","_context115","_x93","deletePhoto","_callee116","_args116","_context116","_x94","getUploadProgress","onProgress","onUploadProgress","progressEvent","loaded","_callee117","_context117","createFormData","diffInSeconds","isPremium","_callee118","_context118","_x95","auth","swipe","catalog","subscriptions","uploads"],"sourceRoot":""}