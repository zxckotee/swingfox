import React, { useEffect, useState } from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { apiUtils } from '../services/api';

const AuthGuard = ({ children, requireUserAuth = true }) => {
  const [isAuthenticated, setIsAuthenticated] = useState(null);
  const [isValidating, setIsValidating] = useState(true);
  const [authType, setAuthType] = useState(null); // 'user' –∏–ª–∏ 'club'
  const location = useLocation();
  
  console.log('üîç AuthGuard: –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è, requireUserAuth =', requireUserAuth);
  console.log('üîç AuthGuard: –¢–µ–∫—É—â–∏–π –ø—É—Ç—å =', location?.pathname);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã –ø—Ä—è–º–æ –≤ —Ä–µ–Ω–¥–µ—Ä–µ
  const userToken = localStorage.getItem('swingfox_token');
  const clubToken = localStorage.getItem('clubToken');
  console.log('üîç AuthGuard: –¢–æ–∫–µ–Ω—ã –≤ localStorage:', {
    userToken: userToken ? '–µ—Å—Ç—å (' + userToken.substring(0, 20) + '...)' : '–Ω–µ—Ç',
    clubToken: clubToken ? '–µ—Å—Ç—å (' + clubToken.substring(0, 20) + '...)' : '–Ω–µ—Ç'
  });

  useEffect(() => {
    console.log('üîç AuthGuard: useEffect —Å—Ä–∞–±–æ—Ç–∞–ª, location.pathname =', location?.pathname);
    
    const checkAuth = async () => {
      console.log('üîç AuthGuard: –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
      setIsValidating(true);
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userToken = localStorage.getItem('swingfox_token');
        const clubToken = localStorage.getItem('clubToken');
        
        console.log('üîç AuthGuard: –¢–æ–∫–µ–Ω—ã –Ω–∞–π–¥–µ–Ω—ã:', {
          userToken: userToken ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
          clubToken: clubToken ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
        });
        
        if (userToken) {
          // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          console.log('üîç AuthGuard: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
          console.log('üîç AuthGuard: –¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userToken.substring(0, 20) + '...');
          try {
            console.log('üîç AuthGuard: –í—ã–∑—ã–≤–∞–µ–º apiUtils.refreshCurrentUser()...');
            await apiUtils.refreshCurrentUser();
            console.log('üîç AuthGuard: refreshCurrentUser() —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
            setIsAuthenticated(true);
            setAuthType('user');
            console.log('üîç AuthGuard: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
          } catch (error) {
            console.error('üîç AuthGuard: –û—à–∏–±–∫–∞ refreshCurrentUser():', error);
            console.warn('üîç AuthGuard: –¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            apiUtils.logout();
            setIsAuthenticated(false);
            setAuthType(null);
          }
        } else if (clubToken && !userToken) {
          // –ö–ª—É–± –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
          console.log('üîç AuthGuard: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∫–ª—É–±–∞:', clubToken.substring(0, 20) + '...');
          try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –∫–ª—É–±–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
            console.log('üîç AuthGuard: –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ /api/clubs/profile...');
            const response = await fetch('/api/clubs/profile', {
              headers: {
                'Authorization': `Bearer ${clubToken}`,
                'Content-Type': 'application/json'
              }
            });
            
            console.log('üîç AuthGuard: –û—Ç–≤–µ—Ç –æ—Ç /api/clubs/profile:', response.status, response.statusText);
            
            if (response.ok) {
              const data = await response.json();
              console.log('üîç AuthGuard: –î–∞–Ω–Ω—ã–µ –∫–ª—É–±–∞:', data);
              setIsAuthenticated(true);
              setAuthType('club');
              console.log('üîç AuthGuard: –ö–ª—É–± –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
            } else {
              // –¢–æ–∫–µ–Ω –∫–ª—É–±–∞ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω
              console.warn('üîç AuthGuard: –¢–æ–∫–µ–Ω –∫–ª—É–±–∞ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
              localStorage.removeItem('clubToken');
              setIsAuthenticated(false);
              setAuthType(null);
            }
          } catch (error) {
            console.error('üîç AuthGuard: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ –∫–ª—É–±–∞:', error);
            localStorage.removeItem('clubToken');
            setIsAuthenticated(false);
            setAuthType(null);
          }
        } else {
          // –ù–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤
          console.log('üîç AuthGuard: –ù–µ—Ç —Ç–æ–∫–µ–Ω–æ–≤, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
          setIsAuthenticated(false);
          setAuthType(null);
        }
      } catch (error) {
        console.error('üîç AuthGuard: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        setIsAuthenticated(false);
        setAuthType(null);
      } finally {
        setIsValidating(false);
        console.log('üîç AuthGuard: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      }
    };

    console.log('üîç AuthGuard: –í—ã–∑—ã–≤–∞–µ–º checkAuth()...');
    checkAuth();

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Ä–∞–∑–ª–æ–≥–∏–Ω–∞
    const handleAuthLogout = () => {
      console.log('üîç AuthGuard: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ —Ä–∞–∑–ª–æ–≥–∏–Ω–∞');
      setIsAuthenticated(false);
      setAuthType(null);
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ localStorage
    const handleStorageChange = () => {
      checkAuth();
    };

    window.addEventListener('auth-logout', handleAuthLogout);
    window.addEventListener('storage', handleStorageChange);
    
    return () => {
      window.removeEventListener('auth-logout', handleAuthLogout);
      window.removeEventListener('storage', handleStorageChange);
    };
  }, [location?.pathname]);

  // –ü—Ä–æ—Å—Ç–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    console.log('üîç AuthGuard: useEffect –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ä–∞–±–æ—Ç–∞–ª');
    
    const userToken = localStorage.getItem('swingfox_token');
    const clubToken = localStorage.getItem('clubToken');
    
    console.log('üîç AuthGuard: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', {
      userToken: userToken ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
      clubToken: clubToken ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
    });
    
    if (userToken) {
      console.log('üîç AuthGuard: –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
      setIsAuthenticated(true);
      setAuthType('user');
      setIsValidating(false);
    } else if (clubToken) {
      console.log('üîç AuthGuard: –ù–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω –∫–ª—É–±–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
      setIsAuthenticated(true);
      setAuthType('club');
      setIsValidating(false);
    } else {
      console.log('üîç AuthGuard: –¢–æ–∫–µ–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      setIsAuthenticated(false);
      setAuthType(null);
      setIsValidating(false);
    }
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  if (isValidating) {
    console.log('üîç AuthGuard: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, isValidating =', isValidating);
    return (
      <div className="loading">
        –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...
      </div>
    );
  }

  console.log('üîç AuthGuard: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, isAuthenticated =', isAuthenticated, 'authType =', authType);

  // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω
  if (!isAuthenticated) {
    console.log('üîç AuthGuard: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /login');
    return <Navigate to="/login" replace state={{ from: location }} />;
  }

  // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–ª—É–±
  if (requireUserAuth && authType === 'club') {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–ª—É–±–æ–≤
    return <Navigate to="/clubs" replace />;
  }



  // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –∫–ª—É–±), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  return children;
};

export default AuthGuard;