const { APILogger, log, LOG_LEVELS } = require('./src/utils/logger');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è\n');

// –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
console.log('üìù –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ');
log('INFO', '–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
log('DEBUG', '–≠—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
log('ERROR', '–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ');

// –¢–µ—Å—Ç 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
console.log('\nüìù –¢–µ—Å—Ç 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏');
const testData = {
  user: 'testuser',
  action: 'login',
  timestamp: new Date().toISOString()
};
log('INFO', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ', testData);

// –¢–µ—Å—Ç 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏
console.log('\nüìù –¢–µ—Å—Ç 3: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏');
const largeData = {
  success: true,
  count: 500,
  data: Array.from({ length: 500 }, (_, i) => ({
    id: i + 1,
    city: `–ì–æ—Ä–æ–¥${i + 1}`,
    region: `–†–µ–≥–∏–æ–Ω${i + 1}`
  }))
};
log('INFO', '–ü–æ–ª—É—á–µ–Ω—ã –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ', largeData);

// –¢–µ—Å—Ç 4: API Logger
console.log('\nüìù –¢–µ—Å—Ç 4: API Logger');
const mockReq = {
  method: 'GET',
  originalUrl: '/api/geo/regions/–†–æ—Å—Å–∏—è',
  user: { login: 'testuser' },
  ip: '127.0.0.1'
};

const logger = new APILogger('GEO');
logger.logRequest(mockReq, 'GET /regions/:country');
logger.logProcess('–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤', { country: '–†–æ—Å—Å–∏—è' }, mockReq);
logger.logResult('–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–æ–≤', true, {
  country: '–†–æ—Å—Å–∏—è',
  regions_count: 500,
  first_region: '–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π',
  last_region: '–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª.'
}, mockReq);

// –¢–µ—Å—Ç 5: –†–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
console.log('\nüìù –¢–µ—Å—Ç 5: –†–∞–∑–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è');
console.log('–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:', Object.keys(LOG_LEVELS).find(key => LOG_LEVELS[key] === require('./src/utils/logger').CURRENT_LOG_LEVEL));

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');


