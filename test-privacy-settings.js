#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

const axios = require('axios');

const API_BASE_URL = 'https://88.218.121.216:3001/api';
const TEST_USER = {
  login: 'alex_maria_couple',
  password: 'test123' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
};

async function testPrivacySettings() {
  try {
    console.log('üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏...\n');

    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const authResponse = await axios.post(`${API_BASE_URL}/auth/login`, {
      login: TEST_USER.login,
      password: TEST_USER.password
    });

    const token = authResponse.data.token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞\n');

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const getSettingsResponse = await axios.get(`${API_BASE_URL}/users/privacy-settings`, {
      headers: { Authorization: `Bearer ${token}` }
    });

    const currentSettings = getSettingsResponse.data;
    console.log('üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', JSON.stringify(currentSettings, null, 2));
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã\n');

    // 3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const newSettings = {
      privacy: {
        anonymous_visits: true,
        show_online_status: false,
        show_last_seen: true,
        allow_messages: true,
        allow_gifts: false,
        allow_ratings: true,
        allow_comments: false
      },
      notifications: {
        new_matches: false,
        messages: true,
        likes: false,
        gifts: true,
        profile_visits: false
      }
    };

    console.log('üìù –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', JSON.stringify(newSettings, null, 2));

    const updateResponse = await axios.put(`${API_BASE_URL}/users/privacy-settings`, newSettings, {
      headers: { Authorization: `Bearer ${token}` }
    });

    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã:', updateResponse.data);
    console.log('');

    // 4. –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const verifyResponse = await axios.get(`${API_BASE_URL}/users/privacy-settings`, {
      headers: { Authorization: `Bearer ${token}` }
    });

    const savedSettings = verifyResponse.data;
    console.log('üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', JSON.stringify(savedSettings, null, 2));

    // 5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('5. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    const settingsMatch = JSON.stringify(newSettings) === JSON.stringify(savedSettings.privacy_settings);
    
    if (settingsMatch) {
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
      console.log('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!');
      console.log('–û–∂–∏–¥–∞–ª–æ—Å—å:', JSON.stringify(newSettings, null, 2));
      console.log('–ü–æ–ª—É—á–µ–Ω–æ:', JSON.stringify(savedSettings.privacy_settings, null, 2));
    }

    // 6. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    console.log('\n6. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...');
    await axios.put(`${API_BASE_URL}/users/privacy-settings`, {
      privacy: currentSettings.privacy_settings.privacy,
      notifications: currentSettings.privacy_settings.notifications
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });

    console.log('‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testPrivacySettings();
}

module.exports = { testPrivacySettings };