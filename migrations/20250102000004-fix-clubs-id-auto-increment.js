'use strict';

/** @type {import('sequelize-cli').Migration} */
module.exports = {
  async up(queryInterface, Sequelize) {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–µ id –≤ —Ç–∞–±–ª–∏—Ü–µ clubs...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª—è id
      const [results] = await queryInterface.sequelize.query(`
        SELECT column_default, is_nullable, data_type 
        FROM information_schema.columns 
        WHERE table_name = 'clubs' AND column_name = 'id'
      `);
      
      if (results.length > 0) {
        const columnInfo = results[0];
        console.log('üìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–ª—è id:', columnInfo);
        
        // –ï—Å–ª–∏ –ø–æ–ª–µ –Ω–µ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω–æ–µ, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        if (!columnInfo.column_default || !columnInfo.column_default.includes('nextval')) {
          console.log('‚ö†Ô∏è  –ü–æ–ª–µ id –Ω–µ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω–æ–µ, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º...');
          
          // –°–æ–∑–¥–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
          await queryInterface.sequelize.query(`
            CREATE SEQUENCE IF NOT EXISTS clubs_id_seq;
          `);
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          await queryInterface.sequelize.query(`
            ALTER TABLE clubs ALTER COLUMN id SET DEFAULT nextval('clubs_id_seq');
          `);
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
          await queryInterface.sequelize.query(`
            SELECT setval('clubs_id_seq', COALESCE((SELECT MAX(id) FROM clubs), 1));
          `);
          
          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø–æ–ª—è
          await queryInterface.sequelize.query(`
            ALTER SEQUENCE clubs_id_seq OWNED BY clubs.id;
          `);
          
          console.log('‚úÖ –ü–æ–ª–µ id —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω–æ–µ');
        } else {
          console.log('‚úÖ –ü–æ–ª–µ id —É–∂–µ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω–æ–µ');
        }
      } else {
        console.log('‚ùå –ü–æ–ª–µ id –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü–µ clubs');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è id:', error.message);
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    console.log('üîÑ –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è id...');
    
    try {
      // –£–¥–∞–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      await queryInterface.sequelize.query(`
        ALTER TABLE clubs ALTER COLUMN id DROP DEFAULT;
      `);
      
      // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      await queryInterface.sequelize.query(`
        DROP SEQUENCE IF EXISTS clubs_id_seq;
      `);
      
      console.log('‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞—Ç–µ:', error.message);
      throw error;
    }
  }
};
